{"ast":null,"code":"ace.define(\"ace/mode/zeek_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var ZeekHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.line\",\n        regex: \"#.*$\"\n      }, {\n        token: \"string.double\",\n        regex: /\"/,\n        next: \"string-state\"\n      }, {\n        token: \"string.regexp\",\n        regex: \"(/)(?=.*/)\",\n        next: \"pattern-state\"\n      }, {\n        token: [\"keyword.other\", \"meta.preprocessor\"],\n        regex: /(@(?:load-plugin|load-sigs|load|unload))(.*$)/\n      }, {\n        token: \"keyword.other\",\n        regex: /@(?:DEBUG|DIR|FILENAME|deprecated|if|ifdef|ifndef|else|endif)/\n      }, {\n        token: [\"keyword.other\", \"meta.preprocessor\", \"keyword.operator\", \"meta.preprocessor\"],\n        regex: /(@prefixes)(\\s*)(\\+?=)(.*$)/\n      }, {\n        token: \"storage.modifier.attribute\",\n        regex: /\\&\\b(?:redef|priority|log|optional|default|add_func|delete_func|expire_func|read_expire|write_expire|create_expire|synchronized|persistent|rotate_interval|rotate_size|encrypt|raw_output|mergeable|error_handler|type_column|deprecated)\\b/\n      }, {\n        token: \"constant.language\",\n        regex: /\\b(?:T|F)\\b/\n      }, {\n        token: \"constant.numeric.port\",\n        regex: /\\b\\d{1,5}\\/(?:udp|tcp|icmp|unknown)\\b/\n      }, {\n        token: \"constant.numeric.addr\",\n        regex: /\\b(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\\b/,\n        comment: \"IPv4 address\"\n      }, {\n        token: \"constant.numeric.addr\",\n        regex: /\\[(?:[0-9a-fA-F]{0,4}:){2,7}(?:[0-9a-fA-F]{0,4})?(?:(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2}))?\\]/,\n        comment: \"IPv6 address\"\n      }, {\n        token: \"constant.numeric.float.decimal.interval\",\n        regex: /(?:(?:\\d*\\.\\d*(?:[eE][+-]?\\d+)?|\\d*[eE][+-]?\\d+|\\d*\\.\\d*)|\\d+)\\s*(?:day|hr|min|msec|usec|sec)s?/\n      }, {\n        token: \"constant.numeric.float.decimal\",\n        regex: /\\d*\\.\\d*(?:[eE][+-]?\\d+)?|\\d*[eE][+-]?\\d+|\\d*\\.\\d*/\n      }, {\n        token: \"constant.numeric.hostname\",\n        regex: /\\b[A-Za-z0-9][A-Za-z0-9\\-]*(?:\\.[A-Za-z0-9][A-Za-z0-9\\-]*)+\\b/\n      }, {\n        token: \"constant.numeric.integer.hexadecimal\",\n        regex: /\\b0x[0-9a-fA-F]+\\b/\n      }, {\n        token: \"constant.numeric.integer.decimal\",\n        regex: /\\b\\d+\\b/\n      }, {\n        token: \"keyword.operator\",\n        regex: /==|!=|<=|<|>=|>/\n      }, {\n        token: \"keyword.operator\",\n        regex: /(&&)|(\\|\\|)|(!)/\n      }, {\n        token: \"keyword.operator\",\n        regex: /=|\\+=|-=/\n      }, {\n        token: \"keyword.operator\",\n        regex: /\\+\\+|\\+|--|-|\\*|\\/|%/\n      }, {\n        token: \"keyword.operator\",\n        regex: /&|\\||\\^|~/\n      }, {\n        token: \"keyword.operator\",\n        regex: /\\b(?:in|as|is)\\b/\n      }, {\n        token: \"punctuation.terminator\",\n        regex: /;/\n      }, {\n        token: \"punctuation.accessor\",\n        regex: /\\??\\$/\n      }, {\n        token: \"punctuation.accessor\",\n        regex: /::/\n      }, {\n        token: \"keyword.operator\",\n        regex: /\\?/\n      }, {\n        token: \"punctuation.separator\",\n        regex: /:/\n      }, {\n        token: \"punctuation.separator\",\n        regex: /,/\n      }, {\n        token: [\"keyword.other\", \"meta.namespace\", \"entity.name.namespace\"],\n        regex: /(module)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)/\n      }, {\n        token: \"keyword.other\",\n        regex: /\\bexport\\b/\n      }, {\n        token: \"keyword.control.conditional\",\n        regex: /\\b(?:if|else)\\b/\n      }, {\n        token: \"keyword.control\",\n        regex: /\\b(?:for|while)\\b/\n      }, {\n        token: \"keyword.control\",\n        regex: /\\b(?:return|break|next|continue|fallthrough)\\b/\n      }, {\n        token: \"keyword.control\",\n        regex: /\\b(?:switch|default|case)\\b/\n      }, {\n        token: \"keyword.other\",\n        regex: /\\b(?:add|delete)\\b/\n      }, {\n        token: \"keyword.other\",\n        regex: /\\bprint\\b/\n      }, {\n        token: \"keyword.control\",\n        regex: /\\b(?:when|timeout|schedule)\\b/\n      }, {\n        token: [\"keyword.other\", \"meta.struct.record\", \"entity.name.struct.record\", \"meta.struct.record\", \"punctuation.separator\", \"meta.struct.record\", \"storage.type.struct.record\"],\n        regex: /\\b(type)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)(\\s*)(:)(\\s*\\b)(record)\\b/\n      }, {\n        token: [\"keyword.other\", \"meta.enum\", \"entity.name.enum\", \"meta.enum\", \"punctuation.separator\", \"meta.enum\", \"storage.type.enum\"],\n        regex: /\\b(type)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)(\\s*)(:)(\\s*\\b)(enum)\\b/\n      }, {\n        token: [\"keyword.other\", \"meta.type\", \"entity.name.type\", \"meta.type\", \"punctuation.separator\"],\n        regex: /\\b(type)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)(\\s*)(:)/\n      }, {\n        token: [\"keyword.other\", \"meta.struct.record\", \"storage.type.struct.record\", \"meta.struct.record\", \"entity.name.struct.record\"],\n        regex: /\\b(redef)(\\s+)(record)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)\\b/\n      }, {\n        token: [\"keyword.other\", \"meta.enum\", \"storage.type.enum\", \"meta.enum\", \"entity.name.enum\"],\n        regex: /\\b(redef)(\\s+)(enum)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)\\b/\n      }, {\n        token: [\"storage.type\", \"text\", \"entity.name.function.event\"],\n        regex: /\\b(event)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)(?=s*\\()/\n      }, {\n        token: [\"storage.type\", \"text\", \"entity.name.function.hook\"],\n        regex: /\\b(hook)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)(?=s*\\()/\n      }, {\n        token: [\"storage.type\", \"text\", \"entity.name.function\"],\n        regex: /\\b(function)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)(?=s*\\()/\n      }, {\n        token: \"keyword.other\",\n        regex: /\\bredef\\b/\n      }, {\n        token: \"storage.type\",\n        regex: /\\bany\\b/\n      }, {\n        token: \"storage.type\",\n        regex: /\\b(?:enum|record|set|table|vector)\\b/\n      }, {\n        token: [\"storage.type\", \"text\", \"keyword.operator\", \"text\", \"storage.type\"],\n        regex: /\\b(opaque)(\\s+)(of)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)\\b/\n      }, {\n        token: \"keyword.operator\",\n        regex: /\\bof\\b/\n      }, {\n        token: \"storage.type\",\n        regex: /\\b(?:addr|bool|count|double|file|int|interval|pattern|port|string|subnet|time)\\b/\n      }, {\n        token: \"storage.type\",\n        regex: /\\b(?:function|hook|event)\\b/\n      }, {\n        token: \"storage.modifier\",\n        regex: /\\b(?:global|local|const|option)\\b/\n      }, {\n        token: \"entity.name.function.call\",\n        regex: /\\b[A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*(?=s*\\()/\n      }, {\n        token: \"punctuation.section.block.begin\",\n        regex: /\\{/\n      }, {\n        token: \"punctuation.section.block.end\",\n        regex: /\\}/\n      }, {\n        token: \"punctuation.section.brackets.begin\",\n        regex: /\\[/\n      }, {\n        token: \"punctuation.section.brackets.end\",\n        regex: /\\]/\n      }, {\n        token: \"punctuation.section.parens.begin\",\n        regex: /\\(/\n      }, {\n        token: \"punctuation.section.parens.end\",\n        regex: /\\)/\n      }],\n      // state: start\n      \"string-state\": [{\n        token: \"constant.character.escape\",\n        regex: /\\\\./\n      }, {\n        token: \"string.double\",\n        regex: /\"/,\n        next: \"start\"\n      }, {\n        token: \"constant.other.placeholder\",\n        regex: /%-?[0-9]*(\\.[0-9]+)?[DTdxsefg]/\n      }, {\n        token: \"string.double\",\n        regex: \".\"\n      }],\n      // state: string-state\n      \"pattern-state\": [{\n        token: \"constant.character.escape\",\n        regex: /\\\\./\n      }, {\n        token: \"string.regexp\",\n        regex: \"/\",\n        next: \"start\"\n      }, {\n        token: \"string.regexp\",\n        regex: \".\"\n      }] // state: pattern-state\n    };\n    this.normalizeRules();\n  };\n  ZeekHighlightRules.metaData = {\n    fileTypes: [\"bro\", \"zeek\"],\n    name: \"Zeek\",\n    scopeName: \"source.zeek\"\n  };\n  oop.inherits(ZeekHighlightRules, TextHighlightRules);\n  exports.ZeekHighlightRules = ZeekHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Range = require(\"../../range\").Range;\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n      return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n        return range;\n      }\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n        endRow = row;\n      }\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n      var endRow = row;\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/zeek\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/zeek_highlight_rules\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  /*\n  THIS FILE WAS AUTOGENERATED BY mode.tmpl.js\n  */\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var ZeekHighlightRules = require(\"./zeek_highlight_rules\").ZeekHighlightRules;\n  var FoldMode = require(\"./folding/cstyle\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = ZeekHighlightRules;\n    this.foldingRules = new FoldMode();\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/zeek\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/zeek\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","ZeekHighlightRules","$rules","token","regex","next","comment","normalizeRules","metaData","fileTypes","name","scopeName","inherits","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","replace","start","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","HighlightRules","foldingRules","lineCommentStart","$id"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-zeek.js"],"sourcesContent":["ace.define(\"ace/mode/zeek_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar ZeekHighlightRules = function () {\n    this.$rules = {\n        \"start\": [\n            {\n                token: \"comment.line\",\n                regex: \"#.*$\"\n            },\n            {\n                token: \"string.double\",\n                regex: /\"/,\n                next: \"string-state\"\n            },\n            {\n                token: \"string.regexp\",\n                regex: \"(/)(?=.*/)\",\n                next: \"pattern-state\"\n            },\n            {\n                token: [\"keyword.other\", \"meta.preprocessor\"],\n                regex: /(@(?:load-plugin|load-sigs|load|unload))(.*$)/\n            },\n            {\n                token: \"keyword.other\",\n                regex: /@(?:DEBUG|DIR|FILENAME|deprecated|if|ifdef|ifndef|else|endif)/\n            },\n            {\n                token: [\n                    \"keyword.other\",\n                    \"meta.preprocessor\",\n                    \"keyword.operator\",\n                    \"meta.preprocessor\"\n                ],\n                regex: /(@prefixes)(\\s*)(\\+?=)(.*$)/\n            },\n            {\n                token: \"storage.modifier.attribute\",\n                regex: /\\&\\b(?:redef|priority|log|optional|default|add_func|delete_func|expire_func|read_expire|write_expire|create_expire|synchronized|persistent|rotate_interval|rotate_size|encrypt|raw_output|mergeable|error_handler|type_column|deprecated)\\b/\n            },\n            {\n                token: \"constant.language\",\n                regex: /\\b(?:T|F)\\b/\n            },\n            {\n                token: \"constant.numeric.port\",\n                regex: /\\b\\d{1,5}\\/(?:udp|tcp|icmp|unknown)\\b/\n            },\n            {\n                token: \"constant.numeric.addr\",\n                regex: /\\b(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\\b/,\n                comment: \"IPv4 address\"\n            },\n            {\n                token: \"constant.numeric.addr\",\n                regex: /\\[(?:[0-9a-fA-F]{0,4}:){2,7}(?:[0-9a-fA-F]{0,4})?(?:(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2})\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{1,2}))?\\]/,\n                comment: \"IPv6 address\"\n            },\n            {\n                token: \"constant.numeric.float.decimal.interval\",\n                regex: /(?:(?:\\d*\\.\\d*(?:[eE][+-]?\\d+)?|\\d*[eE][+-]?\\d+|\\d*\\.\\d*)|\\d+)\\s*(?:day|hr|min|msec|usec|sec)s?/\n            },\n            {\n                token: \"constant.numeric.float.decimal\",\n                regex: /\\d*\\.\\d*(?:[eE][+-]?\\d+)?|\\d*[eE][+-]?\\d+|\\d*\\.\\d*/\n            },\n            {\n                token: \"constant.numeric.hostname\",\n                regex: /\\b[A-Za-z0-9][A-Za-z0-9\\-]*(?:\\.[A-Za-z0-9][A-Za-z0-9\\-]*)+\\b/\n            },\n            {\n                token: \"constant.numeric.integer.hexadecimal\",\n                regex: /\\b0x[0-9a-fA-F]+\\b/\n            },\n            {\n                token: \"constant.numeric.integer.decimal\",\n                regex: /\\b\\d+\\b/\n            },\n            {\n                token: \"keyword.operator\",\n                regex: /==|!=|<=|<|>=|>/\n            },\n            {\n                token: \"keyword.operator\",\n                regex: /(&&)|(\\|\\|)|(!)/\n            },\n            {\n                token: \"keyword.operator\",\n                regex: /=|\\+=|-=/\n            },\n            {\n                token: \"keyword.operator\",\n                regex: /\\+\\+|\\+|--|-|\\*|\\/|%/\n            },\n            {\n                token: \"keyword.operator\",\n                regex: /&|\\||\\^|~/\n            },\n            {\n                token: \"keyword.operator\",\n                regex: /\\b(?:in|as|is)\\b/\n            },\n            {\n                token: \"punctuation.terminator\",\n                regex: /;/\n            },\n            {\n                token: \"punctuation.accessor\",\n                regex: /\\??\\$/\n            },\n            {\n                token: \"punctuation.accessor\",\n                regex: /::/\n            },\n            {\n                token: \"keyword.operator\",\n                regex: /\\?/\n            },\n            {\n                token: \"punctuation.separator\",\n                regex: /:/\n            },\n            {\n                token: \"punctuation.separator\",\n                regex: /,/\n            },\n            {\n                token: [\n                    \"keyword.other\",\n                    \"meta.namespace\",\n                    \"entity.name.namespace\"\n                ],\n                regex: /(module)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)/\n            },\n            {\n                token: \"keyword.other\",\n                regex: /\\bexport\\b/\n            },\n            {\n                token: \"keyword.control.conditional\",\n                regex: /\\b(?:if|else)\\b/\n            },\n            {\n                token: \"keyword.control\",\n                regex: /\\b(?:for|while)\\b/\n            },\n            {\n                token: \"keyword.control\",\n                regex: /\\b(?:return|break|next|continue|fallthrough)\\b/\n            },\n            {\n                token: \"keyword.control\",\n                regex: /\\b(?:switch|default|case)\\b/\n            },\n            {\n                token: \"keyword.other\",\n                regex: /\\b(?:add|delete)\\b/\n            },\n            {\n                token: \"keyword.other\",\n                regex: /\\bprint\\b/\n            },\n            {\n                token: \"keyword.control\",\n                regex: /\\b(?:when|timeout|schedule)\\b/\n            },\n            {\n                token: [\n                    \"keyword.other\",\n                    \"meta.struct.record\",\n                    \"entity.name.struct.record\",\n                    \"meta.struct.record\",\n                    \"punctuation.separator\",\n                    \"meta.struct.record\",\n                    \"storage.type.struct.record\"\n                ],\n                regex: /\\b(type)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)(\\s*)(:)(\\s*\\b)(record)\\b/\n            },\n            {\n                token: [\n                    \"keyword.other\",\n                    \"meta.enum\",\n                    \"entity.name.enum\",\n                    \"meta.enum\",\n                    \"punctuation.separator\",\n                    \"meta.enum\",\n                    \"storage.type.enum\"\n                ],\n                regex: /\\b(type)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)(\\s*)(:)(\\s*\\b)(enum)\\b/\n            },\n            {\n                token: [\n                    \"keyword.other\",\n                    \"meta.type\",\n                    \"entity.name.type\",\n                    \"meta.type\",\n                    \"punctuation.separator\"\n                ],\n                regex: /\\b(type)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)(\\s*)(:)/\n            },\n            {\n                token: [\n                    \"keyword.other\",\n                    \"meta.struct.record\",\n                    \"storage.type.struct.record\",\n                    \"meta.struct.record\",\n                    \"entity.name.struct.record\"\n                ],\n                regex: /\\b(redef)(\\s+)(record)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)\\b/\n            },\n            {\n                token: [\n                    \"keyword.other\",\n                    \"meta.enum\",\n                    \"storage.type.enum\",\n                    \"meta.enum\",\n                    \"entity.name.enum\"\n                ],\n                regex: /\\b(redef)(\\s+)(enum)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)\\b/\n            },\n            {\n                token: [\n                    \"storage.type\",\n                    \"text\",\n                    \"entity.name.function.event\"\n                ],\n                regex: /\\b(event)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)(?=s*\\()/\n            },\n            {\n                token: [\n                    \"storage.type\",\n                    \"text\",\n                    \"entity.name.function.hook\"\n                ],\n                regex: /\\b(hook)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)(?=s*\\()/\n            },\n            {\n                token: [\n                    \"storage.type\",\n                    \"text\",\n                    \"entity.name.function\"\n                ],\n                regex: /\\b(function)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)(?=s*\\()/\n            },\n            {\n                token: \"keyword.other\",\n                regex: /\\bredef\\b/\n            },\n            {\n                token: \"storage.type\",\n                regex: /\\bany\\b/\n            },\n            {\n                token: \"storage.type\",\n                regex: /\\b(?:enum|record|set|table|vector)\\b/\n            },\n            {\n                token: [\n                    \"storage.type\",\n                    \"text\",\n                    \"keyword.operator\",\n                    \"text\",\n                    \"storage.type\"\n                ],\n                regex: /\\b(opaque)(\\s+)(of)(\\s+)([A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*)\\b/\n            },\n            {\n                token: \"keyword.operator\",\n                regex: /\\bof\\b/\n            },\n            {\n                token: \"storage.type\",\n                regex: /\\b(?:addr|bool|count|double|file|int|interval|pattern|port|string|subnet|time)\\b/\n            },\n            {\n                token: \"storage.type\",\n                regex: /\\b(?:function|hook|event)\\b/\n            },\n            {\n                token: \"storage.modifier\",\n                regex: /\\b(?:global|local|const|option)\\b/\n            },\n            {\n                token: \"entity.name.function.call\",\n                regex: /\\b[A-Za-z_][A-Za-z_0-9]*(?:::[A-Za-z_][A-Za-z_0-9]*)*(?=s*\\()/\n            },\n            {\n                token: \"punctuation.section.block.begin\",\n                regex: /\\{/\n            },\n            {\n                token: \"punctuation.section.block.end\",\n                regex: /\\}/\n            },\n            {\n                token: \"punctuation.section.brackets.begin\",\n                regex: /\\[/\n            },\n            {\n                token: \"punctuation.section.brackets.end\",\n                regex: /\\]/\n            },\n            {\n                token: \"punctuation.section.parens.begin\",\n                regex: /\\(/\n            },\n            {\n                token: \"punctuation.section.parens.end\",\n                regex: /\\)/\n            }\n        ], // state: start\n        \"string-state\": [\n            {\n                token: \"constant.character.escape\",\n                regex: /\\\\./\n            },\n            {\n                token: \"string.double\",\n                regex: /\"/,\n                next: \"start\"\n            },\n            {\n                token: \"constant.other.placeholder\",\n                regex: /%-?[0-9]*(\\.[0-9]+)?[DTdxsefg]/\n            },\n            {\n                token: \"string.double\",\n                regex: \".\"\n            }\n        ], // state: string-state\n        \"pattern-state\": [\n            {\n                token: \"constant.character.escape\",\n                regex: /\\\\./\n            },\n            {\n                token: \"string.regexp\",\n                regex: \"/\",\n                next: \"start\"\n            },\n            {\n                token: \"string.regexp\",\n                regex: \".\"\n            }\n        ] // state: pattern-state\n    };\n    this.normalizeRules();\n};\nZeekHighlightRules.metaData = {\n    fileTypes: [\"bro\", \"zeek\"],\n    name: \"Zeek\",\n    scopeName: \"source.zeek\"\n};\noop.inherits(ZeekHighlightRules, TextHighlightRules);\nexports.ZeekHighlightRules = ZeekHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n        this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n        return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                }\n                else if (foldStyle != \"all\")\n                    range = null;\n            }\n            return range;\n        }\n        if (foldStyle === \"markbegin\")\n            return;\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    this.getSectionRange = function (session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                }\n                else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                }\n                else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m)\n                continue;\n            if (m[1])\n                depth--;\n            else\n                depth++;\n            if (!depth)\n                break;\n        }\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/zeek\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/zeek_highlight_rules\",\"ace/mode/folding/cstyle\"], function(require, exports, module){/*\n  THIS FILE WAS AUTOGENERATED BY mode.tmpl.js\n*/\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar ZeekHighlightRules = require(\"./zeek_highlight_rules\").ZeekHighlightRules;\nvar FoldMode = require(\"./folding/cstyle\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = ZeekHighlightRules;\n    this.foldingRules = new FoldMode();\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/zeek\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/zeek\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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,EAAE,eAAe;QACtBC,KAAK,EAAE;MACX,CAAC,EACD;QACID,KAAK,EAAE,eAAe;QACtBC,KAAK,EAAE;MACX,CAAC,EACD;QACID,KAAK,EAAE,iBAAiB;QACxBC,KAAK,EAAE;MACX,CAAC,EACD;QACID,KAAK,EAAE,CACH,eAAe,EACf,oBAAoB,EACpB,2BAA2B,EAC3B,oBAAoB,EACpB,uBAAuB,EACvB,oBAAoB,EACpB,4BAA4B,CAC/B;QACDC,KAAK,EAAE;MACX,CAAC,EACD;QACID,KAAK,EAAE,CACH,eAAe,EACf,WAAW,EACX,kBAAkB,EAClB,WAAW,EACX,uBAAuB,EACvB,WAAW,EACX,mBAAmB,CACtB;QACDC,KAAK,EAAE;MACX,CAAC,EACD;QACID,KAAK,EAAE,CACH,eAAe,EACf,WAAW,EACX,kBAAkB,EAClB,WAAW,EACX,uBAAuB,CAC1B;QACDC,KAAK,EAAE;MACX,CAAC,EACD;QACID,KAAK,EAAE,CACH,eAAe,EACf,oBAAoB,EACpB,4BAA4B,EAC5B,oBAAoB,EACpB,2BAA2B,CAC9B;QACDC,KAAK,EAAE;MACX,CAAC,EACD;QACID,KAAK,EAAE,CACH,eAAe,EACf,WAAW,EACX,mBAAmB,EACnB,WAAW,EACX,kBAAkB,CACrB;QACDC,KAAK,EAAE;MACX,CAAC,EACD;QACID,KAAK,EAAE,CACH,cAAc,EACd,MAAM,EACN,4BAA4B,CAC/B;QACDC,KAAK,EAAE;MACX,CAAC,EACD;QACID,KAAK,EAAE,CACH,cAAc,EACd,MAAM,EACN,2BAA2B,CAC9B;QACDC,KAAK,EAAE;MACX,CAAC,EACD;QACID,KAAK,EAAE,CACH,cAAc,EACd,MAAM,EACN,sBAAsB,CACzB;QACDC,KAAK,EAAE;MACX,CAAC,EACD;QACID,KAAK,EAAE,eAAe;QACtBC,KAAK,EAAE;MACX,CAAC,EACD;QACID,KAAK,EAAE,cAAc;QACrBC,KAAK,EAAE;MACX,CAAC,EACD;QACID,KAAK,EAAE,cAAc;QACrBC,KAAK,EAAE;MACX,CAAC,EACD;QACID,KAAK,EAAE,CACH,cAAc,EACd,MAA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","ignoreList":[]},"metadata":{},"sourceType":"script"}