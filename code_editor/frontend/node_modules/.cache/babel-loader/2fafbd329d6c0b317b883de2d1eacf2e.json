{"ast":null,"code":"ace.define(\"ace/mode/ada_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var AdaHighlightRules = function () {\n    var keywords = \"abort|else|new|return|abs|elsif|not|reverse|abstract|end|null|accept|entry|select|\" + \"access|exception|of|separate|aliased|exit|or|some|all|others|subtype|and|for|out|synchronized|\" + \"array|function|overriding|at|tagged|generic|package|task|begin|goto|pragma|terminate|\" + \"body|private|then|if|procedure|type|case|in|protected|constant|interface|until|\" + \"|is|raise|use|declare|range|delay|limited|record|when|delta|loop|rem|while|digits|renames|with|do|mod|requeue|xor\";\n    var builtinConstants = \"true|false|null\";\n    var builtinFunctions = \"count|min|max|avg|sum|rank|now|coalesce|main\";\n    var keywordMapper = this.createKeywordMapper({\n      \"support.function\": builtinFunctions,\n      \"keyword\": keywords,\n      \"constant.language\": builtinConstants\n    }, \"identifier\", true);\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"--.*$\"\n      }, {\n        token: \"string\",\n        // \" string\n        regex: '\".*?\"'\n      }, {\n        token: \"string\",\n        // character\n        regex: \"'.'\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"\\\\+|\\\\-|\\\\/|\\\\/\\\\/|%|<@>|@>|<@|&|\\\\^|~|<|>|<=|=>|==|!=|<>|=\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[\\\\(]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\)]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }]\n    };\n  };\n  oop.inherits(AdaHighlightRules, TextHighlightRules);\n  exports.AdaHighlightRules = AdaHighlightRules;\n});\nace.define(\"ace/mode/ada\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/ada_highlight_rules\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var AdaHighlightRules = require(\"./ada_highlight_rules\").AdaHighlightRules;\n  var Range = require(\"../range\").Range;\n  var Mode = function () {\n    this.HighlightRules = AdaHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"--\";\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n      if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n        return indent;\n      }\n      if (state == \"start\") {\n        var match = line.match(/^.*(begin|loop|then|is|do)\\s*$/);\n        if (match) {\n          indent += tab;\n        }\n      }\n      return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n      var complete_line = line + input;\n      if (complete_line.match(/^\\s*(begin|end)$/)) {\n        return true;\n      }\n      return false;\n    };\n    this.autoOutdent = function (state, session, row) {\n      var line = session.getLine(row);\n      var prevLine = session.getLine(row - 1);\n      var prevIndent = this.$getIndent(prevLine).length;\n      var indent = this.$getIndent(line).length;\n      if (indent <= prevIndent) {\n        return;\n      }\n      session.outdentRows(new Range(row, 0, row + 2, 0));\n    };\n    this.$id = \"ace/mode/ada\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/ada\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","AdaHighlightRules","keywords","builtinConstants","builtinFunctions","keywordMapper","createKeywordMapper","$rules","token","regex","inherits","TextMode","Mode","Range","HighlightRules","$behaviour","$defaultBehaviour","lineCommentStart","getNextLineIndent","state","line","tab","indent","$getIndent","tokenizedLine","getTokenizer","getLineTokens","tokens","length","type","match","checkOutdent","input","complete_line","autoOutdent","session","row","getLine","prevLine","prevIndent","outdentRows","$id","call","prototype","m"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-ada.js"],"sourcesContent":["ace.define(\"ace/mode/ada_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar AdaHighlightRules = function () {\n    var keywords = \"abort|else|new|return|abs|elsif|not|reverse|abstract|end|null|accept|entry|select|\" +\n        \"access|exception|of|separate|aliased|exit|or|some|all|others|subtype|and|for|out|synchronized|\" +\n        \"array|function|overriding|at|tagged|generic|package|task|begin|goto|pragma|terminate|\" +\n        \"body|private|then|if|procedure|type|case|in|protected|constant|interface|until|\" +\n        \"|is|raise|use|declare|range|delay|limited|record|when|delta|loop|rem|while|digits|renames|with|do|mod|requeue|xor\";\n    var builtinConstants = (\"true|false|null\");\n    var builtinFunctions = (\"count|min|max|avg|sum|rank|now|coalesce|main\");\n    var keywordMapper = this.createKeywordMapper({\n        \"support.function\": builtinFunctions,\n        \"keyword\": keywords,\n        \"constant.language\": builtinConstants\n    }, \"identifier\", true);\n    this.$rules = {\n        \"start\": [{\n                token: \"comment\",\n                regex: \"--.*$\"\n            }, {\n                token: \"string\", // \" string\n                regex: '\".*?\"'\n            }, {\n                token: \"string\", // character\n                regex: \"'.'\"\n            }, {\n                token: \"constant.numeric\", // float\n                regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n            }, {\n                token: keywordMapper,\n                regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n            }, {\n                token: \"keyword.operator\",\n                regex: \"\\\\+|\\\\-|\\\\/|\\\\/\\\\/|%|<@>|@>|<@|&|\\\\^|~|<|>|<=|=>|==|!=|<>|=\"\n            }, {\n                token: \"paren.lparen\",\n                regex: \"[\\\\(]\"\n            }, {\n                token: \"paren.rparen\",\n                regex: \"[\\\\)]\"\n            }, {\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }]\n    };\n};\noop.inherits(AdaHighlightRules, TextHighlightRules);\nexports.AdaHighlightRules = AdaHighlightRules;\n\n});\n\nace.define(\"ace/mode/ada\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/ada_highlight_rules\",\"ace/range\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar AdaHighlightRules = require(\"./ada_highlight_rules\").AdaHighlightRules;\nvar Range = require(\"../range\").Range;\nvar Mode = function () {\n    this.HighlightRules = AdaHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"--\";\n    this.getNextLineIndent = function (state, line, tab) {\n        var indent = this.$getIndent(line);\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n            return indent;\n        }\n        if (state == \"start\") {\n            var match = line.match(/^.*(begin|loop|then|is|do)\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n        return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n        var complete_line = line + input;\n        if (complete_line.match(/^\\s*(begin|end)$/)) {\n            return true;\n        }\n        return false;\n    };\n    this.autoOutdent = function (state, session, row) {\n        var line = session.getLine(row);\n        var prevLine = session.getLine(row - 1);\n        var prevIndent = this.$getIndent(prevLine).length;\n        var indent = this.$getIndent(line).length;\n        if (indent <= prevIndent) {\n            return;\n        }\n        session.outdentRows(new Range(row, 0, row + 2, 0));\n    };\n    this.$id = \"ace/mode/ada\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/ada\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}