{"ast":null,"code":"ace.define(\"ace/mode/folding/coffee\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var Range = require(\"../../range\").Range;\n  var FoldMode = exports.FoldMode = function () {};\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.commentBlock = function (session, row) {\n      var re = /\\S/;\n      var line = session.getLine(row);\n      var startLevel = line.search(re);\n      if (startLevel == -1 || line[startLevel] != \"#\") return;\n      var startColumn = line.length;\n      var maxRow = session.getLength();\n      var startRow = row;\n      var endRow = row;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var level = line.search(re);\n        if (level == -1) continue;\n        if (line[level] != \"#\") break;\n        endRow = row;\n      }\n      if (endRow > startRow) {\n        var endColumn = session.getLine(endRow).length;\n        return new Range(startRow, startColumn, endRow, endColumn);\n      }\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var range = this.indentationBlock(session, row);\n      if (range) return range;\n      range = this.commentBlock(session, row);\n      if (range) return range;\n    };\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var indent = line.search(/\\S/);\n      var next = session.getLine(row + 1);\n      var prev = session.getLine(row - 1);\n      var prevIndent = prev.search(/\\S/);\n      var nextIndent = next.search(/\\S/);\n      if (indent == -1) {\n        session.foldWidgets[row - 1] = prevIndent != -1 && prevIndent < nextIndent ? \"start\" : \"\";\n        return \"\";\n      }\n      if (prevIndent == -1) {\n        if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n          session.foldWidgets[row - 1] = \"\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"start\";\n        }\n      } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n        if (session.getLine(row - 2).search(/\\S/) == -1) {\n          session.foldWidgets[row - 1] = \"start\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"\";\n        }\n      }\n      if (prevIndent != -1 && prevIndent < indent) session.foldWidgets[row - 1] = \"start\";else session.foldWidgets[row - 1] = \"\";\n      if (indent < nextIndent) return \"start\";else return \"\";\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/space_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var SpaceHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        token: \"empty_line\",\n        regex: / */,\n        next: \"key\"\n      }, {\n        token: \"empty_line\",\n        regex: /$/,\n        next: \"key\"\n      }],\n      \"key\": [{\n        token: \"variable\",\n        regex: /\\S+/\n      }, {\n        token: \"empty_line\",\n        regex: /$/,\n        next: \"start\"\n      }, {\n        token: \"keyword.operator\",\n        regex: / /,\n        next: \"value\"\n      }],\n      \"value\": [{\n        token: \"keyword.operator\",\n        regex: /$/,\n        next: \"start\"\n      }, {\n        token: \"string\",\n        regex: /[^$]/\n      }]\n    };\n  };\n  oop.inherits(SpaceHighlightRules, TextHighlightRules);\n  exports.SpaceHighlightRules = SpaceHighlightRules;\n});\nace.define(\"ace/mode/space\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/folding/coffee\", \"ace/mode/space_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var FoldMode = require(\"./folding/coffee\").FoldMode;\n  var SpaceHighlightRules = require(\"./space_highlight_rules\").SpaceHighlightRules;\n  var Mode = function () {\n    this.HighlightRules = SpaceHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.$id = \"ace/mode/space\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/space\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","BaseFoldMode","FoldMode","Range","inherits","commentBlock","session","row","re","line","getLine","startLevel","search","startColumn","length","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidgetRange","foldStyle","range","indentationBlock","getFoldWidget","indent","next","prev","prevIndent","nextIndent","foldWidgets","call","prototype","TextHighlightRules","SpaceHighlightRules","$rules","token","regex","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","$id","m"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-space.js"],"sourcesContent":["ace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar Range = require(\"../../range\").Range;\nvar FoldMode = exports.FoldMode = function () { };\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.commentBlock = function (session, row) {\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        if (startLevel == -1 || line[startLevel] != \"#\")\n            return;\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var level = line.search(re);\n            if (level == -1)\n                continue;\n            if (line[level] != \"#\")\n                break;\n            endRow = row;\n        }\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n        var range = this.indentationBlock(session, row);\n        if (range)\n            return range;\n        range = this.commentBlock(session, row);\n        if (range)\n            return range;\n    };\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent != -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        }\n        else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n        if (prevIndent != -1 && prevIndent < indent)\n            session.foldWidgets[row - 1] = \"start\";\n        else\n            session.foldWidgets[row - 1] = \"\";\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/space_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar SpaceHighlightRules = function () {\n    this.$rules = {\n        \"start\": [\n            {\n                token: \"empty_line\",\n                regex: / */,\n                next: \"key\"\n            },\n            {\n                token: \"empty_line\",\n                regex: /$/,\n                next: \"key\"\n            }\n        ],\n        \"key\": [\n            {\n                token: \"variable\",\n                regex: /\\S+/\n            },\n            {\n                token: \"empty_line\",\n                regex: /$/,\n                next: \"start\"\n            }, {\n                token: \"keyword.operator\",\n                regex: / /,\n                next: \"value\"\n            }\n        ],\n        \"value\": [\n            {\n                token: \"keyword.operator\",\n                regex: /$/,\n                next: \"start\"\n            },\n            {\n                token: \"string\",\n                regex: /[^$]/\n            }\n        ]\n    };\n};\noop.inherits(SpaceHighlightRules, TextHighlightRules);\nexports.SpaceHighlightRules = SpaceHighlightRules;\n\n});\n\nace.define(\"ace/mode/space\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/folding/coffee\",\"ace/mode/space_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar FoldMode = require(\"./folding/coffee\").FoldMode;\nvar SpaceHighlightRules = require(\"./space_highlight_rules\").SpaceHighlightRules;\nvar Mode = function () {\n    this.HighlightRules = SpaceHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.$id = \"ace/mode/space\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/space\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}