{"ast":null,"code":"ace.define(\"ace/mode/mediawiki_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var MediaWikiHighlightRules = function () {\n    this.$rules = {\n      start: [{\n        include: \"#switch\"\n      }, {\n        include: \"#redirect\"\n      }, {\n        include: \"#variable\"\n      }, {\n        include: \"#comment\"\n      }, {\n        include: \"#entity\"\n      }, {\n        include: \"#emphasis\"\n      }, {\n        include: \"#tag\"\n      }, {\n        include: \"#table\"\n      }, {\n        include: \"#hr\"\n      }, {\n        include: \"#heading\"\n      }, {\n        include: \"#link\"\n      }, {\n        include: \"#list\"\n      }, {\n        include: \"#template\"\n      }],\n      \"#hr\": [{\n        token: \"markup.bold\",\n        regex: /^[-]{4,}/\n      }],\n      \"#switch\": [{\n        token: \"constant.language\",\n        regex: /(__NOTOC__|__FORCETOC__|__TOC__|__NOEDITSECTION__|__NEWSECTIONLINK__|__NONEWSECTIONLINK__|__NOWYSIWYG__|__NOGALLERY__|__HIDDENCAT__|__EXPECTUNUSEDCATEGORY__|__NOCONTENTCONVERT__|__NOCC__|__NOTITLECONVERT__|__NOTC__|__START__|__END__|__INDEX__|__NOINDEX__|__STATICREDIRECT__|__NOGLOBAL__|__DISAMBIG__)/\n      }],\n      \"#redirect\": [{\n        token: [\"keyword.control.redirect\", \"meta.keyword.control\"],\n        regex: /(^#REDIRECT|^#redirect|^#Redirect)(\\s+)/\n      }],\n      \"#variable\": [{\n        token: \"storage.type.variable\",\n        regex: /{{{/,\n        push: [{\n          token: \"storage.type.variable\",\n          regex: /}}}/,\n          next: \"pop\"\n        }, {\n          token: [\"text\", \"variable.other\", \"text\", \"keyword.operator\"],\n          regex: /(\\s*)(\\w+)(\\s*)((?:\\|)?)/\n        }, {\n          defaultToken: \"storage.type.variable\"\n        }]\n      }],\n      \"#entity\": [{\n        token: \"constant.character.entity\",\n        regex: /&\\w+;/\n      }],\n      \"#list\": [{\n        token: \"markup.bold\",\n        regex: /^[#*;:]+/,\n        push: [{\n          token: \"markup.list\",\n          regex: /$/,\n          next: \"pop\"\n        }, {\n          include: \"$self\"\n        }, {\n          defaultToken: \"markup.list\"\n        }]\n      }],\n      \"#template\": [{\n        token: [\"storage.type.function\", \"meta.template\", \"entity.name.function\", \"meta.template\"],\n        regex: /({{)(\\s*)([#\\w: ]+)(\\s*)/,\n        push: [{\n          token: \"storage.type.function\",\n          regex: /}}/,\n          next: \"pop\"\n        }, {\n          token: [\"storage\", \"meta.structure.dictionary\", \"support.type.property-name\", \"meta.structure.dictionary\", \"punctuation.separator.dictionary.key-value\", \"meta.structure.dictionary\", \"meta.structure.dictionary.value\"],\n          regex: /(\\|)(\\s*)([a-zA-Z-]*)(\\s*)(=)(\\s*)([^|}]*)/,\n          push: [{\n            token: \"meta.structure.dictionary\",\n            regex: /(?=}}|[|])/,\n            next: \"pop\"\n          }, {\n            defaultToken: \"meta.structure.dictionary\"\n          }]\n        }, {\n          token: [\"storage\", \"meta.template.value\"],\n          regex: /(\\|)(.*?)/,\n          push: [{\n            token: [],\n            regex: /(?=}}|[|])/,\n            next: \"pop\"\n          }, {\n            include: \"$self\"\n          }, {\n            defaultToken: \"meta.template.value\"\n          }]\n        }, {\n          defaultToken: \"meta.template\"\n        }]\n      }],\n      \"#link\": [{\n        token: [\"punctuation.definition.tag.begin\", \"meta.tag.link.internal\", \"entity.name.tag\", \"meta.tag.link.internal\", \"string.other.link.title\", \"meta.tag.link.internal\", \"punctuation.definition.tag\"],\n        regex: /(\\[\\[)(\\s*)((?:Category|Wikipedia)?)(:?)([^\\]\\]\\|]+)(\\s*)((?:\\|)*)/,\n        push: [{\n          token: \"punctuation.definition.tag.end\",\n          regex: /\\]\\]/,\n          next: \"pop\"\n        }, {\n          include: \"$self\"\n        }, {\n          defaultToken: \"meta.tag.link.internal\"\n        }]\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"meta.tag.link.external\", \"meta.tag.link.external\", \"string.unquoted\", \"punctuation.definition.tag.end\"],\n        regex: /(\\[)(.*?)([\\s]+)(.*?)(\\])/\n      }],\n      \"#comment\": [{\n        token: \"punctuation.definition.comment.html\",\n        regex: /<!--/,\n        push: [{\n          token: \"punctuation.definition.comment.html\",\n          regex: /-->/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"comment.block.html\"\n        }]\n      }],\n      \"#emphasis\": [{\n        token: [\"punctuation.definition.tag.begin\", \"markup.italic.bold\", \"punctuation.definition.tag.end\"],\n        regex: /(''''')(?!')(.*?)('''''|$)/\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"markup.bold\", \"punctuation.definition.tag.end\"],\n        regex: /(''')(?!')(.*?)('''|$)/\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"markup.italic\", \"punctuation.definition.tag.end\"],\n        regex: /('')(?!')(.*?)(''|$)/\n      }],\n      \"#heading\": [{\n        token: [\"punctuation.definition.heading\", \"entity.name.section\", \"punctuation.definition.heading\"],\n        regex: /(={1,6})(.+?)(\\1)(?!=)/\n      }],\n      \"#tag\": [{\n        token: [\"punctuation.definition.tag.begin\", \"entity.name.tag\", \"meta.tag.block.ref\", \"punctuation.definition.tag.end\"],\n        regex: /(<)(ref)((?:\\s+.*?)?)(>)/,\n        caseInsensitive: true,\n        push: [{\n          token: [\"punctuation.definition.tag.begin\", \"entity.name.tag\", \"meta.tag.block.ref\", \"punctuation.definition.tag.end\"],\n          regex: /(<\\/)(ref)(\\s*)(>)/,\n          caseInsensitive: true,\n          next: \"pop\"\n        }, {\n          include: \"$self\"\n        }, {\n          defaultToken: \"meta.tag.block.ref\"\n        }]\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"entity.name.tag\", \"meta.tag.block.nowiki\", \"punctuation.definition.tag.end\"],\n        regex: /(<)(nowiki)((?:\\s+.*?)?)(>)/,\n        caseInsensitive: true,\n        push: [{\n          token: [\"punctuation.definition.tag.begin\", \"entity.name.tag\", \"meta.tag.block.nowiki\", \"punctuation.definition.tag.end\"],\n          regex: /(<\\/)(nowiki)(\\s*)(>)/,\n          caseInsensitive: true,\n          next: \"pop\"\n        }, {\n          defaultToken: \"meta.tag.block.nowiki\"\n        }]\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"entity.name.tag\"],\n        regex: /(<\\/?)(noinclude|includeonly|onlyinclude)(?=\\W)/,\n        caseInsensitive: true,\n        push: [{\n          token: [\"invalid.illegal\", \"punctuation.definition.tag.end\"],\n          regex: /((?:\\/)?)(>)/,\n          next: \"pop\"\n        }, {\n          include: \"#attribute\"\n        }, {\n          defaultToken: \"meta.tag.block.any\"\n        }]\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"entity.name.tag\"],\n        regex: /(<)(br|wbr|hr|meta|link)(?=\\W)/,\n        caseInsensitive: true,\n        push: [{\n          token: \"punctuation.definition.tag.end\",\n          regex: /\\/?>/,\n          next: \"pop\"\n        }, {\n          include: \"#attribute\"\n        }, {\n          defaultToken: \"meta.tag.other\"\n        }]\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"entity.name.tag\"],\n        regex: /(<\\/?)(div|center|span|h1|h2|h3|h4|h5|h6|bdo|em|strong|cite|dfn|code|samp|kbd|var|abbr|blockquote|q|sub|sup|p|pre|ins|del|ul|ol|li|dl|dd|dt|table|caption|thead|tfoot|tbody|colgroup|col|tr|td|th|a|img|video|source|track|tt|b|i|big|small|strike|s|u|font|ruby|rb|rp|rt|rtc|math|figure|figcaption|bdi|data|time|mark|html)(?=\\W)/,\n        caseInsensitive: true,\n        push: [{\n          token: [\"invalid.illegal\", \"punctuation.definition.tag.end\"],\n          regex: /((?:\\/)?)(>)/,\n          next: \"pop\"\n        }, {\n          include: \"#attribute\"\n        }, {\n          defaultToken: \"meta.tag.block\"\n        }]\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"invalid.illegal\"],\n        regex: /(<\\/)(br|wbr|hr|meta|link)(?=\\W)/,\n        caseInsensitive: true,\n        push: [{\n          token: \"punctuation.definition.tag.end\",\n          regex: /\\/?>/,\n          next: \"pop\"\n        }, {\n          include: \"#attribute\"\n        }, {\n          defaultToken: \"meta.tag.other\"\n        }]\n      }],\n      \"#caption\": [{\n        token: [\"meta.tag.block.table-caption\", \"punctuation.definition.tag.begin\"],\n        regex: /^(\\s*)(\\|\\+)/,\n        push: [{\n          token: \"meta.tag.block.table-caption\",\n          regex: /$/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"meta.tag.block.table-caption\"\n        }]\n      }],\n      \"#tr\": [{\n        token: [\"meta.tag.block.tr\", \"punctuation.definition.tag.begin\", \"meta.tag.block.tr\", \"invalid.illegal\"],\n        regex: /^(\\s*)(\\|\\-)([\\s]*)(.*)/\n      }],\n      \"#th\": [{\n        token: [\"meta.tag.block.th.heading\", \"punctuation.definition.tag.begin\", \"meta.tag.block.th.heading\", \"punctuation.definition.tag\", \"markup.bold\"],\n        regex: /^(\\s*)(!)(?:(.*?)(\\|))?(.*?)(?=!!|$)/,\n        push: [{\n          token: \"meta.tag.block.th.heading\",\n          regex: /$/,\n          next: \"pop\"\n        }, {\n          token: [\"punctuation.definition.tag.begin\", \"meta.tag.block.th.inline\", \"punctuation.definition.tag\", \"markup.bold\"],\n          regex: /(!!)(?:(.*?)(\\|))?(.*?)(?=!!|$)/\n        }, {\n          include: \"$self\"\n        }, {\n          defaultToken: \"meta.tag.block.th.heading\"\n        }]\n      }],\n      \"#td\": [{\n        token: [\"meta.tag.block.td\", \"punctuation.definition.tag.begin\"],\n        regex: /^(\\s*)(\\|)/,\n        push: [{\n          token: \"meta.tag.block.td\",\n          regex: /$/,\n          next: \"pop\"\n        }, {\n          include: \"$self\"\n        }, {\n          defaultToken: \"meta.tag.block.td\"\n        }]\n      }],\n      \"#table\": [{\n        patterns: [{\n          name: \"meta.tag.block.table\",\n          begin: \"^\\\\s*({\\\\|)(.*?)$\",\n          end: \"^\\\\s*\\\\|}\",\n          beginCaptures: {\n            1: {\n              name: \"punctuation.definition.tag.begin\"\n            },\n            2: {\n              patterns: [{\n                include: \"#attribute\"\n              }]\n            },\n            3: {\n              name: \"invalid.illegal\"\n            }\n          },\n          endCaptures: {\n            0: {\n              name: \"punctuation.definition.tag.end\"\n            }\n          },\n          patterns: [{\n            include: \"#comment\"\n          }, {\n            include: \"#template\"\n          }, {\n            include: \"#caption\"\n          }, {\n            include: \"#tr\"\n          }, {\n            include: \"#th\"\n          }, {\n            include: \"#td\"\n          }]\n        }],\n        repository: {\n          caption: {\n            name: \"meta.tag.block.table-caption\",\n            begin: \"^\\\\s*(\\\\|\\\\+)\",\n            end: \"$\",\n            beginCaptures: {\n              1: {\n                name: \"punctuation.definition.tag.begin\"\n              }\n            }\n          },\n          tr: {\n            name: \"meta.tag.block.tr\",\n            match: \"^\\\\s*(\\\\|\\\\-)[\\\\s]*(.*)\",\n            captures: {\n              1: {\n                name: \"punctuation.definition.tag.begin\"\n              },\n              2: {\n                name: \"invalid.illegal\"\n              }\n            }\n          },\n          th: {\n            name: \"meta.tag.block.th.heading\",\n            begin: \"^\\\\s*(!)((.*?)(\\\\|))?(.*?)(?=(!!)|$)\",\n            end: \"$\",\n            beginCaptures: {\n              1: {\n                name: \"punctuation.definition.tag.begin\"\n              },\n              3: {\n                patterns: [{\n                  include: \"#attribute\"\n                }]\n              },\n              4: {\n                name: \"punctuation.definition.tag\"\n              },\n              5: {\n                name: \"markup.bold\"\n              }\n            },\n            patterns: [{\n              name: \"meta.tag.block.th.inline\",\n              match: \"(!!)((.*?)(\\\\|))?(.*?)(?=(!!)|$)\",\n              captures: {\n                1: {\n                  name: \"punctuation.definition.tag.begin\"\n                },\n                3: {\n                  patterns: [{\n                    include: \"#attribute\"\n                  }]\n                },\n                4: {\n                  name: \"punctuation.definition.tag\"\n                },\n                5: {\n                  name: \"markup.bold\"\n                }\n              }\n            }, {\n              include: \"$self\"\n            }]\n          },\n          td: {\n            name: \"meta.tag.block.td\",\n            begin: \"^\\\\s*(\\\\|)\",\n            end: \"$\",\n            beginCaptures: {\n              1: {\n                name: \"punctuation.definition.tag.begin\"\n              },\n              2: {\n                patterns: [{\n                  include: \"#attribute\"\n                }]\n              },\n              3: {\n                name: \"punctuation.definition.tag\"\n              }\n            },\n            patterns: [{\n              include: \"$self\"\n            }]\n          }\n        }\n      }],\n      \"#attribute\": [{\n        include: \"#string\"\n      }, {\n        token: \"entity.other.attribute-name\",\n        regex: /\\w+/\n      }],\n      \"#string\": [{\n        token: \"string.quoted.double\",\n        regex: /\\\"/,\n        push: [{\n          token: \"string.quoted.double\",\n          regex: /\\\"/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"string.quoted.double\"\n        }]\n      }, {\n        token: \"string.quoted.single\",\n        regex: /\\'/,\n        push: [{\n          token: \"string.quoted.single\",\n          regex: /\\'/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"string.quoted.single\"\n        }]\n      }],\n      \"#url\": [{\n        token: \"markup.underline.link\",\n        regex: /(?:http(?:s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:\\/?#\\[\\]@!\\$&'\\(\\)\\*\\+,;=.]+/\n      }, {\n        token: \"invalid.illegal\",\n        regex: /.*/\n      }]\n    };\n    this.normalizeRules();\n  };\n  MediaWikiHighlightRules.metaData = {\n    name: \"MediaWiki\",\n    scopeName: \"text.html.mediawiki\",\n    fileTypes: [\"mediawiki\", \"wiki\"]\n  };\n  oop.inherits(MediaWikiHighlightRules, TextHighlightRules);\n  exports.MediaWikiHighlightRules = MediaWikiHighlightRules;\n});\nace.define(\"ace/mode/mediawiki\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/mediawiki_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var MediaWikiHighlightRules = require(\"./mediawiki_highlight_rules\").MediaWikiHighlightRules;\n  var Mode = function () {\n    this.HighlightRules = MediaWikiHighlightRules;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.type = \"text\";\n    this.blockComment = {\n      start: \"<!--\",\n      end: \"-->\"\n    };\n    this.$id = \"ace/mode/mediawiki\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/mediawiki\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","MediaWikiHighlightRules","$rules","start","include","token","regex","push","next","defaultToken","caseInsensitive","patterns","name","begin","end","beginCaptures","endCaptures","repository","caption","tr","match","captures","th","td","normalizeRules","metaData","scopeName","fileTypes","inherits","TextMode","Mode","HighlightRules","type","blockComment","$id","call","prototype","m"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-mediawiki.js"],"sourcesContent":["ace.define(\"ace/mode/mediawiki_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar MediaWikiHighlightRules = function () {\n    this.$rules = {\n        start: [{\n                include: \"#switch\"\n            }, {\n                include: \"#redirect\"\n            }, {\n                include: \"#variable\"\n            }, {\n                include: \"#comment\"\n            }, {\n                include: \"#entity\"\n            }, {\n                include: \"#emphasis\"\n            }, {\n                include: \"#tag\"\n            }, {\n                include: \"#table\"\n            }, {\n                include: \"#hr\"\n            }, {\n                include: \"#heading\"\n            }, {\n                include: \"#link\"\n            }, {\n                include: \"#list\"\n            }, {\n                include: \"#template\"\n            }],\n        \"#hr\": [{\n                token: \"markup.bold\",\n                regex: /^[-]{4,}/\n            }],\n        \"#switch\": [{\n                token: \"constant.language\",\n                regex: /(__NOTOC__|__FORCETOC__|__TOC__|__NOEDITSECTION__|__NEWSECTIONLINK__|__NONEWSECTIONLINK__|__NOWYSIWYG__|__NOGALLERY__|__HIDDENCAT__|__EXPECTUNUSEDCATEGORY__|__NOCONTENTCONVERT__|__NOCC__|__NOTITLECONVERT__|__NOTC__|__START__|__END__|__INDEX__|__NOINDEX__|__STATICREDIRECT__|__NOGLOBAL__|__DISAMBIG__)/\n            }],\n        \"#redirect\": [{\n                token: [\n                    \"keyword.control.redirect\",\n                    \"meta.keyword.control\"\n                ],\n                regex: /(^#REDIRECT|^#redirect|^#Redirect)(\\s+)/\n            }],\n        \"#variable\": [{\n                token: \"storage.type.variable\",\n                regex: /{{{/,\n                push: [{\n                        token: \"storage.type.variable\",\n                        regex: /}}}/,\n                        next: \"pop\"\n                    }, {\n                        token: [\n                            \"text\",\n                            \"variable.other\",\n                            \"text\",\n                            \"keyword.operator\"\n                        ],\n                        regex: /(\\s*)(\\w+)(\\s*)((?:\\|)?)/\n                    }, {\n                        defaultToken: \"storage.type.variable\"\n                    }]\n            }],\n        \"#entity\": [{\n                token: \"constant.character.entity\",\n                regex: /&\\w+;/\n            }],\n        \"#list\": [{\n                token: \"markup.bold\",\n                regex: /^[#*;:]+/,\n                push: [{\n                        token: \"markup.list\",\n                        regex: /$/,\n                        next: \"pop\"\n                    }, {\n                        include: \"$self\"\n                    }, {\n                        defaultToken: \"markup.list\"\n                    }]\n            }],\n        \"#template\": [{\n                token: [\n                    \"storage.type.function\",\n                    \"meta.template\",\n                    \"entity.name.function\",\n                    \"meta.template\"\n                ],\n                regex: /({{)(\\s*)([#\\w: ]+)(\\s*)/,\n                push: [{\n                        token: \"storage.type.function\",\n                        regex: /}}/,\n                        next: \"pop\"\n                    }, {\n                        token: [\n                            \"storage\",\n                            \"meta.structure.dictionary\",\n                            \"support.type.property-name\",\n                            \"meta.structure.dictionary\",\n                            \"punctuation.separator.dictionary.key-value\",\n                            \"meta.structure.dictionary\",\n                            \"meta.structure.dictionary.value\"\n                        ],\n                        regex: /(\\|)(\\s*)([a-zA-Z-]*)(\\s*)(=)(\\s*)([^|}]*)/,\n                        push: [{\n                                token: \"meta.structure.dictionary\",\n                                regex: /(?=}}|[|])/,\n                                next: \"pop\"\n                            }, {\n                                defaultToken: \"meta.structure.dictionary\"\n                            }]\n                    }, {\n                        token: [\"storage\", \"meta.template.value\"],\n                        regex: /(\\|)(.*?)/,\n                        push: [{\n                                token: [],\n                                regex: /(?=}}|[|])/,\n                                next: \"pop\"\n                            }, {\n                                include: \"$self\"\n                            }, {\n                                defaultToken: \"meta.template.value\"\n                            }]\n                    }, {\n                        defaultToken: \"meta.template\"\n                    }]\n            }],\n        \"#link\": [{\n                token: [\n                    \"punctuation.definition.tag.begin\",\n                    \"meta.tag.link.internal\",\n                    \"entity.name.tag\",\n                    \"meta.tag.link.internal\",\n                    \"string.other.link.title\",\n                    \"meta.tag.link.internal\",\n                    \"punctuation.definition.tag\"\n                ],\n                regex: /(\\[\\[)(\\s*)((?:Category|Wikipedia)?)(:?)([^\\]\\]\\|]+)(\\s*)((?:\\|)*)/,\n                push: [{\n                        token: \"punctuation.definition.tag.end\",\n                        regex: /\\]\\]/,\n                        next: \"pop\"\n                    }, {\n                        include: \"$self\"\n                    }, {\n                        defaultToken: \"meta.tag.link.internal\"\n                    }]\n            }, {\n                token: [\n                    \"punctuation.definition.tag.begin\",\n                    \"meta.tag.link.external\",\n                    \"meta.tag.link.external\",\n                    \"string.unquoted\",\n                    \"punctuation.definition.tag.end\"\n                ],\n                regex: /(\\[)(.*?)([\\s]+)(.*?)(\\])/\n            }],\n        \"#comment\": [{\n                token: \"punctuation.definition.comment.html\",\n                regex: /<!--/,\n                push: [{\n                        token: \"punctuation.definition.comment.html\",\n                        regex: /-->/,\n                        next: \"pop\"\n                    }, {\n                        defaultToken: \"comment.block.html\"\n                    }]\n            }],\n        \"#emphasis\": [{\n                token: [\n                    \"punctuation.definition.tag.begin\",\n                    \"markup.italic.bold\",\n                    \"punctuation.definition.tag.end\"\n                ],\n                regex: /(''''')(?!')(.*?)('''''|$)/\n            }, {\n                token: [\n                    \"punctuation.definition.tag.begin\",\n                    \"markup.bold\",\n                    \"punctuation.definition.tag.end\"\n                ],\n                regex: /(''')(?!')(.*?)('''|$)/\n            }, {\n                token: [\n                    \"punctuation.definition.tag.begin\",\n                    \"markup.italic\",\n                    \"punctuation.definition.tag.end\"\n                ],\n                regex: /('')(?!')(.*?)(''|$)/\n            }],\n        \"#heading\": [{\n                token: [\n                    \"punctuation.definition.heading\",\n                    \"entity.name.section\",\n                    \"punctuation.definition.heading\"\n                ],\n                regex: /(={1,6})(.+?)(\\1)(?!=)/\n            }],\n        \"#tag\": [{\n                token: [\n                    \"punctuation.definition.tag.begin\",\n                    \"entity.name.tag\",\n                    \"meta.tag.block.ref\",\n                    \"punctuation.definition.tag.end\"\n                ],\n                regex: /(<)(ref)((?:\\s+.*?)?)(>)/,\n                caseInsensitive: true,\n                push: [{\n                        token: [\n                            \"punctuation.definition.tag.begin\",\n                            \"entity.name.tag\",\n                            \"meta.tag.block.ref\",\n                            \"punctuation.definition.tag.end\"\n                        ],\n                        regex: /(<\\/)(ref)(\\s*)(>)/,\n                        caseInsensitive: true,\n                        next: \"pop\"\n                    }, {\n                        include: \"$self\"\n                    }, {\n                        defaultToken: \"meta.tag.block.ref\"\n                    }]\n            },\n            {\n                token: [\n                    \"punctuation.definition.tag.begin\",\n                    \"entity.name.tag\",\n                    \"meta.tag.block.nowiki\",\n                    \"punctuation.definition.tag.end\"\n                ],\n                regex: /(<)(nowiki)((?:\\s+.*?)?)(>)/,\n                caseInsensitive: true,\n                push: [{\n                        token: [\n                            \"punctuation.definition.tag.begin\",\n                            \"entity.name.tag\",\n                            \"meta.tag.block.nowiki\",\n                            \"punctuation.definition.tag.end\"\n                        ],\n                        regex: /(<\\/)(nowiki)(\\s*)(>)/,\n                        caseInsensitive: true,\n                        next: \"pop\"\n                    }, {\n                        defaultToken: \"meta.tag.block.nowiki\"\n                    }]\n            }, {\n                token: [\n                    \"punctuation.definition.tag.begin\",\n                    \"entity.name.tag\"\n                ],\n                regex: /(<\\/?)(noinclude|includeonly|onlyinclude)(?=\\W)/,\n                caseInsensitive: true,\n                push: [{\n                        token: [\n                            \"invalid.illegal\",\n                            \"punctuation.definition.tag.end\"\n                        ],\n                        regex: /((?:\\/)?)(>)/,\n                        next: \"pop\"\n                    }, {\n                        include: \"#attribute\"\n                    }, {\n                        defaultToken: \"meta.tag.block.any\"\n                    }]\n            }, {\n                token: [\n                    \"punctuation.definition.tag.begin\",\n                    \"entity.name.tag\"\n                ],\n                regex: /(<)(br|wbr|hr|meta|link)(?=\\W)/,\n                caseInsensitive: true,\n                push: [{\n                        token: \"punctuation.definition.tag.end\",\n                        regex: /\\/?>/,\n                        next: \"pop\"\n                    }, {\n                        include: \"#attribute\"\n                    }, {\n                        defaultToken: \"meta.tag.other\"\n                    }]\n            }, {\n                token: [\n                    \"punctuation.definition.tag.begin\",\n                    \"entity.name.tag\"\n                ],\n                regex: /(<\\/?)(div|center|span|h1|h2|h3|h4|h5|h6|bdo|em|strong|cite|dfn|code|samp|kbd|var|abbr|blockquote|q|sub|sup|p|pre|ins|del|ul|ol|li|dl|dd|dt|table|caption|thead|tfoot|tbody|colgroup|col|tr|td|th|a|img|video|source|track|tt|b|i|big|small|strike|s|u|font|ruby|rb|rp|rt|rtc|math|figure|figcaption|bdi|data|time|mark|html)(?=\\W)/,\n                caseInsensitive: true,\n                push: [{\n                        token: [\n                            \"invalid.illegal\",\n                            \"punctuation.definition.tag.end\"\n                        ],\n                        regex: /((?:\\/)?)(>)/,\n                        next: \"pop\"\n                    }, {\n                        include: \"#attribute\"\n                    }, {\n                        defaultToken: \"meta.tag.block\"\n                    }]\n            }, {\n                token: [\n                    \"punctuation.definition.tag.begin\",\n                    \"invalid.illegal\"\n                ],\n                regex: /(<\\/)(br|wbr|hr|meta|link)(?=\\W)/,\n                caseInsensitive: true,\n                push: [{\n                        token: \"punctuation.definition.tag.end\",\n                        regex: /\\/?>/,\n                        next: \"pop\"\n                    }, {\n                        include: \"#attribute\"\n                    }, {\n                        defaultToken: \"meta.tag.other\"\n                    }]\n            }],\n        \"#caption\": [{\n                token: [\n                    \"meta.tag.block.table-caption\",\n                    \"punctuation.definition.tag.begin\"\n                ],\n                regex: /^(\\s*)(\\|\\+)/,\n                push: [{\n                        token: \"meta.tag.block.table-caption\",\n                        regex: /$/,\n                        next: \"pop\"\n                    }, {\n                        defaultToken: \"meta.tag.block.table-caption\"\n                    }]\n            }],\n        \"#tr\": [{\n                token: [\n                    \"meta.tag.block.tr\",\n                    \"punctuation.definition.tag.begin\",\n                    \"meta.tag.block.tr\",\n                    \"invalid.illegal\"\n                ],\n                regex: /^(\\s*)(\\|\\-)([\\s]*)(.*)/\n            }],\n        \"#th\": [{\n                token: [\n                    \"meta.tag.block.th.heading\",\n                    \"punctuation.definition.tag.begin\",\n                    \"meta.tag.block.th.heading\",\n                    \"punctuation.definition.tag\",\n                    \"markup.bold\"\n                ],\n                regex: /^(\\s*)(!)(?:(.*?)(\\|))?(.*?)(?=!!|$)/,\n                push: [{\n                        token: \"meta.tag.block.th.heading\",\n                        regex: /$/,\n                        next: \"pop\"\n                    }, {\n                        token: [\n                            \"punctuation.definition.tag.begin\",\n                            \"meta.tag.block.th.inline\",\n                            \"punctuation.definition.tag\",\n                            \"markup.bold\"\n                        ],\n                        regex: /(!!)(?:(.*?)(\\|))?(.*?)(?=!!|$)/\n                    }, {\n                        include: \"$self\"\n                    }, {\n                        defaultToken: \"meta.tag.block.th.heading\"\n                    }]\n            }],\n        \"#td\": [{\n                token: [\n                    \"meta.tag.block.td\",\n                    \"punctuation.definition.tag.begin\"\n                ],\n                regex: /^(\\s*)(\\|)/,\n                push: [{\n                        token: \"meta.tag.block.td\",\n                        regex: /$/,\n                        next: \"pop\"\n                    }, {\n                        include: \"$self\"\n                    }, {\n                        defaultToken: \"meta.tag.block.td\"\n                    }]\n            }],\n        \"#table\": [{\n                patterns: [{\n                        name: \"meta.tag.block.table\",\n                        begin: \"^\\\\s*({\\\\|)(.*?)$\",\n                        end: \"^\\\\s*\\\\|}\",\n                        beginCaptures: {\n                            1: {\n                                name: \"punctuation.definition.tag.begin\"\n                            },\n                            2: {\n                                patterns: [{\n                                        include: \"#attribute\"\n                                    }]\n                            },\n                            3: {\n                                name: \"invalid.illegal\"\n                            }\n                        },\n                        endCaptures: {\n                            0: {\n                                name: \"punctuation.definition.tag.end\"\n                            }\n                        },\n                        patterns: [{\n                                include: \"#comment\"\n                            }, {\n                                include: \"#template\"\n                            }, {\n                                include: \"#caption\"\n                            }, {\n                                include: \"#tr\"\n                            }, {\n                                include: \"#th\"\n                            }, {\n                                include: \"#td\"\n                            }]\n                    }],\n                repository: {\n                    caption: {\n                        name: \"meta.tag.block.table-caption\",\n                        begin: \"^\\\\s*(\\\\|\\\\+)\",\n                        end: \"$\",\n                        beginCaptures: {\n                            1: {\n                                name: \"punctuation.definition.tag.begin\"\n                            }\n                        }\n                    },\n                    tr: {\n                        name: \"meta.tag.block.tr\",\n                        match: \"^\\\\s*(\\\\|\\\\-)[\\\\s]*(.*)\",\n                        captures: {\n                            1: {\n                                name: \"punctuation.definition.tag.begin\"\n                            },\n                            2: {\n                                name: \"invalid.illegal\"\n                            }\n                        }\n                    },\n                    th: {\n                        name: \"meta.tag.block.th.heading\",\n                        begin: \"^\\\\s*(!)((.*?)(\\\\|))?(.*?)(?=(!!)|$)\",\n                        end: \"$\",\n                        beginCaptures: {\n                            1: {\n                                name: \"punctuation.definition.tag.begin\"\n                            },\n                            3: {\n                                patterns: [{\n                                        include: \"#attribute\"\n                                    }]\n                            },\n                            4: {\n                                name: \"punctuation.definition.tag\"\n                            },\n                            5: {\n                                name: \"markup.bold\"\n                            }\n                        },\n                        patterns: [{\n                                name: \"meta.tag.block.th.inline\",\n                                match: \"(!!)((.*?)(\\\\|))?(.*?)(?=(!!)|$)\",\n                                captures: {\n                                    1: {\n                                        name: \"punctuation.definition.tag.begin\"\n                                    },\n                                    3: {\n                                        patterns: [{\n                                                include: \"#attribute\"\n                                            }]\n                                    },\n                                    4: {\n                                        name: \"punctuation.definition.tag\"\n                                    },\n                                    5: {\n                                        name: \"markup.bold\"\n                                    }\n                                }\n                            }, {\n                                include: \"$self\"\n                            }]\n                    },\n                    td: {\n                        name: \"meta.tag.block.td\",\n                        begin: \"^\\\\s*(\\\\|)\",\n                        end: \"$\",\n                        beginCaptures: {\n                            1: {\n                                name: \"punctuation.definition.tag.begin\"\n                            },\n                            2: {\n                                patterns: [{\n                                        include: \"#attribute\"\n                                    }]\n                            },\n                            3: {\n                                name: \"punctuation.definition.tag\"\n                            }\n                        },\n                        patterns: [{\n                                include: \"$self\"\n                            }]\n                    }\n                }\n            }],\n        \"#attribute\": [{\n                include: \"#string\"\n            }, {\n                token: \"entity.other.attribute-name\",\n                regex: /\\w+/\n            }],\n        \"#string\": [{\n                token: \"string.quoted.double\",\n                regex: /\\\"/,\n                push: [{\n                        token: \"string.quoted.double\",\n                        regex: /\\\"/,\n                        next: \"pop\"\n                    }, {\n                        defaultToken: \"string.quoted.double\"\n                    }]\n            }, {\n                token: \"string.quoted.single\",\n                regex: /\\'/,\n                push: [{\n                        token: \"string.quoted.single\",\n                        regex: /\\'/,\n                        next: \"pop\"\n                    }, {\n                        defaultToken: \"string.quoted.single\"\n                    }]\n            }],\n        \"#url\": [{\n                token: \"markup.underline.link\",\n                regex: /(?:http(?:s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:\\/?#\\[\\]@!\\$&'\\(\\)\\*\\+,;=.]+/\n            }, {\n                token: \"invalid.illegal\",\n                regex: /.*/\n            }]\n    };\n    this.normalizeRules();\n};\nMediaWikiHighlightRules.metaData = {\n    name: \"MediaWiki\",\n    scopeName: \"text.html.mediawiki\",\n    fileTypes: [\"mediawiki\", \"wiki\"]\n};\noop.inherits(MediaWikiHighlightRules, TextHighlightRules);\nexports.MediaWikiHighlightRules = MediaWikiHighlightRules;\n\n});\n\nace.define(\"ace/mode/mediawiki\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/mediawiki_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar MediaWikiHighlightRules = require(\"./mediawiki_highlight_rules\").MediaWikiHighlightRules;\nvar Mode = function () {\n    this.HighlightRules = MediaWikiHighlightRules;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.type = \"text\";\n    this.blockComment = { start: \"<!--\", end: \"-->\" };\n    this.$id = \"ace/mode/mediawiki\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/mediawiki\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}