{"ast":null,"code":"ace.define(\"ace/mode/bibtex_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var BibTeXHighlightRules = function () {\n    this.$rules = {\n      start: [{\n        token: \"comment\",\n        regex: /@Comment\\{/,\n        stateName: \"bibtexComment\",\n        push: [{\n          token: \"comment\",\n          regex: /}/,\n          next: \"pop\"\n        }, {\n          token: \"comment\",\n          regex: /\\{/,\n          push: \"bibtexComment\"\n        }, {\n          defaultToken: \"comment\"\n        }]\n      }, {\n        token: [\"keyword\", \"text\", \"paren.lparen\", \"text\", \"variable\", \"text\", \"keyword.operator\"],\n        regex: /(@String)(\\s*)(\\{)(\\s*)([a-zA-Z]*)(\\s*)(=)/,\n        push: [{\n          token: \"paren.rparen\",\n          regex: /\\}/,\n          next: \"pop\"\n        }, {\n          include: \"#misc\"\n        }, {\n          defaultToken: \"text\"\n        }]\n      }, {\n        token: [\"keyword\", \"text\", \"paren.lparen\", \"text\", \"variable\", \"text\", \"keyword.operator\"],\n        regex: /(@String)(\\s*)(\\()(\\s*)([a-zA-Z]*)(\\s*)(=)/,\n        push: [{\n          token: \"paren.rparen\",\n          regex: /\\)/,\n          next: \"pop\"\n        }, {\n          include: \"#misc\"\n        }, {\n          defaultToken: \"text\"\n        }]\n      }, {\n        token: [\"keyword\", \"text\", \"paren.lparen\"],\n        regex: /(@preamble)(\\s*)(\\()/,\n        push: [{\n          token: \"paren.rparen\",\n          regex: /\\)/,\n          next: \"pop\"\n        }, {\n          include: \"#misc\"\n        }, {\n          defaultToken: \"text\"\n        }]\n      }, {\n        token: [\"keyword\", \"text\", \"paren.lparen\"],\n        regex: /(@preamble)(\\s*)(\\{)/,\n        push: [{\n          token: \"paren.rparen\",\n          regex: /\\}/,\n          next: \"pop\"\n        }, {\n          include: \"#misc\"\n        }, {\n          defaultToken: \"text\"\n        }]\n      }, {\n        token: [\"keyword\", \"text\", \"paren.lparen\", \"text\", \"support.class\"],\n        regex: /(@[a-zA-Z]+)(\\s*)(\\{)(\\s*)([\\w-]+)/,\n        push: [{\n          token: \"paren.rparen\",\n          regex: /\\}/,\n          next: \"pop\"\n        }, {\n          token: [\"variable\", \"text\", \"keyword.operator\"],\n          regex: /([a-zA-Z0-9\\!\\$\\&\\*\\+\\-\\.\\/\\:\\;\\<\\>\\?\\[\\]\\^\\_\\`\\|]+)(\\s*)(=)/,\n          push: [{\n            token: \"text\",\n            regex: /(?=[,}])/,\n            next: \"pop\"\n          }, {\n            include: \"#misc\"\n          }, {\n            include: \"#integer\"\n          }, {\n            defaultToken: \"text\"\n          }]\n        }, {\n          token: \"punctuation\",\n          regex: /,/\n        }, {\n          defaultToken: \"text\"\n        }]\n      }, {\n        defaultToken: \"comment\"\n      }],\n      \"#integer\": [{\n        token: \"constant.numeric.bibtex\",\n        regex: /\\d+/\n      }],\n      \"#misc\": [{\n        token: \"string\",\n        regex: /\"/,\n        push: \"#string_quotes\"\n      }, {\n        token: \"paren.lparen\",\n        regex: /\\{/,\n        push: \"#string_braces\"\n      }, {\n        token: \"keyword.operator\",\n        regex: /#/\n      }],\n      \"#string_braces\": [{\n        token: \"paren.rparen\",\n        regex: /\\}/,\n        next: \"pop\"\n      }, {\n        token: \"invalid.illegal\",\n        regex: /@/\n      }, {\n        include: \"#misc\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"#string_quotes\": [{\n        token: \"string\",\n        regex: /\"/,\n        next: \"pop\"\n      }, {\n        include: \"#misc\"\n      }, {\n        defaultToken: \"string\"\n      }]\n    };\n    this.normalizeRules();\n  };\n  oop.inherits(BibTeXHighlightRules, TextHighlightRules);\n  exports.BibTeXHighlightRules = BibTeXHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Range = require(\"../../range\").Range;\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n      return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n        return range;\n      }\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n        endRow = row;\n      }\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n      var endRow = row;\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/bibtex\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/bibtex_highlight_rules\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var BibTeXHighlightRules = require(\"./bibtex_highlight_rules\").BibTeXHighlightRules;\n  var FoldMode = require(\"./folding/cstyle\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = BibTeXHighlightRules;\n    this.foldingRules = new FoldMode();\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.$id = \"ace/mode/bibtex\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/bibtex\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","BibTeXHighlightRules","$rules","start","token","regex","stateName","push","next","defaultToken","include","normalizeRules","inherits","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","replace","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$id"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-bibtex.js"],"sourcesContent":["ace.define(\"ace/mode/bibtex_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar BibTeXHighlightRules = function () {\n    this.$rules = {\n        start: [\n            {\n                token: \"comment\",\n                regex: /@Comment\\{/,\n                stateName: \"bibtexComment\",\n                push: [\n                    {\n                        token: \"comment\",\n                        regex: /}/,\n                        next: \"pop\"\n                    }, {\n                        token: \"comment\",\n                        regex: /\\{/,\n                        push: \"bibtexComment\"\n                    }, {\n                        defaultToken: \"comment\"\n                    }\n                ]\n            }, {\n                token: [\n                    \"keyword\", \"text\", \"paren.lparen\", \"text\", \"variable\", \"text\", \"keyword.operator\"\n                ],\n                regex: /(@String)(\\s*)(\\{)(\\s*)([a-zA-Z]*)(\\s*)(=)/,\n                push: [\n                    {\n                        token: \"paren.rparen\",\n                        regex: /\\}/,\n                        next: \"pop\"\n                    }, {\n                        include: \"#misc\"\n                    }, {\n                        defaultToken: \"text\"\n                    }\n                ]\n            }, {\n                token: [\n                    \"keyword\", \"text\", \"paren.lparen\", \"text\", \"variable\", \"text\", \"keyword.operator\"\n                ],\n                regex: /(@String)(\\s*)(\\()(\\s*)([a-zA-Z]*)(\\s*)(=)/,\n                push: [\n                    {\n                        token: \"paren.rparen\",\n                        regex: /\\)/,\n                        next: \"pop\"\n                    }, {\n                        include: \"#misc\"\n                    }, {\n                        defaultToken: \"text\"\n                    }\n                ]\n            }, {\n                token: [\n                    \"keyword\", \"text\", \"paren.lparen\"\n                ],\n                regex: /(@preamble)(\\s*)(\\()/,\n                push: [\n                    {\n                        token: \"paren.rparen\",\n                        regex: /\\)/,\n                        next: \"pop\"\n                    }, {\n                        include: \"#misc\"\n                    }, {\n                        defaultToken: \"text\"\n                    }\n                ]\n            }, {\n                token: [\n                    \"keyword\", \"text\", \"paren.lparen\"\n                ],\n                regex: /(@preamble)(\\s*)(\\{)/,\n                push: [\n                    {\n                        token: \"paren.rparen\",\n                        regex: /\\}/,\n                        next: \"pop\"\n                    }, {\n                        include: \"#misc\"\n                    }, {\n                        defaultToken: \"text\"\n                    }\n                ]\n            }, {\n                token: [\n                    \"keyword\", \"text\", \"paren.lparen\", \"text\", \"support.class\"\n                ],\n                regex: /(@[a-zA-Z]+)(\\s*)(\\{)(\\s*)([\\w-]+)/,\n                push: [\n                    {\n                        token: \"paren.rparen\",\n                        regex: /\\}/,\n                        next: \"pop\"\n                    }, {\n                        token: [\n                            \"variable\", \"text\", \"keyword.operator\"\n                        ],\n                        regex: /([a-zA-Z0-9\\!\\$\\&\\*\\+\\-\\.\\/\\:\\;\\<\\>\\?\\[\\]\\^\\_\\`\\|]+)(\\s*)(=)/,\n                        push: [\n                            {\n                                token: \"text\",\n                                regex: /(?=[,}])/,\n                                next: \"pop\"\n                            }, {\n                                include: \"#misc\"\n                            }, {\n                                include: \"#integer\"\n                            }, {\n                                defaultToken: \"text\"\n                            }\n                        ]\n                    }, {\n                        token: \"punctuation\",\n                        regex: /,/\n                    }, {\n                        defaultToken: \"text\"\n                    }\n                ]\n            }, {\n                defaultToken: \"comment\"\n            }\n        ],\n        \"#integer\": [\n            {\n                token: \"constant.numeric.bibtex\",\n                regex: /\\d+/\n            }\n        ],\n        \"#misc\": [\n            {\n                token: \"string\",\n                regex: /\"/,\n                push: \"#string_quotes\"\n            }, {\n                token: \"paren.lparen\",\n                regex: /\\{/,\n                push: \"#string_braces\"\n            }, {\n                token: \"keyword.operator\",\n                regex: /#/\n            }\n        ],\n        \"#string_braces\": [\n            {\n                token: \"paren.rparen\",\n                regex: /\\}/,\n                next: \"pop\"\n            }, {\n                token: \"invalid.illegal\",\n                regex: /@/\n            }, {\n                include: \"#misc\"\n            }, {\n                defaultToken: \"string\"\n            }\n        ],\n        \"#string_quotes\": [\n            {\n                token: \"string\",\n                regex: /\"/,\n                next: \"pop\"\n            }, {\n                include: \"#misc\"\n            }, {\n                defaultToken: \"string\"\n            }\n        ]\n    };\n    this.normalizeRules();\n};\noop.inherits(BibTeXHighlightRules, TextHighlightRules);\nexports.BibTeXHighlightRules = BibTeXHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n        this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n        return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                }\n                else if (foldStyle != \"all\")\n                    range = null;\n            }\n            return range;\n        }\n        if (foldStyle === \"markbegin\")\n            return;\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    this.getSectionRange = function (session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                }\n                else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                }\n                else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m)\n                continue;\n            if (m[1])\n                depth--;\n            else\n                depth++;\n            if (!depth)\n                break;\n        }\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/bibtex\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/bibtex_highlight_rules\",\"ace/mode/folding/cstyle\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar BibTeXHighlightRules = require(\"./bibtex_highlight_rules\").BibTeXHighlightRules;\nvar FoldMode = require(\"./folding/cstyle\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = BibTeXHighlightRules;\n    this.foldingRules = new FoldMode();\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.$id = \"ace/mode/bibtex\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/bibtex\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}