{"ast":null,"code":"ace.define(\"ace/mode/prql_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  // https://prql-lang.org/\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var PrqlHighlightRules = function () {\n    var builtinFunctions = \"min|max|sum|average|stddev|every|any|concat_array|count|\" + \"lag|lead|first|last|rank|rank_dense|row_number|\" + \"round|as|in|\" + \"tuple_every|tuple_map|tuple_zip|_eq|_is_null|\" + \"from_text|\" + \"lower|upper|\" + \"read_parquet|read_csv\";\n    var builtinTypes = [\"bool\", \"int\", \"int8\", \"int16\", \"int32\", \"int64\", \"int128\", \"float\", \"text\", \"timestamp\", \"set\"].join(\"|\");\n    var keywordMapper = this.createKeywordMapper({\n      \"constant.language\": \"null\",\n      \"constant.language.boolean\": \"true|false\",\n      \"keyword\": \"let|into|case|prql|type|module|internal\",\n      \"storage.type\": \"let|func\",\n      \"support.function\": builtinFunctions,\n      \"support.type\": builtinTypes,\n      \"variable.language\": \"date|math\"\n    }, \"identifier\");\n    var escapeRe = /\\\\(\\d+|['\"\\\\&bfnrt]|u\\{[0-9a-fA-F]{1,6}\\}|x[0-9a-fA-F]{2})/;\n    var identifierRe = /[A-Za-z_][a-z_A-Z0-9]/.source;\n    var numRe = /(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/.source;\n    var bidi = \"[\\\\u202A\\\\u202B\\\\u202D\\\\u202E\\\\u2066\\\\u2067\\\\u2068\\\\u202C\\\\u2069]\";\n    this.$rules = {\n      start: [{\n        token: \"string.start\",\n        regex: 's?\"',\n        next: \"string\"\n      }, {\n        token: \"string.start\",\n        regex: 'f\"',\n        next: \"fstring\"\n      }, {\n        token: \"string.start\",\n        regex: 'r\"',\n        next: \"rstring\"\n      }, {\n        token: \"string.single\",\n        start: \"'\",\n        end: \"'\"\n      }, {\n        token: \"string.character\",\n        regex: \"'(?:\" + escapeRe.source + \"|.)'?\"\n      }, {\n        token: \"constant.language\",\n        regex: \"^\" + identifierRe + \"*\"\n      }, {\n        token: [\"constant.numeric\", \"keyword\"],\n        regex: \"(\" + numRe + \")(years|months|weeks|days|hours|minutes|seconds|milliseconds|microseconds)\"\n      }, {\n        token: \"constant.numeric\",\n        // hexadecimal, octal and binary\n        regex: /0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/\n      }, {\n        token: \"constant.numeric\",\n        // decimal integers and floats\n        regex: numRe\n      }, {\n        token: \"comment.block.documentation\",\n        regex: \"#!.*\"\n      }, {\n        token: \"comment.line.number-sign\",\n        regex: \"#.*\"\n      }, {\n        token: \"keyword.operator\",\n        regex: /\\|\\s*/,\n        next: \"pipe\"\n      }, {\n        token: \"keyword.operator\",\n        regex: /->|=>|==|!=|>=|<=|~=|&&|\\|\\||\\?\\?|\\/\\/|@/\n      }, {\n        token: \"invalid.illegal\",\n        regex: bidi\n      }, {\n        token: \"punctuation.operator\",\n        regex: /[,`]/\n      }, {\n        token: keywordMapper,\n        regex: \"[\\\\w\\\\xff-\\\\u218e\\\\u2455-\\\\uffff]+\\\\b\"\n      }, {\n        token: \"paren.lparen\",\n        regex: /[\\[({]/\n      }, {\n        token: \"paren.rparen\",\n        regex: /[\\])}]/\n      }],\n      pipe: [{\n        token: \"constant.language\",\n        regex: identifierRe + \"*\",\n        next: \"pop\"\n      }, {\n        token: \"error\",\n        regex: \"\",\n        next: \"pop\"\n      }],\n      string: [{\n        token: \"constant.character.escape\",\n        regex: escapeRe\n      }, {\n        token: \"text\",\n        regex: /\\\\(\\s|$)/,\n        next: \"stringGap\"\n      }, {\n        token: \"string.end\",\n        regex: '\"',\n        next: \"start\"\n      }, {\n        token: \"invalid.illegal\",\n        regex: bidi\n      }, {\n        defaultToken: \"string.double\"\n      }],\n      stringGap: [{\n        token: \"text\",\n        regex: /\\\\/,\n        next: \"string\"\n      }, {\n        token: \"error\",\n        regex: \"\",\n        next: \"start\"\n      }],\n      fstring: [{\n        token: \"constant.character.escape\",\n        regex: escapeRe\n      }, {\n        token: \"string.end\",\n        regex: '\"',\n        next: \"start\"\n      }, {\n        token: \"invalid.illegal\",\n        regex: bidi\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fstringParenRules\"\n      }, {\n        token: \"invalid.illegal\",\n        regex: bidi\n      }, {\n        defaultToken: \"string\"\n      }],\n      fstringParenRules: [{\n        token: \"constant.language\",\n        regex: \"^\" + identifierRe + \"*\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"}\",\n        next: \"pop\"\n      }],\n      rstring: [{\n        token: \"string.end\",\n        regex: '\"',\n        next: \"start\"\n      }, {\n        token: \"invalid.illegal\",\n        regex: bidi\n      }, {\n        defaultToken: \"string\"\n      }]\n    };\n    this.normalizeRules();\n  };\n  oop.inherits(PrqlHighlightRules, TextHighlightRules);\n  exports.PrqlHighlightRules = PrqlHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Range = require(\"../../range\").Range;\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n      return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n        return range;\n      }\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n        endRow = row;\n      }\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n      var endRow = row;\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/prql\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/prql_highlight_rules\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var HighlightRules = require(\"./prql_highlight_rules\").PrqlHighlightRules;\n  var FoldMode = require(\"./folding/cstyle\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = HighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/prql\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/prql\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","PrqlHighlightRules","builtinFunctions","builtinTypes","join","keywordMapper","createKeywordMapper","escapeRe","identifierRe","source","numRe","bidi","$rules","start","token","regex","next","end","pipe","string","defaultToken","stringGap","fstring","push","fstringParenRules","rstring","normalizeRules","inherits","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","replace","foldingStopMarker","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","$id"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-prql.js"],"sourcesContent":["ace.define(\"ace/mode/prql_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){// https://prql-lang.org/\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar PrqlHighlightRules = function () {\n    var builtinFunctions = \"min|max|sum|average|stddev|every|any|concat_array|count|\" +\n        \"lag|lead|first|last|rank|rank_dense|row_number|\" +\n        \"round|as|in|\" +\n        \"tuple_every|tuple_map|tuple_zip|_eq|_is_null|\" +\n        \"from_text|\" +\n        \"lower|upper|\" +\n        \"read_parquet|read_csv\";\n    var builtinTypes = [\n        \"bool\",\n        \"int\",\n        \"int8\",\n        \"int16\",\n        \"int32\",\n        \"int64\",\n        \"int128\",\n        \"float\",\n        \"text\",\n        \"timestamp\",\n        \"set\"\n    ].join(\"|\");\n    var keywordMapper = this.createKeywordMapper({\n        \"constant.language\": \"null\",\n        \"constant.language.boolean\": \"true|false\",\n        \"keyword\": \"let|into|case|prql|type|module|internal\",\n        \"storage.type\": \"let|func\",\n        \"support.function\": builtinFunctions,\n        \"support.type\": builtinTypes,\n        \"variable.language\": \"date|math\"\n    }, \"identifier\");\n    var escapeRe = /\\\\(\\d+|['\"\\\\&bfnrt]|u\\{[0-9a-fA-F]{1,6}\\}|x[0-9a-fA-F]{2})/;\n    var identifierRe = /[A-Za-z_][a-z_A-Z0-9]/.source;\n    var numRe = /(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/.source;\n    var bidi = \"[\\\\u202A\\\\u202B\\\\u202D\\\\u202E\\\\u2066\\\\u2067\\\\u2068\\\\u202C\\\\u2069]\";\n    this.$rules = {\n        start: [\n            {\n                token: \"string.start\",\n                regex: 's?\"',\n                next: \"string\"\n            }, {\n                token: \"string.start\",\n                regex: 'f\"',\n                next: \"fstring\"\n            }, {\n                token: \"string.start\",\n                regex: 'r\"',\n                next: \"rstring\"\n            }, {\n                token: \"string.single\",\n                start: \"'\",\n                end: \"'\"\n            }, {\n                token: \"string.character\",\n                regex: \"'(?:\" + escapeRe.source + \"|.)'?\"\n            }, {\n                token: \"constant.language\",\n                regex: \"^\" + identifierRe + \"*\"\n            }, {\n                token: [\"constant.numeric\", \"keyword\"],\n                regex: \"(\" + numRe + \")(years|months|weeks|days|hours|minutes|seconds|milliseconds|microseconds)\"\n            }, {\n                token: \"constant.numeric\", // hexadecimal, octal and binary\n                regex: /0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/\n            }, {\n                token: \"constant.numeric\", // decimal integers and floats\n                regex: numRe\n            }, {\n                token: \"comment.block.documentation\",\n                regex: \"#!.*\"\n            }, {\n                token: \"comment.line.number-sign\",\n                regex: \"#.*\"\n            }, {\n                token: \"keyword.operator\",\n                regex: /\\|\\s*/,\n                next: \"pipe\"\n            }, {\n                token: \"keyword.operator\",\n                regex: /->|=>|==|!=|>=|<=|~=|&&|\\|\\||\\?\\?|\\/\\/|@/\n            }, {\n                token: \"invalid.illegal\",\n                regex: bidi\n            }, {\n                token: \"punctuation.operator\",\n                regex: /[,`]/\n            }, {\n                token: keywordMapper,\n                regex: \"[\\\\w\\\\xff-\\\\u218e\\\\u2455-\\\\uffff]+\\\\b\"\n            }, {\n                token: \"paren.lparen\",\n                regex: /[\\[({]/\n            }, {\n                token: \"paren.rparen\",\n                regex: /[\\])}]/\n            }\n        ],\n        pipe: [{\n                token: \"constant.language\",\n                regex: identifierRe + \"*\",\n                next: \"pop\"\n            }, {\n                token: \"error\",\n                regex: \"\",\n                next: \"pop\"\n            }],\n        string: [{\n                token: \"constant.character.escape\",\n                regex: escapeRe\n            }, {\n                token: \"text\",\n                regex: /\\\\(\\s|$)/,\n                next: \"stringGap\"\n            }, {\n                token: \"string.end\",\n                regex: '\"',\n                next: \"start\"\n            }, {\n                token: \"invalid.illegal\",\n                regex: bidi\n            }, {\n                defaultToken: \"string.double\"\n            }],\n        stringGap: [{\n                token: \"text\",\n                regex: /\\\\/,\n                next: \"string\"\n            }, {\n                token: \"error\",\n                regex: \"\",\n                next: \"start\"\n            }],\n        fstring: [{\n                token: \"constant.character.escape\",\n                regex: escapeRe\n            }, {\n                token: \"string.end\",\n                regex: '\"',\n                next: \"start\"\n            }, {\n                token: \"invalid.illegal\",\n                regex: bidi\n            }, {\n                token: \"paren.lparen\",\n                regex: \"{\",\n                push: \"fstringParenRules\"\n            }, {\n                token: \"invalid.illegal\",\n                regex: bidi\n            }, {\n                defaultToken: \"string\"\n            }],\n        fstringParenRules: [{\n                token: \"constant.language\",\n                regex: \"^\" + identifierRe + \"*\"\n            }, {\n                token: \"paren.rparen\",\n                regex: \"}\",\n                next: \"pop\"\n            }],\n        rstring: [{\n                token: \"string.end\",\n                regex: '\"',\n                next: \"start\"\n            }, {\n                token: \"invalid.illegal\",\n                regex: bidi\n            }, {\n                defaultToken: \"string\"\n            }]\n    };\n    this.normalizeRules();\n};\noop.inherits(PrqlHighlightRules, TextHighlightRules);\nexports.PrqlHighlightRules = PrqlHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n        this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n        return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                }\n                else if (foldStyle != \"all\")\n                    range = null;\n            }\n            return range;\n        }\n        if (foldStyle === \"markbegin\")\n            return;\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    this.getSectionRange = function (session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                }\n                else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                }\n                else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m)\n                continue;\n            if (m[1])\n                depth--;\n            else\n                depth++;\n            if (!depth)\n                break;\n        }\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/prql\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/prql_highlight_rules\",\"ace/mode/folding/cstyle\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar HighlightRules = require(\"./prql_highlight_rules\").PrqlHighlightRules;\nvar FoldMode = require(\"./folding/cstyle\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = HighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/prql\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/prql\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}