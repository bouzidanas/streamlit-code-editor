{"ast":null,"code":"ace.define(\"ace/mode/asciidoc_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var AsciidocHighlightRules = function () {\n    var identifierRe = \"[a-zA-Z\\u00a1-\\uffff]+\\\\b\";\n    this.$rules = {\n      \"start\": [{\n        token: \"empty\",\n        regex: /$/\n      }, {\n        token: \"literal\",\n        regex: /^\\.{4,}\\s*$/,\n        next: \"listingBlock\"\n      }, {\n        token: \"literal\",\n        regex: /^-{4,}\\s*$/,\n        next: \"literalBlock\"\n      }, {\n        token: \"string\",\n        regex: /^\\+{4,}\\s*$/,\n        next: \"passthroughBlock\"\n      }, {\n        token: \"keyword\",\n        regex: /^={4,}\\s*$/\n      }, {\n        token: \"text\",\n        regex: /^\\s*$/\n      }, {\n        token: \"empty\",\n        regex: \"\",\n        next: \"dissallowDelimitedBlock\"\n      }],\n      \"dissallowDelimitedBlock\": [{\n        include: \"paragraphEnd\"\n      }, {\n        token: \"comment\",\n        regex: '^//.+$'\n      }, {\n        token: \"keyword\",\n        regex: \"^(?:NOTE|TIP|IMPORTANT|WARNING|CAUTION):\"\n      }, {\n        include: \"listStart\"\n      }, {\n        token: \"literal\",\n        regex: /^\\s+.+$/,\n        next: \"indentedBlock\"\n      }, {\n        token: \"empty\",\n        regex: \"\",\n        next: \"text\"\n      }],\n      \"paragraphEnd\": [{\n        token: \"doc.comment\",\n        regex: /^\\/{4,}\\s*$/,\n        next: \"commentBlock\"\n      }, {\n        token: \"tableBlock\",\n        regex: /^\\s*[|!]=+\\s*$/,\n        next: \"tableBlock\"\n      }, {\n        token: \"keyword\",\n        regex: /^(?:--|''')\\s*$/,\n        next: \"start\"\n      }, {\n        token: \"option\",\n        regex: /^\\[.*\\]\\s*$/,\n        next: \"start\"\n      }, {\n        token: \"pageBreak\",\n        regex: /^>{3,}$/,\n        next: \"start\"\n      }, {\n        token: \"literal\",\n        regex: /^\\.{4,}\\s*$/,\n        next: \"listingBlock\"\n      }, {\n        token: \"titleUnderline\",\n        regex: /^(?:={2,}|-{2,}|~{2,}|\\^{2,}|\\+{2,})\\s*$/,\n        next: \"start\"\n      }, {\n        token: \"singleLineTitle\",\n        regex: /^={1,5}\\s+\\S.*$/,\n        next: \"start\"\n      }, {\n        token: \"otherBlock\",\n        regex: /^(?:\\*{2,}|_{2,})\\s*$/,\n        next: \"start\"\n      }, {\n        token: \"optionalTitle\",\n        regex: /^\\.[^.\\s].+$/,\n        next: \"start\"\n      }],\n      \"listStart\": [{\n        token: \"keyword\",\n        regex: /^\\s*(?:\\d+\\.|[a-zA-Z]\\.|[ixvmIXVM]+\\)|\\*{1,5}|-|\\.{1,5})\\s/,\n        next: \"listText\"\n      }, {\n        token: \"meta.tag\",\n        regex: /^.+(?::{2,4}|;;)(?: |$)/,\n        next: \"listText\"\n      }, {\n        token: \"support.function.list.callout\",\n        regex: /^(?:<\\d+>|\\d+>|>) /,\n        next: \"text\"\n      }, {\n        token: \"keyword\",\n        regex: /^\\+\\s*$/,\n        next: \"start\"\n      }],\n      \"text\": [{\n        token: [\"link\", \"variable.language\"],\n        regex: /((?:https?:\\/\\/|ftp:\\/\\/|file:\\/\\/|mailto:|callto:)[^\\s\\[]+)(\\[.*?\\])/\n      }, {\n        token: \"link\",\n        regex: /(?:https?:\\/\\/|ftp:\\/\\/|file:\\/\\/|mailto:|callto:)[^\\s\\[]+/\n      }, {\n        token: \"link\",\n        regex: /\\b[\\w\\.\\/\\-]+@[\\w\\.\\/\\-]+\\b/\n      }, {\n        include: \"macros\"\n      }, {\n        include: \"paragraphEnd\"\n      }, {\n        token: \"literal\",\n        regex: /\\+{3,}/,\n        next: \"smallPassthrough\"\n      }, {\n        token: \"escape\",\n        regex: /\\((?:C|TM|R)\\)|\\.{3}|->|<-|=>|<=|&#(?:\\d+|x[a-fA-F\\d]+);|(?: |^)--(?=\\s+\\S)/\n      }, {\n        token: \"escape\",\n        regex: /\\\\[_*'`+#]|\\\\{2}[_*'`+#]{2}/\n      }, {\n        token: \"keyword\",\n        regex: /\\s\\+$/\n      }, {\n        token: \"text\",\n        regex: identifierRe\n      }, {\n        token: [\"keyword\", \"string\", \"keyword\"],\n        regex: /(<<[\\w\\d\\-$]+,)(.*?)(>>|$)/\n      }, {\n        token: \"keyword\",\n        regex: /<<[\\w\\d\\-$]+,?|>>/\n      }, {\n        token: \"constant.character\",\n        regex: /\\({2,3}.*?\\){2,3}/\n      }, {\n        token: \"keyword\",\n        regex: /\\[\\[.+?\\]\\]/\n      }, {\n        token: \"support\",\n        regex: /^\\[{3}[\\w\\d =\\-]+\\]{3}/\n      }, {\n        include: \"quotes\"\n      }, {\n        token: \"empty\",\n        regex: /^\\s*$/,\n        next: \"start\"\n      }],\n      \"listText\": [{\n        include: \"listStart\"\n      }, {\n        include: \"text\"\n      }],\n      \"indentedBlock\": [{\n        token: \"literal\",\n        regex: /^[\\s\\w].+$/,\n        next: \"indentedBlock\"\n      }, {\n        token: \"literal\",\n        regex: \"\",\n        next: \"start\"\n      }],\n      \"listingBlock\": [{\n        token: \"literal\",\n        regex: /^\\.{4,}\\s*$/,\n        next: \"dissallowDelimitedBlock\"\n      }, {\n        token: \"constant.numeric\",\n        regex: '<\\\\d+>'\n      }, {\n        token: \"literal\",\n        regex: '[^<]+'\n      }, {\n        token: \"literal\",\n        regex: '<'\n      }],\n      \"literalBlock\": [{\n        token: \"literal\",\n        regex: /^-{4,}\\s*$/,\n        next: \"dissallowDelimitedBlock\"\n      }, {\n        token: \"constant.numeric\",\n        regex: '<\\\\d+>'\n      }, {\n        token: \"literal\",\n        regex: '[^<]+'\n      }, {\n        token: \"literal\",\n        regex: '<'\n      }],\n      \"passthroughBlock\": [{\n        token: \"literal\",\n        regex: /^\\+{4,}\\s*$/,\n        next: \"dissallowDelimitedBlock\"\n      }, {\n        token: \"literal\",\n        regex: identifierRe + \"|\\\\d+\"\n      }, {\n        include: \"macros\"\n      }, {\n        token: \"literal\",\n        regex: \".\"\n      }],\n      \"smallPassthrough\": [{\n        token: \"literal\",\n        regex: /[+]{3,}/,\n        next: \"dissallowDelimitedBlock\"\n      }, {\n        token: \"literal\",\n        regex: /^\\s*$/,\n        next: \"dissallowDelimitedBlock\"\n      }, {\n        token: \"literal\",\n        regex: identifierRe + \"|\\\\d+\"\n      }, {\n        include: \"macros\"\n      }],\n      \"commentBlock\": [{\n        token: \"doc.comment\",\n        regex: /^\\/{4,}\\s*$/,\n        next: \"dissallowDelimitedBlock\"\n      }, {\n        token: \"doc.comment\",\n        regex: '^.*$'\n      }],\n      \"tableBlock\": [{\n        token: \"tableBlock\",\n        regex: /^\\s*\\|={3,}\\s*$/,\n        next: \"dissallowDelimitedBlock\"\n      }, {\n        token: \"tableBlock\",\n        regex: /^\\s*!={3,}\\s*$/,\n        next: \"innerTableBlock\"\n      }, {\n        token: \"tableBlock\",\n        regex: /\\|/\n      }, {\n        include: \"text\",\n        noEscape: true\n      }],\n      \"innerTableBlock\": [{\n        token: \"tableBlock\",\n        regex: /^\\s*!={3,}\\s*$/,\n        next: \"tableBlock\"\n      }, {\n        token: \"tableBlock\",\n        regex: /^\\s*|={3,}\\s*$/,\n        next: \"dissallowDelimitedBlock\"\n      }, {\n        token: \"tableBlock\",\n        regex: /!/\n      }],\n      \"macros\": [{\n        token: \"macro\",\n        regex: /{[\\w\\-$]+}/\n      }, {\n        token: [\"text\", \"string\", \"text\", \"constant.character\", \"text\"],\n        regex: /({)([\\w\\-$]+)(:)?(.+)?(})/\n      }, {\n        token: [\"text\", \"markup.list.macro\", \"keyword\", \"string\"],\n        regex: /(\\w+)(footnote(?:ref)?::?)([^\\s\\[]+)?(\\[.*?\\])?/\n      }, {\n        token: [\"markup.list.macro\", \"keyword\", \"string\"],\n        regex: /([a-zA-Z\\-][\\w\\.\\/\\-]*::?)([^\\s\\[]+)(\\[.*?\\])?/\n      }, {\n        token: [\"markup.list.macro\", \"keyword\"],\n        regex: /([a-zA-Z\\-][\\w\\.\\/\\-]+::?)(\\[.*?\\])/\n      }, {\n        token: \"keyword\",\n        regex: /^:.+?:(?= |$)/\n      }],\n      \"quotes\": [{\n        token: \"string.italic\",\n        regex: /__[^_\\s].*?__/\n      }, {\n        token: \"string.italic\",\n        regex: quoteRule(\"_\")\n      }, {\n        token: \"keyword.bold\",\n        regex: /\\*\\*[^*\\s].*?\\*\\*/\n      }, {\n        token: \"keyword.bold\",\n        regex: quoteRule(\"\\\\*\")\n      }, {\n        token: \"literal\",\n        regex: quoteRule(\"\\\\+\")\n      }, {\n        token: \"literal\",\n        regex: /\\+\\+[^+\\s].*?\\+\\+/\n      }, {\n        token: \"literal\",\n        regex: /\\$\\$.+?\\$\\$/\n      }, {\n        token: \"literal\",\n        regex: quoteRule(\"`\")\n      }, {\n        token: \"keyword\",\n        regex: quoteRule(\"^\")\n      }, {\n        token: \"keyword\",\n        regex: quoteRule(\"~\")\n      }, {\n        token: \"keyword\",\n        regex: /##?/\n      }, {\n        token: \"keyword\",\n        regex: /(?:\\B|^)``|\\b''/\n      }]\n    };\n    function quoteRule(ch) {\n      var prefix = /\\w/.test(ch) ? \"\\\\b\" : \"(?:\\\\B|^)\";\n      return prefix + ch + \"[^\" + ch + \"].*?\" + ch + \"(?![\\\\w*])\";\n    }\n    var tokenMap = {\n      macro: \"constant.character\",\n      tableBlock: \"doc.comment\",\n      titleUnderline: \"markup.heading\",\n      singleLineTitle: \"markup.heading\",\n      pageBreak: \"string\",\n      option: \"string.regexp\",\n      otherBlock: \"markup.list\",\n      literal: \"support.function\",\n      optionalTitle: \"constant.numeric\",\n      escape: \"constant.language.escape\",\n      link: \"markup.underline.list\"\n    };\n    for (var state in this.$rules) {\n      var stateRules = this.$rules[state];\n      for (var i = stateRules.length; i--;) {\n        var rule = stateRules[i];\n        if (rule.include || typeof rule == \"string\") {\n          var args = [i, 1].concat(this.$rules[rule.include || rule]);\n          if (rule.noEscape) {\n            args = args.filter(function (x) {\n              return !x.next;\n            });\n          }\n          stateRules.splice.apply(stateRules, args);\n        } else if (rule.token in tokenMap) {\n          rule.token = tokenMap[rule.token];\n        }\n      }\n    }\n  };\n  oop.inherits(AsciidocHighlightRules, TextHighlightRules);\n  exports.AsciidocHighlightRules = AsciidocHighlightRules;\n});\nace.define(\"ace/mode/folding/asciidoc\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var Range = require(\"../../range\").Range;\n  var FoldMode = exports.FoldMode = function () {};\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /^(?:\\|={10,}|[\\.\\/=\\-~^+]{4,}\\s*$|={1,5} )/;\n    this.singleLineHeadingRe = /^={1,5}(?=\\s+\\S)/;\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      if (!this.foldingStartMarker.test(line)) return \"\";\n      if (line[0] == \"=\") {\n        if (this.singleLineHeadingRe.test(line)) return \"start\";\n        if (session.getLine(row - 1).length != session.getLine(row).length) return \"\";\n        return \"start\";\n      }\n      if (session.bgTokenizer.getState(row) == \"dissallowDelimitedBlock\") return \"end\";\n      return \"start\";\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var startColumn = line.length;\n      var maxRow = session.getLength();\n      var startRow = row;\n      var endRow = row;\n      if (!line.match(this.foldingStartMarker)) return;\n      var token;\n      function getTokenType(row) {\n        token = session.getTokens(row)[0];\n        return token && token.type;\n      }\n      var levels = [\"=\", \"-\", \"~\", \"^\", \"+\"];\n      var heading = \"markup.heading\";\n      var singleLineHeadingRe = this.singleLineHeadingRe;\n      function getLevel() {\n        var match = token.value.match(singleLineHeadingRe);\n        if (match) return match[0].length;\n        var level = levels.indexOf(token.value[0]) + 1;\n        if (level == 1) {\n          if (session.getLine(row - 1).length != session.getLine(row).length) return Infinity;\n        }\n        return level;\n      }\n      if (getTokenType(row) == heading) {\n        var startHeadingLevel = getLevel();\n        while (++row < maxRow) {\n          if (getTokenType(row) != heading) continue;\n          var level = getLevel();\n          if (level <= startHeadingLevel) break;\n        }\n        var isSingleLineHeading = token && token.value.match(this.singleLineHeadingRe);\n        endRow = isSingleLineHeading ? row - 1 : row - 2;\n        if (endRow > startRow) {\n          while (endRow > startRow && (!getTokenType(endRow) || token.value[0] == \"[\")) endRow--;\n        }\n        if (endRow > startRow) {\n          var endColumn = session.getLine(endRow).length;\n          return new Range(startRow, startColumn, endRow, endColumn);\n        }\n      } else {\n        var state = session.bgTokenizer.getState(row);\n        if (state == \"dissallowDelimitedBlock\") {\n          while (row-- > 0) {\n            if (session.bgTokenizer.getState(row).lastIndexOf(\"Block\") == -1) break;\n          }\n          endRow = row + 1;\n          if (endRow < startRow) {\n            var endColumn = session.getLine(row).length;\n            return new Range(endRow, 5, startRow, startColumn - 5);\n          }\n        } else {\n          while (++row < maxRow) {\n            if (session.bgTokenizer.getState(row) == \"dissallowDelimitedBlock\") break;\n          }\n          endRow = row;\n          if (endRow > startRow) {\n            var endColumn = session.getLine(row).length;\n            return new Range(startRow, 5, endRow, endColumn - 5);\n          }\n        }\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/asciidoc\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/asciidoc_highlight_rules\", \"ace/mode/folding/asciidoc\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var AsciidocHighlightRules = require(\"./asciidoc_highlight_rules\").AsciidocHighlightRules;\n  var AsciidocFoldMode = require(\"./folding/asciidoc\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = AsciidocHighlightRules;\n    this.foldingRules = new AsciidocFoldMode();\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.type = \"text\";\n    this.getNextLineIndent = function (state, line, tab) {\n      if (state == \"listblock\") {\n        var match = /^((?:.+)?)([-+*][ ]+)/.exec(line);\n        if (match) {\n          return new Array(match[1].length + 1).join(\" \") + match[2];\n        } else {\n          return \"\";\n        }\n      } else {\n        return this.$getIndent(line);\n      }\n    };\n    this.$id = \"ace/mode/asciidoc\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/asciidoc\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","AsciidocHighlightRules","identifierRe","$rules","token","regex","next","include","noEscape","quoteRule","ch","prefix","test","tokenMap","macro","tableBlock","titleUnderline","singleLineTitle","pageBreak","option","otherBlock","literal","optionalTitle","escape","link","state","stateRules","i","length","rule","args","concat","filter","x","splice","apply","inherits","BaseFoldMode","FoldMode","Range","foldingStartMarker","singleLineHeadingRe","getFoldWidget","session","foldStyle","row","line","getLine","bgTokenizer","getState","getFoldWidgetRange","startColumn","maxRow","getLength","startRow","endRow","match","getTokenType","getTokens","type","levels","heading","getLevel","value","level","indexOf","Infinity","startHeadingLevel","isSingleLineHeading","endColumn","lastIndexOf","call","prototype","TextMode","Mode","AsciidocFoldMode","HighlightRules","foldingRules","getNextLineIndent","tab","exec","Array","join","$getIndent","$id","m"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-asciidoc.js"],"sourcesContent":["ace.define(\"ace/mode/asciidoc_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar AsciidocHighlightRules = function () {\n    var identifierRe = \"[a-zA-Z\\u00a1-\\uffff]+\\\\b\";\n    this.$rules = {\n        \"start\": [\n            { token: \"empty\", regex: /$/ },\n            { token: \"literal\", regex: /^\\.{4,}\\s*$/, next: \"listingBlock\" },\n            { token: \"literal\", regex: /^-{4,}\\s*$/, next: \"literalBlock\" },\n            { token: \"string\", regex: /^\\+{4,}\\s*$/, next: \"passthroughBlock\" },\n            { token: \"keyword\", regex: /^={4,}\\s*$/ },\n            { token: \"text\", regex: /^\\s*$/ },\n            { token: \"empty\", regex: \"\", next: \"dissallowDelimitedBlock\" }\n        ],\n        \"dissallowDelimitedBlock\": [\n            { include: \"paragraphEnd\" },\n            { token: \"comment\", regex: '^//.+$' },\n            { token: \"keyword\", regex: \"^(?:NOTE|TIP|IMPORTANT|WARNING|CAUTION):\" },\n            { include: \"listStart\" },\n            { token: \"literal\", regex: /^\\s+.+$/, next: \"indentedBlock\" },\n            { token: \"empty\", regex: \"\", next: \"text\" }\n        ],\n        \"paragraphEnd\": [\n            { token: \"doc.comment\", regex: /^\\/{4,}\\s*$/, next: \"commentBlock\" },\n            { token: \"tableBlock\", regex: /^\\s*[|!]=+\\s*$/, next: \"tableBlock\" },\n            { token: \"keyword\", regex: /^(?:--|''')\\s*$/, next: \"start\" },\n            { token: \"option\", regex: /^\\[.*\\]\\s*$/, next: \"start\" },\n            { token: \"pageBreak\", regex: /^>{3,}$/, next: \"start\" },\n            { token: \"literal\", regex: /^\\.{4,}\\s*$/, next: \"listingBlock\" },\n            { token: \"titleUnderline\", regex: /^(?:={2,}|-{2,}|~{2,}|\\^{2,}|\\+{2,})\\s*$/, next: \"start\" },\n            { token: \"singleLineTitle\", regex: /^={1,5}\\s+\\S.*$/, next: \"start\" },\n            { token: \"otherBlock\", regex: /^(?:\\*{2,}|_{2,})\\s*$/, next: \"start\" },\n            { token: \"optionalTitle\", regex: /^\\.[^.\\s].+$/, next: \"start\" }\n        ],\n        \"listStart\": [\n            { token: \"keyword\", regex: /^\\s*(?:\\d+\\.|[a-zA-Z]\\.|[ixvmIXVM]+\\)|\\*{1,5}|-|\\.{1,5})\\s/, next: \"listText\" },\n            { token: \"meta.tag\", regex: /^.+(?::{2,4}|;;)(?: |$)/, next: \"listText\" },\n            { token: \"support.function.list.callout\", regex: /^(?:<\\d+>|\\d+>|>) /, next: \"text\" },\n            { token: \"keyword\", regex: /^\\+\\s*$/, next: \"start\" }\n        ],\n        \"text\": [\n            { token: [\"link\", \"variable.language\"], regex: /((?:https?:\\/\\/|ftp:\\/\\/|file:\\/\\/|mailto:|callto:)[^\\s\\[]+)(\\[.*?\\])/ },\n            { token: \"link\", regex: /(?:https?:\\/\\/|ftp:\\/\\/|file:\\/\\/|mailto:|callto:)[^\\s\\[]+/ },\n            { token: \"link\", regex: /\\b[\\w\\.\\/\\-]+@[\\w\\.\\/\\-]+\\b/ },\n            { include: \"macros\" },\n            { include: \"paragraphEnd\" },\n            { token: \"literal\", regex: /\\+{3,}/, next: \"smallPassthrough\" },\n            { token: \"escape\", regex: /\\((?:C|TM|R)\\)|\\.{3}|->|<-|=>|<=|&#(?:\\d+|x[a-fA-F\\d]+);|(?: |^)--(?=\\s+\\S)/ },\n            { token: \"escape\", regex: /\\\\[_*'`+#]|\\\\{2}[_*'`+#]{2}/ },\n            { token: \"keyword\", regex: /\\s\\+$/ },\n            { token: \"text\", regex: identifierRe },\n            { token: [\"keyword\", \"string\", \"keyword\"],\n                regex: /(<<[\\w\\d\\-$]+,)(.*?)(>>|$)/ },\n            { token: \"keyword\", regex: /<<[\\w\\d\\-$]+,?|>>/ },\n            { token: \"constant.character\", regex: /\\({2,3}.*?\\){2,3}/ },\n            { token: \"keyword\", regex: /\\[\\[.+?\\]\\]/ },\n            { token: \"support\", regex: /^\\[{3}[\\w\\d =\\-]+\\]{3}/ },\n            { include: \"quotes\" },\n            { token: \"empty\", regex: /^\\s*$/, next: \"start\" }\n        ],\n        \"listText\": [\n            { include: \"listStart\" },\n            { include: \"text\" }\n        ],\n        \"indentedBlock\": [\n            { token: \"literal\", regex: /^[\\s\\w].+$/, next: \"indentedBlock\" },\n            { token: \"literal\", regex: \"\", next: \"start\" }\n        ],\n        \"listingBlock\": [\n            { token: \"literal\", regex: /^\\.{4,}\\s*$/, next: \"dissallowDelimitedBlock\" },\n            { token: \"constant.numeric\", regex: '<\\\\d+>' },\n            { token: \"literal\", regex: '[^<]+' },\n            { token: \"literal\", regex: '<' }\n        ],\n        \"literalBlock\": [\n            { token: \"literal\", regex: /^-{4,}\\s*$/, next: \"dissallowDelimitedBlock\" },\n            { token: \"constant.numeric\", regex: '<\\\\d+>' },\n            { token: \"literal\", regex: '[^<]+' },\n            { token: \"literal\", regex: '<' }\n        ],\n        \"passthroughBlock\": [\n            { token: \"literal\", regex: /^\\+{4,}\\s*$/, next: \"dissallowDelimitedBlock\" },\n            { token: \"literal\", regex: identifierRe + \"|\\\\d+\" },\n            { include: \"macros\" },\n            { token: \"literal\", regex: \".\" }\n        ],\n        \"smallPassthrough\": [\n            { token: \"literal\", regex: /[+]{3,}/, next: \"dissallowDelimitedBlock\" },\n            { token: \"literal\", regex: /^\\s*$/, next: \"dissallowDelimitedBlock\" },\n            { token: \"literal\", regex: identifierRe + \"|\\\\d+\" },\n            { include: \"macros\" }\n        ],\n        \"commentBlock\": [\n            { token: \"doc.comment\", regex: /^\\/{4,}\\s*$/, next: \"dissallowDelimitedBlock\" },\n            { token: \"doc.comment\", regex: '^.*$' }\n        ],\n        \"tableBlock\": [\n            { token: \"tableBlock\", regex: /^\\s*\\|={3,}\\s*$/, next: \"dissallowDelimitedBlock\" },\n            { token: \"tableBlock\", regex: /^\\s*!={3,}\\s*$/, next: \"innerTableBlock\" },\n            { token: \"tableBlock\", regex: /\\|/ },\n            { include: \"text\", noEscape: true }\n        ],\n        \"innerTableBlock\": [\n            { token: \"tableBlock\", regex: /^\\s*!={3,}\\s*$/, next: \"tableBlock\" },\n            { token: \"tableBlock\", regex: /^\\s*|={3,}\\s*$/, next: \"dissallowDelimitedBlock\" },\n            { token: \"tableBlock\", regex: /!/ }\n        ],\n        \"macros\": [\n            { token: \"macro\", regex: /{[\\w\\-$]+}/ },\n            { token: [\"text\", \"string\", \"text\", \"constant.character\", \"text\"], regex: /({)([\\w\\-$]+)(:)?(.+)?(})/ },\n            { token: [\"text\", \"markup.list.macro\", \"keyword\", \"string\"], regex: /(\\w+)(footnote(?:ref)?::?)([^\\s\\[]+)?(\\[.*?\\])?/ },\n            { token: [\"markup.list.macro\", \"keyword\", \"string\"], regex: /([a-zA-Z\\-][\\w\\.\\/\\-]*::?)([^\\s\\[]+)(\\[.*?\\])?/ },\n            { token: [\"markup.list.macro\", \"keyword\"], regex: /([a-zA-Z\\-][\\w\\.\\/\\-]+::?)(\\[.*?\\])/ },\n            { token: \"keyword\", regex: /^:.+?:(?= |$)/ }\n        ],\n        \"quotes\": [\n            { token: \"string.italic\", regex: /__[^_\\s].*?__/ },\n            { token: \"string.italic\", regex: quoteRule(\"_\") },\n            { token: \"keyword.bold\", regex: /\\*\\*[^*\\s].*?\\*\\*/ },\n            { token: \"keyword.bold\", regex: quoteRule(\"\\\\*\") },\n            { token: \"literal\", regex: quoteRule(\"\\\\+\") },\n            { token: \"literal\", regex: /\\+\\+[^+\\s].*?\\+\\+/ },\n            { token: \"literal\", regex: /\\$\\$.+?\\$\\$/ },\n            { token: \"literal\", regex: quoteRule(\"`\") },\n            { token: \"keyword\", regex: quoteRule(\"^\") },\n            { token: \"keyword\", regex: quoteRule(\"~\") },\n            { token: \"keyword\", regex: /##?/ },\n            { token: \"keyword\", regex: /(?:\\B|^)``|\\b''/ }\n        ]\n    };\n    function quoteRule(ch) {\n        var prefix = /\\w/.test(ch) ? \"\\\\b\" : \"(?:\\\\B|^)\";\n        return prefix + ch + \"[^\" + ch + \"].*?\" + ch + \"(?![\\\\w*])\";\n    }\n    var tokenMap = {\n        macro: \"constant.character\",\n        tableBlock: \"doc.comment\",\n        titleUnderline: \"markup.heading\",\n        singleLineTitle: \"markup.heading\",\n        pageBreak: \"string\",\n        option: \"string.regexp\",\n        otherBlock: \"markup.list\",\n        literal: \"support.function\",\n        optionalTitle: \"constant.numeric\",\n        escape: \"constant.language.escape\",\n        link: \"markup.underline.list\"\n    };\n    for (var state in this.$rules) {\n        var stateRules = this.$rules[state];\n        for (var i = stateRules.length; i--;) {\n            var rule = stateRules[i];\n            if (rule.include || typeof rule == \"string\") {\n                var args = [i, 1].concat(this.$rules[rule.include || rule]);\n                if (rule.noEscape) {\n                    args = args.filter(function (x) {\n                        return !x.next;\n                    });\n                }\n                stateRules.splice.apply(stateRules, args);\n            }\n            else if (rule.token in tokenMap) {\n                rule.token = tokenMap[rule.token];\n            }\n        }\n    }\n};\noop.inherits(AsciidocHighlightRules, TextHighlightRules);\nexports.AsciidocHighlightRules = AsciidocHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/asciidoc\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar Range = require(\"../../range\").Range;\nvar FoldMode = exports.FoldMode = function () { };\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /^(?:\\|={10,}|[\\.\\/=\\-~^+]{4,}\\s*$|={1,5} )/;\n    this.singleLineHeadingRe = /^={1,5}(?=\\s+\\S)/;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (!this.foldingStartMarker.test(line))\n            return \"\";\n        if (line[0] == \"=\") {\n            if (this.singleLineHeadingRe.test(line))\n                return \"start\";\n            if (session.getLine(row - 1).length != session.getLine(row).length)\n                return \"\";\n            return \"start\";\n        }\n        if (session.bgTokenizer.getState(row) == \"dissallowDelimitedBlock\")\n            return \"end\";\n        return \"start\";\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n        if (!line.match(this.foldingStartMarker))\n            return;\n        var token;\n        function getTokenType(row) {\n            token = session.getTokens(row)[0];\n            return token && token.type;\n        }\n        var levels = [\"=\", \"-\", \"~\", \"^\", \"+\"];\n        var heading = \"markup.heading\";\n        var singleLineHeadingRe = this.singleLineHeadingRe;\n        function getLevel() {\n            var match = token.value.match(singleLineHeadingRe);\n            if (match)\n                return match[0].length;\n            var level = levels.indexOf(token.value[0]) + 1;\n            if (level == 1) {\n                if (session.getLine(row - 1).length != session.getLine(row).length)\n                    return Infinity;\n            }\n            return level;\n        }\n        if (getTokenType(row) == heading) {\n            var startHeadingLevel = getLevel();\n            while (++row < maxRow) {\n                if (getTokenType(row) != heading)\n                    continue;\n                var level = getLevel();\n                if (level <= startHeadingLevel)\n                    break;\n            }\n            var isSingleLineHeading = token && token.value.match(this.singleLineHeadingRe);\n            endRow = isSingleLineHeading ? row - 1 : row - 2;\n            if (endRow > startRow) {\n                while (endRow > startRow && (!getTokenType(endRow) || token.value[0] == \"[\"))\n                    endRow--;\n            }\n            if (endRow > startRow) {\n                var endColumn = session.getLine(endRow).length;\n                return new Range(startRow, startColumn, endRow, endColumn);\n            }\n        }\n        else {\n            var state = session.bgTokenizer.getState(row);\n            if (state == \"dissallowDelimitedBlock\") {\n                while (row-- > 0) {\n                    if (session.bgTokenizer.getState(row).lastIndexOf(\"Block\") == -1)\n                        break;\n                }\n                endRow = row + 1;\n                if (endRow < startRow) {\n                    var endColumn = session.getLine(row).length;\n                    return new Range(endRow, 5, startRow, startColumn - 5);\n                }\n            }\n            else {\n                while (++row < maxRow) {\n                    if (session.bgTokenizer.getState(row) == \"dissallowDelimitedBlock\")\n                        break;\n                }\n                endRow = row;\n                if (endRow > startRow) {\n                    var endColumn = session.getLine(row).length;\n                    return new Range(startRow, 5, endRow, endColumn - 5);\n                }\n            }\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/asciidoc\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/asciidoc_highlight_rules\",\"ace/mode/folding/asciidoc\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar AsciidocHighlightRules = require(\"./asciidoc_highlight_rules\").AsciidocHighlightRules;\nvar AsciidocFoldMode = require(\"./folding/asciidoc\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = AsciidocHighlightRules;\n    this.foldingRules = new AsciidocFoldMode();\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.type = \"text\";\n    this.getNextLineIndent = function (state, line, tab) {\n        if (state == \"listblock\") {\n            var match = /^((?:.+)?)([-+*][ ]+)/.exec(line);\n            if (match) {\n                return new Array(match[1].length + 1).join(\" \") + match[2];\n            }\n            else {\n                return \"\";\n            }\n        }\n        else {\n            return this.$getIndent(line);\n        }\n    };\n    this.$id = \"ace/mode/asciidoc\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/asciidoc\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}