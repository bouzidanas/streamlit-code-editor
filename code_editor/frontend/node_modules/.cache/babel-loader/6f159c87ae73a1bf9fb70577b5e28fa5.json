{"ast":null,"code":"// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { BaseVector } from './base';\n/** @ignore */\nexport class UnionVector extends BaseVector {\n  get typeIdToChildIndex() {\n    return this.data.type.typeIdToChildIndex;\n  }\n}\n/** @ignore */\nexport class DenseUnionVector extends UnionVector {\n  get valueOffsets() {\n    return this.data.valueOffsets;\n  }\n}\n/** @ignore */\nexport class SparseUnionVector extends UnionVector {}","map":{"version":3,"names":["BaseVector","UnionVector","typeIdToChildIndex","data","type","DenseUnionVector","valueOffsets","SparseUnionVector"],"sources":["vector/union.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Union, DenseUnion, SparseUnion} from '../type';\n\n/** @ignore */\nexport class UnionVector<T extends Union = Union> extends BaseVector<T> {\n    public get typeIdToChildIndex() { return this.data.type.typeIdToChildIndex; }\n}\n\n/** @ignore */\nexport class DenseUnionVector extends UnionVector<DenseUnion> {\n    public get valueOffsets() { return this.data.valueOffsets!; }\n}\n\n/** @ignore */\nexport class SparseUnionVector extends UnionVector<SparseUnion> {}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,UAAU,QAAQ,QAAQ;AAGnC;AACA,OAAM,MAAOC,WAAqC,SAAQD,UAAa;EACnE,IAAWE,kBAAkBA,CAAA;IAAK,OAAO,IAAI,CAACC,IAAI,CAACC,IAAI,CAACF,kBAAkB;EAAE;;AAGhF;AACA,OAAM,MAAOG,gBAAiB,SAAQJ,WAAuB;EACzD,IAAWK,YAAYA,CAAA;IAAK,OAAO,IAAI,CAACH,IAAI,CAACG,YAAa;EAAE;;AAGhE;AACA,OAAM,MAAOC,iBAAkB,SAAQN,WAAwB","ignoreList":[]},"metadata":{},"sourceType":"module"}