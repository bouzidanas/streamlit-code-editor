{"ast":null,"code":"/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport React from \"react\";\nimport { Streamlit } from \"./streamlit\";\n/**\n * Optional Streamlit React-based component base class.\n *\n * You are not required to extend this base class to create a Streamlit\n * component. If you decide not to extend it, you should implement the\n * `componentDidMount` and `componentDidUpdate` functions in your own class,\n * so that your plugin properly resizes.\n */\nvar StreamlitComponentBase = /** @class */function (_super) {\n  __extends(StreamlitComponentBase, _super);\n  function StreamlitComponentBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  StreamlitComponentBase.prototype.componentDidMount = function () {\n    // After we're rendered for the first time, tell Streamlit that our height\n    // has changed.\n    Streamlit.setFrameHeight();\n  };\n  StreamlitComponentBase.prototype.componentDidUpdate = function () {\n    // After we're updated, tell Streamlit that our height may have changed.\n    Streamlit.setFrameHeight();\n  };\n  return StreamlitComponentBase;\n}(React.PureComponent);\nexport { StreamlitComponentBase };\n/**\n * Wrapper for React-based Streamlit components.\n *\n * Bootstraps the communication interface between Streamlit and the component.\n */\nexport function withStreamlitConnection(WrappedComponent) {\n  var ComponentWrapper = /** @class */function (_super) {\n    __extends(ComponentWrapper, _super);\n    function ComponentWrapper(props) {\n      var _this = _super.call(this, props) || this;\n      _this.componentDidMount = function () {\n        // Set up event listeners, and signal to Streamlit that we're ready.\n        // We won't render the component until we receive the first RENDER_EVENT.\n        Streamlit.events.addEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n        Streamlit.setComponentReady();\n      };\n      _this.componentDidUpdate = function () {\n        // If our child threw an error, we display it in render(). In this\n        // case, the child won't be mounted and therefore won't call\n        // `setFrameHeight` on its own. We do it here so that the rendered\n        // error will be visible.\n        if (_this.state.componentError != null) {\n          Streamlit.setFrameHeight();\n        }\n      };\n      _this.componentWillUnmount = function () {\n        Streamlit.events.removeEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n      };\n      /**\n       * Streamlit is telling this component to redraw.\n       * We save the render data in State, so that it can be passed to the\n       * component in our own render() function.\n       */\n      _this.onRenderEvent = function (event) {\n        // Update our state with the newest render data\n        var renderEvent = event;\n        _this.setState({\n          renderData: renderEvent.detail\n        });\n      };\n      _this.render = function () {\n        // If our wrapped component threw an error, display it.\n        if (_this.state.componentError != null) {\n          return React.createElement(\"div\", null, React.createElement(\"h1\", null, \"Component Error\"), React.createElement(\"span\", null, _this.state.componentError.message));\n        }\n        // Don't render until we've gotten our first RENDER_EVENT from Streamlit.\n        if (_this.state.renderData == null) {\n          return null;\n        }\n        return React.createElement(WrappedComponent, {\n          width: window.innerWidth,\n          disabled: _this.state.renderData.disabled,\n          args: _this.state.renderData.args,\n          theme: _this.state.renderData.theme\n        });\n      };\n      _this.state = {\n        renderData: undefined,\n        componentError: undefined\n      };\n      return _this;\n    }\n    /**\n     * Error boundary function. This will be called if our wrapped\n     * component throws an error. We store the caught error in our state,\n     * and display it in the next render().\n     */\n    ComponentWrapper.getDerivedStateFromError = function (error) {\n      return {\n        componentError: error\n      };\n    };\n    return ComponentWrapper;\n  }(React.PureComponent);\n  return hoistNonReactStatics(ComponentWrapper, WrappedComponent);\n}","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","hoistNonReactStatics","React","Streamlit","StreamlitComponentBase","_super","apply","arguments","componentDidMount","setFrameHeight","componentDidUpdate","PureComponent","withStreamlitConnection","WrappedComponent","ComponentWrapper","props","_this","call","events","addEventListener","RENDER_EVENT","onRenderEvent","setComponentReady","state","componentError","componentWillUnmount","removeEventListener","event","renderEvent","setState","renderData","detail","render","createElement","message","width","window","innerWidth","disabled","args","theme","undefined","getDerivedStateFromError","error"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/streamlit-component-lib/dist/StreamlitReact.js"],"sourcesContent":["/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport React from \"react\";\nimport { Streamlit } from \"./streamlit\";\n/**\n * Optional Streamlit React-based component base class.\n *\n * You are not required to extend this base class to create a Streamlit\n * component. If you decide not to extend it, you should implement the\n * `componentDidMount` and `componentDidUpdate` functions in your own class,\n * so that your plugin properly resizes.\n */\nvar StreamlitComponentBase = /** @class */ (function (_super) {\n    __extends(StreamlitComponentBase, _super);\n    function StreamlitComponentBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StreamlitComponentBase.prototype.componentDidMount = function () {\n        // After we're rendered for the first time, tell Streamlit that our height\n        // has changed.\n        Streamlit.setFrameHeight();\n    };\n    StreamlitComponentBase.prototype.componentDidUpdate = function () {\n        // After we're updated, tell Streamlit that our height may have changed.\n        Streamlit.setFrameHeight();\n    };\n    return StreamlitComponentBase;\n}(React.PureComponent));\nexport { StreamlitComponentBase };\n/**\n * Wrapper for React-based Streamlit components.\n *\n * Bootstraps the communication interface between Streamlit and the component.\n */\nexport function withStreamlitConnection(WrappedComponent) {\n    var ComponentWrapper = /** @class */ (function (_super) {\n        __extends(ComponentWrapper, _super);\n        function ComponentWrapper(props) {\n            var _this = _super.call(this, props) || this;\n            _this.componentDidMount = function () {\n                // Set up event listeners, and signal to Streamlit that we're ready.\n                // We won't render the component until we receive the first RENDER_EVENT.\n                Streamlit.events.addEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n                Streamlit.setComponentReady();\n            };\n            _this.componentDidUpdate = function () {\n                // If our child threw an error, we display it in render(). In this\n                // case, the child won't be mounted and therefore won't call\n                // `setFrameHeight` on its own. We do it here so that the rendered\n                // error will be visible.\n                if (_this.state.componentError != null) {\n                    Streamlit.setFrameHeight();\n                }\n            };\n            _this.componentWillUnmount = function () {\n                Streamlit.events.removeEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n            };\n            /**\n             * Streamlit is telling this component to redraw.\n             * We save the render data in State, so that it can be passed to the\n             * component in our own render() function.\n             */\n            _this.onRenderEvent = function (event) {\n                // Update our state with the newest render data\n                var renderEvent = event;\n                _this.setState({ renderData: renderEvent.detail });\n            };\n            _this.render = function () {\n                // If our wrapped component threw an error, display it.\n                if (_this.state.componentError != null) {\n                    return (React.createElement(\"div\", null,\n                        React.createElement(\"h1\", null, \"Component Error\"),\n                        React.createElement(\"span\", null, _this.state.componentError.message)));\n                }\n                // Don't render until we've gotten our first RENDER_EVENT from Streamlit.\n                if (_this.state.renderData == null) {\n                    return null;\n                }\n                return (React.createElement(WrappedComponent, { width: window.innerWidth, disabled: _this.state.renderData.disabled, args: _this.state.renderData.args, theme: _this.state.renderData.theme }));\n            };\n            _this.state = {\n                renderData: undefined,\n                componentError: undefined\n            };\n            return _this;\n        }\n        /**\n         * Error boundary function. This will be called if our wrapped\n         * component throws an error. We store the caught error in our state,\n         * and display it in the next render().\n         */\n        ComponentWrapper.getDerivedStateFromError = function (error) {\n            return { componentError: error };\n        };\n        return ComponentWrapper;\n    }(React.PureComponent));\n    return hoistNonReactStatics(ComponentWrapper, WrappedComponent);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}