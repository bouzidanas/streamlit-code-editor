{"ast":null,"code":"ace.define(\"ace/mode/c9search_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/lib/lang\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var lang = require(\"../lib/lang\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  function safeCreateRegexp(source, flag) {\n    try {\n      return new RegExp(source, flag);\n    } catch (e) {}\n  }\n  var C9SearchHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        tokenNames: [\"c9searchresults.constant.numeric\", \"c9searchresults.text\", \"c9searchresults.text\", \"c9searchresults.keyword\"],\n        regex: /(^\\s+[0-9]+)(:)(\\d*\\s?)([^\\r\\n]+)/,\n        onMatch: function (val, state, stack) {\n          var values = this.splitRegex.exec(val);\n          var types = this.tokenNames;\n          var tokens = [{\n            type: types[0],\n            value: values[1]\n          }, {\n            type: types[1],\n            value: values[2]\n          }];\n          if (values[3]) {\n            if (values[3] == \" \") tokens[1] = {\n              type: types[1],\n              value: values[2] + \" \"\n            };else tokens.push({\n              type: types[1],\n              value: values[3]\n            });\n          }\n          var regex = stack[1];\n          var str = values[4];\n          var m;\n          var last = 0;\n          if (regex && regex.exec) {\n            regex.lastIndex = 0;\n            while (m = regex.exec(str)) {\n              var skipped = str.substring(last, m.index);\n              last = regex.lastIndex;\n              if (skipped) tokens.push({\n                type: types[2],\n                value: skipped\n              });\n              if (m[0]) tokens.push({\n                type: types[3],\n                value: m[0]\n              });else if (!skipped) break;\n            }\n          }\n          if (last < str.length) tokens.push({\n            type: types[2],\n            value: str.substr(last)\n          });\n          return tokens;\n        }\n      }, {\n        regex: \"^Searching for [^\\\\r\\\\n]*$\",\n        onMatch: function (val, state, stack) {\n          var parts = val.split(\"\\x01\");\n          if (parts.length < 3) return \"text\";\n          var options, search;\n          var i = 0;\n          var tokens = [{\n            value: parts[i++] + \"'\",\n            type: \"text\"\n          }, {\n            value: search = parts[i++],\n            type: \"text\" // \"c9searchresults.keyword\"\n          }, {\n            value: \"'\" + parts[i++],\n            type: \"text\"\n          }];\n          if (parts[2] !== \" in\") {\n            tokens.push({\n              value: \"'\" + parts[i++] + \"'\",\n              type: \"text\"\n            }, {\n              value: parts[i++],\n              type: \"text\"\n            });\n          }\n          tokens.push({\n            value: \" \" + parts[i++] + \" \",\n            type: \"text\"\n          });\n          if (parts[i + 1]) {\n            options = parts[i + 1];\n            tokens.push({\n              value: \"(\" + parts[i + 1] + \")\",\n              type: \"text\"\n            });\n            i += 1;\n          } else {\n            i -= 1;\n          }\n          while (i++ < parts.length) {\n            parts[i] && tokens.push({\n              value: parts[i],\n              type: \"text\"\n            });\n          }\n          if (search) {\n            if (!/regex/.test(options)) search = lang.escapeRegExp(search);\n            if (/whole/.test(options)) search = \"\\\\b\" + search + \"\\\\b\";\n          }\n          var regex = search && safeCreateRegexp(\"(\" + search + \")\", / sensitive/.test(options) ? \"g\" : \"ig\");\n          if (regex) {\n            stack[0] = state;\n            stack[1] = regex;\n          }\n          return tokens;\n        }\n      }, {\n        regex: \"^(?=Found \\\\d+ matches)\",\n        token: \"text\",\n        next: \"numbers\"\n      }, {\n        token: \"string\",\n        // single line\n        regex: \"^\\\\S:?[^:]+\",\n        next: \"numbers\"\n      }],\n      numbers: [{\n        regex: \"\\\\d+\",\n        token: \"constant.numeric\"\n      }, {\n        regex: \"$\",\n        token: \"text\",\n        next: \"start\"\n      }]\n    };\n    this.normalizeRules();\n  };\n  oop.inherits(C9SearchHighlightRules, TextHighlightRules);\n  exports.C9SearchHighlightRules = C9SearchHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n  var MatchingBraceOutdent = function () {};\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/folding/c9search\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Range = require(\"../../range\").Range;\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function () {};\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /^(\\S.*:|Searching for.*)$/;\n    this.foldingStopMarker = /^(\\s+|Found.*)$/;\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var lines = session.doc.getAllLines(row);\n      var line = lines[row];\n      var level1 = /^(Found.*|Searching for.*)$/;\n      var level2 = /^(\\S.*:|\\s*)$/;\n      var re = level1.test(line) ? level1 : level2;\n      var startRow = row;\n      var endRow = row;\n      if (this.foldingStartMarker.test(line)) {\n        for (var i = row + 1, l = session.getLength(); i < l; i++) {\n          if (re.test(lines[i])) break;\n        }\n        endRow = i;\n      } else if (this.foldingStopMarker.test(line)) {\n        for (var i = row - 1; i >= 0; i--) {\n          line = lines[i];\n          if (re.test(line)) break;\n        }\n        startRow = i;\n      }\n      if (startRow != endRow) {\n        var col = line.length;\n        if (re === level1) col = line.search(/\\(Found[^)]+\\)$|$/);\n        return new Range(startRow, col, endRow, 0);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/c9search\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/c9search_highlight_rules\", \"ace/mode/matching_brace_outdent\", \"ace/mode/folding/c9search\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var C9SearchHighlightRules = require(\"./c9search_highlight_rules\").C9SearchHighlightRules;\n  var MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n  var C9StyleFoldMode = require(\"./folding/c9search\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = C9SearchHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.foldingRules = new C9StyleFoldMode();\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n    this.$id = \"ace/mode/c9search\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/c9search\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","lang","TextHighlightRules","safeCreateRegexp","source","flag","RegExp","e","C9SearchHighlightRules","$rules","tokenNames","regex","onMatch","val","state","stack","values","splitRegex","exec","types","tokens","type","value","push","str","m","last","lastIndex","skipped","substring","index","length","substr","parts","split","options","search","i","test","escapeRegExp","token","next","numbers","normalizeRules","inherits","Range","MatchingBraceOutdent","checkOutdent","line","input","autoOutdent","doc","row","getLine","match","column","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","BaseFoldMode","FoldMode","foldingStartMarker","foldingStopMarker","getFoldWidgetRange","session","foldStyle","lines","getAllLines","level1","level2","re","startRow","endRow","l","getLength","col","TextMode","Mode","C9StyleFoldMode","HighlightRules","$outdent","foldingRules","getNextLineIndent","tab","$id"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-c9search.js"],"sourcesContent":["ace.define(\"ace/mode/c9search_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar lang = require(\"../lib/lang\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nfunction safeCreateRegexp(source, flag) {\n    try {\n        return new RegExp(source, flag);\n    }\n    catch (e) { }\n}\nvar C9SearchHighlightRules = function () {\n    this.$rules = {\n        \"start\": [\n            {\n                tokenNames: [\"c9searchresults.constant.numeric\", \"c9searchresults.text\", \"c9searchresults.text\", \"c9searchresults.keyword\"],\n                regex: /(^\\s+[0-9]+)(:)(\\d*\\s?)([^\\r\\n]+)/,\n                onMatch: function (val, state, stack) {\n                    var values = this.splitRegex.exec(val);\n                    var types = this.tokenNames;\n                    var tokens = [{\n                            type: types[0],\n                            value: values[1]\n                        }, {\n                            type: types[1],\n                            value: values[2]\n                        }];\n                    if (values[3]) {\n                        if (values[3] == \" \")\n                            tokens[1] = { type: types[1], value: values[2] + \" \" };\n                        else\n                            tokens.push({ type: types[1], value: values[3] });\n                    }\n                    var regex = stack[1];\n                    var str = values[4];\n                    var m;\n                    var last = 0;\n                    if (regex && regex.exec) {\n                        regex.lastIndex = 0;\n                        while (m = regex.exec(str)) {\n                            var skipped = str.substring(last, m.index);\n                            last = regex.lastIndex;\n                            if (skipped)\n                                tokens.push({ type: types[2], value: skipped });\n                            if (m[0])\n                                tokens.push({ type: types[3], value: m[0] });\n                            else if (!skipped)\n                                break;\n                        }\n                    }\n                    if (last < str.length)\n                        tokens.push({ type: types[2], value: str.substr(last) });\n                    return tokens;\n                }\n            },\n            {\n                regex: \"^Searching for [^\\\\r\\\\n]*$\",\n                onMatch: function (val, state, stack) {\n                    var parts = val.split(\"\\x01\");\n                    if (parts.length < 3)\n                        return \"text\";\n                    var options, search;\n                    var i = 0;\n                    var tokens = [{\n                            value: parts[i++] + \"'\",\n                            type: \"text\"\n                        }, {\n                            value: search = parts[i++],\n                            type: \"text\" // \"c9searchresults.keyword\"\n                        }, {\n                            value: \"'\" + parts[i++],\n                            type: \"text\"\n                        }];\n                    if (parts[2] !== \" in\") {\n                        tokens.push({\n                            value: \"'\" + parts[i++] + \"'\",\n                            type: \"text\"\n                        }, {\n                            value: parts[i++],\n                            type: \"text\"\n                        });\n                    }\n                    tokens.push({\n                        value: \" \" + parts[i++] + \" \",\n                        type: \"text\"\n                    });\n                    if (parts[i + 1]) {\n                        options = parts[i + 1];\n                        tokens.push({\n                            value: \"(\" + parts[i + 1] + \")\",\n                            type: \"text\"\n                        });\n                        i += 1;\n                    }\n                    else {\n                        i -= 1;\n                    }\n                    while (i++ < parts.length) {\n                        parts[i] && tokens.push({\n                            value: parts[i],\n                            type: \"text\"\n                        });\n                    }\n                    if (search) {\n                        if (!/regex/.test(options))\n                            search = lang.escapeRegExp(search);\n                        if (/whole/.test(options))\n                            search = \"\\\\b\" + search + \"\\\\b\";\n                    }\n                    var regex = search && safeCreateRegexp(\"(\" + search + \")\", / sensitive/.test(options) ? \"g\" : \"ig\");\n                    if (regex) {\n                        stack[0] = state;\n                        stack[1] = regex;\n                    }\n                    return tokens;\n                }\n            },\n            {\n                regex: \"^(?=Found \\\\d+ matches)\",\n                token: \"text\",\n                next: \"numbers\"\n            },\n            {\n                token: \"string\", // single line\n                regex: \"^\\\\S:?[^:]+\",\n                next: \"numbers\"\n            }\n        ],\n        numbers: [{\n                regex: \"\\\\d+\",\n                token: \"constant.numeric\"\n            }, {\n                regex: \"$\",\n                token: \"text\",\n                next: \"start\"\n            }]\n    };\n    this.normalizeRules();\n};\noop.inherits(C9SearchHighlightRules, TextHighlightRules);\nexports.C9SearchHighlightRules = C9SearchHighlightRules;\n\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module){\"use strict\";\nvar Range = require(\"../range\").Range;\nvar MatchingBraceOutdent = function () { };\n(function () {\n    this.checkOutdent = function (line, input) {\n        if (!/^\\s+$/.test(line))\n            return false;\n        return /^\\s*\\}/.test(input);\n    };\n    this.autoOutdent = function (doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n        if (!match)\n            return 0;\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({ row: row, column: column });\n        if (!openBracePos || openBracePos.row == row)\n            return 0;\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n    this.$getIndent = function (line) {\n        return line.match(/^\\s*/)[0];\n    };\n}).call(MatchingBraceOutdent.prototype);\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n\n});\n\nace.define(\"ace/mode/folding/c9search\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function () { };\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /^(\\S.*:|Searching for.*)$/;\n    this.foldingStopMarker = /^(\\s+|Found.*)$/;\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n        var lines = session.doc.getAllLines(row);\n        var line = lines[row];\n        var level1 = /^(Found.*|Searching for.*)$/;\n        var level2 = /^(\\S.*:|\\s*)$/;\n        var re = level1.test(line) ? level1 : level2;\n        var startRow = row;\n        var endRow = row;\n        if (this.foldingStartMarker.test(line)) {\n            for (var i = row + 1, l = session.getLength(); i < l; i++) {\n                if (re.test(lines[i]))\n                    break;\n            }\n            endRow = i;\n        }\n        else if (this.foldingStopMarker.test(line)) {\n            for (var i = row - 1; i >= 0; i--) {\n                line = lines[i];\n                if (re.test(line))\n                    break;\n            }\n            startRow = i;\n        }\n        if (startRow != endRow) {\n            var col = line.length;\n            if (re === level1)\n                col = line.search(/\\(Found[^)]+\\)$|$/);\n            return new Range(startRow, col, endRow, 0);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/c9search\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/c9search_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/folding/c9search\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar C9SearchHighlightRules = require(\"./c9search_highlight_rules\").C9SearchHighlightRules;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar C9StyleFoldMode = require(\"./folding/c9search\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = C9SearchHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.foldingRules = new C9StyleFoldMode();\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.getNextLineIndent = function (state, line, tab) {\n        var indent = this.$getIndent(line);\n        return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n    this.autoOutdent = function (state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n    this.$id = \"ace/mode/c9search\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/c9search\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}