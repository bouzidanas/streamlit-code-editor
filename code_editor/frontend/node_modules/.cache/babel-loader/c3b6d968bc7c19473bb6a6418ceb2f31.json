{"ast":null,"code":"ace.define(\"ace/mode/gitignore_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var GitignoreHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: /^\\s*#.*$/\n      }, {\n        token: \"keyword\",\n        // negated patterns\n        regex: /^\\s*!.*$/\n      }]\n    };\n    this.normalizeRules();\n  };\n  GitignoreHighlightRules.metaData = {\n    fileTypes: ['gitignore'],\n    name: 'Gitignore'\n  };\n  oop.inherits(GitignoreHighlightRules, TextHighlightRules);\n  exports.GitignoreHighlightRules = GitignoreHighlightRules;\n});\nace.define(\"ace/mode/gitignore\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/gitignore_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var GitignoreHighlightRules = require(\"./gitignore_highlight_rules\").GitignoreHighlightRules;\n  var Mode = function () {\n    this.HighlightRules = GitignoreHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/gitignore\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/gitignore\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","GitignoreHighlightRules","$rules","token","regex","normalizeRules","metaData","fileTypes","name","inherits","TextMode","Mode","HighlightRules","$behaviour","$defaultBehaviour","lineCommentStart","$id","call","prototype","m"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-gitignore.js"],"sourcesContent":["ace.define(\"ace/mode/gitignore_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar GitignoreHighlightRules = function () {\n    this.$rules = {\n        \"start\": [\n            {\n                token: \"comment\",\n                regex: /^\\s*#.*$/\n            }, {\n                token: \"keyword\", // negated patterns\n                regex: /^\\s*!.*$/\n            }\n        ]\n    };\n    this.normalizeRules();\n};\nGitignoreHighlightRules.metaData = {\n    fileTypes: ['gitignore'],\n    name: 'Gitignore'\n};\noop.inherits(GitignoreHighlightRules, TextHighlightRules);\nexports.GitignoreHighlightRules = GitignoreHighlightRules;\n\n});\n\nace.define(\"ace/mode/gitignore\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/gitignore_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar GitignoreHighlightRules = require(\"./gitignore_highlight_rules\").GitignoreHighlightRules;\nvar Mode = function () {\n    this.HighlightRules = GitignoreHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/gitignore\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/gitignore\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"AAAAA,GAAG,CAACC,MAAM,CAAC,oCAAoC,EAAC,CAAC,SAAS,EAAC,SAAS,EAAC,QAAQ,EAAC,aAAa,EAAC,+BAA+B,CAAC,EAAE,UAASC,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAC;EAAC,YAAY;;EAC7K,IAAIC,GAAG,GAAGH,OAAO,CAAC,YAAY,CAAC;EAC/B,IAAII,kBAAkB,GAAGJ,OAAO,CAAC,wBAAwB,CAAC,CAACI,kBAAkB;EAC7E,IAAIC,uBAAuB,GAAG,SAAAA,CAAA,EAAY;IACtC,IAAI,CAACC,MAAM,GAAG;MACV,OAAO,EAAE,CACL;QACIC,KAAK,EAAE,SAAS;QAChBC,KAAK,EAAE;MACX,CAAC,EAAE;QACCD,KAAK,EAAE,SAAS;QAAE;QAClBC,KAAK,EAAE;MACX,CAAC;IAET,CAAC;IACD,IAAI,CAACC,cAAc,CAAC,CAAC;EACzB,CAAC;EACDJ,uBAAuB,CAACK,QAAQ,GAAG;IAC/BC,SAAS,EAAE,CAAC,WAAW,CAAC;IACxBC,IAAI,EAAE;EACV,CAAC;EACDT,GAAG,CAACU,QAAQ,CAACR,uBAAuB,EAAED,kBAAkB,CAAC;EACzDH,OAAO,CAACI,uBAAuB,GAAGA,uBAAuB;AAEzD,CAAC,CAAC;AAEFP,GAAG,CAACC,MAAM,CAAC,oBAAoB,EAAC,CAAC,SAAS,EAAC,SAAS,EAAC,QAAQ,EAAC,aAAa,EAAC,eAAe,EAAC,oCAAoC,CAAC,EAAE,UAASC,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAC;EAAC,YAAY;;EAClL,IAAIC,GAAG,GAAGH,OAAO,CAAC,YAAY,CAAC;EAC/B,IAAIc,QAAQ,GAAGd,OAAO,CAAC,QAAQ,CAAC,CAACe,IAAI;EACrC,IAAIV,uBAAuB,GAAGL,OAAO,CAAC,6BAA6B,CAAC,CAACK,uBAAuB;EAC5F,IAAIU,IAAI,GAAG,SAAAA,CAAA,EAAY;IACnB,IAAI,CAACC,cAAc,GAAGX,uBAAuB;IAC7C,IAAI,CAACY,UAAU,GAAG,IAAI,CAACC,iBAAiB;EAC5C,CAAC;EACDf,GAAG,CAACU,QAAQ,CAACE,IAAI,EAAED,QAAQ,CAAC;EAC5B,CAAC,YAAY;IACT,IAAI,CAACK,gBAAgB,GAAG,GAAG;IAC3B,IAAI,CAACC,GAAG,GAAG,oBAAoB;EACnC,CAAC,EAAEC,IAAI,CAACN,IAAI,CAACO,SAAS,CAAC;EACvBrB,OAAO,CAACc,IAAI,GAAGA,IAAI;AAEnB,CAAC,CAAC;AAAiB,CAAC,YAAW;EACXjB,GAAG,CAACE,OAAO,CAAC,CAAC,oBAAoB,CAAC,EAAE,UAASuB,CAAC,EAAE;IAC5C,IAAI,OAAOrB,MAAM,IAAI,QAAQ,IAAI,OAAOD,OAAO,IAAI,QAAQ,IAAIC,MAAM,EAAE;MACnEA,MAAM,CAACD,OAAO,GAAGsB,CAAC;IACtB;EACJ,CAAC,CAAC;AACN,CAAC,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}