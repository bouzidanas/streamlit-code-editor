{"ast":null,"code":"ace.define(\"ace/mode/xml_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var XmlHighlightRules = function (normalize) {\n    var tagRegex = \"[_:a-zA-Z\\xc0-\\uffff][-_:.a-zA-Z0-9\\xc0-\\uffff]*\";\n    this.$rules = {\n      start: [{\n        token: \"string.cdata.xml\",\n        regex: \"<\\\\!\\\\[CDATA\\\\[\",\n        next: \"cdata\"\n      }, {\n        token: [\"punctuation.instruction.xml\", \"keyword.instruction.xml\"],\n        regex: \"(<\\\\?)(\" + tagRegex + \")\",\n        next: \"processing_instruction\"\n      }, {\n        token: \"comment.start.xml\",\n        regex: \"<\\\\!--\",\n        next: \"comment\"\n      }, {\n        token: [\"xml-pe.doctype.xml\", \"xml-pe.doctype.xml\"],\n        regex: \"(<\\\\!)(DOCTYPE)(?=[\\\\s])\",\n        next: \"doctype\",\n        caseInsensitive: true\n      }, {\n        include: \"tag\"\n      }, {\n        token: \"text.end-tag-open.xml\",\n        regex: \"</\"\n      }, {\n        token: \"text.tag-open.xml\",\n        regex: \"<\"\n      }, {\n        include: \"reference\"\n      }, {\n        defaultToken: \"text.xml\"\n      }],\n      processing_instruction: [{\n        token: \"entity.other.attribute-name.decl-attribute-name.xml\",\n        regex: tagRegex\n      }, {\n        token: \"keyword.operator.decl-attribute-equals.xml\",\n        regex: \"=\"\n      }, {\n        include: \"whitespace\"\n      }, {\n        include: \"string\"\n      }, {\n        token: \"punctuation.xml-decl.xml\",\n        regex: \"\\\\?>\",\n        next: \"start\"\n      }],\n      doctype: [{\n        include: \"whitespace\"\n      }, {\n        include: \"string\"\n      }, {\n        token: \"xml-pe.doctype.xml\",\n        regex: \">\",\n        next: \"start\"\n      }, {\n        token: \"xml-pe.xml\",\n        regex: \"[-_a-zA-Z0-9:]+\"\n      }, {\n        token: \"punctuation.int-subset\",\n        regex: \"\\\\[\",\n        push: \"int_subset\"\n      }],\n      int_subset: [{\n        token: \"text.xml\",\n        regex: \"\\\\s+\"\n      }, {\n        token: \"punctuation.int-subset.xml\",\n        regex: \"]\",\n        next: \"pop\"\n      }, {\n        token: [\"punctuation.markup-decl.xml\", \"keyword.markup-decl.xml\"],\n        regex: \"(<\\\\!)(\" + tagRegex + \")\",\n        push: [{\n          token: \"text\",\n          regex: \"\\\\s+\"\n        }, {\n          token: \"punctuation.markup-decl.xml\",\n          regex: \">\",\n          next: \"pop\"\n        }, {\n          include: \"string\"\n        }]\n      }],\n      cdata: [{\n        token: \"string.cdata.xml\",\n        regex: \"\\\\]\\\\]>\",\n        next: \"start\"\n      }, {\n        token: \"text.xml\",\n        regex: \"\\\\s+\"\n      }, {\n        token: \"text.xml\",\n        regex: \"(?:[^\\\\]]|\\\\](?!\\\\]>))+\"\n      }],\n      comment: [{\n        token: \"comment.end.xml\",\n        regex: \"-->\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment.xml\"\n      }],\n      reference: [{\n        token: \"constant.language.escape.reference.xml\",\n        regex: \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n      }],\n      attr_reference: [{\n        token: \"constant.language.escape.reference.attribute-value.xml\",\n        regex: \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n      }],\n      tag: [{\n        token: [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.tag-name.xml\"],\n        regex: \"(?:(<)|(</))((?:\" + tagRegex + \":)?\" + tagRegex + \")\",\n        next: [{\n          include: \"attributes\"\n        }, {\n          token: \"meta.tag.punctuation.tag-close.xml\",\n          regex: \"/?>\",\n          next: \"start\"\n        }]\n      }],\n      tag_whitespace: [{\n        token: \"text.tag-whitespace.xml\",\n        regex: \"\\\\s+\"\n      }],\n      whitespace: [{\n        token: \"text.whitespace.xml\",\n        regex: \"\\\\s+\"\n      }],\n      string: [{\n        token: \"string.xml\",\n        regex: \"'\",\n        push: [{\n          token: \"string.xml\",\n          regex: \"'\",\n          next: \"pop\"\n        }, {\n          defaultToken: \"string.xml\"\n        }]\n      }, {\n        token: \"string.xml\",\n        regex: '\"',\n        push: [{\n          token: \"string.xml\",\n          regex: '\"',\n          next: \"pop\"\n        }, {\n          defaultToken: \"string.xml\"\n        }]\n      }],\n      attributes: [{\n        token: \"entity.other.attribute-name.xml\",\n        regex: tagRegex\n      }, {\n        token: \"keyword.operator.attribute-equals.xml\",\n        regex: \"=\"\n      }, {\n        include: \"tag_whitespace\"\n      }, {\n        include: \"attribute_value\"\n      }],\n      attribute_value: [{\n        token: \"string.attribute-value.xml\",\n        regex: \"'\",\n        push: [{\n          token: \"string.attribute-value.xml\",\n          regex: \"'\",\n          next: \"pop\"\n        }, {\n          include: \"attr_reference\"\n        }, {\n          defaultToken: \"string.attribute-value.xml\"\n        }]\n      }, {\n        token: \"string.attribute-value.xml\",\n        regex: '\"',\n        push: [{\n          token: \"string.attribute-value.xml\",\n          regex: '\"',\n          next: \"pop\"\n        }, {\n          include: \"attr_reference\"\n        }, {\n          defaultToken: \"string.attribute-value.xml\"\n        }]\n      }]\n    };\n    if (this.constructor === XmlHighlightRules) this.normalizeRules();\n  };\n  (function () {\n    this.embedTagRules = function (HighlightRules, prefix, tag) {\n      this.$rules.tag.unshift({\n        token: [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n        regex: \"(<)(\" + tag + \"(?=\\\\s|>|$))\",\n        next: [{\n          include: \"attributes\"\n        }, {\n          token: \"meta.tag.punctuation.tag-close.xml\",\n          regex: \"/?>\",\n          next: prefix + \"start\"\n        }]\n      });\n      this.$rules[tag + \"-end\"] = [{\n        include: \"attributes\"\n      }, {\n        token: \"meta.tag.punctuation.tag-close.xml\",\n        regex: \"/?>\",\n        next: \"start\",\n        onMatch: function (value, currentState, stack) {\n          stack.splice(0);\n          return this.token;\n        }\n      }];\n      this.embedRules(HighlightRules, prefix, [{\n        token: [\"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n        regex: \"(</)(\" + tag + \"(?=\\\\s|>|$))\",\n        next: tag + \"-end\"\n      }, {\n        token: \"string.cdata.xml\",\n        regex: \"<\\\\!\\\\[CDATA\\\\[\"\n      }, {\n        token: \"string.cdata.xml\",\n        regex: \"\\\\]\\\\]>\"\n      }]);\n    };\n  }).call(TextHighlightRules.prototype);\n  oop.inherits(XmlHighlightRules, TextHighlightRules);\n  exports.XmlHighlightRules = XmlHighlightRules;\n});\nace.define(\"ace/mode/behaviour/xml\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/behaviour\", \"ace/token_iterator\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Behaviour = require(\"../behaviour\").Behaviour;\n  var TokenIterator = require(\"../../token_iterator\").TokenIterator;\n  function is(token, type) {\n    return token && token.type.lastIndexOf(type + \".xml\") > -1;\n  }\n  var XmlBehaviour = function () {\n    this.add(\"string_dquotes\", \"insertion\", function (state, action, editor, session, text) {\n      if (text == '\"' || text == \"'\") {\n        var quote = text;\n        var selected = session.doc.getTextRange(editor.getSelectionRange());\n        if (selected !== \"\" && selected !== \"'\" && selected != '\"' && editor.getWrapBehavioursEnabled()) {\n          return {\n            text: quote + selected + quote,\n            selection: false\n          };\n        }\n        var cursor = editor.getCursorPosition();\n        var line = session.doc.getLine(cursor.row);\n        var rightChar = line.substring(cursor.column, cursor.column + 1);\n        var iterator = new TokenIterator(session, cursor.row, cursor.column);\n        var token = iterator.getCurrentToken();\n        if (rightChar == quote && (is(token, \"attribute-value\") || is(token, \"string\"))) {\n          return {\n            text: \"\",\n            selection: [1, 1]\n          };\n        }\n        if (!token) token = iterator.stepBackward();\n        if (!token) return;\n        while (is(token, \"tag-whitespace\") || is(token, \"whitespace\")) {\n          token = iterator.stepBackward();\n        }\n        var rightSpace = !rightChar || rightChar.match(/\\s/);\n        if (is(token, \"attribute-equals\") && (rightSpace || rightChar == '>') || is(token, \"decl-attribute-equals\") && (rightSpace || rightChar == '?')) {\n          return {\n            text: quote + quote,\n            selection: [1, 1]\n          };\n        }\n      }\n    });\n    this.add(\"string_dquotes\", \"deletion\", function (state, action, editor, session, range) {\n      var selected = session.doc.getTextRange(range);\n      if (!range.isMultiLine() && (selected == '\"' || selected == \"'\")) {\n        var line = session.doc.getLine(range.start.row);\n        var rightChar = line.substring(range.start.column + 1, range.start.column + 2);\n        if (rightChar == selected) {\n          range.end.column++;\n          return range;\n        }\n      }\n    });\n    this.add(\"autoclosing\", \"insertion\", function (state, action, editor, session, text) {\n      if (text == '>') {\n        var position = editor.getSelectionRange().start;\n        var iterator = new TokenIterator(session, position.row, position.column);\n        var token = iterator.getCurrentToken() || iterator.stepBackward();\n        if (!token || !(is(token, \"tag-name\") || is(token, \"tag-whitespace\") || is(token, \"attribute-name\") || is(token, \"attribute-equals\") || is(token, \"attribute-value\"))) return;\n        if (is(token, \"reference.attribute-value\")) return;\n        if (is(token, \"attribute-value\")) {\n          var tokenEndColumn = iterator.getCurrentTokenColumn() + token.value.length;\n          if (position.column < tokenEndColumn) return;\n          if (position.column == tokenEndColumn) {\n            var nextToken = iterator.stepForward();\n            if (nextToken && is(nextToken, \"attribute-value\")) return;\n            iterator.stepBackward();\n          }\n        }\n        if (/^\\s*>/.test(session.getLine(position.row).slice(position.column))) return;\n        while (!is(token, \"tag-name\")) {\n          token = iterator.stepBackward();\n          if (token.value == \"<\") {\n            token = iterator.stepForward();\n            break;\n          }\n        }\n        var tokenRow = iterator.getCurrentTokenRow();\n        var tokenColumn = iterator.getCurrentTokenColumn();\n        if (is(iterator.stepBackward(), \"end-tag-open\")) return;\n        var element = token.value;\n        if (tokenRow == position.row) element = element.substring(0, position.column - tokenColumn);\n        if (this.voidElements && this.voidElements.hasOwnProperty(element.toLowerCase())) return;\n        return {\n          text: \">\" + \"</\" + element + \">\",\n          selection: [1, 1]\n        };\n      }\n    });\n    this.add(\"autoindent\", \"insertion\", function (state, action, editor, session, text) {\n      if (text == \"\\n\") {\n        var cursor = editor.getCursorPosition();\n        var line = session.getLine(cursor.row);\n        var iterator = new TokenIterator(session, cursor.row, cursor.column);\n        var token = iterator.getCurrentToken();\n        if (is(token, \"\") && token.type.indexOf(\"tag-close\") !== -1) {\n          if (token.value == \"/>\") return;\n          while (token && token.type.indexOf(\"tag-name\") === -1) {\n            token = iterator.stepBackward();\n          }\n          if (!token) {\n            return;\n          }\n          var tag = token.value;\n          var row = iterator.getCurrentTokenRow();\n          token = iterator.stepBackward();\n          if (!token || token.type.indexOf(\"end-tag\") !== -1) {\n            return;\n          }\n          if (this.voidElements && !this.voidElements[tag] || !this.voidElements) {\n            var nextToken = session.getTokenAt(cursor.row, cursor.column + 1);\n            var line = session.getLine(row);\n            var nextIndent = this.$getIndent(line);\n            var indent = nextIndent + session.getTabString();\n            if (nextToken && nextToken.value === \"</\") {\n              return {\n                text: \"\\n\" + indent + \"\\n\" + nextIndent,\n                selection: [1, indent.length, 1, indent.length]\n              };\n            } else {\n              return {\n                text: \"\\n\" + indent\n              };\n            }\n          }\n        }\n      }\n    });\n  };\n  oop.inherits(XmlBehaviour, Behaviour);\n  exports.XmlBehaviour = XmlBehaviour;\n});\nace.define(\"ace/mode/folding/xml\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Range = require(\"../../range\").Range;\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function (voidElements, optionalEndTags) {\n    BaseFoldMode.call(this);\n    this.voidElements = voidElements || {};\n    this.optionalEndTags = oop.mixin({}, this.voidElements);\n    if (optionalEndTags) oop.mixin(this.optionalEndTags, optionalEndTags);\n  };\n  oop.inherits(FoldMode, BaseFoldMode);\n  var Tag = function () {\n    this.tagName = \"\";\n    this.closing = false;\n    this.selfClosing = false;\n    this.start = {\n      row: 0,\n      column: 0\n    };\n    this.end = {\n      row: 0,\n      column: 0\n    };\n  };\n  function is(token, type) {\n    return token.type.lastIndexOf(type + \".xml\") > -1;\n  }\n  (function () {\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var tag = this._getFirstTagInLine(session, row);\n      if (!tag) return this.getCommentFoldWidget(session, row);\n      if (tag.closing || !tag.tagName && tag.selfClosing) return foldStyle === \"markbeginend\" ? \"end\" : \"\";\n      if (!tag.tagName || tag.selfClosing || this.voidElements.hasOwnProperty(tag.tagName.toLowerCase())) return \"\";\n      if (this._findEndTagInLine(session, row, tag.tagName, tag.end.column)) return \"\";\n      return \"start\";\n    };\n    this.getCommentFoldWidget = function (session, row) {\n      if (/comment/.test(session.getState(row)) && /<!-/.test(session.getLine(row))) return \"start\";\n      return \"\";\n    };\n    this._getFirstTagInLine = function (session, row) {\n      var tokens = session.getTokens(row);\n      var tag = new Tag();\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i];\n        if (is(token, \"tag-open\")) {\n          tag.end.column = tag.start.column + token.value.length;\n          tag.closing = is(token, \"end-tag-open\");\n          token = tokens[++i];\n          if (!token) return null;\n          tag.tagName = token.value;\n          if (token.value === \"\") {\n            //skip empty tag name token for fragment\n            token = tokens[++i];\n            if (!token) return null;\n            tag.tagName = token.value;\n          }\n          tag.end.column += token.value.length;\n          for (i++; i < tokens.length; i++) {\n            token = tokens[i];\n            tag.end.column += token.value.length;\n            if (is(token, \"tag-close\")) {\n              tag.selfClosing = token.value == '/>';\n              break;\n            }\n          }\n          return tag;\n        } else if (is(token, \"tag-close\")) {\n          tag.selfClosing = token.value == '/>';\n          return tag;\n        }\n        tag.start.column += token.value.length;\n      }\n      return null;\n    };\n    this._findEndTagInLine = function (session, row, tagName, startColumn) {\n      var tokens = session.getTokens(row);\n      var column = 0;\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i];\n        column += token.value.length;\n        if (column < startColumn - 1) continue;\n        if (is(token, \"end-tag-open\")) {\n          token = tokens[i + 1];\n          if (is(token, \"tag-name\") && token.value === \"\") {\n            token = tokens[i + 2];\n          }\n          if (token && token.value == tagName) return true;\n        }\n      }\n      return false;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var firstTag = this._getFirstTagInLine(session, row);\n      if (!firstTag) {\n        return this.getCommentFoldWidget(session, row) && session.getCommentFoldRange(row, session.getLine(row).length);\n      }\n      var tags = session.getMatchingTags({\n        row: row,\n        column: 0\n      });\n      if (tags) {\n        return new Range(tags.openTag.end.row, tags.openTag.end.column, tags.closeTag.start.row, tags.closeTag.start.column);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/xml\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/lib/lang\", \"ace/mode/text\", \"ace/mode/xml_highlight_rules\", \"ace/mode/behaviour/xml\", \"ace/mode/folding/xml\", \"ace/worker/worker_client\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var lang = require(\"../lib/lang\");\n  var TextMode = require(\"./text\").Mode;\n  var XmlHighlightRules = require(\"./xml_highlight_rules\").XmlHighlightRules;\n  var XmlBehaviour = require(\"./behaviour/xml\").XmlBehaviour;\n  var XmlFoldMode = require(\"./folding/xml\").FoldMode;\n  var WorkerClient = require(\"../worker/worker_client\").WorkerClient;\n  var Mode = function () {\n    this.HighlightRules = XmlHighlightRules;\n    this.$behaviour = new XmlBehaviour();\n    this.foldingRules = new XmlFoldMode();\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.voidElements = lang.arrayToMap([]);\n    this.blockComment = {\n      start: \"<!--\",\n      end: \"-->\"\n    };\n    this.createWorker = function (session) {\n      var worker = new WorkerClient([\"ace\"], \"ace/mode/xml_worker\", \"Worker\");\n      worker.attachToDocument(session.getDocument());\n      worker.on(\"error\", function (e) {\n        session.setAnnotations(e.data);\n      });\n      worker.on(\"terminate\", function () {\n        session.clearAnnotations();\n      });\n      return worker;\n    };\n    this.$id = \"ace/mode/xml\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/xml\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","XmlHighlightRules","normalize","tagRegex","$rules","start","token","regex","next","caseInsensitive","include","defaultToken","processing_instruction","doctype","push","int_subset","cdata","comment","reference","attr_reference","tag","tag_whitespace","whitespace","string","attributes","attribute_value","constructor","normalizeRules","embedTagRules","HighlightRules","prefix","unshift","onMatch","value","currentState","stack","splice","embedRules","call","prototype","inherits","Behaviour","TokenIterator","is","type","lastIndexOf","XmlBehaviour","add","state","action","editor","session","text","quote","selected","doc","getTextRange","getSelectionRange","getWrapBehavioursEnabled","selection","cursor","getCursorPosition","line","getLine","row","rightChar","substring","column","iterator","getCurrentToken","stepBackward","rightSpace","match","range","isMultiLine","end","position","tokenEndColumn","getCurrentTokenColumn","length","nextToken","stepForward","test","slice","tokenRow","getCurrentTokenRow","tokenColumn","element","voidElements","hasOwnProperty","toLowerCase","indexOf","getTokenAt","nextIndent","$getIndent","indent","getTabString","Range","BaseFoldMode","FoldMode","optionalEndTags","mixin","Tag","tagName","closing","selfClosing","getFoldWidget","foldStyle","_getFirstTagInLine","getCommentFoldWidget","_findEndTagInLine","getState","tokens","getTokens","i","startColumn","getFoldWidgetRange","firstTag","getCommentFoldRange","tags","getMatchingTags","openTag","closeTag","lang","TextMode","Mode","XmlFoldMode","WorkerClient","$behaviour","foldingRules","arrayToMap","blockComment","createWorker","worker","attachToDocument","getDocument","on","e","setAnnotations","data","clearAnnotations","$id","m"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-xml.js"],"sourcesContent":["ace.define(\"ace/mode/xml_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar XmlHighlightRules = function (normalize) {\n    var tagRegex = \"[_:a-zA-Z\\xc0-\\uffff][-_:.a-zA-Z0-9\\xc0-\\uffff]*\";\n    this.$rules = {\n        start: [\n            { token: \"string.cdata.xml\", regex: \"<\\\\!\\\\[CDATA\\\\[\", next: \"cdata\" },\n            {\n                token: [\"punctuation.instruction.xml\", \"keyword.instruction.xml\"],\n                regex: \"(<\\\\?)(\" + tagRegex + \")\", next: \"processing_instruction\"\n            },\n            { token: \"comment.start.xml\", regex: \"<\\\\!--\", next: \"comment\" },\n            {\n                token: [\"xml-pe.doctype.xml\", \"xml-pe.doctype.xml\"],\n                regex: \"(<\\\\!)(DOCTYPE)(?=[\\\\s])\", next: \"doctype\", caseInsensitive: true\n            },\n            { include: \"tag\" },\n            { token: \"text.end-tag-open.xml\", regex: \"</\" },\n            { token: \"text.tag-open.xml\", regex: \"<\" },\n            { include: \"reference\" },\n            { defaultToken: \"text.xml\" }\n        ],\n        processing_instruction: [{\n                token: \"entity.other.attribute-name.decl-attribute-name.xml\",\n                regex: tagRegex\n            }, {\n                token: \"keyword.operator.decl-attribute-equals.xml\",\n                regex: \"=\"\n            }, {\n                include: \"whitespace\"\n            }, {\n                include: \"string\"\n            }, {\n                token: \"punctuation.xml-decl.xml\",\n                regex: \"\\\\?>\",\n                next: \"start\"\n            }],\n        doctype: [\n            { include: \"whitespace\" },\n            { include: \"string\" },\n            { token: \"xml-pe.doctype.xml\", regex: \">\", next: \"start\" },\n            { token: \"xml-pe.xml\", regex: \"[-_a-zA-Z0-9:]+\" },\n            { token: \"punctuation.int-subset\", regex: \"\\\\[\", push: \"int_subset\" }\n        ],\n        int_subset: [{\n                token: \"text.xml\",\n                regex: \"\\\\s+\"\n            }, {\n                token: \"punctuation.int-subset.xml\",\n                regex: \"]\",\n                next: \"pop\"\n            }, {\n                token: [\"punctuation.markup-decl.xml\", \"keyword.markup-decl.xml\"],\n                regex: \"(<\\\\!)(\" + tagRegex + \")\",\n                push: [{\n                        token: \"text\",\n                        regex: \"\\\\s+\"\n                    },\n                    {\n                        token: \"punctuation.markup-decl.xml\",\n                        regex: \">\",\n                        next: \"pop\"\n                    },\n                    { include: \"string\" }]\n            }],\n        cdata: [\n            { token: \"string.cdata.xml\", regex: \"\\\\]\\\\]>\", next: \"start\" },\n            { token: \"text.xml\", regex: \"\\\\s+\" },\n            { token: \"text.xml\", regex: \"(?:[^\\\\]]|\\\\](?!\\\\]>))+\" }\n        ],\n        comment: [\n            { token: \"comment.end.xml\", regex: \"-->\", next: \"start\" },\n            { defaultToken: \"comment.xml\" }\n        ],\n        reference: [{\n                token: \"constant.language.escape.reference.xml\",\n                regex: \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n            }],\n        attr_reference: [{\n                token: \"constant.language.escape.reference.attribute-value.xml\",\n                regex: \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n            }],\n        tag: [{\n                token: [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.tag-name.xml\"],\n                regex: \"(?:(<)|(</))((?:\" + tagRegex + \":)?\" + tagRegex + \")\",\n                next: [\n                    { include: \"attributes\" },\n                    { token: \"meta.tag.punctuation.tag-close.xml\", regex: \"/?>\", next: \"start\" }\n                ]\n            }],\n        tag_whitespace: [\n            { token: \"text.tag-whitespace.xml\", regex: \"\\\\s+\" }\n        ],\n        whitespace: [\n            { token: \"text.whitespace.xml\", regex: \"\\\\s+\" }\n        ],\n        string: [{\n                token: \"string.xml\",\n                regex: \"'\",\n                push: [\n                    { token: \"string.xml\", regex: \"'\", next: \"pop\" },\n                    { defaultToken: \"string.xml\" }\n                ]\n            }, {\n                token: \"string.xml\",\n                regex: '\"',\n                push: [\n                    { token: \"string.xml\", regex: '\"', next: \"pop\" },\n                    { defaultToken: \"string.xml\" }\n                ]\n            }],\n        attributes: [{\n                token: \"entity.other.attribute-name.xml\",\n                regex: tagRegex\n            }, {\n                token: \"keyword.operator.attribute-equals.xml\",\n                regex: \"=\"\n            }, {\n                include: \"tag_whitespace\"\n            }, {\n                include: \"attribute_value\"\n            }],\n        attribute_value: [{\n                token: \"string.attribute-value.xml\",\n                regex: \"'\",\n                push: [\n                    { token: \"string.attribute-value.xml\", regex: \"'\", next: \"pop\" },\n                    { include: \"attr_reference\" },\n                    { defaultToken: \"string.attribute-value.xml\" }\n                ]\n            }, {\n                token: \"string.attribute-value.xml\",\n                regex: '\"',\n                push: [\n                    { token: \"string.attribute-value.xml\", regex: '\"', next: \"pop\" },\n                    { include: \"attr_reference\" },\n                    { defaultToken: \"string.attribute-value.xml\" }\n                ]\n            }]\n    };\n    if (this.constructor === XmlHighlightRules)\n        this.normalizeRules();\n};\n(function () {\n    this.embedTagRules = function (HighlightRules, prefix, tag) {\n        this.$rules.tag.unshift({\n            token: [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n            regex: \"(<)(\" + tag + \"(?=\\\\s|>|$))\",\n            next: [\n                { include: \"attributes\" },\n                { token: \"meta.tag.punctuation.tag-close.xml\", regex: \"/?>\", next: prefix + \"start\" }\n            ]\n        });\n        this.$rules[tag + \"-end\"] = [\n            { include: \"attributes\" },\n            { token: \"meta.tag.punctuation.tag-close.xml\", regex: \"/?>\", next: \"start\",\n                onMatch: function (value, currentState, stack) {\n                    stack.splice(0);\n                    return this.token;\n                } }\n        ];\n        this.embedRules(HighlightRules, prefix, [{\n                token: [\"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n                regex: \"(</)(\" + tag + \"(?=\\\\s|>|$))\",\n                next: tag + \"-end\"\n            }, {\n                token: \"string.cdata.xml\",\n                regex: \"<\\\\!\\\\[CDATA\\\\[\"\n            }, {\n                token: \"string.cdata.xml\",\n                regex: \"\\\\]\\\\]>\"\n            }]);\n    };\n}).call(TextHighlightRules.prototype);\noop.inherits(XmlHighlightRules, TextHighlightRules);\nexports.XmlHighlightRules = XmlHighlightRules;\n\n});\n\nace.define(\"ace/mode/behaviour/xml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/behaviour\",\"ace/token_iterator\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Behaviour = require(\"../behaviour\").Behaviour;\nvar TokenIterator = require(\"../../token_iterator\").TokenIterator;\nfunction is(token, type) {\n    return token && token.type.lastIndexOf(type + \".xml\") > -1;\n}\nvar XmlBehaviour = function () {\n    this.add(\"string_dquotes\", \"insertion\", function (state, action, editor, session, text) {\n        if (text == '\"' || text == \"'\") {\n            var quote = text;\n            var selected = session.doc.getTextRange(editor.getSelectionRange());\n            if (selected !== \"\" && selected !== \"'\" && selected != '\"' && editor.getWrapBehavioursEnabled()) {\n                return {\n                    text: quote + selected + quote,\n                    selection: false\n                };\n            }\n            var cursor = editor.getCursorPosition();\n            var line = session.doc.getLine(cursor.row);\n            var rightChar = line.substring(cursor.column, cursor.column + 1);\n            var iterator = new TokenIterator(session, cursor.row, cursor.column);\n            var token = iterator.getCurrentToken();\n            if (rightChar == quote && (is(token, \"attribute-value\") || is(token, \"string\"))) {\n                return {\n                    text: \"\",\n                    selection: [1, 1]\n                };\n            }\n            if (!token)\n                token = iterator.stepBackward();\n            if (!token)\n                return;\n            while (is(token, \"tag-whitespace\") || is(token, \"whitespace\")) {\n                token = iterator.stepBackward();\n            }\n            var rightSpace = !rightChar || rightChar.match(/\\s/);\n            if (is(token, \"attribute-equals\") && (rightSpace || rightChar == '>') || (is(token, \"decl-attribute-equals\") && (rightSpace || rightChar == '?'))) {\n                return {\n                    text: quote + quote,\n                    selection: [1, 1]\n                };\n            }\n        }\n    });\n    this.add(\"string_dquotes\", \"deletion\", function (state, action, editor, session, range) {\n        var selected = session.doc.getTextRange(range);\n        if (!range.isMultiLine() && (selected == '\"' || selected == \"'\")) {\n            var line = session.doc.getLine(range.start.row);\n            var rightChar = line.substring(range.start.column + 1, range.start.column + 2);\n            if (rightChar == selected) {\n                range.end.column++;\n                return range;\n            }\n        }\n    });\n    this.add(\"autoclosing\", \"insertion\", function (state, action, editor, session, text) {\n        if (text == '>') {\n            var position = editor.getSelectionRange().start;\n            var iterator = new TokenIterator(session, position.row, position.column);\n            var token = iterator.getCurrentToken() || iterator.stepBackward();\n            if (!token || !(is(token, \"tag-name\") || is(token, \"tag-whitespace\") || is(token, \"attribute-name\") || is(token, \"attribute-equals\") || is(token, \"attribute-value\")))\n                return;\n            if (is(token, \"reference.attribute-value\"))\n                return;\n            if (is(token, \"attribute-value\")) {\n                var tokenEndColumn = iterator.getCurrentTokenColumn() + token.value.length;\n                if (position.column < tokenEndColumn)\n                    return;\n                if (position.column == tokenEndColumn) {\n                    var nextToken = iterator.stepForward();\n                    if (nextToken && is(nextToken, \"attribute-value\"))\n                        return;\n                    iterator.stepBackward();\n                }\n            }\n            if (/^\\s*>/.test(session.getLine(position.row).slice(position.column)))\n                return;\n            while (!is(token, \"tag-name\")) {\n                token = iterator.stepBackward();\n                if (token.value == \"<\") {\n                    token = iterator.stepForward();\n                    break;\n                }\n            }\n            var tokenRow = iterator.getCurrentTokenRow();\n            var tokenColumn = iterator.getCurrentTokenColumn();\n            if (is(iterator.stepBackward(), \"end-tag-open\"))\n                return;\n            var element = token.value;\n            if (tokenRow == position.row)\n                element = element.substring(0, position.column - tokenColumn);\n            if (this.voidElements && this.voidElements.hasOwnProperty(element.toLowerCase()))\n                return;\n            return {\n                text: \">\" + \"</\" + element + \">\",\n                selection: [1, 1]\n            };\n        }\n    });\n    this.add(\"autoindent\", \"insertion\", function (state, action, editor, session, text) {\n        if (text == \"\\n\") {\n            var cursor = editor.getCursorPosition();\n            var line = session.getLine(cursor.row);\n            var iterator = new TokenIterator(session, cursor.row, cursor.column);\n            var token = iterator.getCurrentToken();\n            if (is(token, \"\") && token.type.indexOf(\"tag-close\") !== -1) {\n                if (token.value == \"/>\")\n                    return;\n                while (token && token.type.indexOf(\"tag-name\") === -1) {\n                    token = iterator.stepBackward();\n                }\n                if (!token) {\n                    return;\n                }\n                var tag = token.value;\n                var row = iterator.getCurrentTokenRow();\n                token = iterator.stepBackward();\n                if (!token || token.type.indexOf(\"end-tag\") !== -1) {\n                    return;\n                }\n                if (this.voidElements && !this.voidElements[tag] || !this.voidElements) {\n                    var nextToken = session.getTokenAt(cursor.row, cursor.column + 1);\n                    var line = session.getLine(row);\n                    var nextIndent = this.$getIndent(line);\n                    var indent = nextIndent + session.getTabString();\n                    if (nextToken && nextToken.value === \"</\") {\n                        return {\n                            text: \"\\n\" + indent + \"\\n\" + nextIndent,\n                            selection: [1, indent.length, 1, indent.length]\n                        };\n                    }\n                    else {\n                        return {\n                            text: \"\\n\" + indent\n                        };\n                    }\n                }\n            }\n        }\n    });\n};\noop.inherits(XmlBehaviour, Behaviour);\nexports.XmlBehaviour = XmlBehaviour;\n\n});\n\nace.define(\"ace/mode/folding/xml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (voidElements, optionalEndTags) {\n    BaseFoldMode.call(this);\n    this.voidElements = voidElements || {};\n    this.optionalEndTags = oop.mixin({}, this.voidElements);\n    if (optionalEndTags)\n        oop.mixin(this.optionalEndTags, optionalEndTags);\n};\noop.inherits(FoldMode, BaseFoldMode);\nvar Tag = function () {\n    this.tagName = \"\";\n    this.closing = false;\n    this.selfClosing = false;\n    this.start = { row: 0, column: 0 };\n    this.end = { row: 0, column: 0 };\n};\nfunction is(token, type) {\n    return token.type.lastIndexOf(type + \".xml\") > -1;\n}\n(function () {\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var tag = this._getFirstTagInLine(session, row);\n        if (!tag)\n            return this.getCommentFoldWidget(session, row);\n        if (tag.closing || (!tag.tagName && tag.selfClosing))\n            return foldStyle === \"markbeginend\" ? \"end\" : \"\";\n        if (!tag.tagName || tag.selfClosing || this.voidElements.hasOwnProperty(tag.tagName.toLowerCase()))\n            return \"\";\n        if (this._findEndTagInLine(session, row, tag.tagName, tag.end.column))\n            return \"\";\n        return \"start\";\n    };\n    this.getCommentFoldWidget = function (session, row) {\n        if (/comment/.test(session.getState(row)) && /<!-/.test(session.getLine(row)))\n            return \"start\";\n        return \"\";\n    };\n    this._getFirstTagInLine = function (session, row) {\n        var tokens = session.getTokens(row);\n        var tag = new Tag();\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            if (is(token, \"tag-open\")) {\n                tag.end.column = tag.start.column + token.value.length;\n                tag.closing = is(token, \"end-tag-open\");\n                token = tokens[++i];\n                if (!token)\n                    return null;\n                tag.tagName = token.value;\n                if (token.value === \"\") { //skip empty tag name token for fragment\n                    token = tokens[++i];\n                    if (!token)\n                        return null;\n                    tag.tagName = token.value;\n                }\n                tag.end.column += token.value.length;\n                for (i++; i < tokens.length; i++) {\n                    token = tokens[i];\n                    tag.end.column += token.value.length;\n                    if (is(token, \"tag-close\")) {\n                        tag.selfClosing = token.value == '/>';\n                        break;\n                    }\n                }\n                return tag;\n            }\n            else if (is(token, \"tag-close\")) {\n                tag.selfClosing = token.value == '/>';\n                return tag;\n            }\n            tag.start.column += token.value.length;\n        }\n        return null;\n    };\n    this._findEndTagInLine = function (session, row, tagName, startColumn) {\n        var tokens = session.getTokens(row);\n        var column = 0;\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            column += token.value.length;\n            if (column < startColumn - 1)\n                continue;\n            if (is(token, \"end-tag-open\")) {\n                token = tokens[i + 1];\n                if (is(token, \"tag-name\") && token.value === \"\") {\n                    token = tokens[i + 2];\n                }\n                if (token && token.value == tagName)\n                    return true;\n            }\n        }\n        return false;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n        var firstTag = this._getFirstTagInLine(session, row);\n        if (!firstTag) {\n            return this.getCommentFoldWidget(session, row) && session.getCommentFoldRange(row, session.getLine(row).length);\n        }\n        var tags = session.getMatchingTags({ row: row, column: 0 });\n        if (tags) {\n            return new Range(tags.openTag.end.row, tags.openTag.end.column, tags.closeTag.start.row, tags.closeTag.start.column);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/xml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text\",\"ace/mode/xml_highlight_rules\",\"ace/mode/behaviour/xml\",\"ace/mode/folding/xml\",\"ace/worker/worker_client\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar lang = require(\"../lib/lang\");\nvar TextMode = require(\"./text\").Mode;\nvar XmlHighlightRules = require(\"./xml_highlight_rules\").XmlHighlightRules;\nvar XmlBehaviour = require(\"./behaviour/xml\").XmlBehaviour;\nvar XmlFoldMode = require(\"./folding/xml\").FoldMode;\nvar WorkerClient = require(\"../worker/worker_client\").WorkerClient;\nvar Mode = function () {\n    this.HighlightRules = XmlHighlightRules;\n    this.$behaviour = new XmlBehaviour();\n    this.foldingRules = new XmlFoldMode();\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.voidElements = lang.arrayToMap([]);\n    this.blockComment = { start: \"<!--\", end: \"-->\" };\n    this.createWorker = function (session) {\n        var worker = new WorkerClient([\"ace\"], \"ace/mode/xml_worker\", \"Worker\");\n        worker.attachToDocument(session.getDocument());\n        worker.on(\"error\", function (e) {\n            session.setAnnotations(e.data);\n        });\n        worker.on(\"terminate\", function () {\n            session.clearAnnotations();\n        });\n        return worker;\n    };\n    this.$id = \"ace/mode/xml\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/xml\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}