{"ast":null,"code":"ace.define(\"ace/mode/applescript_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var AppleScriptHighlightRules = function () {\n    var keywords = \"about|above|after|against|and|around|as|at|back|before|beginning|\" + \"behind|below|beneath|beside|between|but|by|considering|\" + \"contain|contains|continue|copy|div|does|eighth|else|end|equal|\" + \"equals|error|every|exit|fifth|first|for|fourth|from|front|\" + \"get|given|global|if|ignoring|in|into|is|it|its|last|local|me|\" + \"middle|mod|my|ninth|not|of|on|onto|or|over|prop|property|put|ref|\" + \"reference|repeat|returning|script|second|set|seventh|since|\" + \"sixth|some|tell|tenth|that|the|then|third|through|thru|\" + \"timeout|times|to|transaction|try|until|where|while|whose|with|without\";\n    var builtinConstants = \"AppleScript|false|linefeed|return|pi|quote|result|space|tab|true\";\n    var builtinFunctions = \"activate|beep|count|delay|launch|log|offset|read|round|run|say|\" + \"summarize|write\";\n    var builtinTypes = \"alias|application|boolean|class|constant|date|file|integer|list|\" + \"number|real|record|string|text|character|characters|contents|day|\" + \"frontmost|id|item|length|month|name|paragraph|paragraphs|rest|\" + \"reverse|running|time|version|weekday|word|words|year\";\n    var keywordMapper = this.createKeywordMapper({\n      \"support.function\": builtinFunctions,\n      \"constant.language\": builtinConstants,\n      \"support.type\": builtinTypes,\n      \"keyword\": keywords\n    }, \"identifier\");\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"--.*$\"\n      }, {\n        token: \"comment\",\n        // multi line comment\n        regex: \"\\\\(\\\\*\",\n        next: \"comment\"\n      }, {\n        token: \"string\",\n        // \" string\n        regex: '\".*?\"'\n      }, {\n        token: \"support.type\",\n        regex: '\\\\b(POSIX file|POSIX path|(date|time) string|quoted form)\\\\b'\n      }, {\n        token: \"support.function\",\n        regex: '\\\\b(clipboard info|the clipboard|info for|list (disks|folder)|' + 'mount volume|path to|(close|open for) access|(get|set) eof|' + 'current date|do shell script|get volume settings|random number|' + 'set volume|system attribute|system info|time to GMT|' + '(load|run|store) script|scripting components|' + 'ASCII (character|number)|localized string|' + 'choose (application|color|file|file name|' + 'folder|from list|remote application|URL)|' + 'display (alert|dialog))\\\\b|^\\\\s*return\\\\b'\n      }, {\n        token: \"constant.language\",\n        regex: '\\\\b(text item delimiters|current application|missing value)\\\\b'\n      }, {\n        token: \"keyword\",\n        regex: '\\\\b(apart from|aside from|instead of|out of|greater than|' + \"isn't|(doesn't|does not) (equal|come before|come after|contain)|\" + '(greater|less) than( or equal)?|(starts?|ends|begins?) with|' + 'contained by|comes (before|after)|a (ref|reference))\\\\b'\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z][a-zA-Z0-9_]*\\\\b\"\n      }],\n      \"comment\": [{\n        token: \"comment\",\n        // closing comment\n        regex: \"\\\\*\\\\)\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment\"\n      }]\n    };\n    this.normalizeRules();\n  };\n  oop.inherits(AppleScriptHighlightRules, TextHighlightRules);\n  exports.AppleScriptHighlightRules = AppleScriptHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Range = require(\"../../range\").Range;\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n      return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n        return range;\n      }\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n        endRow = row;\n      }\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n      var endRow = row;\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/applescript\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/applescript_highlight_rules\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var AppleScriptHighlightRules = require(\"./applescript_highlight_rules\").AppleScriptHighlightRules;\n  var FoldMode = require(\"./folding/cstyle\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = AppleScriptHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"--\";\n    this.blockComment = {\n      start: \"(*\",\n      end: \"*)\"\n    };\n    this.$id = \"ace/mode/applescript\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/applescript\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","AppleScriptHighlightRules","keywords","builtinConstants","builtinFunctions","builtinTypes","keywordMapper","createKeywordMapper","$rules","token","regex","next","defaultToken","normalizeRules","inherits","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","replace","start","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","$id"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-applescript.js"],"sourcesContent":["ace.define(\"ace/mode/applescript_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar AppleScriptHighlightRules = function () {\n    var keywords = (\"about|above|after|against|and|around|as|at|back|before|beginning|\" +\n        \"behind|below|beneath|beside|between|but|by|considering|\" +\n        \"contain|contains|continue|copy|div|does|eighth|else|end|equal|\" +\n        \"equals|error|every|exit|fifth|first|for|fourth|from|front|\" +\n        \"get|given|global|if|ignoring|in|into|is|it|its|last|local|me|\" +\n        \"middle|mod|my|ninth|not|of|on|onto|or|over|prop|property|put|ref|\" +\n        \"reference|repeat|returning|script|second|set|seventh|since|\" +\n        \"sixth|some|tell|tenth|that|the|then|third|through|thru|\" +\n        \"timeout|times|to|transaction|try|until|where|while|whose|with|without\");\n    var builtinConstants = (\"AppleScript|false|linefeed|return|pi|quote|result|space|tab|true\");\n    var builtinFunctions = (\"activate|beep|count|delay|launch|log|offset|read|round|run|say|\" +\n        \"summarize|write\");\n    var builtinTypes = (\"alias|application|boolean|class|constant|date|file|integer|list|\" +\n        \"number|real|record|string|text|character|characters|contents|day|\" +\n        \"frontmost|id|item|length|month|name|paragraph|paragraphs|rest|\" +\n        \"reverse|running|time|version|weekday|word|words|year\");\n    var keywordMapper = this.createKeywordMapper({\n        \"support.function\": builtinFunctions,\n        \"constant.language\": builtinConstants,\n        \"support.type\": builtinTypes,\n        \"keyword\": keywords\n    }, \"identifier\");\n    this.$rules = {\n        \"start\": [\n            {\n                token: \"comment\",\n                regex: \"--.*$\"\n            },\n            {\n                token: \"comment\", // multi line comment\n                regex: \"\\\\(\\\\*\",\n                next: \"comment\"\n            },\n            {\n                token: \"string\", // \" string\n                regex: '\".*?\"'\n            },\n            {\n                token: \"support.type\",\n                regex: '\\\\b(POSIX file|POSIX path|(date|time) string|quoted form)\\\\b'\n            },\n            {\n                token: \"support.function\",\n                regex: '\\\\b(clipboard info|the clipboard|info for|list (disks|folder)|' +\n                    'mount volume|path to|(close|open for) access|(get|set) eof|' +\n                    'current date|do shell script|get volume settings|random number|' +\n                    'set volume|system attribute|system info|time to GMT|' +\n                    '(load|run|store) script|scripting components|' +\n                    'ASCII (character|number)|localized string|' +\n                    'choose (application|color|file|file name|' +\n                    'folder|from list|remote application|URL)|' +\n                    'display (alert|dialog))\\\\b|^\\\\s*return\\\\b'\n            },\n            {\n                token: \"constant.language\",\n                regex: '\\\\b(text item delimiters|current application|missing value)\\\\b'\n            },\n            {\n                token: \"keyword\",\n                regex: '\\\\b(apart from|aside from|instead of|out of|greater than|' +\n                    \"isn't|(doesn't|does not) (equal|come before|come after|contain)|\" +\n                    '(greater|less) than( or equal)?|(starts?|ends|begins?) with|' +\n                    'contained by|comes (before|after)|a (ref|reference))\\\\b'\n            },\n            {\n                token: keywordMapper,\n                regex: \"[a-zA-Z][a-zA-Z0-9_]*\\\\b\"\n            }\n        ],\n        \"comment\": [\n            {\n                token: \"comment\", // closing comment\n                regex: \"\\\\*\\\\)\",\n                next: \"start\"\n            }, {\n                defaultToken: \"comment\"\n            }\n        ]\n    };\n    this.normalizeRules();\n};\noop.inherits(AppleScriptHighlightRules, TextHighlightRules);\nexports.AppleScriptHighlightRules = AppleScriptHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n        this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n        return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                }\n                else if (foldStyle != \"all\")\n                    range = null;\n            }\n            return range;\n        }\n        if (foldStyle === \"markbegin\")\n            return;\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    this.getSectionRange = function (session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                }\n                else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                }\n                else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m)\n                continue;\n            if (m[1])\n                depth--;\n            else\n                depth++;\n            if (!depth)\n                break;\n        }\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/applescript\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/applescript_highlight_rules\",\"ace/mode/folding/cstyle\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar AppleScriptHighlightRules = require(\"./applescript_highlight_rules\").AppleScriptHighlightRules;\nvar FoldMode = require(\"./folding/cstyle\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = AppleScriptHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"--\";\n    this.blockComment = { start: \"(*\", end: \"*)\" };\n    this.$id = \"ace/mode/applescript\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/applescript\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}