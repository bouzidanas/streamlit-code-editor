{"ast":null,"code":"ace.define(\"ace/snippets\", [\"require\", \"exports\", \"module\", \"ace/lib/dom\", \"ace/lib/oop\", \"ace/lib/event_emitter\", \"ace/lib/lang\", \"ace/range\", \"ace/range_list\", \"ace/keyboard/hash_handler\", \"ace/tokenizer\", \"ace/clipboard\", \"ace/editor\"], function (require, exports, module) {\n  \"use strict\";\n\n  var dom = require(\"./lib/dom\");\n  var oop = require(\"./lib/oop\");\n  var EventEmitter = require(\"./lib/event_emitter\").EventEmitter;\n  var lang = require(\"./lib/lang\");\n  var Range = require(\"./range\").Range;\n  var RangeList = require(\"./range_list\").RangeList;\n  var HashHandler = require(\"./keyboard/hash_handler\").HashHandler;\n  var Tokenizer = require(\"./tokenizer\").Tokenizer;\n  var clipboard = require(\"./clipboard\");\n  var VARIABLES = {\n    CURRENT_WORD: function (editor) {\n      return editor.session.getTextRange(editor.session.getWordRange());\n    },\n    SELECTION: function (editor, name, indentation) {\n      var text = editor.session.getTextRange();\n      if (indentation) return text.replace(/\\n\\r?([ \\t]*\\S)/g, \"\\n\" + indentation + \"$1\");\n      return text;\n    },\n    CURRENT_LINE: function (editor) {\n      return editor.session.getLine(editor.getCursorPosition().row);\n    },\n    PREV_LINE: function (editor) {\n      return editor.session.getLine(editor.getCursorPosition().row - 1);\n    },\n    LINE_INDEX: function (editor) {\n      return editor.getCursorPosition().row;\n    },\n    LINE_NUMBER: function (editor) {\n      return editor.getCursorPosition().row + 1;\n    },\n    SOFT_TABS: function (editor) {\n      return editor.session.getUseSoftTabs() ? \"YES\" : \"NO\";\n    },\n    TAB_SIZE: function (editor) {\n      return editor.session.getTabSize();\n    },\n    CLIPBOARD: function (editor) {\n      return clipboard.getText && clipboard.getText();\n    },\n    FILENAME: function (editor) {\n      return /[^/\\\\]*$/.exec(this.FILEPATH(editor))[0];\n    },\n    FILENAME_BASE: function (editor) {\n      return /[^/\\\\]*$/.exec(this.FILEPATH(editor))[0].replace(/\\.[^.]*$/, \"\");\n    },\n    DIRECTORY: function (editor) {\n      return this.FILEPATH(editor).replace(/[^/\\\\]*$/, \"\");\n    },\n    FILEPATH: function (editor) {\n      return \"/not implemented.txt\";\n    },\n    WORKSPACE_NAME: function () {\n      return \"Unknown\";\n    },\n    FULLNAME: function () {\n      return \"Unknown\";\n    },\n    BLOCK_COMMENT_START: function (editor) {\n      var mode = editor.session.$mode || {};\n      return mode.blockComment && mode.blockComment.start || \"\";\n    },\n    BLOCK_COMMENT_END: function (editor) {\n      var mode = editor.session.$mode || {};\n      return mode.blockComment && mode.blockComment.end || \"\";\n    },\n    LINE_COMMENT: function (editor) {\n      var mode = editor.session.$mode || {};\n      return mode.lineCommentStart || \"\";\n    },\n    CURRENT_YEAR: date.bind(null, {\n      year: \"numeric\"\n    }),\n    CURRENT_YEAR_SHORT: date.bind(null, {\n      year: \"2-digit\"\n    }),\n    CURRENT_MONTH: date.bind(null, {\n      month: \"numeric\"\n    }),\n    CURRENT_MONTH_NAME: date.bind(null, {\n      month: \"long\"\n    }),\n    CURRENT_MONTH_NAME_SHORT: date.bind(null, {\n      month: \"short\"\n    }),\n    CURRENT_DATE: date.bind(null, {\n      day: \"2-digit\"\n    }),\n    CURRENT_DAY_NAME: date.bind(null, {\n      weekday: \"long\"\n    }),\n    CURRENT_DAY_NAME_SHORT: date.bind(null, {\n      weekday: \"short\"\n    }),\n    CURRENT_HOUR: date.bind(null, {\n      hour: \"2-digit\",\n      hour12: false\n    }),\n    CURRENT_MINUTE: date.bind(null, {\n      minute: \"2-digit\"\n    }),\n    CURRENT_SECOND: date.bind(null, {\n      second: \"2-digit\"\n    })\n  };\n  VARIABLES.SELECTED_TEXT = VARIABLES.SELECTION;\n  function date(dateFormat) {\n    var str = new Date().toLocaleString(\"en-us\", dateFormat);\n    return str.length == 1 ? \"0\" + str : str;\n  }\n  var SnippetManager = /** @class */function () {\n    function SnippetManager() {\n      this.snippetMap = {};\n      this.snippetNameMap = {};\n      this.variables = VARIABLES;\n    }\n    SnippetManager.prototype.getTokenizer = function () {\n      return SnippetManager[\"$tokenizer\"] || this.createTokenizer();\n    };\n    SnippetManager.prototype.createTokenizer = function () {\n      function TabstopToken(str) {\n        str = str.substr(1);\n        if (/^\\d+$/.test(str)) return [{\n          tabstopId: parseInt(str, 10)\n        }];\n        return [{\n          text: str\n        }];\n      }\n      function escape(ch) {\n        return \"(?:[^\\\\\\\\\" + ch + \"]|\\\\\\\\.)\";\n      }\n      var formatMatcher = {\n        regex: \"/(\" + escape(\"/\") + \"+)/\",\n        onMatch: function (val, state, stack) {\n          var ts = stack[0];\n          ts.fmtString = true;\n          ts.guard = val.slice(1, -1);\n          ts.flag = \"\";\n          return \"\";\n        },\n        next: \"formatString\"\n      };\n      SnippetManager[\"$tokenizer\"] = new Tokenizer({\n        start: [{\n          regex: /\\\\./,\n          onMatch: function (val, state, stack) {\n            var ch = val[1];\n            if (ch == \"}\" && stack.length) {\n              val = ch;\n            } else if (\"`$\\\\\".indexOf(ch) != -1) {\n              val = ch;\n            }\n            return [val];\n          }\n        }, {\n          regex: /}/,\n          onMatch: function (val, state, stack) {\n            return [stack.length ? stack.shift() : val];\n          }\n        }, {\n          regex: /\\$(?:\\d+|\\w+)/,\n          onMatch: TabstopToken\n        }, {\n          regex: /\\$\\{[\\dA-Z_a-z]+/,\n          onMatch: function (str, state, stack) {\n            var t = TabstopToken(str.substr(1));\n            stack.unshift(t[0]);\n            return t;\n          },\n          next: \"snippetVar\"\n        }, {\n          regex: /\\n/,\n          token: \"newline\",\n          merge: false\n        }],\n        snippetVar: [{\n          regex: \"\\\\|\" + escape(\"\\\\|\") + \"*\\\\|\",\n          onMatch: function (val, state, stack) {\n            var choices = val.slice(1, -1).replace(/\\\\[,|\\\\]|,/g, function (operator) {\n              return operator.length == 2 ? operator[1] : \"\\x00\";\n            }).split(\"\\x00\").map(function (value) {\n              return {\n                value: value\n              };\n            });\n            stack[0].choices = choices;\n            return [choices[0]];\n          },\n          next: \"start\"\n        }, formatMatcher, {\n          regex: \"([^:}\\\\\\\\]|\\\\\\\\.)*:?\",\n          token: \"\",\n          next: \"start\"\n        }],\n        formatString: [{\n          regex: /:/,\n          onMatch: function (val, state, stack) {\n            if (stack.length && stack[0].expectElse) {\n              stack[0].expectElse = false;\n              stack[0].ifEnd = {\n                elseEnd: stack[0]\n              };\n              return [stack[0].ifEnd];\n            }\n            return \":\";\n          }\n        }, {\n          regex: /\\\\./,\n          onMatch: function (val, state, stack) {\n            var ch = val[1];\n            if (ch == \"}\" && stack.length) val = ch;else if (\"`$\\\\\".indexOf(ch) != -1) val = ch;else if (ch == \"n\") val = \"\\n\";else if (ch == \"t\") val = \"\\t\";else if (\"ulULE\".indexOf(ch) != -1) val = {\n              changeCase: ch,\n              local: ch > \"a\"\n            };\n            return [val];\n          }\n        }, {\n          regex: \"/\\\\w*}\",\n          onMatch: function (val, state, stack) {\n            var next = stack.shift();\n            if (next) next.flag = val.slice(1, -1);\n            this.next = next && next.tabstopId ? \"start\" : \"\";\n            return [next || val];\n          },\n          next: \"start\"\n        }, {\n          regex: /\\$(?:\\d+|\\w+)/,\n          onMatch: function (val, state, stack) {\n            return [{\n              text: val.slice(1)\n            }];\n          }\n        }, {\n          regex: /\\${\\w+/,\n          onMatch: function (val, state, stack) {\n            var token = {\n              text: val.slice(2)\n            };\n            stack.unshift(token);\n            return [token];\n          },\n          next: \"formatStringVar\"\n        }, {\n          regex: /\\n/,\n          token: \"newline\",\n          merge: false\n        }, {\n          regex: /}/,\n          onMatch: function (val, state, stack) {\n            var next = stack.shift();\n            this.next = next && next.tabstopId ? \"start\" : \"\";\n            return [next || val];\n          },\n          next: \"start\"\n        }],\n        formatStringVar: [{\n          regex: /:\\/\\w+}/,\n          onMatch: function (val, state, stack) {\n            var ts = stack[0];\n            ts.formatFunction = val.slice(2, -1);\n            return [stack.shift()];\n          },\n          next: \"formatString\"\n        }, formatMatcher, {\n          regex: /:[\\?\\-+]?/,\n          onMatch: function (val, state, stack) {\n            if (val[1] == \"+\") stack[0].ifEnd = stack[0];\n            if (val[1] == \"?\") stack[0].expectElse = true;\n          },\n          next: \"formatString\"\n        }, {\n          regex: \"([^:}\\\\\\\\]|\\\\\\\\.)*:?\",\n          token: \"\",\n          next: \"formatString\"\n        }]\n      });\n      return SnippetManager[\"$tokenizer\"];\n    };\n    SnippetManager.prototype.tokenizeTmSnippet = function (str, startState) {\n      return this.getTokenizer().getLineTokens(str, startState).tokens.map(function (x) {\n        return x.value || x;\n      });\n    };\n    SnippetManager.prototype.getVariableValue = function (editor, name, indentation) {\n      if (/^\\d+$/.test(name)) return (this.variables.__ || {})[name] || \"\";\n      if (/^[A-Z]\\d+$/.test(name)) return (this.variables[name[0] + \"__\"] || {})[name.substr(1)] || \"\";\n      name = name.replace(/^TM_/, \"\");\n      if (!this.variables.hasOwnProperty(name)) return \"\";\n      var value = this.variables[name];\n      if (typeof value == \"function\") value = this.variables[name](editor, name, indentation);\n      return value == null ? \"\" : value;\n    };\n    SnippetManager.prototype.tmStrFormat = function (str, ch, editor) {\n      if (!ch.fmt) return str;\n      var flag = ch.flag || \"\";\n      var re = ch.guard;\n      re = new RegExp(re, flag.replace(/[^gim]/g, \"\"));\n      var fmtTokens = typeof ch.fmt == \"string\" ? this.tokenizeTmSnippet(ch.fmt, \"formatString\") : ch.fmt;\n      var _self = this;\n      var formatted = str.replace(re, function () {\n        var oldArgs = _self.variables.__;\n        _self.variables.__ = [].slice.call(arguments);\n        var fmtParts = _self.resolveVariables(fmtTokens, editor);\n        var gChangeCase = \"E\";\n        for (var i = 0; i < fmtParts.length; i++) {\n          var ch = fmtParts[i];\n          if (typeof ch == \"object\") {\n            fmtParts[i] = \"\";\n            if (ch.changeCase && ch.local) {\n              var next = fmtParts[i + 1];\n              if (next && typeof next == \"string\") {\n                if (ch.changeCase == \"u\") fmtParts[i] = next[0].toUpperCase();else fmtParts[i] = next[0].toLowerCase();\n                fmtParts[i + 1] = next.substr(1);\n              }\n            } else if (ch.changeCase) {\n              gChangeCase = ch.changeCase;\n            }\n          } else if (gChangeCase == \"U\") {\n            fmtParts[i] = ch.toUpperCase();\n          } else if (gChangeCase == \"L\") {\n            fmtParts[i] = ch.toLowerCase();\n          }\n        }\n        _self.variables.__ = oldArgs;\n        return fmtParts.join(\"\");\n      });\n      return formatted;\n    };\n    SnippetManager.prototype.tmFormatFunction = function (str, ch, editor) {\n      if (ch.formatFunction == \"upcase\") return str.toUpperCase();\n      if (ch.formatFunction == \"downcase\") return str.toLowerCase();\n      return str;\n    };\n    SnippetManager.prototype.resolveVariables = function (snippet, editor) {\n      var result = [];\n      var indentation = \"\";\n      var afterNewLine = true;\n      for (var i = 0; i < snippet.length; i++) {\n        var ch = snippet[i];\n        if (typeof ch == \"string\") {\n          result.push(ch);\n          if (ch == \"\\n\") {\n            afterNewLine = true;\n            indentation = \"\";\n          } else if (afterNewLine) {\n            indentation = /^\\t*/.exec(ch)[0];\n            afterNewLine = /\\S/.test(ch);\n          }\n          continue;\n        }\n        if (!ch) continue;\n        afterNewLine = false;\n        if (ch.fmtString) {\n          var j = snippet.indexOf(ch, i + 1);\n          if (j == -1) j = snippet.length;\n          ch.fmt = snippet.slice(i + 1, j);\n          i = j;\n        }\n        if (ch.text) {\n          var value = this.getVariableValue(editor, ch.text, indentation) + \"\";\n          if (ch.fmtString) value = this.tmStrFormat(value, ch, editor);\n          if (ch.formatFunction) value = this.tmFormatFunction(value, ch, editor);\n          if (value && !ch.ifEnd) {\n            result.push(value);\n            gotoNext(ch);\n          } else if (!value && ch.ifEnd) {\n            gotoNext(ch.ifEnd);\n          }\n        } else if (ch.elseEnd) {\n          gotoNext(ch.elseEnd);\n        } else if (ch.tabstopId != null) {\n          result.push(ch);\n        } else if (ch.changeCase != null) {\n          result.push(ch);\n        }\n      }\n      function gotoNext(ch) {\n        var i1 = snippet.indexOf(ch, i + 1);\n        if (i1 != -1) i = i1;\n      }\n      return result;\n    };\n    SnippetManager.prototype.getDisplayTextForSnippet = function (editor, snippetText) {\n      var processedSnippet = processSnippetText.call(this, editor, snippetText);\n      return processedSnippet.text;\n    };\n    SnippetManager.prototype.insertSnippetForSelection = function (editor, snippetText, options) {\n      if (options === void 0) {\n        options = {};\n      }\n      var processedSnippet = processSnippetText.call(this, editor, snippetText, options);\n      var range = editor.getSelectionRange();\n      var end = editor.session.replace(range, processedSnippet.text);\n      var tabstopManager = new TabstopManager(editor);\n      var selectionId = editor.inVirtualSelectionMode && editor.selection.index;\n      tabstopManager.addTabstops(processedSnippet.tabstops, range.start, end, selectionId);\n    };\n    SnippetManager.prototype.insertSnippet = function (editor, snippetText, options) {\n      if (options === void 0) {\n        options = {};\n      }\n      var self = this;\n      if (editor.inVirtualSelectionMode) return self.insertSnippetForSelection(editor, snippetText, options);\n      editor.forEachSelection(function () {\n        self.insertSnippetForSelection(editor, snippetText, options);\n      }, null, {\n        keepOrder: true\n      });\n      if (editor.tabstopManager) editor.tabstopManager.tabNext();\n    };\n    SnippetManager.prototype.$getScope = function (editor) {\n      var scope = editor.session.$mode.$id || \"\";\n      scope = scope.split(\"/\").pop();\n      if (scope === \"html\" || scope === \"php\") {\n        if (scope === \"php\" && !editor.session.$mode.inlinePhp) scope = \"html\";\n        var c = editor.getCursorPosition();\n        var state = editor.session.getState(c.row);\n        if (typeof state === \"object\") {\n          state = state[0];\n        }\n        if (state.substring) {\n          if (state.substring(0, 3) == \"js-\") scope = \"javascript\";else if (state.substring(0, 4) == \"css-\") scope = \"css\";else if (state.substring(0, 4) == \"php-\") scope = \"php\";\n        }\n      }\n      return scope;\n    };\n    SnippetManager.prototype.getActiveScopes = function (editor) {\n      var scope = this.$getScope(editor);\n      var scopes = [scope];\n      var snippetMap = this.snippetMap;\n      if (snippetMap[scope] && snippetMap[scope].includeScopes) {\n        scopes.push.apply(scopes, snippetMap[scope].includeScopes);\n      }\n      scopes.push(\"_\");\n      return scopes;\n    };\n    SnippetManager.prototype.expandWithTab = function (editor, options) {\n      var self = this;\n      var result = editor.forEachSelection(function () {\n        return self.expandSnippetForSelection(editor, options);\n      }, null, {\n        keepOrder: true\n      });\n      if (result && editor.tabstopManager) editor.tabstopManager.tabNext();\n      return result;\n    };\n    SnippetManager.prototype.expandSnippetForSelection = function (editor, options) {\n      var cursor = editor.getCursorPosition();\n      var line = editor.session.getLine(cursor.row);\n      var before = line.substring(0, cursor.column);\n      var after = line.substr(cursor.column);\n      var snippetMap = this.snippetMap;\n      var snippet;\n      this.getActiveScopes(editor).some(function (scope) {\n        var snippets = snippetMap[scope];\n        if (snippets) snippet = this.findMatchingSnippet(snippets, before, after);\n        return !!snippet;\n      }, this);\n      if (!snippet) return false;\n      if (options && options.dryRun) return true;\n      editor.session.doc.removeInLine(cursor.row, cursor.column - snippet.replaceBefore.length, cursor.column + snippet.replaceAfter.length);\n      this.variables.M__ = snippet.matchBefore;\n      this.variables.T__ = snippet.matchAfter;\n      this.insertSnippetForSelection(editor, snippet.content);\n      this.variables.M__ = this.variables.T__ = null;\n      return true;\n    };\n    SnippetManager.prototype.findMatchingSnippet = function (snippetList, before, after) {\n      for (var i = snippetList.length; i--;) {\n        var s = snippetList[i];\n        if (s.startRe && !s.startRe.test(before)) continue;\n        if (s.endRe && !s.endRe.test(after)) continue;\n        if (!s.startRe && !s.endRe) continue;\n        s.matchBefore = s.startRe ? s.startRe.exec(before) : [\"\"];\n        s.matchAfter = s.endRe ? s.endRe.exec(after) : [\"\"];\n        s.replaceBefore = s.triggerRe ? s.triggerRe.exec(before)[0] : \"\";\n        s.replaceAfter = s.endTriggerRe ? s.endTriggerRe.exec(after)[0] : \"\";\n        return s;\n      }\n    };\n    SnippetManager.prototype.register = function (snippets, scope) {\n      var snippetMap = this.snippetMap;\n      var snippetNameMap = this.snippetNameMap;\n      var self = this;\n      if (!snippets) snippets = [];\n      function wrapRegexp(src) {\n        if (src && !/^\\^?\\(.*\\)\\$?$|^\\\\b$/.test(src)) src = \"(?:\" + src + \")\";\n        return src || \"\";\n      }\n      function guardedRegexp(re, guard, opening) {\n        re = wrapRegexp(re);\n        guard = wrapRegexp(guard);\n        if (opening) {\n          re = guard + re;\n          if (re && re[re.length - 1] != \"$\") re = re + \"$\";\n        } else {\n          re = re + guard;\n          if (re && re[0] != \"^\") re = \"^\" + re;\n        }\n        return new RegExp(re);\n      }\n      function addSnippet(s) {\n        if (!s.scope) s.scope = scope || \"_\";\n        scope = s.scope;\n        if (!snippetMap[scope]) {\n          snippetMap[scope] = [];\n          snippetNameMap[scope] = {};\n        }\n        var map = snippetNameMap[scope];\n        if (s.name) {\n          var old = map[s.name];\n          if (old) self.unregister(old);\n          map[s.name] = s;\n        }\n        snippetMap[scope].push(s);\n        if (s.prefix) s.tabTrigger = s.prefix;\n        if (!s.content && s.body) s.content = Array.isArray(s.body) ? s.body.join(\"\\n\") : s.body;\n        if (s.tabTrigger && !s.trigger) {\n          if (!s.guard && /^\\w/.test(s.tabTrigger)) s.guard = \"\\\\b\";\n          s.trigger = lang.escapeRegExp(s.tabTrigger);\n        }\n        if (!s.trigger && !s.guard && !s.endTrigger && !s.endGuard) return;\n        s.startRe = guardedRegexp(s.trigger, s.guard, true);\n        s.triggerRe = new RegExp(s.trigger);\n        s.endRe = guardedRegexp(s.endTrigger, s.endGuard, true);\n        s.endTriggerRe = new RegExp(s.endTrigger);\n      }\n      if (Array.isArray(snippets)) {\n        snippets.forEach(addSnippet);\n      } else {\n        Object.keys(snippets).forEach(function (key) {\n          addSnippet(snippets[key]);\n        });\n      }\n      this._signal(\"registerSnippets\", {\n        scope: scope\n      });\n    };\n    SnippetManager.prototype.unregister = function (snippets, scope) {\n      var snippetMap = this.snippetMap;\n      var snippetNameMap = this.snippetNameMap;\n      function removeSnippet(s) {\n        var nameMap = snippetNameMap[s.scope || scope];\n        if (nameMap && nameMap[s.name]) {\n          delete nameMap[s.name];\n          var map = snippetMap[s.scope || scope];\n          var i = map && map.indexOf(s);\n          if (i >= 0) map.splice(i, 1);\n        }\n      }\n      if (snippets.content) removeSnippet(snippets);else if (Array.isArray(snippets)) snippets.forEach(removeSnippet);\n    };\n    SnippetManager.prototype.parseSnippetFile = function (str) {\n      str = str.replace(/\\r/g, \"\");\n      var list = [],\n        /**@type{Snippet}*/snippet = {};\n      var re = /^#.*|^({[\\s\\S]*})\\s*$|^(\\S+) (.*)$|^((?:\\n*\\t.*)+)/gm;\n      var m;\n      while (m = re.exec(str)) {\n        if (m[1]) {\n          try {\n            snippet = JSON.parse(m[1]);\n            list.push(snippet);\n          } catch (e) {}\n        }\n        if (m[4]) {\n          snippet.content = m[4].replace(/^\\t/gm, \"\");\n          list.push(snippet);\n          snippet = {};\n        } else {\n          var key = m[2],\n            val = m[3];\n          if (key == \"regex\") {\n            var guardRe = /\\/((?:[^\\/\\\\]|\\\\.)*)|$/g;\n            snippet.guard = guardRe.exec(val)[1];\n            snippet.trigger = guardRe.exec(val)[1];\n            snippet.endTrigger = guardRe.exec(val)[1];\n            snippet.endGuard = guardRe.exec(val)[1];\n          } else if (key == \"snippet\") {\n            snippet.tabTrigger = val.match(/^\\S*/)[0];\n            if (!snippet.name) snippet.name = val;\n          } else if (key) {\n            snippet[key] = val;\n          }\n        }\n      }\n      return list;\n    };\n    SnippetManager.prototype.getSnippetByName = function (name, editor) {\n      var snippetMap = this.snippetNameMap;\n      var snippet;\n      this.getActiveScopes(editor).some(function (scope) {\n        var snippets = snippetMap[scope];\n        if (snippets) snippet = snippets[name];\n        return !!snippet;\n      }, this);\n      return snippet;\n    };\n    return SnippetManager;\n  }();\n  oop.implement(SnippetManager.prototype, EventEmitter);\n  var processSnippetText = function (editor, snippetText, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var cursor = editor.getCursorPosition();\n    var line = editor.session.getLine(cursor.row);\n    var tabString = editor.session.getTabString();\n    var indentString = line.match(/^\\s*/)[0];\n    if (cursor.column < indentString.length) indentString = indentString.slice(0, cursor.column);\n    snippetText = snippetText.replace(/\\r/g, \"\");\n    var tokens = this.tokenizeTmSnippet(snippetText);\n    tokens = this.resolveVariables(tokens, editor);\n    tokens = tokens.map(function (x) {\n      if (x == \"\\n\" && !options.excludeExtraIndent) return x + indentString;\n      if (typeof x == \"string\") return x.replace(/\\t/g, tabString);\n      return x;\n    });\n    var tabstops = [];\n    tokens.forEach(function (p, i) {\n      if (typeof p != \"object\") return;\n      var id = p.tabstopId;\n      var ts = tabstops[id];\n      if (!ts) {\n        ts = tabstops[id] = [];\n        ts.index = id;\n        ts.value = \"\";\n        ts.parents = {};\n      }\n      if (ts.indexOf(p) !== -1) return;\n      if (p.choices && !ts.choices) ts.choices = p.choices;\n      ts.push(p);\n      var i1 = tokens.indexOf(p, i + 1);\n      if (i1 === -1) return;\n      var value = tokens.slice(i + 1, i1);\n      var isNested = value.some(function (t) {\n        return typeof t === \"object\";\n      });\n      if (isNested && !ts.value) {\n        ts.value = value;\n      } else if (value.length && (!ts.value || typeof ts.value !== \"string\")) {\n        ts.value = value.join(\"\");\n      }\n    });\n    tabstops.forEach(function (ts) {\n      ts.length = 0;\n    });\n    var expanding = {};\n    function copyValue(val) {\n      var copy = [];\n      for (var i = 0; i < val.length; i++) {\n        var p = val[i];\n        if (typeof p == \"object\") {\n          if (expanding[p.tabstopId]) continue;\n          var j = val.lastIndexOf(p, i - 1);\n          p = copy[j] || {\n            tabstopId: p.tabstopId\n          };\n        }\n        copy[i] = p;\n      }\n      return copy;\n    }\n    for (var i = 0; i < tokens.length; i++) {\n      var p = tokens[i];\n      if (typeof p != \"object\") continue;\n      var id = p.tabstopId;\n      var ts = tabstops[id];\n      var i1 = tokens.indexOf(p, i + 1);\n      if (expanding[id]) {\n        if (expanding[id] === p) {\n          delete expanding[id];\n          Object.keys(expanding).forEach(function (parentId) {\n            ts.parents[parentId] = true;\n          });\n        }\n        continue;\n      }\n      expanding[id] = p;\n      var value = ts.value;\n      if (typeof value !== \"string\") value = copyValue(value);else if (p.fmt) value = this.tmStrFormat(value, p, editor);\n      tokens.splice.apply(tokens, [i + 1, Math.max(0, i1 - i)].concat(value, p));\n      if (ts.indexOf(p) === -1) ts.push(p);\n    }\n    var row = 0,\n      column = 0;\n    var text = \"\";\n    tokens.forEach(function (t) {\n      if (typeof t === \"string\") {\n        var lines = t.split(\"\\n\");\n        if (lines.length > 1) {\n          column = lines[lines.length - 1].length;\n          row += lines.length - 1;\n        } else column += t.length;\n        text += t;\n      } else if (t) {\n        if (!t.start) t.start = {\n          row: row,\n          column: column\n        };else t.end = {\n          row: row,\n          column: column\n        };\n      }\n    });\n    return {\n      text: text,\n      tabstops: tabstops,\n      tokens: tokens\n    };\n  };\n  var TabstopManager = /** @class */function () {\n    function TabstopManager(editor) {\n      this.index = 0;\n      this.ranges = [];\n      this.tabstops = [];\n      if (editor.tabstopManager) return editor.tabstopManager;\n      editor.tabstopManager = this;\n      this.$onChange = this.onChange.bind(this);\n      this.$onChangeSelection = lang.delayedCall(this.onChangeSelection.bind(this)).schedule;\n      this.$onChangeSession = this.onChangeSession.bind(this);\n      this.$onAfterExec = this.onAfterExec.bind(this);\n      this.attach(editor);\n    }\n    TabstopManager.prototype.attach = function (editor) {\n      this.$openTabstops = null;\n      this.selectedTabstop = null;\n      this.editor = editor;\n      this.session = editor.session;\n      this.editor.on(\"change\", this.$onChange);\n      this.editor.on(\"changeSelection\", this.$onChangeSelection);\n      this.editor.on(\"changeSession\", this.$onChangeSession);\n      this.editor.commands.on(\"afterExec\", this.$onAfterExec);\n      this.editor.keyBinding.addKeyboardHandler(this.keyboardHandler);\n    };\n    TabstopManager.prototype.detach = function () {\n      this.tabstops.forEach(this.removeTabstopMarkers, this);\n      this.ranges.length = 0;\n      this.tabstops.length = 0;\n      this.selectedTabstop = null;\n      this.editor.off(\"change\", this.$onChange);\n      this.editor.off(\"changeSelection\", this.$onChangeSelection);\n      this.editor.off(\"changeSession\", this.$onChangeSession);\n      this.editor.commands.off(\"afterExec\", this.$onAfterExec);\n      this.editor.keyBinding.removeKeyboardHandler(this.keyboardHandler);\n      this.editor.tabstopManager = null;\n      this.session = null;\n      this.editor = null;\n    };\n    TabstopManager.prototype.onChange = function (delta) {\n      var isRemove = delta.action[0] == \"r\";\n      var selectedTabstop = this.selectedTabstop || {};\n      var parents = selectedTabstop.parents || {};\n      var tabstops = this.tabstops.slice();\n      for (var i = 0; i < tabstops.length; i++) {\n        var ts = tabstops[i];\n        var active = ts == selectedTabstop || parents[ts.index];\n        ts.rangeList.$bias = active ? 0 : 1;\n        if (delta.action == \"remove\" && ts !== selectedTabstop) {\n          var parentActive = ts.parents && ts.parents[selectedTabstop.index];\n          var startIndex = ts.rangeList.pointIndex(delta.start, parentActive);\n          startIndex = startIndex < 0 ? -startIndex - 1 : startIndex + 1;\n          var endIndex = ts.rangeList.pointIndex(delta.end, parentActive);\n          endIndex = endIndex < 0 ? -endIndex - 1 : endIndex - 1;\n          var toRemove = ts.rangeList.ranges.slice(startIndex, endIndex);\n          for (var j = 0; j < toRemove.length; j++) this.removeRange(toRemove[j]);\n        }\n        ts.rangeList.$onChange(delta);\n      }\n      var session = this.session;\n      if (!this.$inChange && isRemove && session.getLength() == 1 && !session.getValue()) this.detach();\n    };\n    TabstopManager.prototype.updateLinkedFields = function () {\n      var ts = this.selectedTabstop;\n      if (!ts || !ts.hasLinkedRanges || !ts.firstNonLinked) return;\n      this.$inChange = true;\n      var session = this.session;\n      var text = session.getTextRange(ts.firstNonLinked);\n      for (var i = 0; i < ts.length; i++) {\n        var range = ts[i];\n        if (!range.linked) continue;\n        var original = range.original;\n        var fmt = exports.snippetManager.tmStrFormat(text, original, this.editor);\n        session.replace(range, fmt);\n      }\n      this.$inChange = false;\n    };\n    TabstopManager.prototype.onAfterExec = function (e) {\n      if (e.command && !e.command.readOnly) this.updateLinkedFields();\n    };\n    TabstopManager.prototype.onChangeSelection = function () {\n      if (!this.editor) return;\n      var lead = this.editor.selection.lead;\n      var anchor = this.editor.selection.anchor;\n      var isEmpty = this.editor.selection.isEmpty();\n      for (var i = 0; i < this.ranges.length; i++) {\n        if (this.ranges[i].linked) continue;\n        var containsLead = this.ranges[i].contains(lead.row, lead.column);\n        var containsAnchor = isEmpty || this.ranges[i].contains(anchor.row, anchor.column);\n        if (containsLead && containsAnchor) return;\n      }\n      this.detach();\n    };\n    TabstopManager.prototype.onChangeSession = function () {\n      this.detach();\n    };\n    TabstopManager.prototype.tabNext = function (dir) {\n      var max = this.tabstops.length;\n      var index = this.index + (dir || 1);\n      index = Math.min(Math.max(index, 1), max);\n      if (index == max) index = 0;\n      this.selectTabstop(index);\n      this.updateTabstopMarkers();\n      if (index === 0) {\n        this.detach();\n      }\n    };\n    TabstopManager.prototype.selectTabstop = function (index) {\n      this.$openTabstops = null;\n      var ts = this.tabstops[this.index];\n      if (ts) this.addTabstopMarkers(ts);\n      this.index = index;\n      ts = this.tabstops[this.index];\n      if (!ts || !ts.length) return;\n      this.selectedTabstop = ts;\n      var range = ts.firstNonLinked || ts;\n      if (ts.choices) range.cursor = range.start;\n      if (!this.editor.inVirtualSelectionMode) {\n        var sel = this.editor.multiSelect;\n        sel.toSingleRange(range);\n        for (var i = 0; i < ts.length; i++) {\n          if (ts.hasLinkedRanges && ts[i].linked) continue;\n          sel.addRange(ts[i].clone(), true);\n        }\n      } else {\n        this.editor.selection.fromOrientedRange(range);\n      }\n      this.editor.keyBinding.addKeyboardHandler(this.keyboardHandler);\n      if (this.selectedTabstop && this.selectedTabstop.choices) this.editor.execCommand(\"startAutocomplete\", {\n        matches: this.selectedTabstop.choices\n      });\n    };\n    TabstopManager.prototype.addTabstops = function (tabstops, start, end) {\n      var useLink = this.useLink || !this.editor.getOption(\"enableMultiselect\");\n      if (!this.$openTabstops) this.$openTabstops = [];\n      if (!tabstops[0]) {\n        var p = Range.fromPoints(end, end);\n        moveRelative(p.start, start);\n        moveRelative(p.end, start);\n        tabstops[0] = [p];\n        tabstops[0].index = 0;\n      }\n      var i = this.index;\n      var arg = [i + 1, 0];\n      var ranges = this.ranges;\n      var snippetId = this.snippetId = (this.snippetId || 0) + 1;\n      tabstops.forEach(function (ts, index) {\n        var dest = this.$openTabstops[index] || ts;\n        dest.snippetId = snippetId;\n        for (var i = 0; i < ts.length; i++) {\n          var p = ts[i];\n          var range = Range.fromPoints(p.start, p.end || p.start);\n          movePoint(range.start, start);\n          movePoint(range.end, start);\n          range.original = p;\n          range.tabstop = dest;\n          ranges.push(range);\n          if (dest != ts) dest.unshift(range);else dest[i] = range;\n          if (p.fmtString || dest.firstNonLinked && useLink) {\n            range.linked = true;\n            dest.hasLinkedRanges = true;\n          } else if (!dest.firstNonLinked) dest.firstNonLinked = range;\n        }\n        if (!dest.firstNonLinked) dest.hasLinkedRanges = false;\n        if (dest === ts) {\n          arg.push(dest);\n          this.$openTabstops[index] = dest;\n        }\n        this.addTabstopMarkers(dest);\n        dest.rangeList = dest.rangeList || new RangeList();\n        dest.rangeList.$bias = 0;\n        dest.rangeList.addList(dest);\n      }, this);\n      if (arg.length > 2) {\n        if (this.tabstops.length) arg.push(arg.splice(2, 1)[0]);\n        this.tabstops.splice.apply(this.tabstops, arg);\n      }\n    };\n    TabstopManager.prototype.addTabstopMarkers = function (ts) {\n      var session = this.session;\n      ts.forEach(function (range) {\n        if (!range.markerId) range.markerId = session.addMarker(range, \"ace_snippet-marker\", \"text\");\n      });\n    };\n    TabstopManager.prototype.removeTabstopMarkers = function (ts) {\n      var session = this.session;\n      ts.forEach(function (range) {\n        session.removeMarker(range.markerId);\n        range.markerId = null;\n      });\n    };\n    TabstopManager.prototype.updateTabstopMarkers = function () {\n      if (!this.selectedTabstop) return;\n      var currentSnippetId = this.selectedTabstop.snippetId;\n      if (this.selectedTabstop.index === 0) {\n        currentSnippetId--;\n      }\n      this.tabstops.forEach(function (ts) {\n        if (ts.snippetId === currentSnippetId) this.addTabstopMarkers(ts);else this.removeTabstopMarkers(ts);\n      }, this);\n    };\n    TabstopManager.prototype.removeRange = function (range) {\n      var i = range.tabstop.indexOf(range);\n      if (i != -1) range.tabstop.splice(i, 1);\n      i = this.ranges.indexOf(range);\n      if (i != -1) this.ranges.splice(i, 1);\n      i = range.tabstop.rangeList.ranges.indexOf(range);\n      if (i != -1) range.tabstop.splice(i, 1);\n      this.session.removeMarker(range.markerId);\n      if (!range.tabstop.length) {\n        i = this.tabstops.indexOf(range.tabstop);\n        if (i != -1) this.tabstops.splice(i, 1);\n        if (!this.tabstops.length) this.detach();\n      }\n    };\n    return TabstopManager;\n  }();\n  TabstopManager.prototype.keyboardHandler = new HashHandler();\n  TabstopManager.prototype.keyboardHandler.bindKeys({\n    \"Tab\": function (editor) {\n      if (exports.snippetManager && exports.snippetManager.expandWithTab(editor)) return;\n      editor.tabstopManager.tabNext(1);\n      editor.renderer.scrollCursorIntoView();\n    },\n    \"Shift-Tab\": function (editor) {\n      editor.tabstopManager.tabNext(-1);\n      editor.renderer.scrollCursorIntoView();\n    },\n    \"Esc\": function (editor) {\n      editor.tabstopManager.detach();\n    }\n  });\n  var movePoint = function (point, diff) {\n    if (point.row == 0) point.column += diff.column;\n    point.row += diff.row;\n  };\n  var moveRelative = function (point, start) {\n    if (point.row == start.row) point.column -= start.column;\n    point.row -= start.row;\n  };\n  dom.importCssString(\"\\n.ace_snippet-marker {\\n    -moz-box-sizing: border-box;\\n    box-sizing: border-box;\\n    background: rgba(194, 193, 208, 0.09);\\n    border: 1px dotted rgba(211, 208, 235, 0.62);\\n    position: absolute;\\n}\", \"snippets.css\", false);\n  exports.snippetManager = new SnippetManager();\n  var Editor = require(\"./editor\").Editor;\n  (function () {\n    this.insertSnippet = function (content, options) {\n      return exports.snippetManager.insertSnippet(this, content, options);\n    };\n    this.expandSnippet = function (options) {\n      return exports.snippetManager.expandWithTab(this, options);\n    };\n  }).call(Editor.prototype);\n});\nace.define(\"ace/ext/emmet\", [\"require\", \"exports\", \"module\", \"ace/keyboard/hash_handler\", \"ace/editor\", \"ace/snippets\", \"ace/range\", \"ace/config\", \"resources\", \"resources\", \"tabStops\", \"resources\", \"utils\", \"actions\"], function (require, exports, module) {\n  \"use strict\";\n\n  var HashHandler = require(\"../keyboard/hash_handler\").HashHandler;\n  var Editor = require(\"../editor\").Editor;\n  var snippetManager = require(\"../snippets\").snippetManager;\n  var Range = require(\"../range\").Range;\n  var config = require(\"../config\");\n  var emmet, emmetPath;\n  var AceEmmetEditor = /** @class */function () {\n    function AceEmmetEditor() {}\n    AceEmmetEditor.prototype.setupContext = function (editor) {\n      this.ace = editor;\n      this.indentation = editor.session.getTabString();\n      if (!emmet) emmet = window[\"emmet\"];\n      var resources = emmet.resources || emmet.require(\"resources\");\n      resources.setVariable(\"indentation\", this.indentation);\n      this.$syntax = null;\n      this.$syntax = this.getSyntax();\n    };\n    AceEmmetEditor.prototype.getSelectionRange = function () {\n      var range = this.ace.getSelectionRange();\n      var doc = this.ace.session.doc;\n      return {\n        start: doc.positionToIndex(range.start),\n        end: doc.positionToIndex(range.end)\n      };\n    };\n    AceEmmetEditor.prototype.createSelection = function (start, end) {\n      var doc = this.ace.session.doc;\n      this.ace.selection.setRange({\n        start: doc.indexToPosition(start),\n        end: doc.indexToPosition(end)\n      });\n    };\n    AceEmmetEditor.prototype.getCurrentLineRange = function () {\n      var ace = this.ace;\n      var row = ace.getCursorPosition().row;\n      var lineLength = ace.session.getLine(row).length;\n      var index = ace.session.doc.positionToIndex({\n        row: row,\n        column: 0\n      });\n      return {\n        start: index,\n        end: index + lineLength\n      };\n    };\n    AceEmmetEditor.prototype.getCaretPos = function () {\n      var pos = this.ace.getCursorPosition();\n      return this.ace.session.doc.positionToIndex(pos);\n    };\n    AceEmmetEditor.prototype.setCaretPos = function (index) {\n      var pos = this.ace.session.doc.indexToPosition(index);\n      this.ace.selection.moveToPosition(pos);\n    };\n    AceEmmetEditor.prototype.getCurrentLine = function () {\n      var row = this.ace.getCursorPosition().row;\n      return this.ace.session.getLine(row);\n    };\n    AceEmmetEditor.prototype.replaceContent = function (value, start, end, noIndent) {\n      if (end == null) end = start == null ? this.getContent().length : start;\n      if (start == null) start = 0;\n      var editor = this.ace;\n      var doc = editor.session.doc;\n      var range = Range.fromPoints(doc.indexToPosition(start), doc.indexToPosition(end));\n      editor.session.remove(range);\n      range.end = range.start;\n      value = this.$updateTabstops(value);\n      snippetManager.insertSnippet(editor, value);\n    };\n    AceEmmetEditor.prototype.getContent = function () {\n      return this.ace.getValue();\n    };\n    AceEmmetEditor.prototype.getSyntax = function () {\n      if (this.$syntax) return this.$syntax;\n      var syntax = this.ace.session.$modeId.split(\"/\").pop();\n      if (syntax == \"html\" || syntax == \"php\") {\n        var cursor = this.ace.getCursorPosition();\n        var state = this.ace.session.getState(cursor.row);\n        if (typeof state != \"string\") state = state[0];\n        if (state) {\n          state = state.split(\"-\");\n          if (state.length > 1) syntax = state[0];else if (syntax == \"php\") syntax = \"html\";\n        }\n      }\n      return syntax;\n    };\n    AceEmmetEditor.prototype.getProfileName = function () {\n      var resources = emmet.resources || emmet.require(\"resources\");\n      switch (this.getSyntax()) {\n        case \"css\":\n          return \"css\";\n        case \"xml\":\n        case \"xsl\":\n          return \"xml\";\n        case \"html\":\n          var profile = resources.getVariable(\"profile\");\n          if (!profile) profile = this.ace.session.getLines(0, 2).join(\"\").search(/<!DOCTYPE[^>]+XHTML/i) != -1 ? \"xhtml\" : \"html\";\n          return profile;\n        default:\n          var mode = this.ace.session.$mode;\n          return mode.emmetConfig && mode.emmetConfig.profile || \"xhtml\";\n      }\n    };\n    AceEmmetEditor.prototype.prompt = function (title) {\n      return prompt(title); // eslint-disable-line no-alert\n    };\n    AceEmmetEditor.prototype.getSelection = function () {\n      return this.ace.session.getTextRange();\n    };\n    AceEmmetEditor.prototype.getFilePath = function () {\n      return \"\";\n    };\n    AceEmmetEditor.prototype.$updateTabstops = function (value) {\n      var base = 1000;\n      var zeroBase = 0;\n      var lastZero = null;\n      var ts = emmet.tabStops || emmet.require('tabStops');\n      var resources = emmet.resources || emmet.require(\"resources\");\n      var settings = resources.getVocabulary(\"user\");\n      var tabstopOptions = {\n        tabstop: function (data) {\n          var group = parseInt(data.group, 10);\n          var isZero = group === 0;\n          if (isZero) group = ++zeroBase;else group += base;\n          var placeholder = data.placeholder;\n          if (placeholder) {\n            placeholder = ts.processText(placeholder, tabstopOptions);\n          }\n          var result = '${' + group + (placeholder ? ':' + placeholder : '') + '}';\n          if (isZero) {\n            lastZero = [data.start, result];\n          }\n          return result;\n        },\n        escape: function (ch) {\n          if (ch == '$') return '\\\\$';\n          if (ch == '\\\\') return '\\\\\\\\';\n          return ch;\n        }\n      };\n      value = ts.processText(value, tabstopOptions);\n      if (settings.variables['insert_final_tabstop'] && !/\\$\\{0\\}$/.test(value)) {\n        value += '${0}';\n      } else if (lastZero) {\n        var common = emmet.utils ? emmet.utils.common : emmet.require('utils');\n        value = common.replaceSubstring(value, '${0}', lastZero[0], lastZero[1]);\n      }\n      return value;\n    };\n    return AceEmmetEditor;\n  }();\n  var keymap = {\n    expand_abbreviation: {\n      \"mac\": \"ctrl+alt+e\",\n      \"win\": \"alt+e\"\n    },\n    match_pair_outward: {\n      \"mac\": \"ctrl+d\",\n      \"win\": \"ctrl+,\"\n    },\n    match_pair_inward: {\n      \"mac\": \"ctrl+j\",\n      \"win\": \"ctrl+shift+0\"\n    },\n    matching_pair: {\n      \"mac\": \"ctrl+alt+j\",\n      \"win\": \"alt+j\"\n    },\n    next_edit_point: \"alt+right\",\n    prev_edit_point: \"alt+left\",\n    toggle_comment: {\n      \"mac\": \"command+/\",\n      \"win\": \"ctrl+/\"\n    },\n    split_join_tag: {\n      \"mac\": \"shift+command+'\",\n      \"win\": \"shift+ctrl+`\"\n    },\n    remove_tag: {\n      \"mac\": \"command+'\",\n      \"win\": \"shift+ctrl+;\"\n    },\n    evaluate_math_expression: {\n      \"mac\": \"shift+command+y\",\n      \"win\": \"shift+ctrl+y\"\n    },\n    increment_number_by_1: \"ctrl+up\",\n    decrement_number_by_1: \"ctrl+down\",\n    increment_number_by_01: \"alt+up\",\n    decrement_number_by_01: \"alt+down\",\n    increment_number_by_10: {\n      \"mac\": \"alt+command+up\",\n      \"win\": \"shift+alt+up\"\n    },\n    decrement_number_by_10: {\n      \"mac\": \"alt+command+down\",\n      \"win\": \"shift+alt+down\"\n    },\n    select_next_item: {\n      \"mac\": \"shift+command+.\",\n      \"win\": \"shift+ctrl+.\"\n    },\n    select_previous_item: {\n      \"mac\": \"shift+command+,\",\n      \"win\": \"shift+ctrl+,\"\n    },\n    reflect_css_value: {\n      \"mac\": \"shift+command+r\",\n      \"win\": \"shift+ctrl+r\"\n    },\n    encode_decode_data_url: {\n      \"mac\": \"shift+ctrl+d\",\n      \"win\": \"ctrl+'\"\n    },\n    expand_abbreviation_with_tab: \"Tab\",\n    wrap_with_abbreviation: {\n      \"mac\": \"shift+ctrl+a\",\n      \"win\": \"shift+ctrl+a\"\n    }\n  };\n  var editorProxy = new AceEmmetEditor();\n  exports.commands = new HashHandler();\n  exports.runEmmetCommand = function runEmmetCommand(editor) {\n    if (this.action == \"expand_abbreviation_with_tab\") {\n      if (!editor.selection.isEmpty()) return false;\n      var pos = editor.selection.lead;\n      var token = editor.session.getTokenAt(pos.row, pos.column);\n      if (token && /\\btag\\b/.test(token.type)) return false;\n    }\n    try {\n      editorProxy.setupContext(editor);\n      var actions = emmet.actions || emmet.require(\"actions\");\n      if (this.action == \"wrap_with_abbreviation\") {\n        return setTimeout(function () {\n          actions.run(\"wrap_with_abbreviation\", editorProxy);\n        }, 0);\n      }\n      var result = actions.run(this.action, editorProxy);\n    } catch (e) {\n      if (!emmet) {\n        var loading = exports.load(runEmmetCommand.bind(this, editor));\n        if (this.action == \"expand_abbreviation_with_tab\") return false;\n        return loading;\n      }\n      editor._signal(\"changeStatus\", typeof e == \"string\" ? e : e.message);\n      config.warn(e);\n      result = false;\n    }\n    return result;\n  };\n  for (var command in keymap) {\n    exports.commands.addCommand({\n      name: \"emmet:\" + command,\n      action: command,\n      bindKey: keymap[command],\n      exec: exports.runEmmetCommand,\n      multiSelectAction: \"forEach\"\n    });\n  }\n  exports.updateCommands = function (editor, enabled) {\n    if (enabled) {\n      editor.keyBinding.addKeyboardHandler(exports.commands);\n    } else {\n      editor.keyBinding.removeKeyboardHandler(exports.commands);\n    }\n  };\n  exports.isSupportedMode = function (mode) {\n    if (!mode) return false;\n    if (mode.emmetConfig) return true;\n    var id = mode.$id || mode;\n    return /css|less|scss|sass|stylus|html|php|twig|ejs|handlebars/.test(id);\n  };\n  exports.isAvailable = function (editor, command) {\n    if (/(evaluate_math_expression|expand_abbreviation)$/.test(command)) return true;\n    var mode = editor.session.$mode;\n    var isSupported = exports.isSupportedMode(mode);\n    if (isSupported && mode.$modes) {\n      try {\n        editorProxy.setupContext(editor);\n        if (/js|php/.test(editorProxy.getSyntax())) isSupported = false;\n      } catch (e) {}\n    }\n    return isSupported;\n  };\n  var onChangeMode = function (e, target) {\n    var editor = target;\n    if (!editor) return;\n    var enabled = exports.isSupportedMode(editor.session.$mode);\n    if (e.enableEmmet === false) enabled = false;\n    if (enabled) exports.load();\n    exports.updateCommands(editor, enabled);\n  };\n  exports.load = function (cb) {\n    if (typeof emmetPath !== \"string\") {\n      config.warn(\"script for emmet-core is not loaded\");\n      return false;\n    }\n    config.loadModule(emmetPath, function () {\n      emmetPath = null;\n      cb && cb();\n    });\n    return true;\n  };\n  exports.AceEmmetEditor = AceEmmetEditor;\n  config.defineOptions(Editor.prototype, \"editor\", {\n    enableEmmet: {\n      set: function (val) {\n        this[val ? \"on\" : \"removeListener\"](\"changeMode\", onChangeMode);\n        onChangeMode({\n          enableEmmet: !!val\n        }, this);\n      },\n      value: true\n    }\n  });\n  exports.setCore = function (e) {\n    if (typeof e == \"string\") emmetPath = e;else emmet = e;\n  };\n});\n(function () {\n  ace.require([\"ace/ext/emmet\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","dom","oop","EventEmitter","lang","Range","RangeList","HashHandler","Tokenizer","clipboard","VARIABLES","CURRENT_WORD","editor","session","getTextRange","getWordRange","SELECTION","name","indentation","text","replace","CURRENT_LINE","getLine","getCursorPosition","row","PREV_LINE","LINE_INDEX","LINE_NUMBER","SOFT_TABS","getUseSoftTabs","TAB_SIZE","getTabSize","CLIPBOARD","getText","FILENAME","exec","FILEPATH","FILENAME_BASE","DIRECTORY","WORKSPACE_NAME","FULLNAME","BLOCK_COMMENT_START","mode","$mode","blockComment","start","BLOCK_COMMENT_END","end","LINE_COMMENT","lineCommentStart","CURRENT_YEAR","date","bind","year","CURRENT_YEAR_SHORT","CURRENT_MONTH","month","CURRENT_MONTH_NAME","CURRENT_MONTH_NAME_SHORT","CURRENT_DATE","day","CURRENT_DAY_NAME","weekday","CURRENT_DAY_NAME_SHORT","CURRENT_HOUR","hour","hour12","CURRENT_MINUTE","minute","CURRENT_SECOND","second","SELECTED_TEXT","dateFormat","str","Date","toLocaleString","length","SnippetManager","snippetMap","snippetNameMap","variables","prototype","getTokenizer","createTokenizer","TabstopToken","substr","test","tabstopId","parseInt","escape","ch","formatMatcher","regex","onMatch","val","state","stack","ts","fmtString","guard","slice","flag","next","indexOf","shift","t","unshift","token","merge","snippetVar","choices","operator","split","map","value","formatString","expectElse","ifEnd","elseEnd","changeCase","local","formatStringVar","formatFunction","tokenizeTmSnippet","startState","getLineTokens","tokens","x","getVariableValue","__","hasOwnProperty","tmStrFormat","fmt","re","RegExp","fmtTokens","_self","formatted","oldArgs","call","arguments","fmtParts","resolveVariables","gChangeCase","i","toUpperCase","toLowerCase","join","tmFormatFunction","snippet","result","afterNewLine","push","j","gotoNext","i1","getDisplayTextForSnippet","snippetText","processedSnippet","processSnippetText","insertSnippetForSelection","options","range","getSelectionRange","tabstopManager","TabstopManager","selectionId","inVirtualSelectionMode","selection","index","addTabstops","tabstops","insertSnippet","self","forEachSelection","keepOrder","tabNext","$getScope","scope","$id","pop","inlinePhp","c","getState","substring","getActiveScopes","scopes","includeScopes","apply","expandWithTab","expandSnippetForSelection","cursor","line","before","column","after","some","snippets","findMatchingSnippet","dryRun","doc","removeInLine","replaceBefore","replaceAfter","M__","matchBefore","T__","matchAfter","content","snippetList","s","startRe","endRe","triggerRe","endTriggerRe","register","wrapRegexp","src","guardedRegexp","opening","addSnippet","old","unregister","prefix","tabTrigger","body","Array","isArray","trigger","escapeRegExp","endTrigger","endGuard","forEach","Object","keys","key","_signal","removeSnippet","nameMap","splice","parseSnippetFile","list","m","JSON","parse","e","guardRe","match","getSnippetByName","implement","tabString","getTabString","indentString","excludeExtraIndent","p","id","parents","isNested","expanding","copyValue","copy","lastIndexOf","parentId","Math","max","concat","lines","ranges","$onChange","onChange","$onChangeSelection","delayedCall","onChangeSelection","schedule","$onChangeSession","onChangeSession","$onAfterExec","onAfterExec","attach","$openTabstops","selectedTabstop","on","commands","keyBinding","addKeyboardHandler","keyboardHandler","detach","removeTabstopMarkers","off","removeKeyboardHandler","delta","isRemove","action","active","rangeList","$bias","parentActive","startIndex","pointIndex","endIndex","toRemove","removeRange","$inChange","getLength","getValue","updateLinkedFields","hasLinkedRanges","firstNonLinked","linked","original","snippetManager","command","readOnly","lead","anchor","isEmpty","containsLead","contains","containsAnchor","dir","min","selectTabstop","updateTabstopMarkers","addTabstopMarkers","sel","multiSelect","toSingleRange","addRange","clone","fromOrientedRange","execCommand","matches","useLink","getOption","fromPoints","moveRelative","arg","snippetId","dest","movePoint","tabstop","addList","markerId","addMarker","removeMarker","currentSnippetId","bindKeys","Tab","renderer","scrollCursorIntoView","Shift-Tab","Esc","point","diff","importCssString","Editor","expandSnippet","config","emmet","emmetPath","AceEmmetEditor","setupContext","window","resources","setVariable","$syntax","getSyntax","positionToIndex","createSelection","setRange","indexToPosition","getCurrentLineRange","lineLength","getCaretPos","pos","setCaretPos","moveToPosition","getCurrentLine","replaceContent","noIndent","getContent","remove","$updateTabstops","syntax","$modeId","getProfileName","profile","getVariable","getLines","search","emmetConfig","prompt","title","getSelection","getFilePath","base","zeroBase","lastZero","tabStops","settings","getVocabulary","tabstopOptions","data","group","isZero","placeholder","processText","common","utils","replaceSubstring","keymap","expand_abbreviation","match_pair_outward","match_pair_inward","matching_pair","next_edit_point","prev_edit_point","toggle_comment","split_join_tag","remove_tag","evaluate_math_expression","increment_number_by_1","decrement_number_by_1","increment_number_by_01","decrement_number_by_01","increment_number_by_10","decrement_number_by_10","select_next_item","select_previous_item","reflect_css_value","encode_decode_data_url","expand_abbreviation_with_tab","wrap_with_abbreviation","editorProxy","runEmmetCommand","getTokenAt","type","actions","setTimeout","run","loading","load","message","warn","addCommand","bindKey","multiSelectAction","updateCommands","enabled","isSupportedMode","isAvailable","isSupported","$modes","onChangeMode","target","enableEmmet","cb","loadModule","defineOptions","set","setCore"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/ext-emmet.js"],"sourcesContent":["ace.define(\"ace/snippets\",[\"require\",\"exports\",\"module\",\"ace/lib/dom\",\"ace/lib/oop\",\"ace/lib/event_emitter\",\"ace/lib/lang\",\"ace/range\",\"ace/range_list\",\"ace/keyboard/hash_handler\",\"ace/tokenizer\",\"ace/clipboard\",\"ace/editor\"], function(require, exports, module){\"use strict\";\nvar dom = require(\"./lib/dom\");\nvar oop = require(\"./lib/oop\");\nvar EventEmitter = require(\"./lib/event_emitter\").EventEmitter;\nvar lang = require(\"./lib/lang\");\nvar Range = require(\"./range\").Range;\nvar RangeList = require(\"./range_list\").RangeList;\nvar HashHandler = require(\"./keyboard/hash_handler\").HashHandler;\nvar Tokenizer = require(\"./tokenizer\").Tokenizer;\nvar clipboard = require(\"./clipboard\");\nvar VARIABLES = {\n    CURRENT_WORD: function (editor) {\n        return editor.session.getTextRange(editor.session.getWordRange());\n    },\n    SELECTION: function (editor, name, indentation) {\n        var text = editor.session.getTextRange();\n        if (indentation)\n            return text.replace(/\\n\\r?([ \\t]*\\S)/g, \"\\n\" + indentation + \"$1\");\n        return text;\n    },\n    CURRENT_LINE: function (editor) {\n        return editor.session.getLine(editor.getCursorPosition().row);\n    },\n    PREV_LINE: function (editor) {\n        return editor.session.getLine(editor.getCursorPosition().row - 1);\n    },\n    LINE_INDEX: function (editor) {\n        return editor.getCursorPosition().row;\n    },\n    LINE_NUMBER: function (editor) {\n        return editor.getCursorPosition().row + 1;\n    },\n    SOFT_TABS: function (editor) {\n        return editor.session.getUseSoftTabs() ? \"YES\" : \"NO\";\n    },\n    TAB_SIZE: function (editor) {\n        return editor.session.getTabSize();\n    },\n    CLIPBOARD: function (editor) {\n        return clipboard.getText && clipboard.getText();\n    },\n    FILENAME: function (editor) {\n        return /[^/\\\\]*$/.exec(this.FILEPATH(editor))[0];\n    },\n    FILENAME_BASE: function (editor) {\n        return /[^/\\\\]*$/.exec(this.FILEPATH(editor))[0].replace(/\\.[^.]*$/, \"\");\n    },\n    DIRECTORY: function (editor) {\n        return this.FILEPATH(editor).replace(/[^/\\\\]*$/, \"\");\n    },\n    FILEPATH: function (editor) { return \"/not implemented.txt\"; },\n    WORKSPACE_NAME: function () { return \"Unknown\"; },\n    FULLNAME: function () { return \"Unknown\"; },\n    BLOCK_COMMENT_START: function (editor) {\n        var mode = editor.session.$mode || {};\n        return mode.blockComment && mode.blockComment.start || \"\";\n    },\n    BLOCK_COMMENT_END: function (editor) {\n        var mode = editor.session.$mode || {};\n        return mode.blockComment && mode.blockComment.end || \"\";\n    },\n    LINE_COMMENT: function (editor) {\n        var mode = editor.session.$mode || {};\n        return mode.lineCommentStart || \"\";\n    },\n    CURRENT_YEAR: date.bind(null, { year: \"numeric\" }),\n    CURRENT_YEAR_SHORT: date.bind(null, { year: \"2-digit\" }),\n    CURRENT_MONTH: date.bind(null, { month: \"numeric\" }),\n    CURRENT_MONTH_NAME: date.bind(null, { month: \"long\" }),\n    CURRENT_MONTH_NAME_SHORT: date.bind(null, { month: \"short\" }),\n    CURRENT_DATE: date.bind(null, { day: \"2-digit\" }),\n    CURRENT_DAY_NAME: date.bind(null, { weekday: \"long\" }),\n    CURRENT_DAY_NAME_SHORT: date.bind(null, { weekday: \"short\" }),\n    CURRENT_HOUR: date.bind(null, { hour: \"2-digit\", hour12: false }),\n    CURRENT_MINUTE: date.bind(null, { minute: \"2-digit\" }),\n    CURRENT_SECOND: date.bind(null, { second: \"2-digit\" })\n};\nVARIABLES.SELECTED_TEXT = VARIABLES.SELECTION;\nfunction date(dateFormat) {\n    var str = new Date().toLocaleString(\"en-us\", dateFormat);\n    return str.length == 1 ? \"0\" + str : str;\n}\nvar SnippetManager = /** @class */ (function () {\n    function SnippetManager() {\n        this.snippetMap = {};\n        this.snippetNameMap = {};\n        this.variables = VARIABLES;\n    }\n    SnippetManager.prototype.getTokenizer = function () {\n        return SnippetManager[\"$tokenizer\"] || this.createTokenizer();\n    };\n    SnippetManager.prototype.createTokenizer = function () {\n        function TabstopToken(str) {\n            str = str.substr(1);\n            if (/^\\d+$/.test(str))\n                return [{ tabstopId: parseInt(str, 10) }];\n            return [{ text: str }];\n        }\n        function escape(ch) {\n            return \"(?:[^\\\\\\\\\" + ch + \"]|\\\\\\\\.)\";\n        }\n        var formatMatcher = {\n            regex: \"/(\" + escape(\"/\") + \"+)/\",\n            onMatch: function (val, state, stack) {\n                var ts = stack[0];\n                ts.fmtString = true;\n                ts.guard = val.slice(1, -1);\n                ts.flag = \"\";\n                return \"\";\n            },\n            next: \"formatString\"\n        };\n        SnippetManager[\"$tokenizer\"] = new Tokenizer({\n            start: [\n                { regex: /\\\\./, onMatch: function (val, state, stack) {\n                        var ch = val[1];\n                        if (ch == \"}\" && stack.length) {\n                            val = ch;\n                        }\n                        else if (\"`$\\\\\".indexOf(ch) != -1) {\n                            val = ch;\n                        }\n                        return [val];\n                    } },\n                { regex: /}/, onMatch: function (val, state, stack) {\n                        return [stack.length ? stack.shift() : val];\n                    } },\n                { regex: /\\$(?:\\d+|\\w+)/, onMatch: TabstopToken },\n                { regex: /\\$\\{[\\dA-Z_a-z]+/, onMatch: function (str, state, stack) {\n                        var t = TabstopToken(str.substr(1));\n                        stack.unshift(t[0]);\n                        return t;\n                    }, next: \"snippetVar\" },\n                { regex: /\\n/, token: \"newline\", merge: false }\n            ],\n            snippetVar: [\n                { regex: \"\\\\|\" + escape(\"\\\\|\") + \"*\\\\|\", onMatch: function (val, state, stack) {\n                        var choices = val.slice(1, -1).replace(/\\\\[,|\\\\]|,/g, function (operator) {\n                            return operator.length == 2 ? operator[1] : \"\\x00\";\n                        }).split(\"\\x00\").map(function (value) {\n                            return { value: value };\n                        });\n                        stack[0].choices = choices;\n                        return [choices[0]];\n                    }, next: \"start\" },\n                formatMatcher,\n                { regex: \"([^:}\\\\\\\\]|\\\\\\\\.)*:?\", token: \"\", next: \"start\" }\n            ],\n            formatString: [\n                { regex: /:/, onMatch: function (val, state, stack) {\n                        if (stack.length && stack[0].expectElse) {\n                            stack[0].expectElse = false;\n                            stack[0].ifEnd = { elseEnd: stack[0] };\n                            return [stack[0].ifEnd];\n                        }\n                        return \":\";\n                    } },\n                { regex: /\\\\./, onMatch: function (val, state, stack) {\n                        var ch = val[1];\n                        if (ch == \"}\" && stack.length)\n                            val = ch;\n                        else if (\"`$\\\\\".indexOf(ch) != -1)\n                            val = ch;\n                        else if (ch == \"n\")\n                            val = \"\\n\";\n                        else if (ch == \"t\")\n                            val = \"\\t\";\n                        else if (\"ulULE\".indexOf(ch) != -1)\n                            val = { changeCase: ch, local: ch > \"a\" };\n                        return [val];\n                    } },\n                { regex: \"/\\\\w*}\", onMatch: function (val, state, stack) {\n                        var next = stack.shift();\n                        if (next)\n                            next.flag = val.slice(1, -1);\n                        this.next = next && next.tabstopId ? \"start\" : \"\";\n                        return [next || val];\n                    }, next: \"start\" },\n                { regex: /\\$(?:\\d+|\\w+)/, onMatch: function (val, state, stack) {\n                        return [{ text: val.slice(1) }];\n                    } },\n                { regex: /\\${\\w+/, onMatch: function (val, state, stack) {\n                        var token = { text: val.slice(2) };\n                        stack.unshift(token);\n                        return [token];\n                    }, next: \"formatStringVar\" },\n                { regex: /\\n/, token: \"newline\", merge: false },\n                { regex: /}/, onMatch: function (val, state, stack) {\n                        var next = stack.shift();\n                        this.next = next && next.tabstopId ? \"start\" : \"\";\n                        return [next || val];\n                    }, next: \"start\" }\n            ],\n            formatStringVar: [\n                { regex: /:\\/\\w+}/, onMatch: function (val, state, stack) {\n                        var ts = stack[0];\n                        ts.formatFunction = val.slice(2, -1);\n                        return [stack.shift()];\n                    }, next: \"formatString\" },\n                formatMatcher,\n                { regex: /:[\\?\\-+]?/, onMatch: function (val, state, stack) {\n                        if (val[1] == \"+\")\n                            stack[0].ifEnd = stack[0];\n                        if (val[1] == \"?\")\n                            stack[0].expectElse = true;\n                    }, next: \"formatString\" },\n                { regex: \"([^:}\\\\\\\\]|\\\\\\\\.)*:?\", token: \"\", next: \"formatString\" }\n            ]\n        });\n        return SnippetManager[\"$tokenizer\"];\n    };\n    SnippetManager.prototype.tokenizeTmSnippet = function (str, startState) {\n        return this.getTokenizer().getLineTokens(str, startState).tokens.map(function (x) {\n            return x.value || x;\n        });\n    };\n    SnippetManager.prototype.getVariableValue = function (editor, name, indentation) {\n        if (/^\\d+$/.test(name))\n            return (this.variables.__ || {})[name] || \"\";\n        if (/^[A-Z]\\d+$/.test(name))\n            return (this.variables[name[0] + \"__\"] || {})[name.substr(1)] || \"\";\n        name = name.replace(/^TM_/, \"\");\n        if (!this.variables.hasOwnProperty(name))\n            return \"\";\n        var value = this.variables[name];\n        if (typeof value == \"function\")\n            value = this.variables[name](editor, name, indentation);\n        return value == null ? \"\" : value;\n    };\n    SnippetManager.prototype.tmStrFormat = function (str, ch, editor) {\n        if (!ch.fmt)\n            return str;\n        var flag = ch.flag || \"\";\n        var re = ch.guard;\n        re = new RegExp(re, flag.replace(/[^gim]/g, \"\"));\n        var fmtTokens = typeof ch.fmt == \"string\" ? this.tokenizeTmSnippet(ch.fmt, \"formatString\") : ch.fmt;\n        var _self = this;\n        var formatted = str.replace(re, function () {\n            var oldArgs = _self.variables.__;\n            _self.variables.__ = [].slice.call(arguments);\n            var fmtParts = _self.resolveVariables(fmtTokens, editor);\n            var gChangeCase = \"E\";\n            for (var i = 0; i < fmtParts.length; i++) {\n                var ch = fmtParts[i];\n                if (typeof ch == \"object\") {\n                    fmtParts[i] = \"\";\n                    if (ch.changeCase && ch.local) {\n                        var next = fmtParts[i + 1];\n                        if (next && typeof next == \"string\") {\n                            if (ch.changeCase == \"u\")\n                                fmtParts[i] = next[0].toUpperCase();\n                            else\n                                fmtParts[i] = next[0].toLowerCase();\n                            fmtParts[i + 1] = next.substr(1);\n                        }\n                    }\n                    else if (ch.changeCase) {\n                        gChangeCase = ch.changeCase;\n                    }\n                }\n                else if (gChangeCase == \"U\") {\n                    fmtParts[i] = ch.toUpperCase();\n                }\n                else if (gChangeCase == \"L\") {\n                    fmtParts[i] = ch.toLowerCase();\n                }\n            }\n            _self.variables.__ = oldArgs;\n            return fmtParts.join(\"\");\n        });\n        return formatted;\n    };\n    SnippetManager.prototype.tmFormatFunction = function (str, ch, editor) {\n        if (ch.formatFunction == \"upcase\")\n            return str.toUpperCase();\n        if (ch.formatFunction == \"downcase\")\n            return str.toLowerCase();\n        return str;\n    };\n    SnippetManager.prototype.resolveVariables = function (snippet, editor) {\n        var result = [];\n        var indentation = \"\";\n        var afterNewLine = true;\n        for (var i = 0; i < snippet.length; i++) {\n            var ch = snippet[i];\n            if (typeof ch == \"string\") {\n                result.push(ch);\n                if (ch == \"\\n\") {\n                    afterNewLine = true;\n                    indentation = \"\";\n                }\n                else if (afterNewLine) {\n                    indentation = /^\\t*/.exec(ch)[0];\n                    afterNewLine = /\\S/.test(ch);\n                }\n                continue;\n            }\n            if (!ch)\n                continue;\n            afterNewLine = false;\n            if (ch.fmtString) {\n                var j = snippet.indexOf(ch, i + 1);\n                if (j == -1)\n                    j = snippet.length;\n                ch.fmt = snippet.slice(i + 1, j);\n                i = j;\n            }\n            if (ch.text) {\n                var value = this.getVariableValue(editor, ch.text, indentation) + \"\";\n                if (ch.fmtString)\n                    value = this.tmStrFormat(value, ch, editor);\n                if (ch.formatFunction)\n                    value = this.tmFormatFunction(value, ch, editor);\n                if (value && !ch.ifEnd) {\n                    result.push(value);\n                    gotoNext(ch);\n                }\n                else if (!value && ch.ifEnd) {\n                    gotoNext(ch.ifEnd);\n                }\n            }\n            else if (ch.elseEnd) {\n                gotoNext(ch.elseEnd);\n            }\n            else if (ch.tabstopId != null) {\n                result.push(ch);\n            }\n            else if (ch.changeCase != null) {\n                result.push(ch);\n            }\n        }\n        function gotoNext(ch) {\n            var i1 = snippet.indexOf(ch, i + 1);\n            if (i1 != -1)\n                i = i1;\n        }\n        return result;\n    };\n    SnippetManager.prototype.getDisplayTextForSnippet = function (editor, snippetText) {\n        var processedSnippet = processSnippetText.call(this, editor, snippetText);\n        return processedSnippet.text;\n    };\n    SnippetManager.prototype.insertSnippetForSelection = function (editor, snippetText, options) {\n        if (options === void 0) { options = {}; }\n        var processedSnippet = processSnippetText.call(this, editor, snippetText, options);\n        var range = editor.getSelectionRange();\n        var end = editor.session.replace(range, processedSnippet.text);\n        var tabstopManager = new TabstopManager(editor);\n        var selectionId = editor.inVirtualSelectionMode && editor.selection.index;\n        tabstopManager.addTabstops(processedSnippet.tabstops, range.start, end, selectionId);\n    };\n    SnippetManager.prototype.insertSnippet = function (editor, snippetText, options) {\n        if (options === void 0) { options = {}; }\n        var self = this;\n        if (editor.inVirtualSelectionMode)\n            return self.insertSnippetForSelection(editor, snippetText, options);\n        editor.forEachSelection(function () {\n            self.insertSnippetForSelection(editor, snippetText, options);\n        }, null, { keepOrder: true });\n        if (editor.tabstopManager)\n            editor.tabstopManager.tabNext();\n    };\n    SnippetManager.prototype.$getScope = function (editor) {\n        var scope = editor.session.$mode.$id || \"\";\n        scope = scope.split(\"/\").pop();\n        if (scope === \"html\" || scope === \"php\") {\n            if (scope === \"php\" && !editor.session.$mode.inlinePhp)\n                scope = \"html\";\n            var c = editor.getCursorPosition();\n            var state = editor.session.getState(c.row);\n            if (typeof state === \"object\") {\n                state = state[0];\n            }\n            if (state.substring) {\n                if (state.substring(0, 3) == \"js-\")\n                    scope = \"javascript\";\n                else if (state.substring(0, 4) == \"css-\")\n                    scope = \"css\";\n                else if (state.substring(0, 4) == \"php-\")\n                    scope = \"php\";\n            }\n        }\n        return scope;\n    };\n    SnippetManager.prototype.getActiveScopes = function (editor) {\n        var scope = this.$getScope(editor);\n        var scopes = [scope];\n        var snippetMap = this.snippetMap;\n        if (snippetMap[scope] && snippetMap[scope].includeScopes) {\n            scopes.push.apply(scopes, snippetMap[scope].includeScopes);\n        }\n        scopes.push(\"_\");\n        return scopes;\n    };\n    SnippetManager.prototype.expandWithTab = function (editor, options) {\n        var self = this;\n        var result = editor.forEachSelection(function () {\n            return self.expandSnippetForSelection(editor, options);\n        }, null, { keepOrder: true });\n        if (result && editor.tabstopManager)\n            editor.tabstopManager.tabNext();\n        return result;\n    };\n    SnippetManager.prototype.expandSnippetForSelection = function (editor, options) {\n        var cursor = editor.getCursorPosition();\n        var line = editor.session.getLine(cursor.row);\n        var before = line.substring(0, cursor.column);\n        var after = line.substr(cursor.column);\n        var snippetMap = this.snippetMap;\n        var snippet;\n        this.getActiveScopes(editor).some(function (scope) {\n            var snippets = snippetMap[scope];\n            if (snippets)\n                snippet = this.findMatchingSnippet(snippets, before, after);\n            return !!snippet;\n        }, this);\n        if (!snippet)\n            return false;\n        if (options && options.dryRun)\n            return true;\n        editor.session.doc.removeInLine(cursor.row, cursor.column - snippet.replaceBefore.length, cursor.column + snippet.replaceAfter.length);\n        this.variables.M__ = snippet.matchBefore;\n        this.variables.T__ = snippet.matchAfter;\n        this.insertSnippetForSelection(editor, snippet.content);\n        this.variables.M__ = this.variables.T__ = null;\n        return true;\n    };\n    SnippetManager.prototype.findMatchingSnippet = function (snippetList, before, after) {\n        for (var i = snippetList.length; i--;) {\n            var s = snippetList[i];\n            if (s.startRe && !s.startRe.test(before))\n                continue;\n            if (s.endRe && !s.endRe.test(after))\n                continue;\n            if (!s.startRe && !s.endRe)\n                continue;\n            s.matchBefore = s.startRe ? s.startRe.exec(before) : [\"\"];\n            s.matchAfter = s.endRe ? s.endRe.exec(after) : [\"\"];\n            s.replaceBefore = s.triggerRe ? s.triggerRe.exec(before)[0] : \"\";\n            s.replaceAfter = s.endTriggerRe ? s.endTriggerRe.exec(after)[0] : \"\";\n            return s;\n        }\n    };\n    SnippetManager.prototype.register = function (snippets, scope) {\n        var snippetMap = this.snippetMap;\n        var snippetNameMap = this.snippetNameMap;\n        var self = this;\n        if (!snippets)\n            snippets = [];\n        function wrapRegexp(src) {\n            if (src && !/^\\^?\\(.*\\)\\$?$|^\\\\b$/.test(src))\n                src = \"(?:\" + src + \")\";\n            return src || \"\";\n        }\n        function guardedRegexp(re, guard, opening) {\n            re = wrapRegexp(re);\n            guard = wrapRegexp(guard);\n            if (opening) {\n                re = guard + re;\n                if (re && re[re.length - 1] != \"$\")\n                    re = re + \"$\";\n            }\n            else {\n                re = re + guard;\n                if (re && re[0] != \"^\")\n                    re = \"^\" + re;\n            }\n            return new RegExp(re);\n        }\n        function addSnippet(s) {\n            if (!s.scope)\n                s.scope = scope || \"_\";\n            scope = s.scope;\n            if (!snippetMap[scope]) {\n                snippetMap[scope] = [];\n                snippetNameMap[scope] = {};\n            }\n            var map = snippetNameMap[scope];\n            if (s.name) {\n                var old = map[s.name];\n                if (old)\n                    self.unregister(old);\n                map[s.name] = s;\n            }\n            snippetMap[scope].push(s);\n            if (s.prefix)\n                s.tabTrigger = s.prefix;\n            if (!s.content && s.body)\n                s.content = Array.isArray(s.body) ? s.body.join(\"\\n\") : s.body;\n            if (s.tabTrigger && !s.trigger) {\n                if (!s.guard && /^\\w/.test(s.tabTrigger))\n                    s.guard = \"\\\\b\";\n                s.trigger = lang.escapeRegExp(s.tabTrigger);\n            }\n            if (!s.trigger && !s.guard && !s.endTrigger && !s.endGuard)\n                return;\n            s.startRe = guardedRegexp(s.trigger, s.guard, true);\n            s.triggerRe = new RegExp(s.trigger);\n            s.endRe = guardedRegexp(s.endTrigger, s.endGuard, true);\n            s.endTriggerRe = new RegExp(s.endTrigger);\n        }\n        if (Array.isArray(snippets)) {\n            snippets.forEach(addSnippet);\n        }\n        else {\n            Object.keys(snippets).forEach(function (key) {\n                addSnippet(snippets[key]);\n            });\n        }\n        this._signal(\"registerSnippets\", { scope: scope });\n    };\n    SnippetManager.prototype.unregister = function (snippets, scope) {\n        var snippetMap = this.snippetMap;\n        var snippetNameMap = this.snippetNameMap;\n        function removeSnippet(s) {\n            var nameMap = snippetNameMap[s.scope || scope];\n            if (nameMap && nameMap[s.name]) {\n                delete nameMap[s.name];\n                var map = snippetMap[s.scope || scope];\n                var i = map && map.indexOf(s);\n                if (i >= 0)\n                    map.splice(i, 1);\n            }\n        }\n        if (snippets.content)\n            removeSnippet(snippets);\n        else if (Array.isArray(snippets))\n            snippets.forEach(removeSnippet);\n    };\n    SnippetManager.prototype.parseSnippetFile = function (str) {\n        str = str.replace(/\\r/g, \"\");\n        var list = [], /**@type{Snippet}*/ snippet = {};\n        var re = /^#.*|^({[\\s\\S]*})\\s*$|^(\\S+) (.*)$|^((?:\\n*\\t.*)+)/gm;\n        var m;\n        while (m = re.exec(str)) {\n            if (m[1]) {\n                try {\n                    snippet = JSON.parse(m[1]);\n                    list.push(snippet);\n                }\n                catch (e) { }\n            }\n            if (m[4]) {\n                snippet.content = m[4].replace(/^\\t/gm, \"\");\n                list.push(snippet);\n                snippet = {};\n            }\n            else {\n                var key = m[2], val = m[3];\n                if (key == \"regex\") {\n                    var guardRe = /\\/((?:[^\\/\\\\]|\\\\.)*)|$/g;\n                    snippet.guard = guardRe.exec(val)[1];\n                    snippet.trigger = guardRe.exec(val)[1];\n                    snippet.endTrigger = guardRe.exec(val)[1];\n                    snippet.endGuard = guardRe.exec(val)[1];\n                }\n                else if (key == \"snippet\") {\n                    snippet.tabTrigger = val.match(/^\\S*/)[0];\n                    if (!snippet.name)\n                        snippet.name = val;\n                }\n                else if (key) {\n                    snippet[key] = val;\n                }\n            }\n        }\n        return list;\n    };\n    SnippetManager.prototype.getSnippetByName = function (name, editor) {\n        var snippetMap = this.snippetNameMap;\n        var snippet;\n        this.getActiveScopes(editor).some(function (scope) {\n            var snippets = snippetMap[scope];\n            if (snippets)\n                snippet = snippets[name];\n            return !!snippet;\n        }, this);\n        return snippet;\n    };\n    return SnippetManager;\n}());\noop.implement(SnippetManager.prototype, EventEmitter);\nvar processSnippetText = function (editor, snippetText, options) {\n    if (options === void 0) { options = {}; }\n    var cursor = editor.getCursorPosition();\n    var line = editor.session.getLine(cursor.row);\n    var tabString = editor.session.getTabString();\n    var indentString = line.match(/^\\s*/)[0];\n    if (cursor.column < indentString.length)\n        indentString = indentString.slice(0, cursor.column);\n    snippetText = snippetText.replace(/\\r/g, \"\");\n    var tokens = this.tokenizeTmSnippet(snippetText);\n    tokens = this.resolveVariables(tokens, editor);\n    tokens = tokens.map(function (x) {\n        if (x == \"\\n\" && !options.excludeExtraIndent)\n            return x + indentString;\n        if (typeof x == \"string\")\n            return x.replace(/\\t/g, tabString);\n        return x;\n    });\n    var tabstops = [];\n    tokens.forEach(function (p, i) {\n        if (typeof p != \"object\")\n            return;\n        var id = p.tabstopId;\n        var ts = tabstops[id];\n        if (!ts) {\n            ts = tabstops[id] = [];\n            ts.index = id;\n            ts.value = \"\";\n            ts.parents = {};\n        }\n        if (ts.indexOf(p) !== -1)\n            return;\n        if (p.choices && !ts.choices)\n            ts.choices = p.choices;\n        ts.push(p);\n        var i1 = tokens.indexOf(p, i + 1);\n        if (i1 === -1)\n            return;\n        var value = tokens.slice(i + 1, i1);\n        var isNested = value.some(function (t) { return typeof t === \"object\"; });\n        if (isNested && !ts.value) {\n            ts.value = value;\n        }\n        else if (value.length && (!ts.value || typeof ts.value !== \"string\")) {\n            ts.value = value.join(\"\");\n        }\n    });\n    tabstops.forEach(function (ts) { ts.length = 0; });\n    var expanding = {};\n    function copyValue(val) {\n        var copy = [];\n        for (var i = 0; i < val.length; i++) {\n            var p = val[i];\n            if (typeof p == \"object\") {\n                if (expanding[p.tabstopId])\n                    continue;\n                var j = val.lastIndexOf(p, i - 1);\n                p = copy[j] || { tabstopId: p.tabstopId };\n            }\n            copy[i] = p;\n        }\n        return copy;\n    }\n    for (var i = 0; i < tokens.length; i++) {\n        var p = tokens[i];\n        if (typeof p != \"object\")\n            continue;\n        var id = p.tabstopId;\n        var ts = tabstops[id];\n        var i1 = tokens.indexOf(p, i + 1);\n        if (expanding[id]) {\n            if (expanding[id] === p) {\n                delete expanding[id];\n                Object.keys(expanding).forEach(function (parentId) {\n                    ts.parents[parentId] = true;\n                });\n            }\n            continue;\n        }\n        expanding[id] = p;\n        var value = ts.value;\n        if (typeof value !== \"string\")\n            value = copyValue(value);\n        else if (p.fmt)\n            value = this.tmStrFormat(value, p, editor);\n        tokens.splice.apply(tokens, [i + 1, Math.max(0, i1 - i)].concat(value, p));\n        if (ts.indexOf(p) === -1)\n            ts.push(p);\n    }\n    var row = 0, column = 0;\n    var text = \"\";\n    tokens.forEach(function (t) {\n        if (typeof t === \"string\") {\n            var lines = t.split(\"\\n\");\n            if (lines.length > 1) {\n                column = lines[lines.length - 1].length;\n                row += lines.length - 1;\n            }\n            else\n                column += t.length;\n            text += t;\n        }\n        else if (t) {\n            if (!t.start)\n                t.start = { row: row, column: column };\n            else\n                t.end = { row: row, column: column };\n        }\n    });\n    return {\n        text: text,\n        tabstops: tabstops,\n        tokens: tokens\n    };\n};\nvar TabstopManager = /** @class */ (function () {\n    function TabstopManager(editor) {\n        this.index = 0;\n        this.ranges = [];\n        this.tabstops = [];\n        if (editor.tabstopManager)\n            return editor.tabstopManager;\n        editor.tabstopManager = this;\n        this.$onChange = this.onChange.bind(this);\n        this.$onChangeSelection = lang.delayedCall(this.onChangeSelection.bind(this)).schedule;\n        this.$onChangeSession = this.onChangeSession.bind(this);\n        this.$onAfterExec = this.onAfterExec.bind(this);\n        this.attach(editor);\n    }\n    TabstopManager.prototype.attach = function (editor) {\n        this.$openTabstops = null;\n        this.selectedTabstop = null;\n        this.editor = editor;\n        this.session = editor.session;\n        this.editor.on(\"change\", this.$onChange);\n        this.editor.on(\"changeSelection\", this.$onChangeSelection);\n        this.editor.on(\"changeSession\", this.$onChangeSession);\n        this.editor.commands.on(\"afterExec\", this.$onAfterExec);\n        this.editor.keyBinding.addKeyboardHandler(this.keyboardHandler);\n    };\n    TabstopManager.prototype.detach = function () {\n        this.tabstops.forEach(this.removeTabstopMarkers, this);\n        this.ranges.length = 0;\n        this.tabstops.length = 0;\n        this.selectedTabstop = null;\n        this.editor.off(\"change\", this.$onChange);\n        this.editor.off(\"changeSelection\", this.$onChangeSelection);\n        this.editor.off(\"changeSession\", this.$onChangeSession);\n        this.editor.commands.off(\"afterExec\", this.$onAfterExec);\n        this.editor.keyBinding.removeKeyboardHandler(this.keyboardHandler);\n        this.editor.tabstopManager = null;\n        this.session = null;\n        this.editor = null;\n    };\n    TabstopManager.prototype.onChange = function (delta) {\n        var isRemove = delta.action[0] == \"r\";\n        var selectedTabstop = this.selectedTabstop || {};\n        var parents = selectedTabstop.parents || {};\n        var tabstops = this.tabstops.slice();\n        for (var i = 0; i < tabstops.length; i++) {\n            var ts = tabstops[i];\n            var active = ts == selectedTabstop || parents[ts.index];\n            ts.rangeList.$bias = active ? 0 : 1;\n            if (delta.action == \"remove\" && ts !== selectedTabstop) {\n                var parentActive = ts.parents && ts.parents[selectedTabstop.index];\n                var startIndex = ts.rangeList.pointIndex(delta.start, parentActive);\n                startIndex = startIndex < 0 ? -startIndex - 1 : startIndex + 1;\n                var endIndex = ts.rangeList.pointIndex(delta.end, parentActive);\n                endIndex = endIndex < 0 ? -endIndex - 1 : endIndex - 1;\n                var toRemove = ts.rangeList.ranges.slice(startIndex, endIndex);\n                for (var j = 0; j < toRemove.length; j++)\n                    this.removeRange(toRemove[j]);\n            }\n            ts.rangeList.$onChange(delta);\n        }\n        var session = this.session;\n        if (!this.$inChange && isRemove && session.getLength() == 1 && !session.getValue())\n            this.detach();\n    };\n    TabstopManager.prototype.updateLinkedFields = function () {\n        var ts = this.selectedTabstop;\n        if (!ts || !ts.hasLinkedRanges || !ts.firstNonLinked)\n            return;\n        this.$inChange = true;\n        var session = this.session;\n        var text = session.getTextRange(ts.firstNonLinked);\n        for (var i = 0; i < ts.length; i++) {\n            var range = ts[i];\n            if (!range.linked)\n                continue;\n            var original = range.original;\n            var fmt = exports.snippetManager.tmStrFormat(text, original, this.editor);\n            session.replace(range, fmt);\n        }\n        this.$inChange = false;\n    };\n    TabstopManager.prototype.onAfterExec = function (e) {\n        if (e.command && !e.command.readOnly)\n            this.updateLinkedFields();\n    };\n    TabstopManager.prototype.onChangeSelection = function () {\n        if (!this.editor)\n            return;\n        var lead = this.editor.selection.lead;\n        var anchor = this.editor.selection.anchor;\n        var isEmpty = this.editor.selection.isEmpty();\n        for (var i = 0; i < this.ranges.length; i++) {\n            if (this.ranges[i].linked)\n                continue;\n            var containsLead = this.ranges[i].contains(lead.row, lead.column);\n            var containsAnchor = isEmpty || this.ranges[i].contains(anchor.row, anchor.column);\n            if (containsLead && containsAnchor)\n                return;\n        }\n        this.detach();\n    };\n    TabstopManager.prototype.onChangeSession = function () {\n        this.detach();\n    };\n    TabstopManager.prototype.tabNext = function (dir) {\n        var max = this.tabstops.length;\n        var index = this.index + (dir || 1);\n        index = Math.min(Math.max(index, 1), max);\n        if (index == max)\n            index = 0;\n        this.selectTabstop(index);\n        this.updateTabstopMarkers();\n        if (index === 0) {\n            this.detach();\n        }\n    };\n    TabstopManager.prototype.selectTabstop = function (index) {\n        this.$openTabstops = null;\n        var ts = this.tabstops[this.index];\n        if (ts)\n            this.addTabstopMarkers(ts);\n        this.index = index;\n        ts = this.tabstops[this.index];\n        if (!ts || !ts.length)\n            return;\n        this.selectedTabstop = ts;\n        var range = ts.firstNonLinked || ts;\n        if (ts.choices)\n            range.cursor = range.start;\n        if (!this.editor.inVirtualSelectionMode) {\n            var sel = this.editor.multiSelect;\n            sel.toSingleRange(range);\n            for (var i = 0; i < ts.length; i++) {\n                if (ts.hasLinkedRanges && ts[i].linked)\n                    continue;\n                sel.addRange(ts[i].clone(), true);\n            }\n        }\n        else {\n            this.editor.selection.fromOrientedRange(range);\n        }\n        this.editor.keyBinding.addKeyboardHandler(this.keyboardHandler);\n        if (this.selectedTabstop && this.selectedTabstop.choices)\n            this.editor.execCommand(\"startAutocomplete\", { matches: this.selectedTabstop.choices });\n    };\n    TabstopManager.prototype.addTabstops = function (tabstops, start, end) {\n        var useLink = this.useLink || !this.editor.getOption(\"enableMultiselect\");\n        if (!this.$openTabstops)\n            this.$openTabstops = [];\n        if (!tabstops[0]) {\n            var p = Range.fromPoints(end, end);\n            moveRelative(p.start, start);\n            moveRelative(p.end, start);\n            tabstops[0] = [p];\n            tabstops[0].index = 0;\n        }\n        var i = this.index;\n        var arg = [i + 1, 0];\n        var ranges = this.ranges;\n        var snippetId = this.snippetId = (this.snippetId || 0) + 1;\n        tabstops.forEach(function (ts, index) {\n            var dest = this.$openTabstops[index] || ts;\n            dest.snippetId = snippetId;\n            for (var i = 0; i < ts.length; i++) {\n                var p = ts[i];\n                var range = Range.fromPoints(p.start, p.end || p.start);\n                movePoint(range.start, start);\n                movePoint(range.end, start);\n                range.original = p;\n                range.tabstop = dest;\n                ranges.push(range);\n                if (dest != ts)\n                    dest.unshift(range);\n                else\n                    dest[i] = range;\n                if (p.fmtString || (dest.firstNonLinked && useLink)) {\n                    range.linked = true;\n                    dest.hasLinkedRanges = true;\n                }\n                else if (!dest.firstNonLinked)\n                    dest.firstNonLinked = range;\n            }\n            if (!dest.firstNonLinked)\n                dest.hasLinkedRanges = false;\n            if (dest === ts) {\n                arg.push(dest);\n                this.$openTabstops[index] = dest;\n            }\n            this.addTabstopMarkers(dest);\n            dest.rangeList = dest.rangeList || new RangeList();\n            dest.rangeList.$bias = 0;\n            dest.rangeList.addList(dest);\n        }, this);\n        if (arg.length > 2) {\n            if (this.tabstops.length)\n                arg.push(arg.splice(2, 1)[0]);\n            this.tabstops.splice.apply(this.tabstops, arg);\n        }\n    };\n    TabstopManager.prototype.addTabstopMarkers = function (ts) {\n        var session = this.session;\n        ts.forEach(function (range) {\n            if (!range.markerId)\n                range.markerId = session.addMarker(range, \"ace_snippet-marker\", \"text\");\n        });\n    };\n    TabstopManager.prototype.removeTabstopMarkers = function (ts) {\n        var session = this.session;\n        ts.forEach(function (range) {\n            session.removeMarker(range.markerId);\n            range.markerId = null;\n        });\n    };\n    TabstopManager.prototype.updateTabstopMarkers = function () {\n        if (!this.selectedTabstop)\n            return;\n        var currentSnippetId = this.selectedTabstop.snippetId;\n        if (this.selectedTabstop.index === 0) {\n            currentSnippetId--;\n        }\n        this.tabstops.forEach(function (ts) {\n            if (ts.snippetId === currentSnippetId)\n                this.addTabstopMarkers(ts);\n            else\n                this.removeTabstopMarkers(ts);\n        }, this);\n    };\n    TabstopManager.prototype.removeRange = function (range) {\n        var i = range.tabstop.indexOf(range);\n        if (i != -1)\n            range.tabstop.splice(i, 1);\n        i = this.ranges.indexOf(range);\n        if (i != -1)\n            this.ranges.splice(i, 1);\n        i = range.tabstop.rangeList.ranges.indexOf(range);\n        if (i != -1)\n            range.tabstop.splice(i, 1);\n        this.session.removeMarker(range.markerId);\n        if (!range.tabstop.length) {\n            i = this.tabstops.indexOf(range.tabstop);\n            if (i != -1)\n                this.tabstops.splice(i, 1);\n            if (!this.tabstops.length)\n                this.detach();\n        }\n    };\n    return TabstopManager;\n}());\nTabstopManager.prototype.keyboardHandler = new HashHandler();\nTabstopManager.prototype.keyboardHandler.bindKeys({\n    \"Tab\": function (editor) {\n        if (exports.snippetManager && exports.snippetManager.expandWithTab(editor))\n            return;\n        editor.tabstopManager.tabNext(1);\n        editor.renderer.scrollCursorIntoView();\n    },\n    \"Shift-Tab\": function (editor) {\n        editor.tabstopManager.tabNext(-1);\n        editor.renderer.scrollCursorIntoView();\n    },\n    \"Esc\": function (editor) {\n        editor.tabstopManager.detach();\n    }\n});\nvar movePoint = function (point, diff) {\n    if (point.row == 0)\n        point.column += diff.column;\n    point.row += diff.row;\n};\nvar moveRelative = function (point, start) {\n    if (point.row == start.row)\n        point.column -= start.column;\n    point.row -= start.row;\n};\ndom.importCssString(\"\\n.ace_snippet-marker {\\n    -moz-box-sizing: border-box;\\n    box-sizing: border-box;\\n    background: rgba(194, 193, 208, 0.09);\\n    border: 1px dotted rgba(211, 208, 235, 0.62);\\n    position: absolute;\\n}\", \"snippets.css\", false);\nexports.snippetManager = new SnippetManager();\nvar Editor = require(\"./editor\").Editor;\n(function () {\n    this.insertSnippet = function (content, options) {\n        return exports.snippetManager.insertSnippet(this, content, options);\n    };\n    this.expandSnippet = function (options) {\n        return exports.snippetManager.expandWithTab(this, options);\n    };\n}).call(Editor.prototype);\n\n});\n\nace.define(\"ace/ext/emmet\",[\"require\",\"exports\",\"module\",\"ace/keyboard/hash_handler\",\"ace/editor\",\"ace/snippets\",\"ace/range\",\"ace/config\",\"resources\",\"resources\",\"tabStops\",\"resources\",\"utils\",\"actions\"], function(require, exports, module){\"use strict\";\nvar HashHandler = require(\"../keyboard/hash_handler\").HashHandler;\nvar Editor = require(\"../editor\").Editor;\nvar snippetManager = require(\"../snippets\").snippetManager;\nvar Range = require(\"../range\").Range;\nvar config = require(\"../config\");\nvar emmet, emmetPath;\nvar AceEmmetEditor = /** @class */ (function () {\n    function AceEmmetEditor() {\n    }\n    AceEmmetEditor.prototype.setupContext = function (editor) {\n        this.ace = editor;\n        this.indentation = editor.session.getTabString();\n        if (!emmet)\n            emmet = window[\"emmet\"];\n        var resources = emmet.resources || emmet.require(\"resources\");\n        resources.setVariable(\"indentation\", this.indentation);\n        this.$syntax = null;\n        this.$syntax = this.getSyntax();\n    };\n    AceEmmetEditor.prototype.getSelectionRange = function () {\n        var range = this.ace.getSelectionRange();\n        var doc = this.ace.session.doc;\n        return {\n            start: doc.positionToIndex(range.start),\n            end: doc.positionToIndex(range.end)\n        };\n    };\n    AceEmmetEditor.prototype.createSelection = function (start, end) {\n        var doc = this.ace.session.doc;\n        this.ace.selection.setRange({\n            start: doc.indexToPosition(start),\n            end: doc.indexToPosition(end)\n        });\n    };\n    AceEmmetEditor.prototype.getCurrentLineRange = function () {\n        var ace = this.ace;\n        var row = ace.getCursorPosition().row;\n        var lineLength = ace.session.getLine(row).length;\n        var index = ace.session.doc.positionToIndex({ row: row, column: 0 });\n        return {\n            start: index,\n            end: index + lineLength\n        };\n    };\n    AceEmmetEditor.prototype.getCaretPos = function () {\n        var pos = this.ace.getCursorPosition();\n        return this.ace.session.doc.positionToIndex(pos);\n    };\n    AceEmmetEditor.prototype.setCaretPos = function (index) {\n        var pos = this.ace.session.doc.indexToPosition(index);\n        this.ace.selection.moveToPosition(pos);\n    };\n    AceEmmetEditor.prototype.getCurrentLine = function () {\n        var row = this.ace.getCursorPosition().row;\n        return this.ace.session.getLine(row);\n    };\n    AceEmmetEditor.prototype.replaceContent = function (value, start, end, noIndent) {\n        if (end == null)\n            end = start == null ? this.getContent().length : start;\n        if (start == null)\n            start = 0;\n        var editor = this.ace;\n        var doc = editor.session.doc;\n        var range = Range.fromPoints(doc.indexToPosition(start), doc.indexToPosition(end));\n        editor.session.remove(range);\n        range.end = range.start;\n        value = this.$updateTabstops(value);\n        snippetManager.insertSnippet(editor, value);\n    };\n    AceEmmetEditor.prototype.getContent = function () {\n        return this.ace.getValue();\n    };\n    AceEmmetEditor.prototype.getSyntax = function () {\n        if (this.$syntax)\n            return this.$syntax;\n        var syntax = this.ace.session.$modeId.split(\"/\").pop();\n        if (syntax == \"html\" || syntax == \"php\") {\n            var cursor = this.ace.getCursorPosition();\n            var state = this.ace.session.getState(cursor.row);\n            if (typeof state != \"string\")\n                state = state[0];\n            if (state) {\n                state = state.split(\"-\");\n                if (state.length > 1)\n                    syntax = state[0];\n                else if (syntax == \"php\")\n                    syntax = \"html\";\n            }\n        }\n        return syntax;\n    };\n    AceEmmetEditor.prototype.getProfileName = function () {\n        var resources = emmet.resources || emmet.require(\"resources\");\n        switch (this.getSyntax()) {\n            case \"css\": return \"css\";\n            case \"xml\":\n            case \"xsl\":\n                return \"xml\";\n            case \"html\":\n                var profile = resources.getVariable(\"profile\");\n                if (!profile)\n                    profile = this.ace.session.getLines(0, 2).join(\"\").search(/<!DOCTYPE[^>]+XHTML/i) != -1 ? \"xhtml\" : \"html\";\n                return profile;\n            default:\n                var mode = this.ace.session.$mode;\n                return mode.emmetConfig && mode.emmetConfig.profile || \"xhtml\";\n        }\n    };\n    AceEmmetEditor.prototype.prompt = function (title) {\n        return prompt(title); // eslint-disable-line no-alert\n    };\n    AceEmmetEditor.prototype.getSelection = function () {\n        return this.ace.session.getTextRange();\n    };\n    AceEmmetEditor.prototype.getFilePath = function () {\n        return \"\";\n    };\n    AceEmmetEditor.prototype.$updateTabstops = function (value) {\n        var base = 1000;\n        var zeroBase = 0;\n        var lastZero = null;\n        var ts = emmet.tabStops || emmet.require('tabStops');\n        var resources = emmet.resources || emmet.require(\"resources\");\n        var settings = resources.getVocabulary(\"user\");\n        var tabstopOptions = {\n            tabstop: function (data) {\n                var group = parseInt(data.group, 10);\n                var isZero = group === 0;\n                if (isZero)\n                    group = ++zeroBase;\n                else\n                    group += base;\n                var placeholder = data.placeholder;\n                if (placeholder) {\n                    placeholder = ts.processText(placeholder, tabstopOptions);\n                }\n                var result = '${' + group + (placeholder ? ':' + placeholder : '') + '}';\n                if (isZero) {\n                    lastZero = [data.start, result];\n                }\n                return result;\n            },\n            escape: function (ch) {\n                if (ch == '$')\n                    return '\\\\$';\n                if (ch == '\\\\')\n                    return '\\\\\\\\';\n                return ch;\n            }\n        };\n        value = ts.processText(value, tabstopOptions);\n        if (settings.variables['insert_final_tabstop'] && !/\\$\\{0\\}$/.test(value)) {\n            value += '${0}';\n        }\n        else if (lastZero) {\n            var common = emmet.utils ? emmet.utils.common : emmet.require('utils');\n            value = common.replaceSubstring(value, '${0}', lastZero[0], lastZero[1]);\n        }\n        return value;\n    };\n    return AceEmmetEditor;\n}());\nvar keymap = {\n    expand_abbreviation: { \"mac\": \"ctrl+alt+e\", \"win\": \"alt+e\" },\n    match_pair_outward: { \"mac\": \"ctrl+d\", \"win\": \"ctrl+,\" },\n    match_pair_inward: { \"mac\": \"ctrl+j\", \"win\": \"ctrl+shift+0\" },\n    matching_pair: { \"mac\": \"ctrl+alt+j\", \"win\": \"alt+j\" },\n    next_edit_point: \"alt+right\",\n    prev_edit_point: \"alt+left\",\n    toggle_comment: { \"mac\": \"command+/\", \"win\": \"ctrl+/\" },\n    split_join_tag: { \"mac\": \"shift+command+'\", \"win\": \"shift+ctrl+`\" },\n    remove_tag: { \"mac\": \"command+'\", \"win\": \"shift+ctrl+;\" },\n    evaluate_math_expression: { \"mac\": \"shift+command+y\", \"win\": \"shift+ctrl+y\" },\n    increment_number_by_1: \"ctrl+up\",\n    decrement_number_by_1: \"ctrl+down\",\n    increment_number_by_01: \"alt+up\",\n    decrement_number_by_01: \"alt+down\",\n    increment_number_by_10: { \"mac\": \"alt+command+up\", \"win\": \"shift+alt+up\" },\n    decrement_number_by_10: { \"mac\": \"alt+command+down\", \"win\": \"shift+alt+down\" },\n    select_next_item: { \"mac\": \"shift+command+.\", \"win\": \"shift+ctrl+.\" },\n    select_previous_item: { \"mac\": \"shift+command+,\", \"win\": \"shift+ctrl+,\" },\n    reflect_css_value: { \"mac\": \"shift+command+r\", \"win\": \"shift+ctrl+r\" },\n    encode_decode_data_url: { \"mac\": \"shift+ctrl+d\", \"win\": \"ctrl+'\" },\n    expand_abbreviation_with_tab: \"Tab\",\n    wrap_with_abbreviation: { \"mac\": \"shift+ctrl+a\", \"win\": \"shift+ctrl+a\" }\n};\nvar editorProxy = new AceEmmetEditor();\nexports.commands = new HashHandler();\nexports.runEmmetCommand = function runEmmetCommand(editor) {\n    if (this.action == \"expand_abbreviation_with_tab\") {\n        if (!editor.selection.isEmpty())\n            return false;\n        var pos = editor.selection.lead;\n        var token = editor.session.getTokenAt(pos.row, pos.column);\n        if (token && /\\btag\\b/.test(token.type))\n            return false;\n    }\n    try {\n        editorProxy.setupContext(editor);\n        var actions = emmet.actions || emmet.require(\"actions\");\n        if (this.action == \"wrap_with_abbreviation\") {\n            return setTimeout(function () {\n                actions.run(\"wrap_with_abbreviation\", editorProxy);\n            }, 0);\n        }\n        var result = actions.run(this.action, editorProxy);\n    }\n    catch (e) {\n        if (!emmet) {\n            var loading = exports.load(runEmmetCommand.bind(this, editor));\n            if (this.action == \"expand_abbreviation_with_tab\")\n                return false;\n            return loading;\n        }\n        editor._signal(\"changeStatus\", typeof e == \"string\" ? e : e.message);\n        config.warn(e);\n        result = false;\n    }\n    return result;\n};\nfor (var command in keymap) {\n    exports.commands.addCommand({\n        name: \"emmet:\" + command,\n        action: command,\n        bindKey: keymap[command],\n        exec: exports.runEmmetCommand,\n        multiSelectAction: \"forEach\"\n    });\n}\nexports.updateCommands = function (editor, enabled) {\n    if (enabled) {\n        editor.keyBinding.addKeyboardHandler(exports.commands);\n    }\n    else {\n        editor.keyBinding.removeKeyboardHandler(exports.commands);\n    }\n};\nexports.isSupportedMode = function (mode) {\n    if (!mode)\n        return false;\n    if (mode.emmetConfig)\n        return true;\n    var id = mode.$id || mode;\n    return /css|less|scss|sass|stylus|html|php|twig|ejs|handlebars/.test(id);\n};\nexports.isAvailable = function (editor, command) {\n    if (/(evaluate_math_expression|expand_abbreviation)$/.test(command))\n        return true;\n    var mode = editor.session.$mode;\n    var isSupported = exports.isSupportedMode(mode);\n    if (isSupported && mode.$modes) {\n        try {\n            editorProxy.setupContext(editor);\n            if (/js|php/.test(editorProxy.getSyntax()))\n                isSupported = false;\n        }\n        catch (e) { }\n    }\n    return isSupported;\n};\nvar onChangeMode = function (e, target) {\n    var editor = target;\n    if (!editor)\n        return;\n    var enabled = exports.isSupportedMode(editor.session.$mode);\n    if (e.enableEmmet === false)\n        enabled = false;\n    if (enabled)\n        exports.load();\n    exports.updateCommands(editor, enabled);\n};\nexports.load = function (cb) {\n    if (typeof emmetPath !== \"string\") {\n        config.warn(\"script for emmet-core is not loaded\");\n        return false;\n    }\n    config.loadModule(emmetPath, function () {\n        emmetPath = null;\n        cb && cb();\n    });\n    return true;\n};\nexports.AceEmmetEditor = AceEmmetEditor;\nconfig.defineOptions(Editor.prototype, \"editor\", {\n    enableEmmet: {\n        set: function (val) {\n            this[val ? \"on\" : \"removeListener\"](\"changeMode\", onChangeMode);\n            onChangeMode({ enableEmmet: !!val }, this);\n        },\n        value: true\n    }\n});\nexports.setCore = function (e) {\n    if (typeof e == \"string\")\n        emmetPath = e;\n    else\n        emmet = e;\n};\n\n});                (function() {\n                    ace.require([\"ace/ext/emmet\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}