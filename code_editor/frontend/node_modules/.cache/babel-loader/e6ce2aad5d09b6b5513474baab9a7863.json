{"ast":null,"code":"ace.define(\"ace/mode/raku_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var RakuHighlightRules = function () {\n    var keywords = \"my|our|class|role|grammar|is|does|sub|method|submethod|try|\" + \"default|when|if|elsif|else|unless|with|orwith|without|for|given|proceed|\" + \"succeed|loop|while|until|repeat|module|use|need|import|require|unit|\" + \"constant|enum|multi|return|has|token|rule|make|made|proto|state|augment|\" + \"but|anon|supersede|let|subset|gather|returns|return-rw|temp|\" + \"BEGIN|CHECK|INIT|END|CLOSE|ENTER|LEAVE|KEEP|UNDO|PRE|POST|FIRST|NEXT|LAST|CATCH|CONTROL|QUIT|DOC\";\n    var types = \"Any|Array|Associative|AST|atomicint|Attribute|Backtrace|Backtrace::Frame|\" + \"Bag|Baggy|BagHash|Blob|Block|Bool|Buf|Callable|CallFrame|Cancellation|\" + \"Capture|Channel|Code|compiler|Complex|ComplexStr|Cool|CurrentThreadScheduler|\" + \"Cursor|Date|Dateish|DateTime|Distro|Duration|Encoding|Exception|Failure|\" + \"FatRat|Grammar|Hash|HyperWhatever|Instant|Int|IntStr|IO|IO::ArgFiles|\" + \"IO::CatHandle|IO::Handle|IO::Notification|IO::Path|IO::Path::Cygwin|\" + \"IO::Path::QNX|IO::Path::Unix|IO::Path::Win32|IO::Pipe|IO::Socket|\" + \"IO::Socket::Async|IO::Socket::INET|IO::Spec|IO::Spec::Cygwin|IO::Spec::QNX|\" + \"IO::Spec::Unix|IO::Spec::Win32|IO::Special|Iterable|Iterator|Junction|Kernel|\" + \"Label|List|Lock|Lock::Async|Macro|Map|Match|Metamodel::AttributeContainer|\" + \"Metamodel::C3MRO|Metamodel::ClassHOW|Metamodel::EnumHOW|Metamodel::Finalization|\" + \"Metamodel::MethodContainer|Metamodel::MROBasedMethodDispatch|Metamodel::MultipleInheritance|\" + \"Metamodel::Naming|Metamodel::Primitives|Metamodel::PrivateMethodContainer|\" + \"Metamodel::RoleContainer|Metamodel::Trusting|Method|Mix|MixHash|Mixy|Mu|\" + \"NFC|NFD|NFKC|NFKD|Nil|Num|Numeric|NumStr|ObjAt|Order|Pair|Parameter|Perl|\" + \"Pod::Block|Pod::Block::Code|Pod::Block::Comment|Pod::Block::Declarator|\" + \"Pod::Block::Named|Pod::Block::Para|Pod::Block::Table|Pod::Heading|Pod::Item|\" + \"Positional|PositionalBindFailover|Proc|Proc::Async|Promise|Proxy|PseudoStash|\" + \"Raku|QuantHash|Range|Rat|Rational|RatStr|Real|Regex|Routine|Scalar|Scheduler|\" + \"Semaphore|Seq|Set|SetHash|Setty|Signature|Slip|Stash|Str|StrDistance|Stringy|\" + \"Sub|Submethod|Supplier|Supplier::Preserving|Supply|Systemic|Tap|Telemetry|\" + \"Telemetry::Instrument::Thread|Telemetry::Instrument::Usage|Telemetry::Period|\" + \"Telemetry::Sampler|Thread|ThreadPoolScheduler|UInt|Uni|utf8|Variable|Version|\" + \"VM|Whatever|WhateverCode|WrapHandle|int|uint|num|str|\" + \"int8|int16|int32|int64|uint8|uint16|uint32|uint64|long|longlong|num32|num64|size_t|bool|CArray|Pointer|\" + \"Backtrace|Backtrace::Frame|Exception|Failure|X::AdHoc|X::Anon::Augment|X::Anon::Multi|\" + \"X::Assignment::RO|X::Attribute::NoPackage|X::Attribute::Package|X::Attribute::Undeclared|\" + \"X::Augment::NoSuchType|X::Bind|X::Bind::NativeType|X::Bind::Slice|X::Caller::NotDynamic|\" + \"X::Channel::ReceiveOnClosed|X::Channel::SendOnClosed|X::Comp|X::Composition::NotComposable|\" + \"X::Constructor::Positional|X::ControlFlow|X::ControlFlow::Return|X::DateTime::TimezoneClash|\" + \"X::Declaration::Scope|X::Declaration::Scope::Multi|X::Does::TypeObject|X::Eval::NoSuchLang|\" + \"X::Export::NameClash|X::IO|X::IO::Chdir|X::IO::Chmod|X::IO::Copy|X::IO::Cwd|X::IO::Dir|\" + \"X::IO::DoesNotExist|X::IO::Link|X::IO::Mkdir|X::IO::Move|X::IO::Rename|X::IO::Rmdir|X::IO::Symlink|\" + \"X::IO::Unlink|X::Inheritance::NotComposed|X::Inheritance::Unsupported|X::Method::InvalidQualifier|\" + \"X::Method::NotFound|X::Method::Private::Permission|X::Method::Private::Unqualified|\" + \"X::Mixin::NotComposable|X::NYI|X::NoDispatcher|X::Numeric::Real|X::OS|X::Obsolete|X::OutOfRange|\" + \"X::Package::Stubbed|X::Parameter::Default|X::Parameter::MultipleTypeConstraints|\" + \"X::Parameter::Placeholder|X::Parameter::Twigil|X::Parameter::WrongOrder|X::Phaser::Multiple|\" + \"X::Phaser::PrePost|X::Placeholder::Block|X::Placeholder::Mainline|X::Pod|X::Proc::Async|\" + \"X::Proc::Async::AlreadyStarted|X::Proc::Async::CharsOrBytes|X::Proc::Async::MustBeStarted|\" + \"X::Proc::Async::OpenForWriting|X::Proc::Async::TapBeforeSpawn|X::Proc::Unsuccessful|\" + \"X::Promise::CauseOnlyValidOnBroken|X::Promise::Vowed|X::Redeclaration|X::Role::Initialization|\" + \"X::Seq::Consumed|X::Sequence::Deduction|X::Signature::NameClash|X::Signature::Placeholder|\" + \"X::Str::Numeric|X::StubCode|X::Syntax|X::Syntax::Augment::WithoutMonkeyTyping|\" + \"X::Syntax::Comment::Embedded|X::Syntax::Confused|X::Syntax::InfixInTermPosition|\" + \"X::Syntax::Malformed|X::Syntax::Missing|X::Syntax::NegatedPair|X::Syntax::NoSelf|\" + \"X::Syntax::Number::RadixOutOfRange|X::Syntax::P5|X::Syntax::Regex::Adverb|\" + \"X::Syntax::Regex::SolitaryQuantifier|X::Syntax::Reserved|X::Syntax::Self::WithoutObject|\" + \"X::Syntax::Signature::InvocantMarker|X::Syntax::Term::MissingInitializer|X::Syntax::UnlessElse|\" + \"X::Syntax::Variable::Match|X::Syntax::Variable::Numeric|X::Syntax::Variable::Twigil|X::Temporal|\" + \"X::Temporal::InvalidFormat|X::TypeCheck|X::TypeCheck::Assignment|X::TypeCheck::Binding|\" + \"X::TypeCheck::Return|X::TypeCheck::Splice|X::Undeclared\";\n    var builtinFunctions = \"abs|abs2rel|absolute|accept|ACCEPTS|accessed|acos|acosec|acosech|acosh|\" + \"acotan|acotanh|acquire|act|action|actions|add|add_attribute|add_enum_value|\" + \"add_fallback|add_method|add_parent|add_private_method|add_role|add_trustee|\" + \"adverb|after|all|allocate|allof|allowed|alternative-names|annotations|antipair|\" + \"antipairs|any|anyof|app_lifetime|append|arch|archname|args|arity|asec|asech|\" + \"asin|asinh|ASSIGN-KEY|ASSIGN-POS|assuming|ast|at|atan|atan2|atanh|AT-KEY|\" + \"atomic-assign|atomic-dec-fetch|atomic-fetch|atomic-fetch-add|atomic-fetch-dec|\" + \"atomic-fetch-inc|atomic-fetch-sub|atomic-inc-fetch|AT-POS|attributes|auth|await|\" + \"backtrace|Bag|BagHash|base|basename|base-repeating|batch|BIND-KEY|BIND-POS|\" + \"bind-stderr|bind-stdin|bind-stdout|bind-udp|bits|bless|block|bool-only|\" + \"bounds|break|Bridge|broken|BUILD|build-date|bytes|cache|callframe|calling-package|\" + \"CALL-ME|callsame|callwith|can|cancel|candidates|cando|canonpath|caps|caption|\" + \"Capture|cas|catdir|categorize|categorize-list|catfile|catpath|cause|ceiling|\" + \"cglobal|changed|Channel|chars|chdir|child|child-name|child-typename|chmod|chomp|\" + \"chop|chr|chrs|chunks|cis|classify|classify-list|cleanup|clone|close|closed|\" + \"close-stdin|code|codes|collate|column|comb|combinations|command|comment|\" + \"compiler|Complex|compose|compose_type|composer|condition|config|configure_destroy|\" + \"configure_type_checking|conj|connect|constraints|construct|contains|contents|copy|\" + \"cos|cosec|cosech|cosh|cotan|cotanh|count|count-only|cpu-cores|cpu-usage|CREATE|\" + \"create_type|cross|cue|curdir|curupdir|d|Date|DateTime|day|daycount|day-of-month|\" + \"day-of-week|day-of-year|days-in-month|declaration|decode|decoder|deepmap|\" + \"defined|DEFINITE|delayed|DELETE-KEY|DELETE-POS|denominator|desc|DESTROY|destroyers|\" + \"devnull|did-you-mean|die|dir|dirname|dir-sep|DISTROnames|do|done|duckmap|dynamic|\" + \"e|eager|earlier|elems|emit|enclosing|encode|encoder|encoding|end|ends-with|enum_from_value|\" + \"enum_value_list|enum_values|enums|eof|EVAL|EVALFILE|exception|excludes-max|excludes-min|\" + \"EXISTS-KEY|EXISTS-POS|exit|exitcode|exp|expected|explicitly-manage|expmod|extension|f|\" + \"fail|fc|feature|file|filename|find_method|find_method_qualified|finish|first|flat|flatmap|\" + \"flip|floor|flush|fmt|format|formatter|freeze|from|from-list|from-loop|from-posix|full|\" + \"full-barrier|get|get_value|getc|gist|got|grab|grabpairs|grep|handle|handled|handles|\" + \"hardware|has_accessor|head|headers|hh-mm-ss|hidden|hides|hour|how|hyper|id|illegal|\" + \"im|in|indent|index|indices|indir|infinite|infix|install_method_cache|\" + \"Instant|instead|int-bounds|interval|in-timezone|invalid-str|invert|invocant|IO|\" + \"IO::Notification.watch-path|is_trusted|is_type|isa|is-absolute|is-hidden|is-initial-thread|\" + \"is-int|is-lazy|is-leap-year|isNaN|is-prime|is-relative|is-routine|is-setting|is-win|item|\" + \"iterator|join|keep|kept|KERNELnames|key|keyof|keys|kill|kv|kxxv|l|lang|last|lastcall|later|\" + \"lazy|lc|leading|level|line|lines|link|listen|live|local|lock|log|log10|lookup|lsb|\" + \"MAIN|match|max|maxpairs|merge|message|method_table|methods|migrate|min|minmax|\" + \"minpairs|minute|misplaced|Mix|MixHash|mkdir|mode|modified|month|move|mro|msb|multiness|\" + \"name|named|named_names|narrow|nativecast|native-descriptor|nativesizeof|new|new_type|\" + \"new-from-daycount|new-from-pairs|next|nextcallee|next-handle|nextsame|nextwith|NFC|NFD|\" + \"NFKC|NFKD|nl-in|nl-out|nodemap|none|norm|not|note|now|nude|numerator|Numeric|of|\" + \"offset|offset-in-hours|offset-in-minutes|old|on-close|one|on-switch|open|opened|\" + \"operation|optional|ord|ords|orig|os-error|osname|out-buffer|pack|package|package-kind|\" + \"package-name|packages|pair|pairs|pairup|parameter|params|parent|parent-name|parents|parse|\" + \"parse-base|parsefile|parse-names|parts|path|path-sep|payload|peer-host|peer-port|periods|\" + \"perl|permutations|phaser|pick|pickpairs|pid|placeholder|plus|polar|poll|polymod|pop|pos|\" + \"positional|posix|postfix|postmatch|precomp-ext|precomp-target|pred|prefix|prematch|prepend|\" + \"print|printf|print-nl|print-to|private|private_method_table|proc|produce|Promise|prompt|\" + \"protect|pull-one|push|push-all|push-at-least|push-exactly|push-until-lazy|put|\" + \"qualifier-type|quit|r|race|radix|raku|rand|range|raw|re|read|readchars|readonly|\" + \"ready|Real|reallocate|reals|reason|rebless|receive|recv|redispatcher|redo|reduce|\" + \"rel2abs|relative|release|rename|repeated|replacement|report|reserved|resolve|\" + \"restore|result|resume|rethrow|reverse|right|rindex|rmdir|roles_to_compose|\" + \"rolish|roll|rootdir|roots|rotate|rotor|round|roundrobin|routine-type|run|rwx|s|\" + \"samecase|samemark|samewith|say|schedule-on|scheduler|scope|sec|sech|second|seek|\" + \"self|send|Set|set_hidden|set_name|set_package|set_rw|set_value|SetHash|\" + \"set-instruments|setup_finalization|shape|share|shell|shift|sibling|sigil|\" + \"sign|signal|signals|signature|sin|sinh|sink|sink-all|skip|skip-at-least|\" + \"skip-at-least-pull-one|skip-one|sleep|sleep-timer|sleep-until|Slip|slurp|\" + \"slurp-rest|slurpy|snap|snapper|so|socket-host|socket-port|sort|source|\" + \"source-package|spawn|SPEC|splice|split|splitdir|splitpath|sprintf|spurt|\" + \"sqrt|squish|srand|stable|start|started|starts-with|status|stderr|stdout|\" + \"sub_signature|subbuf|subbuf-rw|subname|subparse|subst|subst-mutate|\" + \"substr|substr-eq|substr-rw|succ|sum|Supply|symlink|t|tail|take|take-rw|\" + \"tan|tanh|tap|target|target-name|tc|tclc|tell|then|throttle|throw|timezone|\" + \"tmpdir|to|today|toggle|to-posix|total|trailing|trans|tree|trim|trim-leading|\" + \"trim-trailing|truncate|truncated-to|trusts|try_acquire|trying|twigil|type|\" + \"type_captures|typename|uc|udp|uncaught_handler|unimatch|uniname|uninames|\" + \"uniparse|uniprop|uniprops|unique|unival|univals|unlink|unlock|unpack|unpolar|\" + \"unshift|unwrap|updir|USAGE|utc|val|value|values|VAR|variable|verbose-config|\" + \"version|VMnames|volume|vow|w|wait|warn|watch|watch-path|week|weekday-of-month|\" + \"week-number|week-year|WHAT|WHERE|WHEREFORE|WHICH|WHO|whole-second|WHY|\" + \"wordcase|words|workaround|wrap|write|write-to|yada|year|yield|yyyy-mm-dd|\" + \"z|zip|zip-latest|\" + \"plan|done-testing|bail-out|todo|skip|skip-rest|diag|subtest|pass|flunk|ok|\" + \"nok|cmp-ok|is-deeply|isnt|is-approx|like|unlike|use-ok|isa-ok|does-ok|\" + \"can-ok|dies-ok|lives-ok|eval-dies-ok|eval-lives-ok|throws-like|fails-like|\" + \"rw|required|native|repr|export|symbol\";\n    var constants_ascii = \"pi|Inf|tau|time\";\n    var ops_txt = \"eq|ne|gt|lt|le|ge|div|gcd|lcm|leg|cmp|ff|fff|\" + \"x|before|after|Z|X|and|or|andthen|notandthen|orelse|xor\";\n    var keywordMapper = this.createKeywordMapper({\n      \"keyword\": keywords,\n      \"storage.type\": types,\n      \"constant.language\": constants_ascii,\n      \"support.function\": builtinFunctions,\n      \"keyword.operator\": ops_txt\n    }, \"identifier\");\n    var moduleName = \"[a-zA-Z_][a-zA-Z_0-9:-]*\\\\b\";\n    var hex = {\n      token: \"constant.numeric\",\n      regex: \"0x[0-9a-fA-F]+\\\\b\"\n    };\n    var num_rat = {\n      token: \"constant.numeric\",\n      regex: \"[+-.]?\\\\d[\\\\d_]*(?:(?:\\\\.\\\\d[\\\\d_]*)?(?:[eE][+-]?\\\\d[\\\\d_]*)?)?i?\\\\b\"\n    };\n    var booleans = {\n      token: \"constant.language.boolean\",\n      regex: \"(?:True|False)\\\\b\"\n    };\n    var versions = {\n      token: \"constant.other\",\n      regex: \"v[0-9](?:\\\\.[a-zA-Z0-9*])*\\\\b\"\n    };\n    var lang_keywords = {\n      token: keywordMapper,\n      regex: \"[a-zA-Z][\\\\:a-zA-Z0-9_-]*\\\\b\"\n    };\n    var variables = {\n      token: \"variable.language\",\n      regex: \"[$@%&][?*!.]?[a-zA-Z0-9_-]+\\\\b\"\n    };\n    var vars_special = {\n      token: \"variable.language\",\n      regex: \"\\\\$[/|!]?|@\\\\$/\"\n    };\n    var ops_char = {\n      token: \"keyword.operator\",\n      regex: \"=|<|>|\\\\+|\\\\*|-|/|~|%|\\\\?|!|\\\\^|\\\\.|\\\\:|\\\\,|\" + \"»|«|\\\\||\\\\&|⚛|∘\"\n    };\n    var constants_unicode = {\n      token: \"constant.language\",\n      regex: \"𝑒|π|τ|∞\"\n    };\n    var qstrings = {\n      token: \"string.quoted.single\",\n      regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n    };\n    var word_quoting = {\n      token: \"string.quoted.single\",\n      regex: \"[<](?:[a-zA-Z0-9 ])*[>]\"\n    };\n    var regexp = {\n      token: \"string.regexp\",\n      regex: \"[m|rx]?[/](?:(?:\\\\[(?:\\\\\\\\]|[^\\\\]])+\\\\])|(?:\\\\\\\\/|[^\\\\]/]))*[/]\\\\w*\\\\s*(?=[).,;]|$)\"\n    };\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.block\",\n        // Embedded Comments - Parentheses\n        regex: \"#[`|=]\\\\(.*\\\\)\"\n      }, {\n        token: \"comment.block\",\n        // Embedded Comments - Brackets\n        regex: \"#[`|=]\\\\[.*\\\\]\"\n      }, {\n        token: \"comment.doc\",\n        // Multiline Comments\n        regex: \"^=(?:begin)\\\\b\",\n        next: \"block_comment\"\n      }, {\n        token: \"string.unquoted\",\n        // q Heredocs\n        regex: \"q[x|w]?\\\\:to/END/;\",\n        next: \"qheredoc\"\n      }, {\n        token: \"string.unquoted\",\n        // qq Heredocs\n        regex: \"qq[x|w]?\\\\:to/END/;\",\n        next: \"qqheredoc\"\n      }, regexp, qstrings, {\n        token: \"string.quoted.double\",\n        // Double Quoted String\n        regex: '\"',\n        next: \"qqstring\"\n      }, word_quoting, {\n        token: [\"keyword\", \"text\", \"variable.module\"],\n        // use - Module Names, Pragmas, etc.\n        regex: \"(use)(\\\\s+)((?:\" + moduleName + \"\\\\.?)*)\"\n      }, hex, num_rat, booleans, versions, lang_keywords, variables, vars_special, ops_char, constants_unicode, {\n        token: \"comment\",\n        // Sigle Line Comments\n        regex: \"#.*$\"\n      }, {\n        token: \"lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      \"qqstring\": [{\n        token: \"constant.language.escape\",\n        regex: '\\\\\\\\(?:[nrtef\\\\\\\\\"$]|[0-7]{1,3}|x[0-9A-Fa-f]{1,2})'\n      }, variables, vars_special, {\n        token: \"lparen\",\n        regex: \"{\",\n        next: \"qqinterpolation\"\n      }, {\n        token: \"string.quoted.double\",\n        regex: '\"',\n        next: \"start\"\n      }, {\n        defaultToken: \"string.quoted.double\"\n      }],\n      \"qqinterpolation\": [hex, num_rat, booleans, versions, lang_keywords, variables, vars_special, ops_char, constants_unicode, qstrings, regexp, {\n        token: \"rparen\",\n        regex: \"}\",\n        next: \"qqstring\"\n      }],\n      \"block_comment\": [{\n        token: \"comment.doc\",\n        regex: \"^=end +[a-zA-Z_0-9]*\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment.doc\"\n      }],\n      \"qheredoc\": [{\n        token: \"string.unquoted\",\n        regex: \"END$\",\n        next: \"start\"\n      }, {\n        defaultToken: \"string.unquoted\"\n      }],\n      \"qqheredoc\": [variables, vars_special, {\n        token: \"lparen\",\n        regex: \"{\",\n        next: \"qqheredocinterpolation\"\n      }, {\n        token: \"string.unquoted\",\n        regex: \"END$\",\n        next: \"start\"\n      }, {\n        defaultToken: \"string.unquoted\"\n      }],\n      \"qqheredocinterpolation\": [hex, num_rat, booleans, versions, lang_keywords, variables, vars_special, ops_char, constants_unicode, qstrings, regexp, {\n        token: \"rparen\",\n        regex: \"}\",\n        next: \"qqheredoc\"\n      }]\n    };\n  };\n  oop.inherits(RakuHighlightRules, TextHighlightRules);\n  exports.RakuHighlightRules = RakuHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n  var MatchingBraceOutdent = function () {};\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Range = require(\"../../range\").Range;\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n      return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n        return range;\n      }\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n        endRow = row;\n      }\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n      var endRow = row;\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/raku\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/raku_highlight_rules\", \"ace/mode/matching_brace_outdent\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var RakuHighlightRules = require(\"./raku_highlight_rules\").RakuHighlightRules;\n  var MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n  var CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = RakuHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.foldingRules = new CStyleFoldMode({\n      start: \"^=(begin)\\\\b\",\n      end: \"^=(end)\\\\b\"\n    });\n    this.$behaviour = this.$defaultBehaviour;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"#\";\n    this.blockComment = [{\n      start: \"=begin\",\n      end: \"=end\",\n      lineStartOnly: true\n    }, {\n      start: \"=item\",\n      end: \"=end\",\n      lineStartOnly: true\n    }];\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n      if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n        return indent;\n      }\n      if (state == \"start\") {\n        var match = line.match(/^.*[\\{\\(\\[:]\\s*$/);\n        if (match) {\n          indent += tab;\n        }\n      }\n      return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n    this.$id = \"ace/mode/raku\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/raku\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","RakuHighlightRules","keywords","types","builtinFunctions","constants_ascii","ops_txt","keywordMapper","createKeywordMapper","moduleName","hex","token","regex","num_rat","booleans","versions","lang_keywords","variables","vars_special","ops_char","constants_unicode","qstrings","word_quoting","regexp","$rules","next","defaultToken","inherits","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","match","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","start","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","exec","TextMode","Mode","CStyleFoldMode","HighlightRules","$outdent","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","lineStartOnly","getNextLineIndent","state","tab","tokenizedLine","getTokenizer","getLineTokens","tokens","type","$id"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-raku.js"],"sourcesContent":["ace.define(\"ace/mode/raku_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar RakuHighlightRules = function () {\n    var keywords = (\"my|our|class|role|grammar|is|does|sub|method|submethod|try|\" +\n        \"default|when|if|elsif|else|unless|with|orwith|without|for|given|proceed|\" +\n        \"succeed|loop|while|until|repeat|module|use|need|import|require|unit|\" +\n        \"constant|enum|multi|return|has|token|rule|make|made|proto|state|augment|\" +\n        \"but|anon|supersede|let|subset|gather|returns|return-rw|temp|\" +\n        \"BEGIN|CHECK|INIT|END|CLOSE|ENTER|LEAVE|KEEP|UNDO|PRE|POST|FIRST|NEXT|LAST|CATCH|CONTROL|QUIT|DOC\");\n    var types = (\"Any|Array|Associative|AST|atomicint|Attribute|Backtrace|Backtrace::Frame|\" +\n        \"Bag|Baggy|BagHash|Blob|Block|Bool|Buf|Callable|CallFrame|Cancellation|\" +\n        \"Capture|Channel|Code|compiler|Complex|ComplexStr|Cool|CurrentThreadScheduler|\" +\n        \"Cursor|Date|Dateish|DateTime|Distro|Duration|Encoding|Exception|Failure|\" +\n        \"FatRat|Grammar|Hash|HyperWhatever|Instant|Int|IntStr|IO|IO::ArgFiles|\" +\n        \"IO::CatHandle|IO::Handle|IO::Notification|IO::Path|IO::Path::Cygwin|\" +\n        \"IO::Path::QNX|IO::Path::Unix|IO::Path::Win32|IO::Pipe|IO::Socket|\" +\n        \"IO::Socket::Async|IO::Socket::INET|IO::Spec|IO::Spec::Cygwin|IO::Spec::QNX|\" +\n        \"IO::Spec::Unix|IO::Spec::Win32|IO::Special|Iterable|Iterator|Junction|Kernel|\" +\n        \"Label|List|Lock|Lock::Async|Macro|Map|Match|Metamodel::AttributeContainer|\" +\n        \"Metamodel::C3MRO|Metamodel::ClassHOW|Metamodel::EnumHOW|Metamodel::Finalization|\" +\n        \"Metamodel::MethodContainer|Metamodel::MROBasedMethodDispatch|Metamodel::MultipleInheritance|\" +\n        \"Metamodel::Naming|Metamodel::Primitives|Metamodel::PrivateMethodContainer|\" +\n        \"Metamodel::RoleContainer|Metamodel::Trusting|Method|Mix|MixHash|Mixy|Mu|\" +\n        \"NFC|NFD|NFKC|NFKD|Nil|Num|Numeric|NumStr|ObjAt|Order|Pair|Parameter|Perl|\" +\n        \"Pod::Block|Pod::Block::Code|Pod::Block::Comment|Pod::Block::Declarator|\" +\n        \"Pod::Block::Named|Pod::Block::Para|Pod::Block::Table|Pod::Heading|Pod::Item|\" +\n        \"Positional|PositionalBindFailover|Proc|Proc::Async|Promise|Proxy|PseudoStash|\" +\n        \"Raku|QuantHash|Range|Rat|Rational|RatStr|Real|Regex|Routine|Scalar|Scheduler|\" +\n        \"Semaphore|Seq|Set|SetHash|Setty|Signature|Slip|Stash|Str|StrDistance|Stringy|\" +\n        \"Sub|Submethod|Supplier|Supplier::Preserving|Supply|Systemic|Tap|Telemetry|\" +\n        \"Telemetry::Instrument::Thread|Telemetry::Instrument::Usage|Telemetry::Period|\" +\n        \"Telemetry::Sampler|Thread|ThreadPoolScheduler|UInt|Uni|utf8|Variable|Version|\" +\n        \"VM|Whatever|WhateverCode|WrapHandle|int|uint|num|str|\" +\n        \"int8|int16|int32|int64|uint8|uint16|uint32|uint64|long|longlong|num32|num64|size_t|bool|CArray|Pointer|\" +\n        \"Backtrace|Backtrace::Frame|Exception|Failure|X::AdHoc|X::Anon::Augment|X::Anon::Multi|\" +\n        \"X::Assignment::RO|X::Attribute::NoPackage|X::Attribute::Package|X::Attribute::Undeclared|\" +\n        \"X::Augment::NoSuchType|X::Bind|X::Bind::NativeType|X::Bind::Slice|X::Caller::NotDynamic|\" +\n        \"X::Channel::ReceiveOnClosed|X::Channel::SendOnClosed|X::Comp|X::Composition::NotComposable|\" +\n        \"X::Constructor::Positional|X::ControlFlow|X::ControlFlow::Return|X::DateTime::TimezoneClash|\" +\n        \"X::Declaration::Scope|X::Declaration::Scope::Multi|X::Does::TypeObject|X::Eval::NoSuchLang|\" +\n        \"X::Export::NameClash|X::IO|X::IO::Chdir|X::IO::Chmod|X::IO::Copy|X::IO::Cwd|X::IO::Dir|\" +\n        \"X::IO::DoesNotExist|X::IO::Link|X::IO::Mkdir|X::IO::Move|X::IO::Rename|X::IO::Rmdir|X::IO::Symlink|\" +\n        \"X::IO::Unlink|X::Inheritance::NotComposed|X::Inheritance::Unsupported|X::Method::InvalidQualifier|\" +\n        \"X::Method::NotFound|X::Method::Private::Permission|X::Method::Private::Unqualified|\" +\n        \"X::Mixin::NotComposable|X::NYI|X::NoDispatcher|X::Numeric::Real|X::OS|X::Obsolete|X::OutOfRange|\" +\n        \"X::Package::Stubbed|X::Parameter::Default|X::Parameter::MultipleTypeConstraints|\" +\n        \"X::Parameter::Placeholder|X::Parameter::Twigil|X::Parameter::WrongOrder|X::Phaser::Multiple|\" +\n        \"X::Phaser::PrePost|X::Placeholder::Block|X::Placeholder::Mainline|X::Pod|X::Proc::Async|\" +\n        \"X::Proc::Async::AlreadyStarted|X::Proc::Async::CharsOrBytes|X::Proc::Async::MustBeStarted|\" +\n        \"X::Proc::Async::OpenForWriting|X::Proc::Async::TapBeforeSpawn|X::Proc::Unsuccessful|\" +\n        \"X::Promise::CauseOnlyValidOnBroken|X::Promise::Vowed|X::Redeclaration|X::Role::Initialization|\" +\n        \"X::Seq::Consumed|X::Sequence::Deduction|X::Signature::NameClash|X::Signature::Placeholder|\" +\n        \"X::Str::Numeric|X::StubCode|X::Syntax|X::Syntax::Augment::WithoutMonkeyTyping|\" +\n        \"X::Syntax::Comment::Embedded|X::Syntax::Confused|X::Syntax::InfixInTermPosition|\" +\n        \"X::Syntax::Malformed|X::Syntax::Missing|X::Syntax::NegatedPair|X::Syntax::NoSelf|\" +\n        \"X::Syntax::Number::RadixOutOfRange|X::Syntax::P5|X::Syntax::Regex::Adverb|\" +\n        \"X::Syntax::Regex::SolitaryQuantifier|X::Syntax::Reserved|X::Syntax::Self::WithoutObject|\" +\n        \"X::Syntax::Signature::InvocantMarker|X::Syntax::Term::MissingInitializer|X::Syntax::UnlessElse|\" +\n        \"X::Syntax::Variable::Match|X::Syntax::Variable::Numeric|X::Syntax::Variable::Twigil|X::Temporal|\" +\n        \"X::Temporal::InvalidFormat|X::TypeCheck|X::TypeCheck::Assignment|X::TypeCheck::Binding|\" +\n        \"X::TypeCheck::Return|X::TypeCheck::Splice|X::Undeclared\");\n    var builtinFunctions = (\"abs|abs2rel|absolute|accept|ACCEPTS|accessed|acos|acosec|acosech|acosh|\" +\n        \"acotan|acotanh|acquire|act|action|actions|add|add_attribute|add_enum_value|\" +\n        \"add_fallback|add_method|add_parent|add_private_method|add_role|add_trustee|\" +\n        \"adverb|after|all|allocate|allof|allowed|alternative-names|annotations|antipair|\" +\n        \"antipairs|any|anyof|app_lifetime|append|arch|archname|args|arity|asec|asech|\" +\n        \"asin|asinh|ASSIGN-KEY|ASSIGN-POS|assuming|ast|at|atan|atan2|atanh|AT-KEY|\" +\n        \"atomic-assign|atomic-dec-fetch|atomic-fetch|atomic-fetch-add|atomic-fetch-dec|\" +\n        \"atomic-fetch-inc|atomic-fetch-sub|atomic-inc-fetch|AT-POS|attributes|auth|await|\" +\n        \"backtrace|Bag|BagHash|base|basename|base-repeating|batch|BIND-KEY|BIND-POS|\" +\n        \"bind-stderr|bind-stdin|bind-stdout|bind-udp|bits|bless|block|bool-only|\" +\n        \"bounds|break|Bridge|broken|BUILD|build-date|bytes|cache|callframe|calling-package|\" +\n        \"CALL-ME|callsame|callwith|can|cancel|candidates|cando|canonpath|caps|caption|\" +\n        \"Capture|cas|catdir|categorize|categorize-list|catfile|catpath|cause|ceiling|\" +\n        \"cglobal|changed|Channel|chars|chdir|child|child-name|child-typename|chmod|chomp|\" +\n        \"chop|chr|chrs|chunks|cis|classify|classify-list|cleanup|clone|close|closed|\" +\n        \"close-stdin|code|codes|collate|column|comb|combinations|command|comment|\" +\n        \"compiler|Complex|compose|compose_type|composer|condition|config|configure_destroy|\" +\n        \"configure_type_checking|conj|connect|constraints|construct|contains|contents|copy|\" +\n        \"cos|cosec|cosech|cosh|cotan|cotanh|count|count-only|cpu-cores|cpu-usage|CREATE|\" +\n        \"create_type|cross|cue|curdir|curupdir|d|Date|DateTime|day|daycount|day-of-month|\" +\n        \"day-of-week|day-of-year|days-in-month|declaration|decode|decoder|deepmap|\" +\n        \"defined|DEFINITE|delayed|DELETE-KEY|DELETE-POS|denominator|desc|DESTROY|destroyers|\" +\n        \"devnull|did-you-mean|die|dir|dirname|dir-sep|DISTROnames|do|done|duckmap|dynamic|\" +\n        \"e|eager|earlier|elems|emit|enclosing|encode|encoder|encoding|end|ends-with|enum_from_value|\" +\n        \"enum_value_list|enum_values|enums|eof|EVAL|EVALFILE|exception|excludes-max|excludes-min|\" +\n        \"EXISTS-KEY|EXISTS-POS|exit|exitcode|exp|expected|explicitly-manage|expmod|extension|f|\" +\n        \"fail|fc|feature|file|filename|find_method|find_method_qualified|finish|first|flat|flatmap|\" +\n        \"flip|floor|flush|fmt|format|formatter|freeze|from|from-list|from-loop|from-posix|full|\" +\n        \"full-barrier|get|get_value|getc|gist|got|grab|grabpairs|grep|handle|handled|handles|\" +\n        \"hardware|has_accessor|head|headers|hh-mm-ss|hidden|hides|hour|how|hyper|id|illegal|\" +\n        \"im|in|indent|index|indices|indir|infinite|infix|install_method_cache|\" +\n        \"Instant|instead|int-bounds|interval|in-timezone|invalid-str|invert|invocant|IO|\" +\n        \"IO::Notification.watch-path|is_trusted|is_type|isa|is-absolute|is-hidden|is-initial-thread|\" +\n        \"is-int|is-lazy|is-leap-year|isNaN|is-prime|is-relative|is-routine|is-setting|is-win|item|\" +\n        \"iterator|join|keep|kept|KERNELnames|key|keyof|keys|kill|kv|kxxv|l|lang|last|lastcall|later|\" +\n        \"lazy|lc|leading|level|line|lines|link|listen|live|local|lock|log|log10|lookup|lsb|\" +\n        \"MAIN|match|max|maxpairs|merge|message|method_table|methods|migrate|min|minmax|\" +\n        \"minpairs|minute|misplaced|Mix|MixHash|mkdir|mode|modified|month|move|mro|msb|multiness|\" +\n        \"name|named|named_names|narrow|nativecast|native-descriptor|nativesizeof|new|new_type|\" +\n        \"new-from-daycount|new-from-pairs|next|nextcallee|next-handle|nextsame|nextwith|NFC|NFD|\" +\n        \"NFKC|NFKD|nl-in|nl-out|nodemap|none|norm|not|note|now|nude|numerator|Numeric|of|\" +\n        \"offset|offset-in-hours|offset-in-minutes|old|on-close|one|on-switch|open|opened|\" +\n        \"operation|optional|ord|ords|orig|os-error|osname|out-buffer|pack|package|package-kind|\" +\n        \"package-name|packages|pair|pairs|pairup|parameter|params|parent|parent-name|parents|parse|\" +\n        \"parse-base|parsefile|parse-names|parts|path|path-sep|payload|peer-host|peer-port|periods|\" +\n        \"perl|permutations|phaser|pick|pickpairs|pid|placeholder|plus|polar|poll|polymod|pop|pos|\" +\n        \"positional|posix|postfix|postmatch|precomp-ext|precomp-target|pred|prefix|prematch|prepend|\" +\n        \"print|printf|print-nl|print-to|private|private_method_table|proc|produce|Promise|prompt|\" +\n        \"protect|pull-one|push|push-all|push-at-least|push-exactly|push-until-lazy|put|\" +\n        \"qualifier-type|quit|r|race|radix|raku|rand|range|raw|re|read|readchars|readonly|\" +\n        \"ready|Real|reallocate|reals|reason|rebless|receive|recv|redispatcher|redo|reduce|\" +\n        \"rel2abs|relative|release|rename|repeated|replacement|report|reserved|resolve|\" +\n        \"restore|result|resume|rethrow|reverse|right|rindex|rmdir|roles_to_compose|\" +\n        \"rolish|roll|rootdir|roots|rotate|rotor|round|roundrobin|routine-type|run|rwx|s|\" +\n        \"samecase|samemark|samewith|say|schedule-on|scheduler|scope|sec|sech|second|seek|\" +\n        \"self|send|Set|set_hidden|set_name|set_package|set_rw|set_value|SetHash|\" +\n        \"set-instruments|setup_finalization|shape|share|shell|shift|sibling|sigil|\" +\n        \"sign|signal|signals|signature|sin|sinh|sink|sink-all|skip|skip-at-least|\" +\n        \"skip-at-least-pull-one|skip-one|sleep|sleep-timer|sleep-until|Slip|slurp|\" +\n        \"slurp-rest|slurpy|snap|snapper|so|socket-host|socket-port|sort|source|\" +\n        \"source-package|spawn|SPEC|splice|split|splitdir|splitpath|sprintf|spurt|\" +\n        \"sqrt|squish|srand|stable|start|started|starts-with|status|stderr|stdout|\" +\n        \"sub_signature|subbuf|subbuf-rw|subname|subparse|subst|subst-mutate|\" +\n        \"substr|substr-eq|substr-rw|succ|sum|Supply|symlink|t|tail|take|take-rw|\" +\n        \"tan|tanh|tap|target|target-name|tc|tclc|tell|then|throttle|throw|timezone|\" +\n        \"tmpdir|to|today|toggle|to-posix|total|trailing|trans|tree|trim|trim-leading|\" +\n        \"trim-trailing|truncate|truncated-to|trusts|try_acquire|trying|twigil|type|\" +\n        \"type_captures|typename|uc|udp|uncaught_handler|unimatch|uniname|uninames|\" +\n        \"uniparse|uniprop|uniprops|unique|unival|univals|unlink|unlock|unpack|unpolar|\" +\n        \"unshift|unwrap|updir|USAGE|utc|val|value|values|VAR|variable|verbose-config|\" +\n        \"version|VMnames|volume|vow|w|wait|warn|watch|watch-path|week|weekday-of-month|\" +\n        \"week-number|week-year|WHAT|WHERE|WHEREFORE|WHICH|WHO|whole-second|WHY|\" +\n        \"wordcase|words|workaround|wrap|write|write-to|yada|year|yield|yyyy-mm-dd|\" +\n        \"z|zip|zip-latest|\" +\n        \"plan|done-testing|bail-out|todo|skip|skip-rest|diag|subtest|pass|flunk|ok|\" +\n        \"nok|cmp-ok|is-deeply|isnt|is-approx|like|unlike|use-ok|isa-ok|does-ok|\" +\n        \"can-ok|dies-ok|lives-ok|eval-dies-ok|eval-lives-ok|throws-like|fails-like|\" +\n        \"rw|required|native|repr|export|symbol\");\n    var constants_ascii = (\"pi|Inf|tau|time\");\n    var ops_txt = (\"eq|ne|gt|lt|le|ge|div|gcd|lcm|leg|cmp|ff|fff|\" +\n        \"x|before|after|Z|X|and|or|andthen|notandthen|orelse|xor\");\n    var keywordMapper = this.createKeywordMapper({\n        \"keyword\": keywords,\n        \"storage.type\": types,\n        \"constant.language\": constants_ascii,\n        \"support.function\": builtinFunctions,\n        \"keyword.operator\": ops_txt\n    }, \"identifier\");\n    var moduleName = \"[a-zA-Z_][a-zA-Z_0-9:-]*\\\\b\";\n    var hex = { token: \"constant.numeric\", regex: \"0x[0-9a-fA-F]+\\\\b\" };\n    var num_rat = { token: \"constant.numeric\", regex: \"[+-.]?\\\\d[\\\\d_]*(?:(?:\\\\.\\\\d[\\\\d_]*)?(?:[eE][+-]?\\\\d[\\\\d_]*)?)?i?\\\\b\" };\n    var booleans = { token: \"constant.language.boolean\", regex: \"(?:True|False)\\\\b\" };\n    var versions = { token: \"constant.other\", regex: \"v[0-9](?:\\\\.[a-zA-Z0-9*])*\\\\b\" };\n    var lang_keywords = { token: keywordMapper, regex: \"[a-zA-Z][\\\\:a-zA-Z0-9_-]*\\\\b\" };\n    var variables = { token: \"variable.language\", regex: \"[$@%&][?*!.]?[a-zA-Z0-9_-]+\\\\b\" };\n    var vars_special = { token: \"variable.language\", regex: \"\\\\$[/|!]?|@\\\\$/\" };\n    var ops_char = { token: \"keyword.operator\", regex: \"=|<|>|\\\\+|\\\\*|-|/|~|%|\\\\?|!|\\\\^|\\\\.|\\\\:|\\\\,|\" +\n            \"»|«|\\\\||\\\\&|⚛|∘\" };\n    var constants_unicode = { token: \"constant.language\", regex: \"𝑒|π|τ|∞\" };\n    var qstrings = { token: \"string.quoted.single\", regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\" };\n    var word_quoting = { token: \"string.quoted.single\", regex: \"[<](?:[a-zA-Z0-9 ])*[>]\" };\n    var regexp = {\n        token: \"string.regexp\",\n        regex: \"[m|rx]?[/](?:(?:\\\\[(?:\\\\\\\\]|[^\\\\]])+\\\\])|(?:\\\\\\\\/|[^\\\\]/]))*[/]\\\\w*\\\\s*(?=[).,;]|$)\"\n    };\n    this.$rules = {\n        \"start\": [\n            {\n                token: \"comment.block\", // Embedded Comments - Parentheses\n                regex: \"#[`|=]\\\\(.*\\\\)\"\n            }, {\n                token: \"comment.block\", // Embedded Comments - Brackets\n                regex: \"#[`|=]\\\\[.*\\\\]\"\n            }, {\n                token: \"comment.doc\", // Multiline Comments\n                regex: \"^=(?:begin)\\\\b\",\n                next: \"block_comment\"\n            }, {\n                token: \"string.unquoted\", // q Heredocs\n                regex: \"q[x|w]?\\\\:to/END/;\",\n                next: \"qheredoc\"\n            }, {\n                token: \"string.unquoted\", // qq Heredocs\n                regex: \"qq[x|w]?\\\\:to/END/;\",\n                next: \"qqheredoc\"\n            },\n            regexp,\n            qstrings,\n            {\n                token: \"string.quoted.double\", // Double Quoted String\n                regex: '\"',\n                next: \"qqstring\"\n            },\n            word_quoting,\n            {\n                token: [\"keyword\", \"text\", \"variable.module\"], // use - Module Names, Pragmas, etc.\n                regex: \"(use)(\\\\s+)((?:\" + moduleName + \"\\\\.?)*)\"\n            },\n            hex,\n            num_rat,\n            booleans,\n            versions,\n            lang_keywords,\n            variables,\n            vars_special,\n            ops_char,\n            constants_unicode,\n            {\n                token: \"comment\", // Sigle Line Comments\n                regex: \"#.*$\"\n            }, {\n                token: \"lparen\",\n                regex: \"[[({]\"\n            }, {\n                token: \"rparen\",\n                regex: \"[\\\\])}]\"\n            }, {\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }\n        ],\n        \"qqstring\": [\n            {\n                token: \"constant.language.escape\",\n                regex: '\\\\\\\\(?:[nrtef\\\\\\\\\"$]|[0-7]{1,3}|x[0-9A-Fa-f]{1,2})'\n            },\n            variables,\n            vars_special,\n            {\n                token: \"lparen\",\n                regex: \"{\",\n                next: \"qqinterpolation\"\n            }, {\n                token: \"string.quoted.double\",\n                regex: '\"',\n                next: \"start\"\n            }, {\n                defaultToken: \"string.quoted.double\"\n            }\n        ],\n        \"qqinterpolation\": [\n            hex,\n            num_rat,\n            booleans,\n            versions,\n            lang_keywords,\n            variables,\n            vars_special,\n            ops_char,\n            constants_unicode,\n            qstrings,\n            regexp,\n            {\n                token: \"rparen\",\n                regex: \"}\",\n                next: \"qqstring\"\n            }\n        ],\n        \"block_comment\": [\n            {\n                token: \"comment.doc\",\n                regex: \"^=end +[a-zA-Z_0-9]*\",\n                next: \"start\"\n            },\n            {\n                defaultToken: \"comment.doc\"\n            }\n        ],\n        \"qheredoc\": [\n            {\n                token: \"string.unquoted\",\n                regex: \"END$\",\n                next: \"start\"\n            }, {\n                defaultToken: \"string.unquoted\"\n            }\n        ],\n        \"qqheredoc\": [\n            variables,\n            vars_special,\n            {\n                token: \"lparen\",\n                regex: \"{\",\n                next: \"qqheredocinterpolation\"\n            }, {\n                token: \"string.unquoted\",\n                regex: \"END$\",\n                next: \"start\"\n            }, {\n                defaultToken: \"string.unquoted\"\n            }\n        ],\n        \"qqheredocinterpolation\": [\n            hex,\n            num_rat,\n            booleans,\n            versions,\n            lang_keywords,\n            variables,\n            vars_special,\n            ops_char,\n            constants_unicode,\n            qstrings,\n            regexp,\n            {\n                token: \"rparen\",\n                regex: \"}\",\n                next: \"qqheredoc\"\n            }\n        ]\n    };\n};\noop.inherits(RakuHighlightRules, TextHighlightRules);\nexports.RakuHighlightRules = RakuHighlightRules;\n\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module){\"use strict\";\nvar Range = require(\"../range\").Range;\nvar MatchingBraceOutdent = function () { };\n(function () {\n    this.checkOutdent = function (line, input) {\n        if (!/^\\s+$/.test(line))\n            return false;\n        return /^\\s*\\}/.test(input);\n    };\n    this.autoOutdent = function (doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n        if (!match)\n            return 0;\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({ row: row, column: column });\n        if (!openBracePos || openBracePos.row == row)\n            return 0;\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n    this.$getIndent = function (line) {\n        return line.match(/^\\s*/)[0];\n    };\n}).call(MatchingBraceOutdent.prototype);\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n        this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n        return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                }\n                else if (foldStyle != \"all\")\n                    range = null;\n            }\n            return range;\n        }\n        if (foldStyle === \"markbegin\")\n            return;\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    this.getSectionRange = function (session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                }\n                else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                }\n                else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m)\n                continue;\n            if (m[1])\n                depth--;\n            else\n                depth++;\n            if (!depth)\n                break;\n        }\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/raku\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/raku_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/folding/cstyle\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar RakuHighlightRules = require(\"./raku_highlight_rules\").RakuHighlightRules;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = RakuHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.foldingRules = new CStyleFoldMode({ start: \"^=(begin)\\\\b\", end: \"^=(end)\\\\b\" });\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"#\";\n    this.blockComment = [\n        { start: \"=begin\", end: \"=end\", lineStartOnly: true },\n        { start: \"=item\", end: \"=end\", lineStartOnly: true }\n    ];\n    this.getNextLineIndent = function (state, line, tab) {\n        var indent = this.$getIndent(line);\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n            return indent;\n        }\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[:]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n        return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n    this.autoOutdent = function (state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n    this.$id = \"ace/mode/raku\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/raku\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}