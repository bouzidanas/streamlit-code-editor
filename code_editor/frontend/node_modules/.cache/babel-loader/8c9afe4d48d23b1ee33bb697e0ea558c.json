{"ast":null,"code":"ace.define(\"ace/mode/eiffel_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var EiffelHighlightRules = function () {\n    var keywords = \"across|agent|alias|all|attached|as|assign|attribute|check|\" + \"class|convert|create|debug|deferred|detachable|do|else|elseif|end|\" + \"ensure|expanded|export|external|feature|from|frozen|if|inherit|\" + \"inspect|invariant|like|local|loop|not|note|obsolete|old|once|\" + \"Precursor|redefine|rename|require|rescue|retry|select|separate|\" + \"some|then|undefine|until|variant|when\";\n    var operatorKeywords = \"and|implies|or|xor\";\n    var languageConstants = \"Void\";\n    var booleanConstants = \"True|False\";\n    var languageVariables = \"Current|Result\";\n    var keywordMapper = this.createKeywordMapper({\n      \"constant.language\": languageConstants,\n      \"constant.language.boolean\": booleanConstants,\n      \"variable.language\": languageVariables,\n      \"keyword.operator\": operatorKeywords,\n      \"keyword\": keywords\n    }, \"identifier\", true);\n    var simpleString = /(?:[^\"%\\b\\f\\v]|%[A-DFHLNQR-V%'\"()<>]|%\\/(?:0[xX][\\da-fA-F](?:_*[\\da-fA-F])*|0[cC][0-7](?:_*[0-7])*|0[bB][01](?:_*[01])*|\\d(?:_*\\d)*)\\/)+?/;\n    this.$rules = {\n      \"start\": [{\n        token: \"string.quoted.other\",\n        // Aligned-verbatim-strings (verbatim option not supported)\n        regex: /\"\\[/,\n        next: \"aligned_verbatim_string\"\n      }, {\n        token: \"string.quoted.other\",\n        // Non-aligned-verbatim-strings (verbatim option not supported)\n        regex: /\"\\{/,\n        next: \"non-aligned_verbatim_string\"\n      }, {\n        token: \"string.quoted.double\",\n        regex: /\"(?:[^%\\b\\f\\n\\r\\v]|%[A-DFHLNQR-V%'\"()<>]|%\\/(?:0[xX][\\da-fA-F](?:_*[\\da-fA-F])*|0[cC][0-7](?:_*[0-7])*|0[bB][01](?:_*[01])*|\\d(?:_*\\d)*)\\/)*?\"/\n      }, {\n        token: \"comment.line.double-dash\",\n        regex: /--.*/\n      }, {\n        token: \"constant.character\",\n        regex: /'(?:[^%\\b\\f\\n\\r\\t\\v]|%[A-DFHLNQR-V%'\"()<>]|%\\/(?:0[xX][\\da-fA-F](?:_*[\\da-fA-F])*|0[cC][0-7](?:_*[0-7])*|0[bB][01](?:_*[01])*|\\d(?:_*\\d)*)\\/)'/\n      }, {\n        token: \"constant.numeric\",\n        // hexa | octal | bin\n        regex: /\\b0(?:[xX][\\da-fA-F](?:_*[\\da-fA-F])*|[cC][0-7](?:_*[0-7])*|[bB][01](?:_*[01])*)\\b/\n      }, {\n        token: \"constant.numeric\",\n        regex: /(?:\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?[eE][+-]?)?\\d(?:_*\\d)*|\\d(?:_*\\d)*\\.?/\n      }, {\n        token: \"paren.lparen\",\n        regex: /[\\[({]|<<|\\|\\(/\n      }, {\n        token: \"paren.rparen\",\n        regex: /[\\])}]|>>|\\|\\)/\n      }, {\n        token: \"keyword.operator\",\n        // punctuation\n        regex: /:=|->|\\.(?=\\w)|[;,:?]/\n      }, {\n        token: \"keyword.operator\",\n        regex: /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/]?|[><\\/]=?|[-+*^=~]/\n      }, {\n        token: function (v) {\n          var result = keywordMapper(v);\n          if (result === \"identifier\" && v === v.toUpperCase()) {\n            result = \"entity.name.type\";\n          }\n          return result;\n        },\n        regex: /[a-zA-Z][a-zA-Z\\d_]*\\b/\n      }, {\n        token: \"text\",\n        regex: /\\s+/\n      }],\n      \"aligned_verbatim_string\": [{\n        token: \"string\",\n        regex: /]\"/,\n        next: \"start\"\n      }, {\n        token: \"string\",\n        regex: simpleString\n      }],\n      \"non-aligned_verbatim_string\": [{\n        token: \"string.quoted.other\",\n        regex: /}\"/,\n        next: \"start\"\n      }, {\n        token: \"string.quoted.other\",\n        regex: simpleString\n      }]\n    };\n  };\n  oop.inherits(EiffelHighlightRules, TextHighlightRules);\n  exports.EiffelHighlightRules = EiffelHighlightRules;\n});\nace.define(\"ace/mode/eiffel\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/eiffel_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var EiffelHighlightRules = require(\"./eiffel_highlight_rules\").EiffelHighlightRules;\n  var Mode = function () {\n    this.HighlightRules = EiffelHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"--\";\n    this.$id = \"ace/mode/eiffel\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/eiffel\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","EiffelHighlightRules","keywords","operatorKeywords","languageConstants","booleanConstants","languageVariables","keywordMapper","createKeywordMapper","simpleString","$rules","token","regex","next","v","result","toUpperCase","inherits","TextMode","Mode","HighlightRules","$behaviour","$defaultBehaviour","lineCommentStart","$id","call","prototype","m"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-eiffel.js"],"sourcesContent":["ace.define(\"ace/mode/eiffel_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar EiffelHighlightRules = function () {\n    var keywords = \"across|agent|alias|all|attached|as|assign|attribute|check|\" +\n        \"class|convert|create|debug|deferred|detachable|do|else|elseif|end|\" +\n        \"ensure|expanded|export|external|feature|from|frozen|if|inherit|\" +\n        \"inspect|invariant|like|local|loop|not|note|obsolete|old|once|\" +\n        \"Precursor|redefine|rename|require|rescue|retry|select|separate|\" +\n        \"some|then|undefine|until|variant|when\";\n    var operatorKeywords = \"and|implies|or|xor\";\n    var languageConstants = \"Void\";\n    var booleanConstants = \"True|False\";\n    var languageVariables = \"Current|Result\";\n    var keywordMapper = this.createKeywordMapper({\n        \"constant.language\": languageConstants,\n        \"constant.language.boolean\": booleanConstants,\n        \"variable.language\": languageVariables,\n        \"keyword.operator\": operatorKeywords,\n        \"keyword\": keywords\n    }, \"identifier\", true);\n    var simpleString = /(?:[^\"%\\b\\f\\v]|%[A-DFHLNQR-V%'\"()<>]|%\\/(?:0[xX][\\da-fA-F](?:_*[\\da-fA-F])*|0[cC][0-7](?:_*[0-7])*|0[bB][01](?:_*[01])*|\\d(?:_*\\d)*)\\/)+?/;\n    this.$rules = {\n        \"start\": [{\n                token: \"string.quoted.other\", // Aligned-verbatim-strings (verbatim option not supported)\n                regex: /\"\\[/,\n                next: \"aligned_verbatim_string\"\n            }, {\n                token: \"string.quoted.other\", // Non-aligned-verbatim-strings (verbatim option not supported)\n                regex: /\"\\{/,\n                next: \"non-aligned_verbatim_string\"\n            }, {\n                token: \"string.quoted.double\",\n                regex: /\"(?:[^%\\b\\f\\n\\r\\v]|%[A-DFHLNQR-V%'\"()<>]|%\\/(?:0[xX][\\da-fA-F](?:_*[\\da-fA-F])*|0[cC][0-7](?:_*[0-7])*|0[bB][01](?:_*[01])*|\\d(?:_*\\d)*)\\/)*?\"/\n            }, {\n                token: \"comment.line.double-dash\",\n                regex: /--.*/\n            }, {\n                token: \"constant.character\",\n                regex: /'(?:[^%\\b\\f\\n\\r\\t\\v]|%[A-DFHLNQR-V%'\"()<>]|%\\/(?:0[xX][\\da-fA-F](?:_*[\\da-fA-F])*|0[cC][0-7](?:_*[0-7])*|0[bB][01](?:_*[01])*|\\d(?:_*\\d)*)\\/)'/\n            }, {\n                token: \"constant.numeric\", // hexa | octal | bin\n                regex: /\\b0(?:[xX][\\da-fA-F](?:_*[\\da-fA-F])*|[cC][0-7](?:_*[0-7])*|[bB][01](?:_*[01])*)\\b/\n            }, {\n                token: \"constant.numeric\",\n                regex: /(?:\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?[eE][+-]?)?\\d(?:_*\\d)*|\\d(?:_*\\d)*\\.?/\n            }, {\n                token: \"paren.lparen\",\n                regex: /[\\[({]|<<|\\|\\(/\n            }, {\n                token: \"paren.rparen\",\n                regex: /[\\])}]|>>|\\|\\)/\n            }, {\n                token: \"keyword.operator\", // punctuation\n                regex: /:=|->|\\.(?=\\w)|[;,:?]/\n            }, {\n                token: \"keyword.operator\",\n                regex: /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/]?|[><\\/]=?|[-+*^=~]/\n            }, {\n                token: function (v) {\n                    var result = keywordMapper(v);\n                    if (result === \"identifier\" && v === v.toUpperCase()) {\n                        result = \"entity.name.type\";\n                    }\n                    return result;\n                },\n                regex: /[a-zA-Z][a-zA-Z\\d_]*\\b/\n            }, {\n                token: \"text\",\n                regex: /\\s+/\n            }\n        ],\n        \"aligned_verbatim_string\": [{\n                token: \"string\",\n                regex: /]\"/,\n                next: \"start\"\n            }, {\n                token: \"string\",\n                regex: simpleString\n            }\n        ],\n        \"non-aligned_verbatim_string\": [{\n                token: \"string.quoted.other\",\n                regex: /}\"/,\n                next: \"start\"\n            }, {\n                token: \"string.quoted.other\",\n                regex: simpleString\n            }\n        ]\n    };\n};\noop.inherits(EiffelHighlightRules, TextHighlightRules);\nexports.EiffelHighlightRules = EiffelHighlightRules;\n\n});\n\nace.define(\"ace/mode/eiffel\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/eiffel_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar EiffelHighlightRules = require(\"./eiffel_highlight_rules\").EiffelHighlightRules;\nvar Mode = function () {\n    this.HighlightRules = EiffelHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"--\";\n    this.$id = \"ace/mode/eiffel\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/eiffel\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}