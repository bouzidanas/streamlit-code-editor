{"ast":null,"code":"ace.define(\"ace/mode/nim_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var NimHighlightRules = function () {\n    var keywordMapper = this.createKeywordMapper({\n      \"variable\": \"var|let|const\",\n      \"keyword\": \"assert|parallel|spawn|export|include|from|template|mixin|bind|import|concept|raise|defer|try|finally|except|converter|proc|func|macro|method|and|or|not|xor|shl|shr|div|mod|in|notin|is|isnot|of|static|if|elif|else|case|of|discard|when|return|yield|block|break|while|echo|continue|asm|using|cast|addr|unsafeAddr|type|ref|ptr|do|declared|defined|definedInScope|compiles|sizeOf|is|shallowCopy|getAst|astToStr|spawn|procCall|for|iterator|as\",\n      \"storage.type\": \"newSeq|int|int8|int16|int32|int64|uint|uint8|uint16|uint32|uint64|float|char|bool|string|set|pointer|float32|float64|enum|object|cstring|array|seq|openArray|varargs|UncheckedArray|tuple|set|distinct|void|auto|openarray|range\",\n      \"support.function\": \"lock|ze|toU8|toU16|toU32|ord|low|len|high|add|pop|contains|card|incl|excl|dealloc|inc\",\n      \"constant.language\": \"nil|true|false\"\n    }, \"identifier\");\n    var hexNumber = \"(?:0[xX][\\\\dA-Fa-f][\\\\dA-Fa-f_]*)\";\n    var decNumber = \"(?:[0-9][\\\\d_]*)\";\n    var octNumber = \"(?:0o[0-7][0-7_]*)\";\n    var binNumber = \"(?:0[bB][01][01_]*)\";\n    var intNumber = \"(?:\" + hexNumber + \"|\" + decNumber + \"|\" + octNumber + \"|\" + binNumber + \")(?:'?[iIuU](?:8|16|32|64)|u)?\\\\b\";\n    var exponent = \"(?:[eE][+-]?[\\\\d][\\\\d_]*)\";\n    var floatNumber = \"(?:[\\\\d][\\\\d_]*(?:[.][\\\\d](?:[\\\\d_]*)\" + exponent + \"?)|\" + exponent + \")\";\n    var floatNumberExt = \"(?:\" + hexNumber + \"(?:'(?:(?:[fF](?:32|64)?)|[dD])))|(?:\" + floatNumber + \"|\" + decNumber + \"|\" + octNumber + \"|\" + binNumber + \")(?:'(?:(?:[fF](?:32|64)?)|[dD]))\";\n    var stringEscape = \"\\\\\\\\([abeprcnlftv\\\\\\\"']|x[0-9A-Fa-f]{2}|[0-2][0-9]{2}|u[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})\";\n    var identifier = '[a-zA-Z][a-zA-Z0-9_]*';\n    this.$rules = {\n      \"start\": [{\n        token: [\"identifier\", \"keyword.operator\", \"support.function\"],\n        regex: \"(\" + identifier + \")([.]{1})(\" + identifier + \")(?=\\\\()\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"(\\\\{\\\\.)\",\n        next: [{\n          token: \"paren.rparen\",\n          regex: '(\\\\.\\\\}|\\\\})',\n          next: \"start\"\n        }, {\n          include: \"methods\"\n        }, {\n          token: \"identifier\",\n          regex: identifier\n        }, {\n          token: \"punctuation\",\n          regex: /[,]/\n        }, {\n          token: \"keyword.operator\",\n          regex: /[=:.]/\n        }, {\n          token: \"paren.lparen\",\n          regex: /[[(]/\n        }, {\n          token: \"paren.rparen\",\n          regex: /[\\])]/\n        }, {\n          include: \"math\"\n        }, {\n          include: \"strings\"\n        }, {\n          defaultToken: \"text\"\n        }]\n      }, {\n        token: \"comment.doc.start\",\n        regex: /##\\[(?!])/,\n        push: \"docBlockComment\"\n      }, {\n        token: \"comment.start\",\n        regex: /#\\[(?!])/,\n        push: \"blockComment\"\n      }, {\n        token: \"comment.doc\",\n        regex: '##.*$'\n      }, {\n        token: \"comment\",\n        regex: '#.*$'\n      }, {\n        include: \"strings\"\n      }, {\n        token: \"string\",\n        regex: \"'(?:\\\\\\\\(?:[abercnlftv]|x[0-9A-Fa-f]{2}|[0-2][0-9]{2}|u[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})|.{1})?'\"\n      }, {\n        include: \"methods\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z][a-zA-Z0-9_]*\\\\b\"\n      }, {\n        token: [\"keyword.operator\", \"text\", \"storage.type\"],\n        regex: \"([:])(\\\\s+)(\" + identifier + \")(?=$|\\\\)|\\\\[|,|\\\\s+=|;|\\\\s+\\\\{)\"\n      }, {\n        token: \"paren.lparen\",\n        regex: /\\[\\.|{\\||\\(\\.|\\[:|[[({`]/\n      }, {\n        token: \"paren.rparen\",\n        regex: /\\.\\)|\\|}|\\.]|[\\])}]/\n      }, {\n        token: \"keyword.operator\",\n        regex: /[=+\\-*\\/<>@$~&%|!?^.:\\\\]/\n      }, {\n        token: \"punctuation\",\n        regex: /[,;]/\n      }, {\n        include: \"math\"\n      }],\n      blockComment: [{\n        regex: /#\\[]/,\n        token: \"comment\"\n      }, {\n        regex: /#\\[(?!])/,\n        token: \"comment.start\",\n        push: \"blockComment\"\n      }, {\n        regex: /]#/,\n        token: \"comment.end\",\n        next: \"pop\"\n      }, {\n        defaultToken: \"comment\"\n      }],\n      docBlockComment: [{\n        regex: /##\\[]/,\n        token: \"comment.doc\"\n      }, {\n        regex: /##\\[(?!])/,\n        token: \"comment.doc.start\",\n        push: \"docBlockComment\"\n      }, {\n        regex: /]##/,\n        token: \"comment.doc.end\",\n        next: \"pop\"\n      }, {\n        defaultToken: \"comment.doc\"\n      }],\n      math: [{\n        token: \"constant.float\",\n        regex: floatNumberExt\n      }, {\n        token: \"constant.float\",\n        regex: floatNumber\n      }, {\n        token: \"constant.integer\",\n        regex: intNumber\n      }],\n      methods: [{\n        token: \"support.function\",\n        regex: \"(\\\\w+)(?=\\\\()\"\n      }],\n      strings: [{\n        token: \"string\",\n        regex: '(\\\\b' + identifier + ')?\"\"\"',\n        push: [{\n          token: \"string\",\n          regex: '\"\"\"',\n          next: \"pop\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        token: \"string\",\n        regex: \"\\\\b\" + identifier + '\"(?=.)',\n        push: [{\n          token: \"string\",\n          regex: '\"|$',\n          next: \"pop\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        token: \"string\",\n        regex: '\"',\n        push: [{\n          token: \"string\",\n          regex: '\"|$',\n          next: \"pop\"\n        }, {\n          token: \"constant.language.escape\",\n          regex: stringEscape\n        }, {\n          defaultToken: \"string\"\n        }]\n      }]\n    };\n    this.normalizeRules();\n  };\n  oop.inherits(NimHighlightRules, TextHighlightRules);\n  exports.NimHighlightRules = NimHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Range = require(\"../../range\").Range;\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n      return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n        return range;\n      }\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n        endRow = row;\n      }\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n      var endRow = row;\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/nim\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/nim_highlight_rules\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var NimHighlightRules = require(\"./nim_highlight_rules\").NimHighlightRules;\n  var CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\n  var Mode = function () {\n    TextMode.call(this);\n    this.HighlightRules = NimHighlightRules;\n    this.foldingRules = new CStyleFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"#\";\n    this.blockComment = {\n      start: \"#[\",\n      end: \"]#\",\n      nestable: true\n    };\n    this.$id = \"ace/mode/nim\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/nim\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","NimHighlightRules","keywordMapper","createKeywordMapper","hexNumber","decNumber","octNumber","binNumber","intNumber","exponent","floatNumber","floatNumberExt","stringEscape","identifier","$rules","token","regex","next","include","defaultToken","push","blockComment","docBlockComment","math","methods","strings","normalizeRules","inherits","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","replace","start","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","CStyleFoldMode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","nestable","$id"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-nim.js"],"sourcesContent":["ace.define(\"ace/mode/nim_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar NimHighlightRules = function () {\n    var keywordMapper = this.createKeywordMapper({\n        \"variable\": \"var|let|const\",\n        \"keyword\": \"assert|parallel|spawn|export|include|from|template|mixin|bind|import|concept|raise|defer|try|finally|except|converter|proc|func|macro|method|and|or|not|xor|shl|shr|div|mod|in|notin|is|isnot|of|static|if|elif|else|case|of|discard|when|return|yield|block|break|while|echo|continue|asm|using|cast|addr|unsafeAddr|type|ref|ptr|do|declared|defined|definedInScope|compiles|sizeOf|is|shallowCopy|getAst|astToStr|spawn|procCall|for|iterator|as\",\n        \"storage.type\": \"newSeq|int|int8|int16|int32|int64|uint|uint8|uint16|uint32|uint64|float|char|bool|string|set|pointer|float32|float64|enum|object|cstring|array|seq|openArray|varargs|UncheckedArray|tuple|set|distinct|void|auto|openarray|range\",\n        \"support.function\": \"lock|ze|toU8|toU16|toU32|ord|low|len|high|add|pop|contains|card|incl|excl|dealloc|inc\",\n        \"constant.language\": \"nil|true|false\"\n    }, \"identifier\");\n    var hexNumber = \"(?:0[xX][\\\\dA-Fa-f][\\\\dA-Fa-f_]*)\";\n    var decNumber = \"(?:[0-9][\\\\d_]*)\";\n    var octNumber = \"(?:0o[0-7][0-7_]*)\";\n    var binNumber = \"(?:0[bB][01][01_]*)\";\n    var intNumber = \"(?:\" + hexNumber + \"|\" + decNumber + \"|\" + octNumber + \"|\" + binNumber + \")(?:'?[iIuU](?:8|16|32|64)|u)?\\\\b\";\n    var exponent = \"(?:[eE][+-]?[\\\\d][\\\\d_]*)\";\n    var floatNumber = \"(?:[\\\\d][\\\\d_]*(?:[.][\\\\d](?:[\\\\d_]*)\" + exponent + \"?)|\" + exponent + \")\";\n    var floatNumberExt = \"(?:\" + hexNumber + \"(?:'(?:(?:[fF](?:32|64)?)|[dD])))|(?:\" + floatNumber + \"|\" + decNumber + \"|\" + octNumber + \"|\" + binNumber + \")(?:'(?:(?:[fF](?:32|64)?)|[dD]))\";\n    var stringEscape = \"\\\\\\\\([abeprcnlftv\\\\\\\"']|x[0-9A-Fa-f]{2}|[0-2][0-9]{2}|u[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})\";\n    var identifier = '[a-zA-Z][a-zA-Z0-9_]*';\n    this.$rules = {\n        \"start\": [{\n                token: [\"identifier\", \"keyword.operator\", \"support.function\"],\n                regex: \"(\" + identifier + \")([.]{1})(\" + identifier + \")(?=\\\\()\"\n            }, {\n                token: \"paren.lparen\",\n                regex: \"(\\\\{\\\\.)\",\n                next: [{\n                        token: \"paren.rparen\",\n                        regex: '(\\\\.\\\\}|\\\\})',\n                        next: \"start\"\n                    }, {\n                        include: \"methods\"\n                    }, {\n                        token: \"identifier\",\n                        regex: identifier\n                    }, {\n                        token: \"punctuation\",\n                        regex: /[,]/\n                    }, {\n                        token: \"keyword.operator\",\n                        regex: /[=:.]/\n                    }, {\n                        token: \"paren.lparen\",\n                        regex: /[[(]/\n                    }, {\n                        token: \"paren.rparen\",\n                        regex: /[\\])]/\n                    }, {\n                        include: \"math\"\n                    }, {\n                        include: \"strings\"\n                    }, {\n                        defaultToken: \"text\"\n                    }]\n            }, {\n                token: \"comment.doc.start\",\n                regex: /##\\[(?!])/,\n                push: \"docBlockComment\"\n            }, {\n                token: \"comment.start\",\n                regex: /#\\[(?!])/,\n                push: \"blockComment\"\n            }, {\n                token: \"comment.doc\",\n                regex: '##.*$'\n            }, {\n                token: \"comment\",\n                regex: '#.*$'\n            }, {\n                include: \"strings\"\n            }, {\n                token: \"string\",\n                regex: \"'(?:\\\\\\\\(?:[abercnlftv]|x[0-9A-Fa-f]{2}|[0-2][0-9]{2}|u[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})|.{1})?'\"\n            }, {\n                include: \"methods\"\n            }, {\n                token: keywordMapper,\n                regex: \"[a-zA-Z][a-zA-Z0-9_]*\\\\b\"\n            }, {\n                token: [\"keyword.operator\", \"text\", \"storage.type\"],\n                regex: \"([:])(\\\\s+)(\" + identifier + \")(?=$|\\\\)|\\\\[|,|\\\\s+=|;|\\\\s+\\\\{)\"\n            }, {\n                token: \"paren.lparen\",\n                regex: /\\[\\.|{\\||\\(\\.|\\[:|[[({`]/\n            }, {\n                token: \"paren.rparen\",\n                regex: /\\.\\)|\\|}|\\.]|[\\])}]/\n            }, {\n                token: \"keyword.operator\",\n                regex: /[=+\\-*\\/<>@$~&%|!?^.:\\\\]/\n            }, {\n                token: \"punctuation\",\n                regex: /[,;]/\n            }, {\n                include: \"math\"\n            }],\n        blockComment: [{\n                regex: /#\\[]/,\n                token: \"comment\"\n            }, {\n                regex: /#\\[(?!])/,\n                token: \"comment.start\",\n                push: \"blockComment\"\n            }, {\n                regex: /]#/,\n                token: \"comment.end\",\n                next: \"pop\"\n            }, {\n                defaultToken: \"comment\"\n            }],\n        docBlockComment: [{\n                regex: /##\\[]/,\n                token: \"comment.doc\"\n            }, {\n                regex: /##\\[(?!])/,\n                token: \"comment.doc.start\",\n                push: \"docBlockComment\"\n            }, {\n                regex: /]##/,\n                token: \"comment.doc.end\",\n                next: \"pop\"\n            }, {\n                defaultToken: \"comment.doc\"\n            }],\n        math: [{\n                token: \"constant.float\",\n                regex: floatNumberExt\n            }, {\n                token: \"constant.float\",\n                regex: floatNumber\n            }, {\n                token: \"constant.integer\",\n                regex: intNumber\n            }],\n        methods: [{\n                token: \"support.function\",\n                regex: \"(\\\\w+)(?=\\\\()\"\n            }],\n        strings: [{\n                token: \"string\",\n                regex: '(\\\\b' + identifier + ')?\"\"\"',\n                push: [{\n                        token: \"string\",\n                        regex: '\"\"\"',\n                        next: \"pop\"\n                    }, {\n                        defaultToken: \"string\"\n                    }]\n            }, {\n                token: \"string\",\n                regex: \"\\\\b\" + identifier + '\"(?=.)',\n                push: [{\n                        token: \"string\",\n                        regex: '\"|$',\n                        next: \"pop\"\n                    }, {\n                        defaultToken: \"string\"\n                    }]\n            }, {\n                token: \"string\",\n                regex: '\"',\n                push: [{\n                        token: \"string\",\n                        regex: '\"|$',\n                        next: \"pop\"\n                    }, {\n                        token: \"constant.language.escape\",\n                        regex: stringEscape\n                    }, {\n                        defaultToken: \"string\"\n                    }]\n            }]\n    };\n    this.normalizeRules();\n};\noop.inherits(NimHighlightRules, TextHighlightRules);\nexports.NimHighlightRules = NimHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n        this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n        return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                }\n                else if (foldStyle != \"all\")\n                    range = null;\n            }\n            return range;\n        }\n        if (foldStyle === \"markbegin\")\n            return;\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    this.getSectionRange = function (session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                }\n                else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                }\n                else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m)\n                continue;\n            if (m[1])\n                depth--;\n            else\n                depth++;\n            if (!depth)\n                break;\n        }\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/nim\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/nim_highlight_rules\",\"ace/mode/folding/cstyle\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar NimHighlightRules = require(\"./nim_highlight_rules\").NimHighlightRules;\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\nvar Mode = function () {\n    TextMode.call(this);\n    this.HighlightRules = NimHighlightRules;\n    this.foldingRules = new CStyleFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"#\";\n    this.blockComment = { start: \"#[\", end: \"]#\", nestable: true };\n    this.$id = \"ace/mode/nim\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/nim\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}