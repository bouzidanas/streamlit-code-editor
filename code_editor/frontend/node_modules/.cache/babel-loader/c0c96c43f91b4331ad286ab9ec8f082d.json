{"ast":null,"code":"ace.define(\"ace/ext/hardwrap\", [\"require\", \"exports\", \"module\", \"ace/range\", \"ace/editor\", \"ace/config\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n  function hardWrap(editor, options) {\n    var max = options.column || editor.getOption(\"printMarginColumn\");\n    var allowMerge = options.allowMerge != false;\n    var row = Math.min(options.startRow, options.endRow);\n    var endRow = Math.max(options.startRow, options.endRow);\n    var session = editor.session;\n    while (row <= endRow) {\n      var line = session.getLine(row);\n      if (line.length > max) {\n        var space = findSpace(line, max, 5);\n        if (space) {\n          var indentation = /^\\s*/.exec(line)[0];\n          session.replace(new Range(row, space.start, row, space.end), \"\\n\" + indentation);\n        }\n        endRow++;\n      } else if (allowMerge && /\\S/.test(line) && row != endRow) {\n        var nextLine = session.getLine(row + 1);\n        if (nextLine && /\\S/.test(nextLine)) {\n          var trimmedLine = line.replace(/\\s+$/, \"\");\n          var trimmedNextLine = nextLine.replace(/^\\s+/, \"\");\n          var mergedLine = trimmedLine + \" \" + trimmedNextLine;\n          var space = findSpace(mergedLine, max, 5);\n          if (space && space.start > trimmedLine.length || mergedLine.length < max) {\n            var replaceRange = new Range(row, trimmedLine.length, row + 1, nextLine.length - trimmedNextLine.length);\n            session.replace(replaceRange, \" \");\n            row--;\n            endRow--;\n          } else if (trimmedLine.length < line.length) {\n            session.remove(new Range(row, trimmedLine.length, row, line.length));\n          }\n        }\n      }\n      row++;\n    }\n    function findSpace(line, max, min) {\n      if (line.length < max) return;\n      var before = line.slice(0, max);\n      var after = line.slice(max);\n      var spaceAfter = /^(?:(\\s+)|(\\S+)(\\s+))/.exec(after);\n      var spaceBefore = /(?:(\\s+)|(\\s+)(\\S+))$/.exec(before);\n      var start = 0;\n      var end = 0;\n      if (spaceBefore && !spaceBefore[2]) {\n        start = max - spaceBefore[1].length;\n        end = max;\n      }\n      if (spaceAfter && !spaceAfter[2]) {\n        if (!start) start = max;\n        end = max + spaceAfter[1].length;\n      }\n      if (start) {\n        return {\n          start: start,\n          end: end\n        };\n      }\n      if (spaceBefore && spaceBefore[2] && spaceBefore.index > min) {\n        return {\n          start: spaceBefore.index,\n          end: spaceBefore.index + spaceBefore[2].length\n        };\n      }\n      if (spaceAfter && spaceAfter[2]) {\n        start = max + spaceAfter[2].length;\n        return {\n          start: start,\n          end: start + spaceAfter[3].length\n        };\n      }\n    }\n  }\n  function wrapAfterInput(e) {\n    if (e.command.name == \"insertstring\" && /\\S/.test(e.args)) {\n      var editor = e.editor;\n      var cursor = editor.selection.cursor;\n      if (cursor.column <= editor.renderer.$printMarginColumn) return;\n      var lastDelta = editor.session.$undoManager.$lastDelta;\n      hardWrap(editor, {\n        startRow: cursor.row,\n        endRow: cursor.row,\n        allowMerge: false\n      });\n      if (lastDelta != editor.session.$undoManager.$lastDelta) editor.session.markUndoGroup();\n    }\n  }\n  var Editor = require(\"../editor\").Editor;\n  require(\"../config\").defineOptions(Editor.prototype, \"editor\", {\n    hardWrap: {\n      set: function (val) {\n        if (val) {\n          this.commands.on(\"afterExec\", wrapAfterInput);\n        } else {\n          this.commands.off(\"afterExec\", wrapAfterInput);\n        }\n      },\n      value: false\n    }\n  });\n  exports.hardWrap = hardWrap;\n});\n(function () {\n  ace.require([\"ace/ext/hardwrap\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","Range","hardWrap","editor","options","max","column","getOption","allowMerge","row","Math","min","startRow","endRow","session","line","getLine","length","space","findSpace","indentation","exec","replace","start","end","test","nextLine","trimmedLine","trimmedNextLine","mergedLine","replaceRange","remove","before","slice","after","spaceAfter","spaceBefore","index","wrapAfterInput","e","command","name","args","cursor","selection","renderer","$printMarginColumn","lastDelta","$undoManager","$lastDelta","markUndoGroup","Editor","defineOptions","prototype","set","val","commands","on","off","value","m"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/ext-hardwrap.js"],"sourcesContent":["ace.define(\"ace/ext/hardwrap\",[\"require\",\"exports\",\"module\",\"ace/range\",\"ace/editor\",\"ace/config\"], function(require, exports, module){\"use strict\";\nvar Range = require(\"../range\").Range;\nfunction hardWrap(editor, options) {\n    var max = options.column || editor.getOption(\"printMarginColumn\");\n    var allowMerge = options.allowMerge != false;\n    var row = Math.min(options.startRow, options.endRow);\n    var endRow = Math.max(options.startRow, options.endRow);\n    var session = editor.session;\n    while (row <= endRow) {\n        var line = session.getLine(row);\n        if (line.length > max) {\n            var space = findSpace(line, max, 5);\n            if (space) {\n                var indentation = /^\\s*/.exec(line)[0];\n                session.replace(new Range(row, space.start, row, space.end), \"\\n\" + indentation);\n            }\n            endRow++;\n        }\n        else if (allowMerge && /\\S/.test(line) && row != endRow) {\n            var nextLine = session.getLine(row + 1);\n            if (nextLine && /\\S/.test(nextLine)) {\n                var trimmedLine = line.replace(/\\s+$/, \"\");\n                var trimmedNextLine = nextLine.replace(/^\\s+/, \"\");\n                var mergedLine = trimmedLine + \" \" + trimmedNextLine;\n                var space = findSpace(mergedLine, max, 5);\n                if (space && space.start > trimmedLine.length || mergedLine.length < max) {\n                    var replaceRange = new Range(row, trimmedLine.length, row + 1, nextLine.length - trimmedNextLine.length);\n                    session.replace(replaceRange, \" \");\n                    row--;\n                    endRow--;\n                }\n                else if (trimmedLine.length < line.length) {\n                    session.remove(new Range(row, trimmedLine.length, row, line.length));\n                }\n            }\n        }\n        row++;\n    }\n    function findSpace(line, max, min) {\n        if (line.length < max)\n            return;\n        var before = line.slice(0, max);\n        var after = line.slice(max);\n        var spaceAfter = /^(?:(\\s+)|(\\S+)(\\s+))/.exec(after);\n        var spaceBefore = /(?:(\\s+)|(\\s+)(\\S+))$/.exec(before);\n        var start = 0;\n        var end = 0;\n        if (spaceBefore && !spaceBefore[2]) {\n            start = max - spaceBefore[1].length;\n            end = max;\n        }\n        if (spaceAfter && !spaceAfter[2]) {\n            if (!start)\n                start = max;\n            end = max + spaceAfter[1].length;\n        }\n        if (start) {\n            return {\n                start: start,\n                end: end\n            };\n        }\n        if (spaceBefore && spaceBefore[2] && spaceBefore.index > min) {\n            return {\n                start: spaceBefore.index,\n                end: spaceBefore.index + spaceBefore[2].length\n            };\n        }\n        if (spaceAfter && spaceAfter[2]) {\n            start = max + spaceAfter[2].length;\n            return {\n                start: start,\n                end: start + spaceAfter[3].length\n            };\n        }\n    }\n}\nfunction wrapAfterInput(e) {\n    if (e.command.name == \"insertstring\" && /\\S/.test(e.args)) {\n        var editor = e.editor;\n        var cursor = editor.selection.cursor;\n        if (cursor.column <= editor.renderer.$printMarginColumn)\n            return;\n        var lastDelta = editor.session.$undoManager.$lastDelta;\n        hardWrap(editor, {\n            startRow: cursor.row, endRow: cursor.row,\n            allowMerge: false\n        });\n        if (lastDelta != editor.session.$undoManager.$lastDelta)\n            editor.session.markUndoGroup();\n    }\n}\nvar Editor = require(\"../editor\").Editor;\nrequire(\"../config\").defineOptions(Editor.prototype, \"editor\", {\n    hardWrap: {\n        set: function (val) {\n            if (val) {\n                this.commands.on(\"afterExec\", wrapAfterInput);\n            }\n            else {\n                this.commands.off(\"afterExec\", wrapAfterInput);\n            }\n        },\n        value: false\n    }\n});\nexports.hardWrap = hardWrap;\n\n});                (function() {\n                    ace.require([\"ace/ext/hardwrap\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}