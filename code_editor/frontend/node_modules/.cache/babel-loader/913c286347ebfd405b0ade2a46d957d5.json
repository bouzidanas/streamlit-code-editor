{"ast":null,"code":"ace.define(\"ace/mode/hjson_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  /* This file was autogenerated from Hjson.tmLanguage (uuid: ) */\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var HjsonHighlightRules = function () {\n    this.$rules = {\n      start: [{\n        include: \"#comments\"\n      }, {\n        include: \"#rootObject\"\n      }, {\n        include: \"#value\"\n      }],\n      \"#array\": [{\n        token: \"paren.lparen\",\n        regex: /\\[/,\n        push: [{\n          token: \"paren.rparen\",\n          regex: /\\]/,\n          next: \"pop\"\n        }, {\n          include: \"#value\"\n        }, {\n          include: \"#comments\"\n        }, {\n          token: \"text\",\n          regex: /,|$/\n        }, {\n          token: \"invalid.illegal\",\n          regex: /[^\\s\\]]/\n        }, {\n          defaultToken: \"array\"\n        }]\n      }],\n      \"#comments\": [{\n        token: [\"comment.punctuation\", \"comment.line\"],\n        regex: /(#)(.*$)/\n      }, {\n        token: \"comment.punctuation\",\n        regex: /\\/\\*/,\n        push: [{\n          token: \"comment.punctuation\",\n          regex: /\\*\\//,\n          next: \"pop\"\n        }, {\n          defaultToken: \"comment.block\"\n        }]\n      }, {\n        token: [\"comment.punctuation\", \"comment.line\"],\n        regex: /(\\/\\/)(.*$)/\n      }],\n      \"#constant\": [{\n        token: \"constant\",\n        regex: /\\b(?:true|false|null)\\b/\n      }],\n      \"#keyname\": [{\n        token: \"keyword\",\n        regex: /(?:[^,\\{\\[\\}\\]\\s]+|\"(?:[^\"\\\\]|\\\\.)*\")\\s*(?=:)/\n      }],\n      \"#mstring\": [{\n        token: \"string\",\n        regex: /'''/,\n        push: [{\n          token: \"string\",\n          regex: /'''/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      }],\n      \"#number\": [{\n        token: \"constant.numeric\",\n        regex: /-?(?:0|[1-9]\\d*)(?:(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)?/,\n        comment: \"handles integer and decimal numbers\"\n      }],\n      \"#object\": [{\n        token: \"paren.lparen\",\n        regex: /\\{/,\n        push: [{\n          token: \"paren.rparen\",\n          regex: /\\}/,\n          next: \"pop\"\n        }, {\n          include: \"#keyname\"\n        }, {\n          include: \"#value\"\n        }, {\n          token: \"text\",\n          regex: /:/\n        }, {\n          token: \"text\",\n          regex: /,/\n        }, {\n          defaultToken: \"paren\"\n        }]\n      }],\n      \"#rootObject\": [{\n        token: \"paren\",\n        regex: /(?=\\s*(?:[^,\\{\\[\\}\\]\\s]+|\"(?:[^\"\\\\]|\\\\.)*\")\\s*:)/,\n        push: [{\n          token: \"paren.rparen\",\n          regex: /---none---/,\n          next: \"pop\"\n        }, {\n          include: \"#keyname\"\n        }, {\n          include: \"#value\"\n        }, {\n          token: \"text\",\n          regex: /:/\n        }, {\n          token: \"text\",\n          regex: /,/\n        }, {\n          defaultToken: \"paren\"\n        }]\n      }],\n      \"#string\": [{\n        token: \"string\",\n        regex: /\"/,\n        push: [{\n          token: \"string\",\n          regex: /\"/,\n          next: \"pop\"\n        }, {\n          token: \"constant.language.escape\",\n          regex: /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/\n        }, {\n          token: \"invalid.illegal\",\n          regex: /\\\\./\n        }, {\n          defaultToken: \"string\"\n        }]\n      }],\n      \"#ustring\": [{\n        token: \"string\",\n        regex: /\\b[^:,0-9\\-\\{\\[\\}\\]\\s].*$/\n      }],\n      \"#value\": [{\n        include: \"#constant\"\n      }, {\n        include: \"#number\"\n      }, {\n        include: \"#string\"\n      }, {\n        include: \"#array\"\n      }, {\n        include: \"#object\"\n      }, {\n        include: \"#comments\"\n      }, {\n        include: \"#mstring\"\n      }, {\n        include: \"#ustring\"\n      }]\n    };\n    this.normalizeRules();\n  };\n  HjsonHighlightRules.metaData = {\n    fileTypes: [\"hjson\"],\n    foldingStartMarker: \"(?x:     # turn on extended mode\\n              ^    # a line beginning with\\n              \\\\s*    # some optional space\\n              [{\\\\[]  # the start of an object or array\\n              (?!    # but not followed by\\n              .*   # whatever\\n              [}\\\\]]  # and the close of an object or array\\n              ,?   # an optional comma\\n              \\\\s*  # some optional space\\n              $    # at the end of the line\\n              )\\n              |    # ...or...\\n              [{\\\\[]  # the start of an object or array\\n              \\\\s*    # some optional space\\n              $    # at the end of the line\\n            )\",\n    foldingStopMarker: \"(?x:   # turn on extended mode\\n             ^    # a line beginning with\\n             \\\\s*  # some optional space\\n             [}\\\\]]  # and the close of an object or array\\n             )\",\n    keyEquivalent: \"^~J\",\n    name: \"Hjson\",\n    scopeName: \"source.hjson\"\n  };\n  oop.inherits(HjsonHighlightRules, TextHighlightRules);\n  exports.HjsonHighlightRules = HjsonHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Range = require(\"../../range\").Range;\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n      return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n        return range;\n      }\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n        endRow = row;\n      }\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n      var endRow = row;\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/hjson\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/hjson_highlight_rules\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var HjsonHighlightRules = require(\"./hjson_highlight_rules\").HjsonHighlightRules;\n  var FoldMode = require(\"./folding/cstyle\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = HjsonHighlightRules;\n    this.foldingRules = new FoldMode();\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\"\n    };\n    this.$id = \"ace/mode/hjson\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/hjson\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","HjsonHighlightRules","$rules","start","include","token","regex","push","next","defaultToken","comment","normalizeRules","metaData","fileTypes","foldingStartMarker","foldingStopMarker","keyEquivalent","name","scopeName","inherits","Range","BaseFoldMode","FoldMode","commentRegex","RegExp","source","replace","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","HighlightRules","foldingRules","lineCommentStart","blockComment","$id"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-hjson.js"],"sourcesContent":["ace.define(\"ace/mode/hjson_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){/* This file was autogenerated from Hjson.tmLanguage (uuid: ) */\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar HjsonHighlightRules = function () {\n    this.$rules = {\n        start: [{\n                include: \"#comments\"\n            }, {\n                include: \"#rootObject\"\n            }, {\n                include: \"#value\"\n            }],\n        \"#array\": [{\n                token: \"paren.lparen\",\n                regex: /\\[/,\n                push: [{\n                        token: \"paren.rparen\",\n                        regex: /\\]/,\n                        next: \"pop\"\n                    }, {\n                        include: \"#value\"\n                    }, {\n                        include: \"#comments\"\n                    }, {\n                        token: \"text\",\n                        regex: /,|$/\n                    }, {\n                        token: \"invalid.illegal\",\n                        regex: /[^\\s\\]]/\n                    }, {\n                        defaultToken: \"array\"\n                    }]\n            }],\n        \"#comments\": [{\n                token: [\n                    \"comment.punctuation\",\n                    \"comment.line\"\n                ],\n                regex: /(#)(.*$)/\n            }, {\n                token: \"comment.punctuation\",\n                regex: /\\/\\*/,\n                push: [{\n                        token: \"comment.punctuation\",\n                        regex: /\\*\\//,\n                        next: \"pop\"\n                    }, {\n                        defaultToken: \"comment.block\"\n                    }]\n            }, {\n                token: [\n                    \"comment.punctuation\",\n                    \"comment.line\"\n                ],\n                regex: /(\\/\\/)(.*$)/\n            }],\n        \"#constant\": [{\n                token: \"constant\",\n                regex: /\\b(?:true|false|null)\\b/\n            }],\n        \"#keyname\": [{\n                token: \"keyword\",\n                regex: /(?:[^,\\{\\[\\}\\]\\s]+|\"(?:[^\"\\\\]|\\\\.)*\")\\s*(?=:)/\n            }],\n        \"#mstring\": [{\n                token: \"string\",\n                regex: /'''/,\n                push: [{\n                        token: \"string\",\n                        regex: /'''/,\n                        next: \"pop\"\n                    }, {\n                        defaultToken: \"string\"\n                    }]\n            }],\n        \"#number\": [{\n                token: \"constant.numeric\",\n                regex: /-?(?:0|[1-9]\\d*)(?:(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)?/,\n                comment: \"handles integer and decimal numbers\"\n            }],\n        \"#object\": [{\n                token: \"paren.lparen\",\n                regex: /\\{/,\n                push: [{\n                        token: \"paren.rparen\",\n                        regex: /\\}/,\n                        next: \"pop\"\n                    }, {\n                        include: \"#keyname\"\n                    }, {\n                        include: \"#value\"\n                    }, {\n                        token: \"text\",\n                        regex: /:/\n                    }, {\n                        token: \"text\",\n                        regex: /,/\n                    }, {\n                        defaultToken: \"paren\"\n                    }]\n            }],\n        \"#rootObject\": [{\n                token: \"paren\",\n                regex: /(?=\\s*(?:[^,\\{\\[\\}\\]\\s]+|\"(?:[^\"\\\\]|\\\\.)*\")\\s*:)/,\n                push: [{\n                        token: \"paren.rparen\",\n                        regex: /---none---/,\n                        next: \"pop\"\n                    }, {\n                        include: \"#keyname\"\n                    }, {\n                        include: \"#value\"\n                    }, {\n                        token: \"text\",\n                        regex: /:/\n                    }, {\n                        token: \"text\",\n                        regex: /,/\n                    }, {\n                        defaultToken: \"paren\"\n                    }]\n            }],\n        \"#string\": [{\n                token: \"string\",\n                regex: /\"/,\n                push: [{\n                        token: \"string\",\n                        regex: /\"/,\n                        next: \"pop\"\n                    }, {\n                        token: \"constant.language.escape\",\n                        regex: /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/\n                    }, {\n                        token: \"invalid.illegal\",\n                        regex: /\\\\./\n                    }, {\n                        defaultToken: \"string\"\n                    }]\n            }],\n        \"#ustring\": [{\n                token: \"string\",\n                regex: /\\b[^:,0-9\\-\\{\\[\\}\\]\\s].*$/\n            }],\n        \"#value\": [{\n                include: \"#constant\"\n            }, {\n                include: \"#number\"\n            }, {\n                include: \"#string\"\n            }, {\n                include: \"#array\"\n            }, {\n                include: \"#object\"\n            }, {\n                include: \"#comments\"\n            }, {\n                include: \"#mstring\"\n            }, {\n                include: \"#ustring\"\n            }]\n    };\n    this.normalizeRules();\n};\nHjsonHighlightRules.metaData = {\n    fileTypes: [\"hjson\"],\n    foldingStartMarker: \"(?x:     # turn on extended mode\\n              ^    # a line beginning with\\n              \\\\s*    # some optional space\\n              [{\\\\[]  # the start of an object or array\\n              (?!    # but not followed by\\n              .*   # whatever\\n              [}\\\\]]  # and the close of an object or array\\n              ,?   # an optional comma\\n              \\\\s*  # some optional space\\n              $    # at the end of the line\\n              )\\n              |    # ...or...\\n              [{\\\\[]  # the start of an object or array\\n              \\\\s*    # some optional space\\n              $    # at the end of the line\\n            )\",\n    foldingStopMarker: \"(?x:   # turn on extended mode\\n             ^    # a line beginning with\\n             \\\\s*  # some optional space\\n             [}\\\\]]  # and the close of an object or array\\n             )\",\n    keyEquivalent: \"^~J\",\n    name: \"Hjson\",\n    scopeName: \"source.hjson\"\n};\noop.inherits(HjsonHighlightRules, TextHighlightRules);\nexports.HjsonHighlightRules = HjsonHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n        this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n        return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                }\n                else if (foldStyle != \"all\")\n                    range = null;\n            }\n            return range;\n        }\n        if (foldStyle === \"markbegin\")\n            return;\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    this.getSectionRange = function (session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                }\n                else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                }\n                else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m)\n                continue;\n            if (m[1])\n                depth--;\n            else\n                depth++;\n            if (!depth)\n                break;\n        }\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/hjson\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/hjson_highlight_rules\",\"ace/mode/folding/cstyle\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar HjsonHighlightRules = require(\"./hjson_highlight_rules\").HjsonHighlightRules;\nvar FoldMode = require(\"./folding/cstyle\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = HjsonHighlightRules;\n    this.foldingRules = new FoldMode();\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = { start: \"/*\", end: \"*/\" };\n    this.$id = \"ace/mode/hjson\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/hjson\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"AAAAA,GAAG,CAACC,MAAM,CAAC,gCAAgC,EAAC,CAAC,SAAS,EAAC,SAAS,EAAC,QAAQ,EAAC,aAAa,EAAC,+BAA+B,CAAC,EAAE,UAASC,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAC;EAAC;EAC7J,YAAY;;EACZ,IAAIC,GAAG,GAAGH,OAAO,CAAC,YAAY,CAAC;EAC/B,IAAII,kBAAkB,GAAGJ,OAAO,CAAC,wBAAwB,CAAC,CAACI,kBAAkB;EAC7E,IAAIC,mBAAmB,GAAG,SAAAA,CAAA,EAAY;IAClC,IAAI,CAACC,MAAM,GAAG;MACVC,KAAK,EAAE,CAAC;QACAC,OAAO,EAAE;MACb,CAAC,EAAE;QACCA,OAAO,EAAE;MACb,CAAC,EAAE;QACCA,OAAO,EAAE;MACb,CAAC,CAAC;MACN,QAAQ,EAAE,CAAC;QACHC,KAAK,EAAE,cAAc;QACrBC,KAAK,EAAE,IAAI;QACXC,IAAI,EAAE,CAAC;UACCF,KAAK,EAAE,cAAc;UACrBC,KAAK,EAAE,IAAI;UACXE,IAAI,EAAE;QACV,CAAC,EAAE;UACCJ,OAAO,EAAE;QACb,CAAC,EAAE;UACCA,OAAO,EAAE;QACb,CAAC,EAAE;UACCC,KAAK,EAAE,MAAM;UACbC,KAAK,EAAE;QACX,CAAC,EAAE;UACCD,KAAK,EAAE,iBAAiB;UACxBC,KAAK,EAAE;QACX,CAAC,EAAE;UACCG,YAAY,EAAE;QAClB,CAAC;MACT,CAAC,CAAC;MACN,WAAW,EAAE,CAAC;QACNJ,KAAK,EAAE,CACH,qBAAqB,EACrB,cAAc,CACjB;QACDC,KAAK,EAAE;MACX,CAAC,EAAE;QACCD,KAAK,EAAE,qBAAqB;QAC5BC,KAAK,EAAE,MAAM;QACbC,IAAI,EAAE,CAAC;UACCF,KAAK,EAAE,qBAAqB;UAC5BC,KAAK,EAAE,MAAM;UACbE,IAAI,EAAE;QACV,CAAC,EAAE;UACCC,YAAY,EAAE;QAClB,CAAC;MACT,CAAC,EAAE;QACCJ,KAAK,EAAE,CACH,qBAAqB,EACrB,cAAc,CACjB;QACDC,KAAK,EAAE;MACX,CAAC,CAAC;MACN,WAAW,EAAE,CAAC;QACND,KAAK,EAAE,UAAU;QACjBC,KAAK,EAAE;MACX,CAAC,CAAC;MACN,UAAU,EAAE,CAAC;QACLD,KAAK,EAAE,SAAS;QAChBC,KAAK,EAAE;MACX,CAAC,CAAC;MACN,UAAU,EAAE,CAAC;QACLD,KAAK,EAAE,QAAQ;QACfC,KAAK,EAAE,KAAK;QACZC,IAAI,EAAE,CAAC;UACCF,KAAK,EAAE,QAAQ;UACfC,KAAK,EAAE,KAAK;UACZE,IAAI,EAAE;QACV,CAAC,EAAE;UACCC,YAAY,EAAE;QAClB,CAAC;MACT,CAAC,CAAC;MACN,SAAS,EAAE,CAAC;QACJJ,KAAK,EAAE,kBAAkB;QACzBC,KAAK,EAAE,kDAAkD;QACzDI,OAAO,EAAE;MACb,CAAC,CAAC;MACN,SAAS,EAAE,CAAC;QACJL,KAAK,EAAE,cAAc;QACrBC,KAAK,EAAE,IAAI;QACXC,IAAI,EAAE,CAAC;UACCF,KAAK,EAAE,cAAc;UACrBC,KAAK,EAAE,IAAI;UACXE,IAAI,EAAE;QACV,CAAC,EAAE;UACCJ,OAAO,EAAE;QACb,CAAC,EAAE;UACCA,OAAO,EAAE;QACb,CAAC,EAAE;UACCC,KAAK,EAAE,MAAM;UACbC,KAAK,EAAE;QACX,CAAC,EAAE;UACCD,KAAK,EAAE,MAAM;UACbC,KAAK,EAAE;QACX,CAAC,EAAE;UACCG,YAAY,EAAE;QAClB,CAAC;MACT,CAAC,CAAC;MACN,aAAa,EAAE,CAAC;QACRJ,KAAK,EAAE,OAAO;QACdC,KAAK,EAAE,kDAAkD;QACzDC,IAAI,EAAE,CAAC;UACCF,KAAK,EAAE,cAAc;UACrBC,KAAK,EAAE,YAAY;UACnBE,IAAI,EAAE;QACV,CAAC,EAAE;UACCJ,OAAO,EAAE;QACb,CAAC,EAAE;UACCA,OAAO,EAAE;QACb,CAAC,EAAE;UACCC,KAAK,EAAE,MAAM;UACbC,KAAK,EAAE;QACX,CAAC,EAAE;UACCD,KAAK,EAAE,MAAM;UACbC,KAAK,EAAE;QACX,CAAC,EAAE;UACCG,YAAY,EAAE;QAClB,CAAC;MACT,CAAC,CAAC;MACN,SAAS,EAAE,CAAC;QACJJ,KAAK,EAAE,QAAQ;QACfC,KAAK,EAAE,GAAG;QACVC,IAAI,EAAE,CAAC;UACCF,KAAK,EAAE,QAAQ;UACfC,KAAK,EAAE,GAAG;UACVE,IAAI,EAAE;QACV,CAAC,EAAE;UACCH,KAAK,EAAE,0BAA0B;UACjCC,KAAK,EAAE;QACX,CAAC,EAAE;UACCD,KAAK,EAAE,iBAAiB;UACxBC,KAAK,EAAE;QACX,CAAC,EAAE;UACCG,YAAY,EAAE;QAClB,CAAC;MACT,CAAC,CAAC;MACN,UAAU,EAAE,CAAC;QACLJ,KAAK,EAAE,QAAQ;QACfC,KAAK,EAAE;MACX,CAAC,CAAC;MACN,QAAQ,EAAE,CAAC;QACHF,OAAO,EAAE;MACb,CAAC,EAAE;QACCA,OAAO,EAAE;MACb,CAAC,EAAE;QACCA,OAAO,EAAE;MACb,CAAC,EAAE;QACCA,OAAO,EAAE;MACb,CAAC,EAAE;QACCA,OAAO,EAAE;MACb,CAAC,EAAE;QACCA,OAAO,EAAE;MACb,CAAC,EAAE;QACCA,OAAO,EAAE;MACb,CAAC,EAAE;QACCA,OAAO,EAAE;MACb,CAAC;IACT,CAAC;IACD,IAAI,CAACO,cAAc,CAAC,CAAC;EACzB,CAAC;EACDV,mBAAmB,CAACW,QAAQ,GAAG;IAC3BC,SAAS,EAAE,CAAC,OAAO,CAAC;IACpBC,kBAAkB,EAAE,8oBAA8oB;IAClqBC,iBAAiB,EAAE,iMAAiM;IACpNC,aAAa,EAAE,KAAK;IACpBC,IAAI,EAAE,OAAO;IACbC,SAAS,EAAE;EACf,CAAC;EACDnB,GAAG,CAACoB,QAAQ,CAAClB,mBAAmB,EAAED,kBAAkB,CAAC;EACrDH,OAAO,CAACI,mBAAmB,GAAGA,mBAAmB;AAEjD,CAAC,CAAC;AAEFP,GAAG,CAACC,MAAM,CAAC,yBAAyB,EAAC,CAAC,SAAS,EAAC,SAAS,EAAC,QAAQ,EAAC,aAAa,EAAC,WAAW,EAAC,4BAA4B,CAAC,EAAE,UAASC,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAC;EAAC,YAAY;;EAC3K,IAAIC,GAAG,GAAGH,OAAO,CAAC,eAAe,CAAC;EAClC,IAAIwB,KAAK,GAAGxB,OAAO,CAAC,aAAa,CAAC,CAACwB,KAAK;EACxC,IAAIC,YAAY,GAAGzB,OAAO,CAAC,aAAa,CAAC,CAAC0B,QAAQ;EAClD,IAAIA,QAAQ,GAAGzB,OAAO,CAACyB,QAAQ,GAAG,UAAUC,YAAY,EAAE;IACtD,IAAIA,YAAY,EAAE;MACd,IAAI,CAACT,kBAAkB,GAAG,IAAIU,MAAM,CAAC,IAAI,CAACV,kBAAkB,CAACW,MAAM,CAACC,OAAO,CAAC,WAAW,EAAE,GAAG,GAAGH,YAAY,CAACpB,KAAK,CAAC,CAAC;MACnH,IAAI,CAACY,iBAAiB,GAAG,IAAIS,MAAM,CAAC,IAAI,CAACT,iBAAiB,CAACU,MAAM,CAACC,OAAO,CAAC,WAAW,EAAE,GAAG,GAAGH,YAAY,CAACI,GAAG,CAAC,CAAC;IACnH;EACJ,CAAC;EACD5B,GAAG,CAACoB,QAAQ,CAACG,QAAQ,EAAED,YAAY,CAAC;EACpC,CAAC,YAAY;IACT,IAAI,CAACP,kBAAkB,GAAG,kCAAkC;IAC5D,IAAI,CAACC,iBAAiB,GAAG,sCAAsC;IAC/D,IAAI,CAACa,wBAAwB,GAAG,sBAAsB;IACtD,IAAI,CAACC,wBAAwB,GAAG,0BAA0B;IAC1D,IAAI,CAACC,aAAa,GAAG,2BAA2B;IAChD,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACC,aAAa;IAC5C,IAAI,CAACA,aAAa,GAAG,UAAUC,OAAO,EAAEC,SAAS,EAAEC,GAAG,EAAE;MACpD,IAAIC,IAAI,GAAGH,OAAO,CAACI,OAAO,CAACF,GAAG,CAAC;MAC/B,IAAI,IAAI,CAACP,wBAAwB,CAACU,IAAI,CAACF,IAAI,CAAC,EAAE;QAC1C,IAAI,CAAC,IAAI,CAACN,aAAa,CAACQ,IAAI,CAACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAACP,wBAAwB,CAACS,IAAI,CAACF,IAAI,CAAC,EAC3E,OAAO,EAAE;MACjB;MACA,IAAIG,EAAE,GAAG,IAAI,CAACR,kBAAkB,CAACE,OAAO,EAAEC,SAAS,EAAEC,GAAG,CAAC;MACzD,IAAI,CAACI,EAAE,IAAI,IAAI,CAACT,aAAa,CAACQ,IAAI,CAACF,IAAI,CAAC,EACpC,OAAO,OAAO,CAAC,CAAC;MACpB,OAAOG,EAAE;IACb,CAAC;IACD,IAAI,CAACC,kBAAkB,GAAG,UAAUP,OAAO,EAAEC,SAAS,EAAEC,GAAG,EAAEM,cAAc,EAAE;MACzE,IAAIL,IAAI,GAAGH,OAAO,CAACI,OAAO,CAACF,GAAG,CAAC;MAC/B,IAAI,IAAI,CAACL,aAAa,CAACQ,IAAI,CAACF,IAAI,CAAC,EAC7B,OAAO,IAAI,CAACM,qBAAqB,CAACT,OAAO,EAAEG,IAAI,EAAED,GAAG,CAAC;MACzD,IAAIQ,KAAK,GAAGP,IAAI,CAACO,KAAK,CAAC,IAAI,CAAC7B,kBAAkB,CAAC;MAC/C,IAAI6B,KAAK,EAAE;QACP,IAAIC,CAAC,GAAGD,KAAK,CAACE,KAAK;QACnB,IAAIF,KAAK,CAAC,CAAC,CAAC,EACR,OAAO,IAAI,CAACG,mBAAmB,CAACb,OAAO,EAAEU,KAAK,CAAC,CAAC,CAAC,EAAER,GAAG,EAAES,CAAC,CAAC;QAC9D,IAAIG,KAAK,GAAGd,OAAO,CAACe,mBAAmB,CAACb,GAAG,EAAES,CAAC,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACM,MAAM,EAAE,CAAC,CAAC;QACpE,IAAIF,KAAK,IAAI,CAACA,KAAK,CAACG,WAAW,CAAC,CAAC,EAAE;UAC/B,IAAIT,cAAc,EAAE;YAChBM,KAAK,GAAG,IAAI,CAACI,eAAe,CAAClB,OAAO,EAAEE,GAAG,CAAC;UAC9C,CAAC,MACI,IAAID,SAAS,IAAI,KAAK,EACvBa,KAAK,GAAG,IAAI;QACpB;QACA,OAAOA,KAAK;MAChB;MACA,IAAIb,SAAS,KAAK,WAAW,EACzB;MACJ,IAAIS,KAAK,GAAGP,IAAI,CAACO,KAAK,CAAC,IAAI,CAAC5B,iBAAiB,CAAC;MAC9C,IAAI4B,KAAK,EAAE;QACP,IAAIC,CAAC,GAAGD,KAAK,CAACE,KAAK,GAAGF,KAAK,CAAC,CAAC,CAAC,CAACM,MAAM;QACrC,IAAIN,KAAK,CAAC,CAAC,CAAC,EACR,OAAO,IAAI,CAACS,mBAAmB,CAACnB,OAAO,EAAEU,KAAK,CAAC,CAAC,CAAC,EAAER,GAAG,EAAES,CAAC,CAAC;QAC9D,OAAOX,OAAO,CAACe,mBAAmB,CAACb,GAAG,EAAES,CAAC,EAAE,CAAC,CAAC,CAAC;MAClD;IACJ,CAAC;IACD,IAAI,CAACO,eAAe,GAAG,UAAUlB,OAAO,EAAEE,GAAG,EAAE;MAC3C,IAAIC,IAAI,GAAGH,OAAO,CAACI,OAAO,CAACF,GAAG,CAAC;MAC/B,IAAIkB,WAAW,GAAGjB,IAAI,CAACkB,MAAM,CAAC,IAAI,CAAC;MACnC,IAAIC,QAAQ,GAAGpB,GAAG;MAClB,IAAIqB,WAAW,GAAGpB,IAAI,CAACa,MAAM;MAC7Bd,GAAG,GAAGA,GAAG,GAAG,CAAC;MACb,IAAIsB,MAAM,GAAGtB,GAAG;MAChB,IAAIuB,MAAM,GAAGzB,OAAO,CAAC0B,SAAS,CAAC,CAAC;MAChC,OAAO,EAAExB,GAAG,GAAGuB,MAAM,EAAE;QACnBtB,IAAI,GAAGH,OAAO,CAACI,OAAO,CAACF,GAAG,CAAC;QAC3B,IAAIyB,MAAM,GAAGxB,IAAI,CAACkB,MAAM,CAAC,IAAI,CAAC;QAC9B,IAAIM,MAAM,KAAK,CAAC,CAAC,EACb;QACJ,IAAIP,WAAW,GAAGO,MAAM,EACpB;QACJ,IAAIC,QAAQ,GAAG,IAAI,CAACrB,kBAAkB,CAACP,OAAO,EAAE,KAAK,EAAEE,GAAG,CAAC;QAC3D,IAAI0B,QAAQ,EAAE;UACV,IAAIA,QAAQ,CAAC1D,KAAK,CAACgC,GAAG,IAAIoB,QAAQ,EAAE;YAChC;UACJ,CAAC,MACI,IAAIM,QAAQ,CAACX,WAAW,CAAC,CAAC,EAAE;YAC7Bf,GAAG,GAAG0B,QAAQ,CAAClC,GAAG,CAACQ,GAAG;UAC1B,CAAC,MACI,IAAIkB,WAAW,IAAIO,MAAM,EAAE;YAC5B;UACJ;QACJ;QACAH,MAAM,GAAGtB,GAAG;MAChB;MACA,OAAO,IAAIf,KAAK,CAACmC,QAAQ,EAAEC,WAAW,EAAEC,MAAM,EAAExB,OAAO,CAACI,OAAO,CAACoB,MAAM,CAAC,CAACR,MAAM,CAAC;IACnF,CAAC;IACD,IAAI,CAACP,qBAAqB,GAAG,UAAUT,OAAO,EAAEG,IAAI,EAAED,GAAG,EAAE;MACvD,IAAIqB,WAAW,GAAGpB,IAAI,CAACkB,MAAM,CAAC,MAAM,CAAC;MACrC,IAAII,MAAM,GAAGzB,OAAO,CAAC0B,SAAS,CAAC,CAAC;MAChC,IAAIJ,QAAQ,GAAGpB,GAAG;MAClB,IAAI2B,EAAE,GAAG,sCAAsC;MAC/C,IAAIC,KAAK,GAAG,CAAC;MACb,OAAO,EAAE5B,GAAG,GAAGuB,MAAM,EAAE;QACnBtB,IAAI,GAAGH,OAAO,CAACI,OAAO,CAACF,GAAG,CAAC;QAC3B,IAAI6B,CAAC,GAAGF,EAAE,CAACG,IAAI,CAAC7B,IAAI,CAAC;QACrB,IAAI,CAAC4B,CAAC,EACF;QACJ,IAAIA,CAAC,CAAC,CAAC,CAAC,EACJD,KAAK,EAAE,CAAC,KAERA,KAAK,EAAE;QACX,IAAI,CAACA,KAAK,EACN;MACR;MACA,IAAIN,MAAM,GAAGtB,GAAG;MAChB,IAAIsB,MAAM,GAAGF,QAAQ,EAAE;QACnB,OAAO,IAAInC,KAAK,CAACmC,QAAQ,EAAEC,WAAW,EAAEC,MAAM,EAAErB,IAAI,CAACa,MAAM,CAAC;MAChE;IACJ,CAAC;EACL,CAAC,EAAEiB,IAAI,CAAC5C,QAAQ,CAAC6C,SAAS,CAAC;AAE3B,CAAC,CAAC;AAEFzE,GAAG,CAACC,MAAM,CAAC,gBAAgB,EAAC,CAAC,SAAS,EAAC,SAAS,EAAC,QAAQ,EAAC,aAAa,EAAC,eAAe,EAAC,gCAAgC,EAAC,yBAAyB,CAAC,EAAE,UAASC,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAC;EAAC,YAAY;;EACpM,IAAIC,GAAG,GAAGH,OAAO,CAAC,YAAY,CAAC;EAC/B,IAAIwE,QAAQ,GAAGxE,OAAO,CAAC,QAAQ,CAAC,CAACyE,IAAI;EACrC,IAAIpE,mBAAmB,GAAGL,OAAO,CAAC,yBAAyB,CAAC,CAACK,mBAAmB;EAChF,IAAIqB,QAAQ,GAAG1B,OAAO,CAAC,kBAAkB,CAAC,CAAC0B,QAAQ;EACnD,IAAI+C,IAAI,GAAG,SAAAA,CAAA,EAAY;IACnB,IAAI,CAACC,cAAc,GAAGrE,mBAAmB;IACzC,IAAI,CAACsE,YAAY,GAAG,IAAIjD,QAAQ,CAAC,CAAC;EACtC,CAAC;EACDvB,GAAG,CAACoB,QAAQ,CAACkD,IAAI,EAAED,QAAQ,CAAC;EAC5B,CAAC,YAAY;IACT,IAAI,CAACI,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACC,YAAY,GAAG;MAAEtE,KAAK,EAAE,IAAI;MAAEwB,GAAG,EAAE;IAAK,CAAC;IAC9C,IAAI,CAAC+C,GAAG,GAAG,gBAAgB;EAC/B,CAAC,EAAER,IAAI,CAACG,IAAI,CAACF,SAAS,CAAC;EACvBtE,OAAO,CAACwE,IAAI,GAAGA,IAAI;AAEnB,CAAC,CAAC;AAAiB,CAAC,YAAW;EACX3E,GAAG,CAACE,OAAO,CAAC,CAAC,gBAAgB,CAAC,EAAE,UAASoE,CAAC,EAAE;IACxC,IAAI,OAAOlE,MAAM,IAAI,QAAQ,IAAI,OAAOD,OAAO,IAAI,QAAQ,IAAIC,MAAM,EAAE;MACnEA,MAAM,CAACD,OAAO,GAAGmE,CAAC;IACtB;EACJ,CAAC,CAAC;AACN,CAAC,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}