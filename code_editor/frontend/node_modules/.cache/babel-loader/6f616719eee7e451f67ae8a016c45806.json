{"ast":null,"code":"ace.define(\"ace/mode/doc_comment_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var DocCommentHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.doc.tag\",\n        regex: \"@\\\\w+(?=\\\\s|$)\"\n      }, DocCommentHighlightRules.getTagRule(), {\n        defaultToken: \"comment.doc.body\",\n        caseInsensitive: true\n      }]\n    };\n  };\n  oop.inherits(DocCommentHighlightRules, TextHighlightRules);\n  DocCommentHighlightRules.getTagRule = function (start) {\n    return {\n      token: \"comment.doc.tag.storage.type\",\n      regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n  };\n  DocCommentHighlightRules.getStartRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // doc comment\n      regex: /\\/\\*\\*(?!\\/)/,\n      next: start\n    };\n  };\n  DocCommentHighlightRules.getEndRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // closing comment\n      regex: \"\\\\*\\\\/\",\n      next: start\n    };\n  };\n  exports.DocCommentHighlightRules = DocCommentHighlightRules;\n});\nace.define(\"ace/mode/d_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/doc_comment_highlight_rules\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var DHighlightRules = function () {\n    var keywords = \"this|super|import|module|body|mixin|__traits|invariant|alias|asm|delete|\" + \"typeof|typeid|sizeof|cast|new|in|is|typedef|__vector|__parameters\";\n    var keywordControls = \"break|case|continue|default|do|else|for|foreach|foreach_reverse|goto|if|\" + \"return|switch|while|catch|try|throw|finally|version|assert|unittest|with\";\n    var types = \"auto|bool|char|dchar|wchar|byte|ubyte|float|double|real|\" + \"cfloat|creal|cdouble|cent|ifloat|ireal|idouble|\" + \"int|long|short|void|uint|ulong|ushort|ucent|\" + \"function|delegate|string|wstring|dstring|size_t|ptrdiff_t|hash_t|Object\";\n    var modifiers = \"abstract|align|debug|deprecated|export|extern|const|final|in|inout|out|\" + \"ref|immutable|lazy|nothrow|override|package|pragma|private|protected|\" + \"public|pure|scope|shared|__gshared|synchronized|static|volatile\";\n    var storages = \"class|struct|union|template|interface|enum|macro\";\n    var stringEscapesSeq = {\n      token: \"constant.language.escape\",\n      regex: \"\\\\\\\\(?:(?:x[0-9A-F]{2})|(?:[0-7]{1,3})|(?:['\\\"\\\\?0abfnrtv\\\\\\\\])|\" + \"(?:u[0-9a-fA-F]{4})|(?:U[0-9a-fA-F]{8}))\"\n    };\n    var builtinConstants = \"null|true|false|\" + \"__DATE__|__EOF__|__TIME__|__TIMESTAMP__|__VENDOR__|__VERSION__|\" + \"__FILE__|__MODULE__|__LINE__|__FUNCTION__|__PRETTY_FUNCTION__\";\n    var operators = \"/|/\\\\=|&|&\\\\=|&&|\\\\|\\\\|\\\\=|\\\\|\\\\||\\\\-|\\\\-\\\\=|\\\\-\\\\-|\\\\+|\" + \"\\\\+\\\\=|\\\\+\\\\+|\\\\<|\\\\<\\\\=|\\\\<\\\\<|\\\\<\\\\<\\\\=|\\\\<\\\\>|\\\\<\\\\>\\\\=|\\\\>|\\\\>\\\\=|\\\\>\\\\>\\\\=|\" + \"\\\\>\\\\>\\\\>\\\\=|\\\\>\\\\>|\\\\>\\\\>\\\\>|\\\\!|\\\\!\\\\=|\\\\!\\\\<\\\\>|\\\\!\\\\<\\\\>\\\\=|\\\\!\\\\<|\\\\!\\\\<\\\\=|\" + \"\\\\!\\\\>|\\\\!\\\\>\\\\=|\\\\?|\\\\$|\\\\=|\\\\=\\\\=|\\\\*|\\\\*\\\\=|%|%\\\\=|\" + \"\\\\^|\\\\^\\\\=|\\\\^\\\\^|\\\\^\\\\^\\\\=|~|~\\\\=|\\\\=\\\\>|#\";\n    var keywordMapper = this.$keywords = this.createKeywordMapper({\n      \"keyword.modifier\": modifiers,\n      \"keyword.control\": keywordControls,\n      \"keyword.type\": types,\n      \"keyword\": keywords,\n      \"keyword.storage\": storages,\n      \"punctation\": \"\\\\.|\\\\,|;|\\\\.\\\\.|\\\\.\\\\.\\\\.\",\n      \"keyword.operator\": operators,\n      \"constant.language\": builtinConstants\n    }, \"identifier\");\n    var identifierRe = \"[a-zA-Z_\\u00a1-\\uffff][a-zA-Z\\\\d_\\u00a1-\\uffff]*\\\\b\";\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"\\\\/\\\\/.*$\"\n      }, DocCommentHighlightRules.getStartRule(\"doc-start\"), {\n        token: \"comment\",\n        // multi line comment\n        regex: \"\\\\/\\\\*\",\n        next: \"star-comment\"\n      }, {\n        token: \"comment.shebang\",\n        regex: \"^\\\\s*#!.*\"\n      }, {\n        token: \"comment\",\n        regex: \"\\\\/\\\\+\",\n        next: \"plus-comment\"\n      }, {\n        onMatch: function (value, currentState, state) {\n          state.unshift(this.next, value.substr(2));\n          return \"string\";\n        },\n        regex: 'q\"(?:[\\\\[\\\\(\\\\{\\\\<]+)',\n        next: 'operator-heredoc-string'\n      }, {\n        onMatch: function (value, currentState, state) {\n          state.unshift(this.next, value.substr(2));\n          return \"string\";\n        },\n        regex: 'q\"(?:[a-zA-Z_]+)$',\n        next: 'identifier-heredoc-string'\n      }, {\n        token: \"string\",\n        // multi line string start\n        regex: '[xr]?\"',\n        next: \"quote-string\"\n      }, {\n        token: \"string\",\n        // multi line string start\n        regex: '[xr]?`',\n        next: \"backtick-string\"\n      }, {\n        token: \"string\",\n        // single line\n        regex: \"[xr]?['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?['][cdw]?\"\n      }, {\n        token: [\"keyword\", \"text\", \"paren.lparen\"],\n        regex: /(asm)(\\s*)({)/,\n        next: \"d-asm\"\n      }, {\n        token: [\"keyword\", \"text\", \"paren.lparen\", \"constant.language\"],\n        regex: \"(__traits)(\\\\s*)(\\\\()(\" + identifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\", \"variable.module\"],\n        regex: \"(import|module)(\\\\s+)((?:\" + identifierRe + \"\\\\.?)*)\"\n      }, {\n        token: [\"keyword.storage\", \"text\", \"entity.name.type\"],\n        regex: \"(\" + storages + \")(\\\\s*)(\" + identifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\", \"variable.storage\", \"text\"],\n        regex: \"(alias|typedef)(\\\\s*)(\" + identifierRe + \")(\\\\s*)\"\n      }, {\n        token: \"constant.numeric\",\n        // hex\n        regex: \"0[xX][0-9a-fA-F_]+(l|ul|u|f|F|L|U|UL)?\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: \"[+-]?\\\\d[\\\\d_]*(?:(?:\\\\.[\\\\d_]*)?(?:[eE][+-]?[\\\\d_]+)?)?(l|ul|u|f|F|L|U|UL)?\\\\b\"\n      }, {\n        token: \"entity.other.attribute-name\",\n        regex: \"@\" + identifierRe\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_][a-zA-Z0-9_]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: operators\n      }, {\n        token: \"punctuation.operator\",\n        regex: \"\\\\?|\\\\:|\\\\,|\\\\;|\\\\.|\\\\:\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      \"star-comment\": [{\n        token: \"comment\",\n        // closing comment\n        regex: \"\\\\*\\\\/\",\n        next: \"start\"\n      }, {\n        defaultToken: 'comment'\n      }],\n      \"plus-comment\": [{\n        token: \"comment\",\n        // closing comment\n        regex: \"\\\\+\\\\/\",\n        next: \"start\"\n      }, {\n        defaultToken: 'comment'\n      }],\n      \"quote-string\": [stringEscapesSeq, {\n        token: \"string\",\n        regex: '\"[cdw]?',\n        next: \"start\"\n      }, {\n        defaultToken: 'string'\n      }],\n      \"backtick-string\": [stringEscapesSeq, {\n        token: \"string\",\n        regex: '`[cdw]?',\n        next: \"start\"\n      }, {\n        defaultToken: 'string'\n      }],\n      \"operator-heredoc-string\": [{\n        onMatch: function (value, currentState, state) {\n          value = value.substring(value.length - 2, value.length - 1);\n          var map = {\n            '>': '<',\n            ']': '[',\n            ')': '(',\n            '}': '{'\n          };\n          if (Object.keys(map).indexOf(value) != -1) value = map[value];\n          if (value != state[1]) return \"string\";\n          state.shift();\n          state.shift();\n          return \"string\";\n        },\n        regex: '(?:[\\\\]\\\\)}>]+)\"',\n        next: 'start'\n      }, {\n        token: 'string',\n        regex: '[^\\\\]\\\\)}>]+'\n      }],\n      \"identifier-heredoc-string\": [{\n        onMatch: function (value, currentState, state) {\n          value = value.substring(0, value.length - 1);\n          if (value != state[1]) return \"string\";\n          state.shift();\n          state.shift();\n          return \"string\";\n        },\n        regex: '^(?:[A-Za-z_][a-zA-Z0-9]+)\"',\n        next: 'start'\n      }, {\n        token: 'string',\n        regex: '[^\\\\]\\\\)}>]+'\n      }],\n      \"d-asm\": [{\n        token: \"paren.rparen\",\n        regex: \"\\\\}\",\n        next: \"start\"\n      }, {\n        token: 'keyword.instruction',\n        regex: '[a-zA-Z]+',\n        next: 'd-asm-instruction'\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      'd-asm-instruction': [{\n        token: 'constant.language',\n        regex: /AL|AH|AX|EAX|BL|BH|BX|EBX|CL|CH|CX|ECX|DL|DH|DX|EDX|BP|EBP|SP|ESP|DI|EDI|SI|ESI/i\n      }, {\n        token: 'identifier',\n        regex: '[a-zA-Z]+'\n      }, {\n        token: 'string',\n        regex: '\"[^\"]*\"'\n      }, {\n        token: 'comment',\n        regex: '//.*$'\n      }, {\n        token: 'constant.numeric',\n        regex: '[0-9.xA-F]+'\n      }, {\n        token: 'punctuation.operator',\n        regex: '\\\\,'\n      }, {\n        token: 'punctuation.operator',\n        regex: ';',\n        next: 'd-asm'\n      }, {\n        token: 'text',\n        regex: '\\\\s+'\n      }]\n    };\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"start\")]);\n  };\n  DHighlightRules.metaData = {\n    comment: 'D language',\n    fileTypes: ['d', 'di'],\n    firstLineMatch: '^#!.*\\\\b[glr]?dmd\\\\b.',\n    foldingStartMarker: '(?x)/\\\\*\\\\*(?!\\\\*)|^(?![^{]*?//|[^{]*?/\\\\*(?!.*?\\\\*/.*?\\\\{)).*?\\\\{\\\\s*($|//|/\\\\*(?!.*?\\\\*/.*\\\\S))',\n    foldingStopMarker: '(?<!\\\\*)\\\\*\\\\*/|^\\\\s*\\\\}',\n    keyEquivalent: '^~D',\n    name: 'D',\n    scopeName: 'source.d'\n  };\n  oop.inherits(DHighlightRules, TextHighlightRules);\n  exports.DHighlightRules = DHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Range = require(\"../../range\").Range;\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n      return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n        return range;\n      }\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n        endRow = row;\n      }\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n      var endRow = row;\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/d\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/d_highlight_rules\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  /*\n  THIS FILE WAS AUTOGENERATED BY mode.tmpl.js\n  */\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var DHighlightRules = require(\"./d_highlight_rules\").DHighlightRules;\n  var FoldMode = require(\"./folding/cstyle\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = DHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\"\n    };\n    this.$id = \"ace/mode/d\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/d\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","DocCommentHighlightRules","$rules","token","regex","getTagRule","defaultToken","caseInsensitive","inherits","start","getStartRule","next","getEndRule","DHighlightRules","keywords","keywordControls","types","modifiers","storages","stringEscapesSeq","builtinConstants","operators","keywordMapper","$keywords","createKeywordMapper","identifierRe","onMatch","value","currentState","state","unshift","substr","substring","length","map","Object","keys","indexOf","shift","embedRules","metaData","comment","fileTypes","firstLineMatch","foldingStartMarker","foldingStopMarker","keyEquivalent","name","scopeName","Range","BaseFoldMode","FoldMode","commentRegex","RegExp","source","replace","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","$id"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-d.js"],"sourcesContent":["ace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar DocCommentHighlightRules = function () {\n    this.$rules = {\n        \"start\": [\n            {\n                token: \"comment.doc.tag\",\n                regex: \"@\\\\w+(?=\\\\s|$)\"\n            }, DocCommentHighlightRules.getTagRule(), {\n                defaultToken: \"comment.doc.body\",\n                caseInsensitive: true\n            }\n        ]\n    };\n};\noop.inherits(DocCommentHighlightRules, TextHighlightRules);\nDocCommentHighlightRules.getTagRule = function (start) {\n    return {\n        token: \"comment.doc.tag.storage.type\",\n        regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n};\nDocCommentHighlightRules.getStartRule = function (start) {\n    return {\n        token: \"comment.doc\", // doc comment\n        regex: /\\/\\*\\*(?!\\/)/,\n        next: start\n    };\n};\nDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token: \"comment.doc\", // closing comment\n        regex: \"\\\\*\\\\/\",\n        next: start\n    };\n};\nexports.DocCommentHighlightRules = DocCommentHighlightRules;\n\n});\n\nace.define(\"ace/mode/d_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/doc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar DHighlightRules = function () {\n    var keywords = (\"this|super|import|module|body|mixin|__traits|invariant|alias|asm|delete|\" +\n        \"typeof|typeid|sizeof|cast|new|in|is|typedef|__vector|__parameters\");\n    var keywordControls = (\"break|case|continue|default|do|else|for|foreach|foreach_reverse|goto|if|\" +\n        \"return|switch|while|catch|try|throw|finally|version|assert|unittest|with\");\n    var types = (\"auto|bool|char|dchar|wchar|byte|ubyte|float|double|real|\" +\n        \"cfloat|creal|cdouble|cent|ifloat|ireal|idouble|\" +\n        \"int|long|short|void|uint|ulong|ushort|ucent|\" +\n        \"function|delegate|string|wstring|dstring|size_t|ptrdiff_t|hash_t|Object\");\n    var modifiers = (\"abstract|align|debug|deprecated|export|extern|const|final|in|inout|out|\" +\n        \"ref|immutable|lazy|nothrow|override|package|pragma|private|protected|\" +\n        \"public|pure|scope|shared|__gshared|synchronized|static|volatile\");\n    var storages = (\"class|struct|union|template|interface|enum|macro\");\n    var stringEscapesSeq = {\n        token: \"constant.language.escape\",\n        regex: \"\\\\\\\\(?:(?:x[0-9A-F]{2})|(?:[0-7]{1,3})|(?:['\\\"\\\\?0abfnrtv\\\\\\\\])|\" +\n            \"(?:u[0-9a-fA-F]{4})|(?:U[0-9a-fA-F]{8}))\"\n    };\n    var builtinConstants = (\"null|true|false|\" +\n        \"__DATE__|__EOF__|__TIME__|__TIMESTAMP__|__VENDOR__|__VERSION__|\" +\n        \"__FILE__|__MODULE__|__LINE__|__FUNCTION__|__PRETTY_FUNCTION__\");\n    var operators = (\"/|/\\\\=|&|&\\\\=|&&|\\\\|\\\\|\\\\=|\\\\|\\\\||\\\\-|\\\\-\\\\=|\\\\-\\\\-|\\\\+|\" +\n        \"\\\\+\\\\=|\\\\+\\\\+|\\\\<|\\\\<\\\\=|\\\\<\\\\<|\\\\<\\\\<\\\\=|\\\\<\\\\>|\\\\<\\\\>\\\\=|\\\\>|\\\\>\\\\=|\\\\>\\\\>\\\\=|\" +\n        \"\\\\>\\\\>\\\\>\\\\=|\\\\>\\\\>|\\\\>\\\\>\\\\>|\\\\!|\\\\!\\\\=|\\\\!\\\\<\\\\>|\\\\!\\\\<\\\\>\\\\=|\\\\!\\\\<|\\\\!\\\\<\\\\=|\" +\n        \"\\\\!\\\\>|\\\\!\\\\>\\\\=|\\\\?|\\\\$|\\\\=|\\\\=\\\\=|\\\\*|\\\\*\\\\=|%|%\\\\=|\" +\n        \"\\\\^|\\\\^\\\\=|\\\\^\\\\^|\\\\^\\\\^\\\\=|~|~\\\\=|\\\\=\\\\>|#\");\n    var keywordMapper = this.$keywords = this.createKeywordMapper({\n        \"keyword.modifier\": modifiers,\n        \"keyword.control\": keywordControls,\n        \"keyword.type\": types,\n        \"keyword\": keywords,\n        \"keyword.storage\": storages,\n        \"punctation\": \"\\\\.|\\\\,|;|\\\\.\\\\.|\\\\.\\\\.\\\\.\",\n        \"keyword.operator\": operators,\n        \"constant.language\": builtinConstants\n    }, \"identifier\");\n    var identifierRe = \"[a-zA-Z_\\u00a1-\\uffff][a-zA-Z\\\\d_\\u00a1-\\uffff]*\\\\b\";\n    this.$rules = {\n        \"start\": [\n            {\n                token: \"comment\",\n                regex: \"\\\\/\\\\/.*$\"\n            },\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            {\n                token: \"comment\", // multi line comment\n                regex: \"\\\\/\\\\*\",\n                next: \"star-comment\"\n            }, {\n                token: \"comment.shebang\",\n                regex: \"^\\\\s*#!.*\"\n            }, {\n                token: \"comment\",\n                regex: \"\\\\/\\\\+\",\n                next: \"plus-comment\"\n            }, {\n                onMatch: function (value, currentState, state) {\n                    state.unshift(this.next, value.substr(2));\n                    return \"string\";\n                },\n                regex: 'q\"(?:[\\\\[\\\\(\\\\{\\\\<]+)',\n                next: 'operator-heredoc-string'\n            }, {\n                onMatch: function (value, currentState, state) {\n                    state.unshift(this.next, value.substr(2));\n                    return \"string\";\n                },\n                regex: 'q\"(?:[a-zA-Z_]+)$',\n                next: 'identifier-heredoc-string'\n            }, {\n                token: \"string\", // multi line string start\n                regex: '[xr]?\"',\n                next: \"quote-string\"\n            }, {\n                token: \"string\", // multi line string start\n                regex: '[xr]?`',\n                next: \"backtick-string\"\n            }, {\n                token: \"string\", // single line\n                regex: \"[xr]?['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?['][cdw]?\"\n            }, {\n                token: [\"keyword\", \"text\", \"paren.lparen\"],\n                regex: /(asm)(\\s*)({)/,\n                next: \"d-asm\"\n            }, {\n                token: [\"keyword\", \"text\", \"paren.lparen\", \"constant.language\"],\n                regex: \"(__traits)(\\\\s*)(\\\\()(\" + identifierRe + \")\"\n            }, {\n                token: [\"keyword\", \"text\", \"variable.module\"],\n                regex: \"(import|module)(\\\\s+)((?:\" + identifierRe + \"\\\\.?)*)\"\n            }, {\n                token: [\"keyword.storage\", \"text\", \"entity.name.type\"],\n                regex: \"(\" + storages + \")(\\\\s*)(\" + identifierRe + \")\"\n            }, {\n                token: [\"keyword\", \"text\", \"variable.storage\", \"text\"],\n                regex: \"(alias|typedef)(\\\\s*)(\" + identifierRe + \")(\\\\s*)\"\n            }, {\n                token: \"constant.numeric\", // hex\n                regex: \"0[xX][0-9a-fA-F_]+(l|ul|u|f|F|L|U|UL)?\\\\b\"\n            }, {\n                token: \"constant.numeric\", // float\n                regex: \"[+-]?\\\\d[\\\\d_]*(?:(?:\\\\.[\\\\d_]*)?(?:[eE][+-]?[\\\\d_]+)?)?(l|ul|u|f|F|L|U|UL)?\\\\b\"\n            }, {\n                token: \"entity.other.attribute-name\",\n                regex: \"@\" + identifierRe\n            }, {\n                token: keywordMapper,\n                regex: \"[a-zA-Z_][a-zA-Z0-9_]*\\\\b\"\n            }, {\n                token: \"keyword.operator\",\n                regex: operators\n            }, {\n                token: \"punctuation.operator\",\n                regex: \"\\\\?|\\\\:|\\\\,|\\\\;|\\\\.|\\\\:\"\n            }, {\n                token: \"paren.lparen\",\n                regex: \"[[({]\"\n            }, {\n                token: \"paren.rparen\",\n                regex: \"[\\\\])}]\"\n            }, {\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }\n        ],\n        \"star-comment\": [\n            {\n                token: \"comment\", // closing comment\n                regex: \"\\\\*\\\\/\",\n                next: \"start\"\n            }, {\n                defaultToken: 'comment'\n            }\n        ],\n        \"plus-comment\": [\n            {\n                token: \"comment\", // closing comment\n                regex: \"\\\\+\\\\/\",\n                next: \"start\"\n            }, {\n                defaultToken: 'comment'\n            }\n        ],\n        \"quote-string\": [\n            stringEscapesSeq,\n            {\n                token: \"string\",\n                regex: '\"[cdw]?',\n                next: \"start\"\n            }, {\n                defaultToken: 'string'\n            }\n        ],\n        \"backtick-string\": [\n            stringEscapesSeq,\n            {\n                token: \"string\",\n                regex: '`[cdw]?',\n                next: \"start\"\n            }, {\n                defaultToken: 'string'\n            }\n        ],\n        \"operator-heredoc-string\": [\n            {\n                onMatch: function (value, currentState, state) {\n                    value = value.substring(value.length - 2, value.length - 1);\n                    var map = { '>': '<', ']': '[', ')': '(', '}': '{' };\n                    if (Object.keys(map).indexOf(value) != -1)\n                        value = map[value];\n                    if (value != state[1])\n                        return \"string\";\n                    state.shift();\n                    state.shift();\n                    return \"string\";\n                },\n                regex: '(?:[\\\\]\\\\)}>]+)\"',\n                next: 'start'\n            }, {\n                token: 'string',\n                regex: '[^\\\\]\\\\)}>]+'\n            }\n        ],\n        \"identifier-heredoc-string\": [\n            {\n                onMatch: function (value, currentState, state) {\n                    value = value.substring(0, value.length - 1);\n                    if (value != state[1])\n                        return \"string\";\n                    state.shift();\n                    state.shift();\n                    return \"string\";\n                },\n                regex: '^(?:[A-Za-z_][a-zA-Z0-9]+)\"',\n                next: 'start'\n            }, {\n                token: 'string',\n                regex: '[^\\\\]\\\\)}>]+'\n            }\n        ],\n        \"d-asm\": [\n            {\n                token: \"paren.rparen\",\n                regex: \"\\\\}\",\n                next: \"start\"\n            }, {\n                token: 'keyword.instruction',\n                regex: '[a-zA-Z]+',\n                next: 'd-asm-instruction'\n            }, {\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }\n        ],\n        'd-asm-instruction': [\n            {\n                token: 'constant.language',\n                regex: /AL|AH|AX|EAX|BL|BH|BX|EBX|CL|CH|CX|ECX|DL|DH|DX|EDX|BP|EBP|SP|ESP|DI|EDI|SI|ESI/i\n            }, {\n                token: 'identifier',\n                regex: '[a-zA-Z]+'\n            }, {\n                token: 'string',\n                regex: '\"[^\"]*\"'\n            }, {\n                token: 'comment',\n                regex: '//.*$'\n            }, {\n                token: 'constant.numeric',\n                regex: '[0-9.xA-F]+'\n            }, {\n                token: 'punctuation.operator',\n                regex: '\\\\,'\n            }, {\n                token: 'punctuation.operator',\n                regex: ';',\n                next: 'd-asm'\n            }, {\n                token: 'text',\n                regex: '\\\\s+'\n            }\n        ]\n    };\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"start\")]);\n};\nDHighlightRules.metaData = {\n    comment: 'D language',\n    fileTypes: ['d', 'di'],\n    firstLineMatch: '^#!.*\\\\b[glr]?dmd\\\\b.',\n    foldingStartMarker: '(?x)/\\\\*\\\\*(?!\\\\*)|^(?![^{]*?//|[^{]*?/\\\\*(?!.*?\\\\*/.*?\\\\{)).*?\\\\{\\\\s*($|//|/\\\\*(?!.*?\\\\*/.*\\\\S))',\n    foldingStopMarker: '(?<!\\\\*)\\\\*\\\\*/|^\\\\s*\\\\}',\n    keyEquivalent: '^~D',\n    name: 'D',\n    scopeName: 'source.d'\n};\noop.inherits(DHighlightRules, TextHighlightRules);\nexports.DHighlightRules = DHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n        this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n        return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                }\n                else if (foldStyle != \"all\")\n                    range = null;\n            }\n            return range;\n        }\n        if (foldStyle === \"markbegin\")\n            return;\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    this.getSectionRange = function (session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                }\n                else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                }\n                else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m)\n                continue;\n            if (m[1])\n                depth--;\n            else\n                depth++;\n            if (!depth)\n                break;\n        }\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/d\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/d_highlight_rules\",\"ace/mode/folding/cstyle\"], function(require, exports, module){/*\n  THIS FILE WAS AUTOGENERATED BY mode.tmpl.js\n*/\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar DHighlightRules = require(\"./d_highlight_rules\").DHighlightRules;\nvar FoldMode = require(\"./folding/cstyle\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = DHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = { start: \"/*\", end: \"*/\" };\n    this.$id = \"ace/mode/d\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/d\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}