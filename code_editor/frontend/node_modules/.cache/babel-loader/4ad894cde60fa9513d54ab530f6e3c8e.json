{"ast":null,"code":"// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector';\nimport { MapRow, StructRow } from '../vector/row';\nimport { compareArrayLike } from '../util/buffer';\nimport { BigInt, BigIntAvailable } from './compat';\n/** @ignore */\nexport function clampIndex(source, index, then) {\n  const length = source.length;\n  const adjust = index > -1 ? index : length + index % length;\n  return then ? then(source, adjust) : adjust;\n}\n/** @ignore */\nlet tmp;\n/** @ignore */\nexport function clampRange(source, begin, end, then) {\n  // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n  // clamp between 0 and length, and wrap around on negative indices, e.g.\n  // slice(-1, 5) or slice(5, -1)\n  let {\n    length: len = 0\n  } = source;\n  let lhs = typeof begin !== 'number' ? 0 : begin;\n  let rhs = typeof end !== 'number' ? len : end;\n  // wrap around on negative start/end positions\n  lhs < 0 && (lhs = (lhs % len + len) % len);\n  rhs < 0 && (rhs = (rhs % len + len) % len);\n  // ensure lhs <= rhs\n  rhs < lhs && (tmp = lhs, lhs = rhs, rhs = tmp);\n  // ensure rhs <= length\n  rhs > len && (rhs = len);\n  return then ? then(source, lhs, rhs) : [lhs, rhs];\n}\nconst big0 = BigIntAvailable ? BigInt(0) : 0;\nconst isNaNFast = value => value !== value;\n/** @ignore */\nexport function createElementComparator(search) {\n  let typeofSearch = typeof search;\n  // Compare primitives\n  if (typeofSearch !== 'object' || search === null) {\n    // Compare NaN\n    if (isNaNFast(search)) {\n      return isNaNFast;\n    }\n    return typeofSearch !== 'bigint' ? value => value === search : value => big0 + value === search;\n  }\n  // Compare Dates\n  if (search instanceof Date) {\n    const valueOfSearch = search.valueOf();\n    return value => value instanceof Date ? value.valueOf() === valueOfSearch : false;\n  }\n  // Compare TypedArrays\n  if (ArrayBuffer.isView(search)) {\n    return value => value ? compareArrayLike(search, value) : false;\n  }\n  // Compare Maps and Rows\n  if (search instanceof Map) {\n    return creatMapComparator(search);\n  }\n  // Compare Array-likes\n  if (Array.isArray(search)) {\n    return createArrayLikeComparator(search);\n  }\n  // Compare Vectors\n  if (search instanceof Vector) {\n    return createVectorComparator(search);\n  }\n  // Compare non-empty Objects\n  return createObjectComparator(search);\n}\n/** @ignore */\nfunction createArrayLikeComparator(lhs) {\n  const comparators = [];\n  for (let i = -1, n = lhs.length; ++i < n;) {\n    comparators[i] = createElementComparator(lhs[i]);\n  }\n  return createSubElementsComparator(comparators);\n}\n/** @ignore */\nfunction creatMapComparator(lhs) {\n  let i = -1;\n  const comparators = [];\n  lhs.forEach(v => comparators[++i] = createElementComparator(v));\n  return createSubElementsComparator(comparators);\n}\n/** @ignore */\nfunction createVectorComparator(lhs) {\n  const comparators = [];\n  for (let i = -1, n = lhs.length; ++i < n;) {\n    comparators[i] = createElementComparator(lhs.get(i));\n  }\n  return createSubElementsComparator(comparators);\n}\n/** @ignore */\nfunction createObjectComparator(lhs) {\n  const keys = Object.keys(lhs);\n  // Only compare non-empty Objects\n  if (keys.length === 0) {\n    return () => false;\n  }\n  const comparators = [];\n  for (let i = -1, n = keys.length; ++i < n;) {\n    comparators[i] = createElementComparator(lhs[keys[i]]);\n  }\n  return createSubElementsComparator(comparators, keys);\n}\nfunction createSubElementsComparator(comparators, keys) {\n  return rhs => {\n    if (!rhs || typeof rhs !== 'object') {\n      return false;\n    }\n    switch (rhs.constructor) {\n      case Array:\n        return compareArray(comparators, rhs);\n      case Map:\n      case MapRow:\n      case StructRow:\n        return compareObject(comparators, rhs, rhs.keys());\n      case Object:\n      case undefined:\n        // support `Object.create(null)` objects\n        return compareObject(comparators, rhs, keys || Object.keys(rhs));\n    }\n    return rhs instanceof Vector ? compareVector(comparators, rhs) : false;\n  };\n}\nfunction compareArray(comparators, arr) {\n  const n = comparators.length;\n  if (arr.length !== n) {\n    return false;\n  }\n  for (let i = -1; ++i < n;) {\n    if (!comparators[i](arr[i])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction compareVector(comparators, vec) {\n  const n = comparators.length;\n  if (vec.length !== n) {\n    return false;\n  }\n  for (let i = -1; ++i < n;) {\n    if (!comparators[i](vec.get(i))) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction compareObject(comparators, obj, keys) {\n  const lKeyItr = keys[Symbol.iterator]();\n  const rKeyItr = obj instanceof Map ? obj.keys() : Object.keys(obj)[Symbol.iterator]();\n  const rValItr = obj instanceof Map ? obj.values() : Object.values(obj)[Symbol.iterator]();\n  let i = 0;\n  let n = comparators.length;\n  let rVal = rValItr.next();\n  let lKey = lKeyItr.next();\n  let rKey = rKeyItr.next();\n  for (; i < n && !lKey.done && !rKey.done && !rVal.done; ++i, lKey = lKeyItr.next(), rKey = rKeyItr.next(), rVal = rValItr.next()) {\n    if (lKey.value !== rKey.value || !comparators[i](rVal.value)) {\n      break;\n    }\n  }\n  if (i === n && lKey.done && rKey.done && rVal.done) {\n    return true;\n  }\n  lKeyItr.return && lKeyItr.return();\n  rKeyItr.return && rKeyItr.return();\n  rValItr.return && rValItr.return();\n  return false;\n}","map":{"version":3,"names":["Vector","MapRow","StructRow","compareArrayLike","BigInt","BigIntAvailable","clampIndex","source","index","then","length","adjust","tmp","clampRange","begin","end","len","lhs","rhs","big0","isNaNFast","value","createElementComparator","search","typeofSearch","Date","valueOfSearch","valueOf","ArrayBuffer","isView","Map","creatMapComparator","Array","isArray","createArrayLikeComparator","createVectorComparator","createObjectComparator","comparators","i","n","createSubElementsComparator","forEach","v","get","keys","Object","constructor","compareArray","compareObject","undefined","compareVector","arr","vec","obj","lKeyItr","Symbol","iterator","rKeyItr","rValItr","values","rVal","next","lKey","rKey","done","return"],"sources":["util/vector.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { MapRow, StructRow } from '../vector/row';\nimport { compareArrayLike } from '../util/buffer';\nimport { BigInt, BigIntAvailable } from './compat';\n\n/** @ignore */\ntype RangeLike = { length: number; stride?: number };\n/** @ignore */\ntype ClampThen<T extends RangeLike> = (source: T, index: number) => any;\n/** @ignore */\ntype ClampRangeThen<T extends RangeLike> = (source: T, offset: number, length: number) => any;\n\nexport function clampIndex<T extends RangeLike>(source: T, index: number): number;\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then?: N) {\n    const length = source.length;\n    const adjust = index > -1 ? index : (length + (index % length));\n    return then ? then(source, adjust) : adjust;\n}\n\n/** @ignore */\nlet tmp: number;\nexport function clampRange<T extends RangeLike>(source: T, begin: number | undefined, end: number | undefined): [number, number];\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then?: N) {\n\n    // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n    // clamp between 0 and length, and wrap around on negative indices, e.g.\n    // slice(-1, 5) or slice(5, -1)\n    let { length: len = 0 } = source;\n    let lhs = typeof begin !== 'number' ? 0 : begin;\n    let rhs = typeof end !== 'number' ? len : end;\n    // wrap around on negative start/end positions\n    (lhs < 0) && (lhs = ((lhs % len) + len) % len);\n    (rhs < 0) && (rhs = ((rhs % len) + len) % len);\n    // ensure lhs <= rhs\n    (rhs < lhs) && (tmp = lhs, lhs = rhs, rhs = tmp);\n     // ensure rhs <= length\n    (rhs > len) && (rhs = len);\n\n    return then ? then(source, lhs, rhs) : [lhs, rhs];\n}\n\nconst big0 = BigIntAvailable ? BigInt(0) : 0;\nconst isNaNFast = (value: any) => value !== value;\n\n/** @ignore */\nexport function createElementComparator(search: any) {\n    let typeofSearch = typeof search;\n    // Compare primitives\n    if (typeofSearch !== 'object' || search === null) {\n        // Compare NaN\n        if (isNaNFast(search)) {\n            return isNaNFast;\n        }\n        return typeofSearch !== 'bigint'\n            ? (value: any) => value === search\n            : (value: any) => (big0 + value) === search;\n    }\n    // Compare Dates\n    if (search instanceof Date) {\n        const valueOfSearch = search.valueOf();\n        return (value: any) => value instanceof Date ? (value.valueOf() === valueOfSearch) : false;\n    }\n    // Compare TypedArrays\n    if (ArrayBuffer.isView(search)) {\n        return (value: any) => value ? compareArrayLike(search, value) : false;\n    }\n    // Compare Maps and Rows\n    if (search instanceof Map) { return creatMapComparator(search); }\n    // Compare Array-likes\n    if (Array.isArray(search)) { return createArrayLikeComparator(search); }\n    // Compare Vectors\n    if (search instanceof Vector) { return createVectorComparator(search); }\n    // Compare non-empty Objects\n    return createObjectComparator(search);\n}\n\n/** @ignore */\nfunction createArrayLikeComparator(lhs: ArrayLike<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[i]);\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction creatMapComparator(lhs: Map<any, any>) {\n    let i = -1;\n    const comparators = [] as ((x: any) => boolean)[];\n    lhs.forEach((v) => comparators[++i] = createElementComparator(v));\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createVectorComparator(lhs: Vector<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs.get(i));\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createObjectComparator(lhs: any) {\n    const keys = Object.keys(lhs);\n    // Only compare non-empty Objects\n    if (keys.length === 0) { return () => false; }\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = keys.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[keys[i]]);\n    }\n    return createSubElementsComparator(comparators, keys);\n}\n\nfunction createSubElementsComparator(comparators: ((x: any) => boolean)[], keys?: Iterable<string>) {\n    return (rhs: any) => {\n        if (!rhs || typeof rhs !== 'object') {\n            return false;\n        }\n        switch (rhs.constructor) {\n            case Array: return compareArray(comparators, rhs);\n            case Map:\n            case MapRow:\n            case StructRow:\n                return compareObject(comparators, rhs, rhs.keys());\n            case Object:\n            case undefined: // support `Object.create(null)` objects\n                return compareObject(comparators, rhs, keys || Object.keys(rhs));\n        }\n        return rhs instanceof Vector ? compareVector(comparators, rhs) : false;\n    };\n}\n\nfunction compareArray(comparators: ((x: any) => boolean)[], arr: any[]) {\n    const n = comparators.length;\n    if (arr.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](arr[i]))) { return false; }\n    }\n    return true;\n}\n\nfunction compareVector(comparators: ((x: any) => boolean)[], vec: Vector) {\n    const n = comparators.length;\n    if (vec.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](vec.get(i)))) { return false; }\n    }\n    return true;\n}\n\nfunction compareObject(comparators: ((x: any) => boolean)[], obj: Map<any, any>, keys: Iterable<string>) {\n\n    const lKeyItr = keys[Symbol.iterator]();\n    const rKeyItr = obj instanceof Map ? obj.keys() : Object.keys(obj)[Symbol.iterator]();\n    const rValItr = obj instanceof Map ? obj.values() : Object.values(obj)[Symbol.iterator]();\n\n    let i = 0;\n    let n = comparators.length;\n    let rVal = rValItr.next();\n    let lKey = lKeyItr.next();\n    let rKey = rKeyItr.next();\n\n    for (; i < n && !lKey.done && !rKey.done && !rVal.done;\n         ++i, lKey = lKeyItr.next(), rKey = rKeyItr.next(), rVal = rValItr.next()) {\n        if (lKey.value !== rKey.value || !comparators[i](rVal.value)) {\n            break;\n        }\n    }\n    if (i === n && lKey.done && rKey.done && rVal.done) {\n        return true;\n    }\n    lKeyItr.return && lKeyItr.return();\n    rKeyItr.return && rKeyItr.return();\n    rValItr.return && rValItr.return();\n    return false;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}