{"ast":null,"code":"ace.define(\"ace/mode/lisp_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  /*\n  THIS FILE WAS AUTOGENERATED BY Lisp.tmlanguage (UUID: 00D451C9-6B1D-11D9-8DFA-000D93589AF6) */\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var LispHighlightRules = function () {\n    var keywordControl = \"case|do|let|loop|if|else|when\";\n    var keywordOperator = \"eq|neq|and|or\";\n    var constantLanguage = \"null|nil\";\n    var supportFunctions = \"cons|car|cdr|cond|lambda|format|setq|setf|quote|eval|append|list|listp|memberp|t|load|progn\";\n    var keywordMapper = this.createKeywordMapper({\n      \"keyword.control\": keywordControl,\n      \"keyword.operator\": keywordOperator,\n      \"constant.language\": constantLanguage,\n      \"support.function\": supportFunctions\n    }, \"identifier\", true);\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \";.*$\"\n      }, {\n        token: [\"storage.type.function-type.lisp\", \"text\", \"entity.name.function.lisp\"],\n        regex: \"(?:\\\\b(?:(defun|defmethod|defmacro))\\\\b)(\\\\s+)((?:\\\\w|\\\\-|\\\\!|\\\\?)*)\"\n      }, {\n        token: [\"punctuation.definition.constant.character.lisp\", \"constant.character.lisp\"],\n        regex: \"(#)((?:\\\\w|[\\\\\\\\+-=<>'\\\"&#])+)\"\n      }, {\n        token: [\"punctuation.definition.variable.lisp\", \"variable.other.global.lisp\", \"punctuation.definition.variable.lisp\"],\n        regex: \"(\\\\*)(\\\\S*)(\\\\*)\"\n      }, {\n        token: \"constant.numeric\",\n        // hex\n        regex: \"0[xX][0-9a-fA-F]+(?:L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?(?:L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\\\b\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: \"string\",\n        regex: '\"(?=.)',\n        next: \"qqstring\"\n      }],\n      \"qqstring\": [{\n        token: \"constant.character.escape.lisp\",\n        regex: \"\\\\\\\\.\"\n      }, {\n        token: \"string\",\n        regex: '[^\"\\\\\\\\]+'\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"qqstring\"\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\"\n      }]\n    };\n  };\n  oop.inherits(LispHighlightRules, TextHighlightRules);\n  exports.LispHighlightRules = LispHighlightRules;\n});\nace.define(\"ace/mode/lisp\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/lisp_highlight_rules\"], function (require, exports, module) {\n  /*\n  THIS FILE WAS AUTOGENERATED BY mode.tmpl.js\n  */\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var LispHighlightRules = require(\"./lisp_highlight_rules\").LispHighlightRules;\n  var Mode = function () {\n    this.HighlightRules = LispHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \";\";\n    this.$id = \"ace/mode/lisp\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/lisp\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","LispHighlightRules","keywordControl","keywordOperator","constantLanguage","supportFunctions","keywordMapper","createKeywordMapper","$rules","token","regex","next","inherits","TextMode","Mode","HighlightRules","$behaviour","$defaultBehaviour","lineCommentStart","$id","call","prototype","m"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-lisp.js"],"sourcesContent":["ace.define(\"ace/mode/lisp_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){/*\n  THIS FILE WAS AUTOGENERATED BY Lisp.tmlanguage (UUID: 00D451C9-6B1D-11D9-8DFA-000D93589AF6) */\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar LispHighlightRules = function () {\n    var keywordControl = \"case|do|let|loop|if|else|when\";\n    var keywordOperator = \"eq|neq|and|or\";\n    var constantLanguage = \"null|nil\";\n    var supportFunctions = \"cons|car|cdr|cond|lambda|format|setq|setf|quote|eval|append|list|listp|memberp|t|load|progn\";\n    var keywordMapper = this.createKeywordMapper({\n        \"keyword.control\": keywordControl,\n        \"keyword.operator\": keywordOperator,\n        \"constant.language\": constantLanguage,\n        \"support.function\": supportFunctions\n    }, \"identifier\", true);\n    this.$rules =\n        {\n            \"start\": [\n                {\n                    token: \"comment\",\n                    regex: \";.*$\"\n                },\n                {\n                    token: [\"storage.type.function-type.lisp\", \"text\", \"entity.name.function.lisp\"],\n                    regex: \"(?:\\\\b(?:(defun|defmethod|defmacro))\\\\b)(\\\\s+)((?:\\\\w|\\\\-|\\\\!|\\\\?)*)\"\n                },\n                {\n                    token: [\"punctuation.definition.constant.character.lisp\", \"constant.character.lisp\"],\n                    regex: \"(#)((?:\\\\w|[\\\\\\\\+-=<>'\\\"&#])+)\"\n                },\n                {\n                    token: [\"punctuation.definition.variable.lisp\", \"variable.other.global.lisp\", \"punctuation.definition.variable.lisp\"],\n                    regex: \"(\\\\*)(\\\\S*)(\\\\*)\"\n                },\n                {\n                    token: \"constant.numeric\", // hex\n                    regex: \"0[xX][0-9a-fA-F]+(?:L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\\\b\"\n                },\n                {\n                    token: \"constant.numeric\", // float\n                    regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?(?:L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\\\b\"\n                },\n                {\n                    token: keywordMapper,\n                    regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n                },\n                {\n                    token: \"string\",\n                    regex: '\"(?=.)',\n                    next: \"qqstring\"\n                }\n            ],\n            \"qqstring\": [\n                {\n                    token: \"constant.character.escape.lisp\",\n                    regex: \"\\\\\\\\.\"\n                },\n                {\n                    token: \"string\",\n                    regex: '[^\"\\\\\\\\]+'\n                }, {\n                    token: \"string\",\n                    regex: \"\\\\\\\\$\",\n                    next: \"qqstring\"\n                }, {\n                    token: \"string\",\n                    regex: '\"|$',\n                    next: \"start\"\n                }\n            ]\n        };\n};\noop.inherits(LispHighlightRules, TextHighlightRules);\nexports.LispHighlightRules = LispHighlightRules;\n\n});\n\nace.define(\"ace/mode/lisp\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/lisp_highlight_rules\"], function(require, exports, module){/*\n  THIS FILE WAS AUTOGENERATED BY mode.tmpl.js\n*/\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar LispHighlightRules = require(\"./lisp_highlight_rules\").LispHighlightRules;\nvar Mode = function () {\n    this.HighlightRules = LispHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \";\";\n    this.$id = \"ace/mode/lisp\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/lisp\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}