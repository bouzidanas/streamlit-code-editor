{"ast":null,"code":"ace.define(\"ace/mode/forth_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  /* This file was autogenerated from https://raw.github.com/vze26m98/Forth.tmbundle/master/Syntaxes/Forth.tmLanguage (uuid: ) */\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var ForthHighlightRules = function () {\n    this.$rules = {\n      start: [{\n        include: '#forth'\n      }],\n      '#comment': [{\n        token: 'comment.line.double-dash.forth',\n        regex: '(?:^|\\\\s)--\\\\s.*$',\n        comment: 'line comments for iForth'\n      }, {\n        token: 'comment.line.backslash.forth',\n        regex: '(?:^|\\\\s)\\\\\\\\[\\\\s\\\\S]*$',\n        comment: 'ANSI line comment'\n      }, {\n        token: 'comment.line.backslash-g.forth',\n        regex: '(?:^|\\\\s)\\\\\\\\[Gg] .*$',\n        comment: 'gForth line comment'\n      }, {\n        token: 'comment.block.forth',\n        regex: '(?:^|\\\\s)\\\\(\\\\*(?=\\\\s|$)',\n        push: [{\n          token: 'comment.block.forth',\n          regex: '(?:^|\\\\s)\\\\*\\\\)(?=\\\\s|$)',\n          next: 'pop'\n        }, {\n          defaultToken: 'comment.block.forth'\n        }],\n        comment: 'multiline comments for iForth'\n      }, {\n        token: 'comment.block.documentation.forth',\n        regex: '\\\\bDOC\\\\b',\n        caseInsensitive: true,\n        push: [{\n          token: 'comment.block.documentation.forth',\n          regex: '\\\\bENDDOC\\\\b',\n          caseInsensitive: true,\n          next: 'pop'\n        }, {\n          defaultToken: 'comment.block.documentation.forth'\n        }],\n        comment: 'documentation comments for iForth'\n      }, {\n        token: 'comment.line.parentheses.forth',\n        regex: '(?:^|\\\\s)\\\\.?\\\\( [^)]*\\\\)',\n        comment: 'ANSI line comment'\n      }],\n      '#constant': [{\n        token: 'constant.language.forth',\n        regex: '(?:^|\\\\s)(?:TRUE|FALSE|BL|PI|CELL|C/L|R/O|W/O|R/W)(?=\\\\s|$)',\n        caseInsensitive: true\n      }, {\n        token: 'constant.numeric.forth',\n        regex: '(?:^|\\\\s)[$#%]?[-+]?[0-9]+(?:\\\\.[0-9]*e-?[0-9]+|\\\\.?[0-9a-fA-F]*)(?=\\\\s|$)'\n      }, {\n        token: 'constant.character.forth',\n        regex: '(?:^|\\\\s)(?:[&^]\\\\S|(?:\"|\\')\\\\S(?:\"|\\'))(?=\\\\s|$)'\n      }],\n      '#forth': [{\n        include: '#constant'\n      }, {\n        include: '#comment'\n      }, {\n        include: '#string'\n      }, {\n        include: '#word'\n      }, {\n        include: '#variable'\n      }, {\n        include: '#storage'\n      }, {\n        include: '#word-def'\n      }],\n      '#storage': [{\n        token: 'storage.type.forth',\n        regex: '(?:^|\\\\s)(?:2CONSTANT|2VARIABLE|ALIAS|CONSTANT|CREATE-INTERPRET/COMPILE[:]?|CREATE|DEFER|FCONSTANT|FIELD|FVARIABLE|USER|VALUE|VARIABLE|VOCABULARY)(?=\\\\s|$)',\n        caseInsensitive: true\n      }],\n      '#string': [{\n        token: 'string.quoted.double.forth',\n        regex: '(ABORT\" |BREAK\" |\\\\.\" |C\" |0\"|S\\\\\\\\?\" )([^\"]+\")',\n        caseInsensitive: true\n      }, {\n        token: 'string.unquoted.forth',\n        regex: '(?:INCLUDE|NEEDS|REQUIRE|USE)[ ]\\\\S+(?=\\\\s|$)',\n        caseInsensitive: true\n      }],\n      '#variable': [{\n        token: 'variable.language.forth',\n        regex: '\\\\b(?:I|J)\\\\b',\n        caseInsensitive: true\n      }],\n      '#word': [{\n        token: 'keyword.control.immediate.forth',\n        regex: '(?:^|\\\\s)\\\\[(?:\\\\?DO|\\\\+LOOP|AGAIN|BEGIN|DEFINED|DO|ELSE|ENDIF|FOR|IF|IFDEF|IFUNDEF|LOOP|NEXT|REPEAT|THEN|UNTIL|WHILE)\\\\](?=\\\\s|$)',\n        caseInsensitive: true\n      }, {\n        token: 'keyword.other.immediate.forth',\n        regex: '(?:^|\\\\s)(?:COMPILE-ONLY|IMMEDIATE|IS|RESTRICT|TO|WHAT\\'S|])(?=\\\\s|$)',\n        caseInsensitive: true\n      }, {\n        token: 'keyword.control.compile-only.forth',\n        regex: '(?:^|\\\\s)(?:-DO|\\\\-LOOP|\\\\?DO|\\\\?LEAVE|\\\\+DO|\\\\+LOOP|ABORT\\\\\"|AGAIN|AHEAD|BEGIN|CASE|DO|ELSE|ENDCASE|ENDIF|ENDOF|ENDTRY\\\\-IFERROR|ENDTRY|FOR|IF|IFERROR|LEAVE|LOOP|NEXT|RECOVER|REPEAT|RESTORE|THEN|TRY|U\\\\-DO|U\\\\+DO|UNTIL|WHILE)(?=\\\\s|$)',\n        caseInsensitive: true\n      }, {\n        token: 'keyword.other.compile-only.forth',\n        regex: '(?:^|\\\\s)(?:\\\\?DUP-0=-IF|\\\\?DUP-IF|\\\\)|\\\\[|\\\\[\\'\\\\]|\\\\[CHAR\\\\]|\\\\[COMPILE\\\\]|\\\\[IS\\\\]|\\\\[TO\\\\]|<COMPILATION|<INTERPRETATION|ASSERT\\\\(|ASSERT0\\\\(|ASSERT1\\\\(|ASSERT2\\\\(|ASSERT3\\\\(|COMPILATION>|DEFERS|DOES>|INTERPRETATION>|OF|POSTPONE)(?=\\\\s|$)',\n        caseInsensitive: true\n      }, {\n        token: 'keyword.other.non-immediate.forth',\n        regex: '(?:^|\\\\s)(?:\\'|<IS>|<TO>|CHAR|END-STRUCT|INCLUDE[D]?|LOAD|NEEDS|REQUIRE[D]?|REVISION|SEE|STRUCT|THRU|USE)(?=\\\\s|$)',\n        caseInsensitive: true\n      }, {\n        token: 'keyword.other.warning.forth',\n        regex: '(?:^|\\\\s)(?:~~|BREAK:|BREAK\"|DBG)(?=\\\\s|$)',\n        caseInsensitive: true\n      }],\n      '#word-def': [{\n        token: ['keyword.other.compile-only.forth', 'keyword.other.compile-only.forth', 'meta.block.forth', 'entity.name.function.forth'],\n        regex: '(:NONAME)|(^:|\\\\s:)(\\\\s)(\\\\S+)(?=\\\\s|$)',\n        caseInsensitive: true,\n        push: [{\n          token: 'keyword.other.compile-only.forth',\n          regex: ';(?:CODE)?',\n          caseInsensitive: true,\n          next: 'pop'\n        }, {\n          include: '#constant'\n        }, {\n          include: '#comment'\n        }, {\n          include: '#string'\n        }, {\n          include: '#word'\n        }, {\n          include: '#variable'\n        }, {\n          include: '#storage'\n        }, {\n          defaultToken: 'meta.block.forth'\n        }]\n      }]\n    };\n    this.normalizeRules();\n  };\n  ForthHighlightRules.metaData = {\n    fileTypes: ['frt', 'fs', 'ldr', 'fth', '4th'],\n    foldingStartMarker: '/\\\\*\\\\*|\\\\{\\\\s*$',\n    foldingStopMarker: '\\\\*\\\\*/|^\\\\s*\\\\}',\n    keyEquivalent: '^~F',\n    name: 'Forth',\n    scopeName: 'source.forth'\n  };\n  oop.inherits(ForthHighlightRules, TextHighlightRules);\n  exports.ForthHighlightRules = ForthHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Range = require(\"../../range\").Range;\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n      return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n        return range;\n      }\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n        endRow = row;\n      }\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n      var endRow = row;\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/forth\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/forth_highlight_rules\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  /*\n  THIS FILE WAS AUTOGENERATED BY mode.tmpl.js\n  */\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var ForthHighlightRules = require(\"./forth_highlight_rules\").ForthHighlightRules;\n  var FoldMode = require(\"./folding/cstyle\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = ForthHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"--\";\n    this.blockComment = null;\n    this.$id = \"ace/mode/forth\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/forth\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","ForthHighlightRules","$rules","start","include","token","regex","comment","push","next","defaultToken","caseInsensitive","normalizeRules","metaData","fileTypes","foldingStartMarker","foldingStopMarker","keyEquivalent","name","scopeName","inherits","Range","BaseFoldMode","FoldMode","commentRegex","RegExp","source","replace","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","$id"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-forth.js"],"sourcesContent":["ace.define(\"ace/mode/forth_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){/* This file was autogenerated from https://raw.github.com/vze26m98/Forth.tmbundle/master/Syntaxes/Forth.tmLanguage (uuid: ) */\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar ForthHighlightRules = function () {\n    this.$rules = { start: [{ include: '#forth' }],\n        '#comment': [{ token: 'comment.line.double-dash.forth',\n                regex: '(?:^|\\\\s)--\\\\s.*$',\n                comment: 'line comments for iForth' },\n            { token: 'comment.line.backslash.forth',\n                regex: '(?:^|\\\\s)\\\\\\\\[\\\\s\\\\S]*$',\n                comment: 'ANSI line comment' },\n            { token: 'comment.line.backslash-g.forth',\n                regex: '(?:^|\\\\s)\\\\\\\\[Gg] .*$',\n                comment: 'gForth line comment' },\n            { token: 'comment.block.forth',\n                regex: '(?:^|\\\\s)\\\\(\\\\*(?=\\\\s|$)',\n                push: [{ token: 'comment.block.forth',\n                        regex: '(?:^|\\\\s)\\\\*\\\\)(?=\\\\s|$)',\n                        next: 'pop' },\n                    { defaultToken: 'comment.block.forth' }],\n                comment: 'multiline comments for iForth' },\n            { token: 'comment.block.documentation.forth',\n                regex: '\\\\bDOC\\\\b',\n                caseInsensitive: true,\n                push: [{ token: 'comment.block.documentation.forth',\n                        regex: '\\\\bENDDOC\\\\b',\n                        caseInsensitive: true,\n                        next: 'pop' },\n                    { defaultToken: 'comment.block.documentation.forth' }],\n                comment: 'documentation comments for iForth' },\n            { token: 'comment.line.parentheses.forth',\n                regex: '(?:^|\\\\s)\\\\.?\\\\( [^)]*\\\\)',\n                comment: 'ANSI line comment' }],\n        '#constant': [{ token: 'constant.language.forth',\n                regex: '(?:^|\\\\s)(?:TRUE|FALSE|BL|PI|CELL|C/L|R/O|W/O|R/W)(?=\\\\s|$)',\n                caseInsensitive: true },\n            { token: 'constant.numeric.forth',\n                regex: '(?:^|\\\\s)[$#%]?[-+]?[0-9]+(?:\\\\.[0-9]*e-?[0-9]+|\\\\.?[0-9a-fA-F]*)(?=\\\\s|$)' },\n            { token: 'constant.character.forth',\n                regex: '(?:^|\\\\s)(?:[&^]\\\\S|(?:\"|\\')\\\\S(?:\"|\\'))(?=\\\\s|$)' }],\n        '#forth': [{ include: '#constant' },\n            { include: '#comment' },\n            { include: '#string' },\n            { include: '#word' },\n            { include: '#variable' },\n            { include: '#storage' },\n            { include: '#word-def' }],\n        '#storage': [{ token: 'storage.type.forth',\n                regex: '(?:^|\\\\s)(?:2CONSTANT|2VARIABLE|ALIAS|CONSTANT|CREATE-INTERPRET/COMPILE[:]?|CREATE|DEFER|FCONSTANT|FIELD|FVARIABLE|USER|VALUE|VARIABLE|VOCABULARY)(?=\\\\s|$)',\n                caseInsensitive: true }],\n        '#string': [{ token: 'string.quoted.double.forth',\n                regex: '(ABORT\" |BREAK\" |\\\\.\" |C\" |0\"|S\\\\\\\\?\" )([^\"]+\")',\n                caseInsensitive: true },\n            { token: 'string.unquoted.forth',\n                regex: '(?:INCLUDE|NEEDS|REQUIRE|USE)[ ]\\\\S+(?=\\\\s|$)',\n                caseInsensitive: true }],\n        '#variable': [{ token: 'variable.language.forth',\n                regex: '\\\\b(?:I|J)\\\\b',\n                caseInsensitive: true }],\n        '#word': [{ token: 'keyword.control.immediate.forth',\n                regex: '(?:^|\\\\s)\\\\[(?:\\\\?DO|\\\\+LOOP|AGAIN|BEGIN|DEFINED|DO|ELSE|ENDIF|FOR|IF|IFDEF|IFUNDEF|LOOP|NEXT|REPEAT|THEN|UNTIL|WHILE)\\\\](?=\\\\s|$)',\n                caseInsensitive: true },\n            { token: 'keyword.other.immediate.forth',\n                regex: '(?:^|\\\\s)(?:COMPILE-ONLY|IMMEDIATE|IS|RESTRICT|TO|WHAT\\'S|])(?=\\\\s|$)',\n                caseInsensitive: true },\n            { token: 'keyword.control.compile-only.forth',\n                regex: '(?:^|\\\\s)(?:-DO|\\\\-LOOP|\\\\?DO|\\\\?LEAVE|\\\\+DO|\\\\+LOOP|ABORT\\\\\"|AGAIN|AHEAD|BEGIN|CASE|DO|ELSE|ENDCASE|ENDIF|ENDOF|ENDTRY\\\\-IFERROR|ENDTRY|FOR|IF|IFERROR|LEAVE|LOOP|NEXT|RECOVER|REPEAT|RESTORE|THEN|TRY|U\\\\-DO|U\\\\+DO|UNTIL|WHILE)(?=\\\\s|$)',\n                caseInsensitive: true },\n            { token: 'keyword.other.compile-only.forth',\n                regex: '(?:^|\\\\s)(?:\\\\?DUP-0=-IF|\\\\?DUP-IF|\\\\)|\\\\[|\\\\[\\'\\\\]|\\\\[CHAR\\\\]|\\\\[COMPILE\\\\]|\\\\[IS\\\\]|\\\\[TO\\\\]|<COMPILATION|<INTERPRETATION|ASSERT\\\\(|ASSERT0\\\\(|ASSERT1\\\\(|ASSERT2\\\\(|ASSERT3\\\\(|COMPILATION>|DEFERS|DOES>|INTERPRETATION>|OF|POSTPONE)(?=\\\\s|$)',\n                caseInsensitive: true },\n            { token: 'keyword.other.non-immediate.forth',\n                regex: '(?:^|\\\\s)(?:\\'|<IS>|<TO>|CHAR|END-STRUCT|INCLUDE[D]?|LOAD|NEEDS|REQUIRE[D]?|REVISION|SEE|STRUCT|THRU|USE)(?=\\\\s|$)',\n                caseInsensitive: true },\n            { token: 'keyword.other.warning.forth',\n                regex: '(?:^|\\\\s)(?:~~|BREAK:|BREAK\"|DBG)(?=\\\\s|$)',\n                caseInsensitive: true }],\n        '#word-def': [{ token: ['keyword.other.compile-only.forth',\n                    'keyword.other.compile-only.forth',\n                    'meta.block.forth',\n                    'entity.name.function.forth'],\n                regex: '(:NONAME)|(^:|\\\\s:)(\\\\s)(\\\\S+)(?=\\\\s|$)',\n                caseInsensitive: true,\n                push: [{ token: 'keyword.other.compile-only.forth',\n                        regex: ';(?:CODE)?',\n                        caseInsensitive: true,\n                        next: 'pop' },\n                    { include: '#constant' },\n                    { include: '#comment' },\n                    { include: '#string' },\n                    { include: '#word' },\n                    { include: '#variable' },\n                    { include: '#storage' },\n                    { defaultToken: 'meta.block.forth' }] }] };\n    this.normalizeRules();\n};\nForthHighlightRules.metaData = { fileTypes: ['frt', 'fs', 'ldr', 'fth', '4th'],\n    foldingStartMarker: '/\\\\*\\\\*|\\\\{\\\\s*$',\n    foldingStopMarker: '\\\\*\\\\*/|^\\\\s*\\\\}',\n    keyEquivalent: '^~F',\n    name: 'Forth',\n    scopeName: 'source.forth' };\noop.inherits(ForthHighlightRules, TextHighlightRules);\nexports.ForthHighlightRules = ForthHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n        this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n        return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                }\n                else if (foldStyle != \"all\")\n                    range = null;\n            }\n            return range;\n        }\n        if (foldStyle === \"markbegin\")\n            return;\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    this.getSectionRange = function (session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                }\n                else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                }\n                else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m)\n                continue;\n            if (m[1])\n                depth--;\n            else\n                depth++;\n            if (!depth)\n                break;\n        }\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/forth\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/forth_highlight_rules\",\"ace/mode/folding/cstyle\"], function(require, exports, module){/*\n  THIS FILE WAS AUTOGENERATED BY mode.tmpl.js\n*/\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar ForthHighlightRules = require(\"./forth_highlight_rules\").ForthHighlightRules;\nvar FoldMode = require(\"./folding/cstyle\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = ForthHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"--\";\n    this.blockComment = null;\n    this.$id = \"ace/mode/forth\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/forth\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}