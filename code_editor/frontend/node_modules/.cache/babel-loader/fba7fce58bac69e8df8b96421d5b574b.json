{"ast":null,"code":"// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n/* tslint:disable:class-name */\nimport * as File_ from '../../fb/File';\nimport { flatbuffers } from 'flatbuffers';\nvar Long = flatbuffers.Long;\nvar Builder = flatbuffers.Builder;\nvar ByteBuffer = flatbuffers.ByteBuffer;\nvar _Block = File_.org.apache.arrow.flatbuf.Block;\nvar _Footer = File_.org.apache.arrow.flatbuf.Footer;\nimport { Schema } from '../../schema';\nimport { MetadataVersion } from '../../enum';\nimport { toUint8Array } from '../../util/buffer';\n/** @ignore */\nclass Footer_ {\n  constructor(schema, version = MetadataVersion.V4, recordBatches, dictionaryBatches) {\n    this.schema = schema;\n    this.version = version;\n    recordBatches && (this._recordBatches = recordBatches);\n    dictionaryBatches && (this._dictionaryBatches = dictionaryBatches);\n  }\n  /** @nocollapse */\n  static decode(buf) {\n    buf = new ByteBuffer(toUint8Array(buf));\n    const footer = _Footer.getRootAsFooter(buf);\n    const schema = Schema.decode(footer.schema());\n    return new OffHeapFooter(schema, footer);\n  }\n  /** @nocollapse */\n  static encode(footer) {\n    const b = new Builder();\n    const schemaOffset = Schema.encode(b, footer.schema);\n    _Footer.startRecordBatchesVector(b, footer.numRecordBatches);\n    [...footer.recordBatches()].slice().reverse().forEach(rb => FileBlock.encode(b, rb));\n    const recordBatchesOffset = b.endVector();\n    _Footer.startDictionariesVector(b, footer.numDictionaries);\n    [...footer.dictionaryBatches()].slice().reverse().forEach(db => FileBlock.encode(b, db));\n    const dictionaryBatchesOffset = b.endVector();\n    _Footer.startFooter(b);\n    _Footer.addSchema(b, schemaOffset);\n    _Footer.addVersion(b, MetadataVersion.V4);\n    _Footer.addRecordBatches(b, recordBatchesOffset);\n    _Footer.addDictionaries(b, dictionaryBatchesOffset);\n    _Footer.finishFooterBuffer(b, _Footer.endFooter(b));\n    return b.asUint8Array();\n  }\n  get numRecordBatches() {\n    return this._recordBatches.length;\n  }\n  get numDictionaries() {\n    return this._dictionaryBatches.length;\n  }\n  *recordBatches() {\n    for (let block, i = -1, n = this.numRecordBatches; ++i < n;) {\n      if (block = this.getRecordBatch(i)) {\n        yield block;\n      }\n    }\n  }\n  *dictionaryBatches() {\n    for (let block, i = -1, n = this.numDictionaries; ++i < n;) {\n      if (block = this.getDictionaryBatch(i)) {\n        yield block;\n      }\n    }\n  }\n  getRecordBatch(index) {\n    return index >= 0 && index < this.numRecordBatches && this._recordBatches[index] || null;\n  }\n  getDictionaryBatch(index) {\n    return index >= 0 && index < this.numDictionaries && this._dictionaryBatches[index] || null;\n  }\n}\nexport { Footer_ as Footer };\n/** @ignore */\nclass OffHeapFooter extends Footer_ {\n  constructor(schema, _footer) {\n    super(schema, _footer.version());\n    this._footer = _footer;\n  }\n  get numRecordBatches() {\n    return this._footer.recordBatchesLength();\n  }\n  get numDictionaries() {\n    return this._footer.dictionariesLength();\n  }\n  getRecordBatch(index) {\n    if (index >= 0 && index < this.numRecordBatches) {\n      const fileBlock = this._footer.recordBatches(index);\n      if (fileBlock) {\n        return FileBlock.decode(fileBlock);\n      }\n    }\n    return null;\n  }\n  getDictionaryBatch(index) {\n    if (index >= 0 && index < this.numDictionaries) {\n      const fileBlock = this._footer.dictionaries(index);\n      if (fileBlock) {\n        return FileBlock.decode(fileBlock);\n      }\n    }\n    return null;\n  }\n}\n/** @ignore */\nexport class FileBlock {\n  /** @nocollapse */\n  static decode(block) {\n    return new FileBlock(block.metaDataLength(), block.bodyLength(), block.offset());\n  }\n  /** @nocollapse */\n  static encode(b, fileBlock) {\n    const {\n      metaDataLength\n    } = fileBlock;\n    const offset = new Long(fileBlock.offset, 0);\n    const bodyLength = new Long(fileBlock.bodyLength, 0);\n    return _Block.createBlock(b, offset, metaDataLength, bodyLength);\n  }\n  constructor(metaDataLength, bodyLength, offset) {\n    this.metaDataLength = metaDataLength;\n    this.offset = typeof offset === 'number' ? offset : offset.low;\n    this.bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n  }\n}","map":{"version":3,"names":["File_","flatbuffers","Long","Builder","ByteBuffer","_Block","org","apache","arrow","flatbuf","Block","_Footer","Footer","Schema","MetadataVersion","toUint8Array","Footer_","constructor","schema","version","V4","recordBatches","dictionaryBatches","_recordBatches","_dictionaryBatches","decode","buf","footer","getRootAsFooter","OffHeapFooter","encode","b","schemaOffset","startRecordBatchesVector","numRecordBatches","slice","reverse","forEach","rb","FileBlock","recordBatchesOffset","endVector","startDictionariesVector","numDictionaries","db","dictionaryBatchesOffset","startFooter","addSchema","addVersion","addRecordBatches","addDictionaries","finishFooterBuffer","endFooter","asUint8Array","length","block","i","n","getRecordBatch","getDictionaryBatch","index","_footer","recordBatchesLength","dictionariesLength","fileBlock","dictionaries","metaDataLength","bodyLength","offset","createBlock","low"],"sources":["ipc/metadata/file.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* tslint:disable:class-name */\n\nimport * as File_ from '../../fb/File';\nimport { flatbuffers } from 'flatbuffers';\n\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport _Block = File_.org.apache.arrow.flatbuf.Block;\nimport _Footer = File_.org.apache.arrow.flatbuf.Footer;\n\nimport { Schema } from '../../schema';\nimport { MetadataVersion } from '../../enum';\nimport { toUint8Array } from '../../util/buffer';\nimport { ArrayBufferViewInput } from '../../util/buffer';\n\n/** @ignore */\nclass Footer_ {\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const footer = _Footer.getRootAsFooter(buf);\n        const schema = Schema.decode(footer.schema()!);\n        return new OffHeapFooter(schema, footer) as Footer_;\n    }\n\n    /** @nocollapse */\n    public static encode(footer: Footer_) {\n\n        const b: Builder = new Builder();\n        const schemaOffset = Schema.encode(b, footer.schema);\n\n        _Footer.startRecordBatchesVector(b, footer.numRecordBatches);\n        [...footer.recordBatches()].slice().reverse().forEach((rb) => FileBlock.encode(b, rb));\n        const recordBatchesOffset = b.endVector();\n\n        _Footer.startDictionariesVector(b, footer.numDictionaries);\n        [...footer.dictionaryBatches()].slice().reverse().forEach((db) => FileBlock.encode(b, db));\n\n        const dictionaryBatchesOffset = b.endVector();\n\n        _Footer.startFooter(b);\n        _Footer.addSchema(b, schemaOffset);\n        _Footer.addVersion(b, MetadataVersion.V4);\n        _Footer.addRecordBatches(b, recordBatchesOffset);\n        _Footer.addDictionaries(b, dictionaryBatchesOffset);\n        _Footer.finishFooterBuffer(b, _Footer.endFooter(b));\n\n        return b.asUint8Array();\n    }\n\n    // @ts-ignore\n    protected _recordBatches: FileBlock[];\n    // @ts-ignore\n    protected _dictionaryBatches: FileBlock[];\n    public get numRecordBatches() { return this._recordBatches.length; }\n    public get numDictionaries() { return this._dictionaryBatches.length; }\n\n    constructor(public schema: Schema,\n                public version: MetadataVersion = MetadataVersion.V4,\n                recordBatches?: FileBlock[], dictionaryBatches?: FileBlock[]) {\n        recordBatches && (this._recordBatches = recordBatches);\n        dictionaryBatches && (this._dictionaryBatches = dictionaryBatches);\n    }\n\n    public *recordBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numRecordBatches; ++i < n;) {\n            if (block = this.getRecordBatch(i)) { yield block; }\n        }\n    }\n\n    public *dictionaryBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numDictionaries; ++i < n;) {\n            if (block = this.getDictionaryBatch(i)) { yield block; }\n        }\n    }\n\n    public getRecordBatch(index: number) {\n        return index >= 0\n            && index < this.numRecordBatches\n            && this._recordBatches[index] || null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        return index >= 0\n            && index < this.numDictionaries\n            && this._dictionaryBatches[index] || null;\n    }\n}\n\nexport { Footer_ as Footer };\n\n/** @ignore */\nclass OffHeapFooter extends Footer_ {\n\n    public get numRecordBatches() { return this._footer.recordBatchesLength(); }\n    public get numDictionaries() { return this._footer.dictionariesLength(); }\n\n    constructor(schema: Schema, protected _footer: _Footer) {\n        super(schema, _footer.version());\n    }\n\n    public getRecordBatch(index: number) {\n        if (index >= 0 && index < this.numRecordBatches) {\n            const fileBlock = this._footer.recordBatches(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        if (index >= 0 && index < this.numDictionaries) {\n            const fileBlock = this._footer.dictionaries(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nexport class FileBlock {\n\n    /** @nocollapse */\n    public static decode(block: _Block) {\n        return new FileBlock(block.metaDataLength(), block.bodyLength(), block.offset());\n    }\n\n    /** @nocollapse */\n    public static encode(b: Builder, fileBlock: FileBlock) {\n        const { metaDataLength } = fileBlock;\n        const offset = new Long(fileBlock.offset, 0);\n        const bodyLength = new Long(fileBlock.bodyLength, 0);\n        return _Block.createBlock(b, offset, metaDataLength, bodyLength);\n    }\n\n    public offset: number;\n    public bodyLength: number;\n    public metaDataLength: number;\n\n    constructor(metaDataLength: number, bodyLength: Long | number, offset: Long | number) {\n        this.metaDataLength = metaDataLength;\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}