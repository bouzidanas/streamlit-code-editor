{"ast":null,"code":"ace.define(\"ace/ext/menu_tools/settings_menu.css\", [\"require\", \"exports\", \"module\"], function (require, exports, module) {\n  module.exports = \"#ace_settingsmenu, #kbshortcutmenu {\\n    background-color: #F7F7F7;\\n    color: black;\\n    box-shadow: -5px 4px 5px rgba(126, 126, 126, 0.55);\\n    padding: 1em 0.5em 2em 1em;\\n    overflow: auto;\\n    position: absolute;\\n    margin: 0;\\n    bottom: 0;\\n    right: 0;\\n    top: 0;\\n    z-index: 9991;\\n    cursor: default;\\n}\\n\\n.ace_dark #ace_settingsmenu, .ace_dark #kbshortcutmenu {\\n    box-shadow: -20px 10px 25px rgba(126, 126, 126, 0.25);\\n    background-color: rgba(255, 255, 255, 0.6);\\n    color: black;\\n}\\n\\n.ace_optionsMenuEntry:hover {\\n    background-color: rgba(100, 100, 100, 0.1);\\n    transition: all 0.3s\\n}\\n\\n.ace_closeButton {\\n    background: rgba(245, 146, 146, 0.5);\\n    border: 1px solid #F48A8A;\\n    border-radius: 50%;\\n    padding: 7px;\\n    position: absolute;\\n    right: -8px;\\n    top: -8px;\\n    z-index: 100000;\\n}\\n.ace_closeButton{\\n    background: rgba(245, 146, 146, 0.9);\\n}\\n.ace_optionsMenuKey {\\n    color: darkslateblue;\\n    font-weight: bold;\\n}\\n.ace_optionsMenuCommand {\\n    color: darkcyan;\\n    font-weight: normal;\\n}\\n.ace_optionsMenuEntry input, .ace_optionsMenuEntry button {\\n    vertical-align: middle;\\n}\\n\\n.ace_optionsMenuEntry button[ace_selected_button=true] {\\n    background: #e7e7e7;\\n    box-shadow: 1px 0px 2px 0px #adadad inset;\\n    border-color: #adadad;\\n}\\n.ace_optionsMenuEntry button {\\n    background: white;\\n    border: 1px solid lightgray;\\n    margin: 0px;\\n}\\n.ace_optionsMenuEntry button:hover{\\n    background: #f0f0f0;\\n}\";\n});\nace.define(\"ace/ext/menu_tools/overlay_page\", [\"require\", \"exports\", \"module\", \"ace/lib/dom\", \"ace/ext/menu_tools/settings_menu.css\"], function (require, exports, module) {\n  /*jslint indent: 4, maxerr: 50, white: true, browser: true, vars: true*/\n  'use strict';\n\n  var dom = require(\"../../lib/dom\");\n  var cssText = require(\"./settings_menu.css\");\n  dom.importCssString(cssText, \"settings_menu.css\", false);\n  module.exports.overlayPage = function overlayPage(editor, contentElement, callback) {\n    var closer = document.createElement('div');\n    var ignoreFocusOut = false;\n    function documentEscListener(e) {\n      if (e.keyCode === 27) {\n        close();\n      }\n    }\n    function close() {\n      if (!closer) return;\n      document.removeEventListener('keydown', documentEscListener);\n      closer.parentNode.removeChild(closer);\n      if (editor) {\n        editor.focus();\n      }\n      closer = null;\n      callback && callback();\n    }\n    function setIgnoreFocusOut(ignore) {\n      ignoreFocusOut = ignore;\n      if (ignore) {\n        closer.style.pointerEvents = \"none\";\n        contentElement.style.pointerEvents = \"auto\";\n      }\n    }\n    closer.style.cssText = 'margin: 0; padding: 0; ' + 'position: fixed; top:0; bottom:0; left:0; right:0;' + 'z-index: 9990; ' + (editor ? 'background-color: rgba(0, 0, 0, 0.3);' : '');\n    closer.addEventListener('click', function (e) {\n      if (!ignoreFocusOut) {\n        close();\n      }\n    });\n    document.addEventListener('keydown', documentEscListener);\n    contentElement.addEventListener('click', function (e) {\n      e.stopPropagation();\n    });\n    closer.appendChild(contentElement);\n    document.body.appendChild(closer);\n    if (editor) {\n      editor.blur();\n    }\n    return {\n      close: close,\n      setIgnoreFocusOut: setIgnoreFocusOut\n    };\n  };\n});\nace.define(\"ace/ext/menu_tools/get_editor_keyboard_shortcuts\", [\"require\", \"exports\", \"module\", \"ace/lib/keys\"], function (require, exports, module) {\n  /*jslint indent: 4, maxerr: 50, white: true, browser: true, vars: true*/\n  \"use strict\";\n\n  var keys = require(\"../../lib/keys\");\n  module.exports.getEditorKeyboardShortcuts = function (editor) {\n    var KEY_MODS = keys.KEY_MODS;\n    var keybindings = [];\n    var commandMap = {};\n    editor.keyBinding.$handlers.forEach(function (handler) {\n      var ckb = handler[\"commandKeyBinding\"];\n      for (var i in ckb) {\n        var key = i.replace(/(^|-)\\w/g, function (x) {\n          return x.toUpperCase();\n        });\n        var commands = ckb[i];\n        if (!Array.isArray(commands)) commands = [commands];\n        commands.forEach(function (command) {\n          if (typeof command != \"string\") command = command.name;\n          if (commandMap[command]) {\n            commandMap[command].key += \"|\" + key;\n          } else {\n            commandMap[command] = {\n              key: key,\n              command: command\n            };\n            keybindings.push(commandMap[command]);\n          }\n        });\n      }\n    });\n    return keybindings;\n  };\n});\nace.define(\"ace/ext/keybinding_menu\", [\"require\", \"exports\", \"module\", \"ace/editor\", \"ace/ext/menu_tools/overlay_page\", \"ace/ext/menu_tools/get_editor_keyboard_shortcuts\"], function (require, exports, module) {\n  /*jslint indent: 4, maxerr: 50, white: true, browser: true, vars: true*/\n  \"use strict\";\n\n  var Editor = require(\"../editor\").Editor;\n  function showKeyboardShortcuts(editor) {\n    if (!document.getElementById('kbshortcutmenu')) {\n      var overlayPage = require('./menu_tools/overlay_page').overlayPage;\n      var getEditorKeyboardShortcuts = require('./menu_tools/get_editor_keyboard_shortcuts').getEditorKeyboardShortcuts;\n      var kb = getEditorKeyboardShortcuts(editor);\n      var el = document.createElement('div');\n      var commands = kb.reduce(function (previous, current) {\n        return previous + '<div class=\"ace_optionsMenuEntry\"><span class=\"ace_optionsMenuCommand\">' + current.command + '</span> : ' + '<span class=\"ace_optionsMenuKey\">' + current.key + '</span></div>';\n      }, '');\n      el.id = 'kbshortcutmenu';\n      el.innerHTML = '<h1>Keyboard Shortcuts</h1>' + commands + '</div>';\n      overlayPage(editor, el);\n    }\n  }\n  module.exports.init = function (editor) {\n    Editor.prototype.showKeyboardShortcuts = function () {\n      showKeyboardShortcuts(this);\n    };\n    editor.commands.addCommands([{\n      name: \"showKeyboardShortcuts\",\n      bindKey: {\n        win: \"Ctrl-Alt-h\",\n        mac: \"Command-Alt-h\"\n      },\n      exec: function (editor, line) {\n        editor.showKeyboardShortcuts();\n      }\n    }]);\n  };\n});\n(function () {\n  ace.require([\"ace/ext/keybinding_menu\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","dom","cssText","importCssString","overlayPage","editor","contentElement","callback","closer","document","createElement","ignoreFocusOut","documentEscListener","e","keyCode","close","removeEventListener","parentNode","removeChild","focus","setIgnoreFocusOut","ignore","style","pointerEvents","addEventListener","stopPropagation","appendChild","body","blur","keys","getEditorKeyboardShortcuts","KEY_MODS","keybindings","commandMap","keyBinding","$handlers","forEach","handler","ckb","i","key","replace","x","toUpperCase","commands","Array","isArray","command","name","push","Editor","showKeyboardShortcuts","getElementById","kb","el","reduce","previous","current","id","innerHTML","init","prototype","addCommands","bindKey","win","mac","exec","line","m"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/ext-keybinding_menu.js"],"sourcesContent":["ace.define(\"ace/ext/menu_tools/settings_menu.css\",[\"require\",\"exports\",\"module\"], function(require, exports, module){module.exports = \"#ace_settingsmenu, #kbshortcutmenu {\\n    background-color: #F7F7F7;\\n    color: black;\\n    box-shadow: -5px 4px 5px rgba(126, 126, 126, 0.55);\\n    padding: 1em 0.5em 2em 1em;\\n    overflow: auto;\\n    position: absolute;\\n    margin: 0;\\n    bottom: 0;\\n    right: 0;\\n    top: 0;\\n    z-index: 9991;\\n    cursor: default;\\n}\\n\\n.ace_dark #ace_settingsmenu, .ace_dark #kbshortcutmenu {\\n    box-shadow: -20px 10px 25px rgba(126, 126, 126, 0.25);\\n    background-color: rgba(255, 255, 255, 0.6);\\n    color: black;\\n}\\n\\n.ace_optionsMenuEntry:hover {\\n    background-color: rgba(100, 100, 100, 0.1);\\n    transition: all 0.3s\\n}\\n\\n.ace_closeButton {\\n    background: rgba(245, 146, 146, 0.5);\\n    border: 1px solid #F48A8A;\\n    border-radius: 50%;\\n    padding: 7px;\\n    position: absolute;\\n    right: -8px;\\n    top: -8px;\\n    z-index: 100000;\\n}\\n.ace_closeButton{\\n    background: rgba(245, 146, 146, 0.9);\\n}\\n.ace_optionsMenuKey {\\n    color: darkslateblue;\\n    font-weight: bold;\\n}\\n.ace_optionsMenuCommand {\\n    color: darkcyan;\\n    font-weight: normal;\\n}\\n.ace_optionsMenuEntry input, .ace_optionsMenuEntry button {\\n    vertical-align: middle;\\n}\\n\\n.ace_optionsMenuEntry button[ace_selected_button=true] {\\n    background: #e7e7e7;\\n    box-shadow: 1px 0px 2px 0px #adadad inset;\\n    border-color: #adadad;\\n}\\n.ace_optionsMenuEntry button {\\n    background: white;\\n    border: 1px solid lightgray;\\n    margin: 0px;\\n}\\n.ace_optionsMenuEntry button:hover{\\n    background: #f0f0f0;\\n}\";\n\n});\n\nace.define(\"ace/ext/menu_tools/overlay_page\",[\"require\",\"exports\",\"module\",\"ace/lib/dom\",\"ace/ext/menu_tools/settings_menu.css\"], function(require, exports, module){/*jslint indent: 4, maxerr: 50, white: true, browser: true, vars: true*/\n'use strict';\nvar dom = require(\"../../lib/dom\");\nvar cssText = require(\"./settings_menu.css\");\ndom.importCssString(cssText, \"settings_menu.css\", false);\nmodule.exports.overlayPage = function overlayPage(editor, contentElement, callback) {\n    var closer = document.createElement('div');\n    var ignoreFocusOut = false;\n    function documentEscListener(e) {\n        if (e.keyCode === 27) {\n            close();\n        }\n    }\n    function close() {\n        if (!closer)\n            return;\n        document.removeEventListener('keydown', documentEscListener);\n        closer.parentNode.removeChild(closer);\n        if (editor) {\n            editor.focus();\n        }\n        closer = null;\n        callback && callback();\n    }\n    function setIgnoreFocusOut(ignore) {\n        ignoreFocusOut = ignore;\n        if (ignore) {\n            closer.style.pointerEvents = \"none\";\n            contentElement.style.pointerEvents = \"auto\";\n        }\n    }\n    closer.style.cssText = 'margin: 0; padding: 0; ' +\n        'position: fixed; top:0; bottom:0; left:0; right:0;' +\n        'z-index: 9990; ' +\n        (editor ? 'background-color: rgba(0, 0, 0, 0.3);' : '');\n    closer.addEventListener('click', function (e) {\n        if (!ignoreFocusOut) {\n            close();\n        }\n    });\n    document.addEventListener('keydown', documentEscListener);\n    contentElement.addEventListener('click', function (e) {\n        e.stopPropagation();\n    });\n    closer.appendChild(contentElement);\n    document.body.appendChild(closer);\n    if (editor) {\n        editor.blur();\n    }\n    return {\n        close: close,\n        setIgnoreFocusOut: setIgnoreFocusOut\n    };\n};\n\n});\n\nace.define(\"ace/ext/menu_tools/get_editor_keyboard_shortcuts\",[\"require\",\"exports\",\"module\",\"ace/lib/keys\"], function(require, exports, module){/*jslint indent: 4, maxerr: 50, white: true, browser: true, vars: true*/\n\"use strict\";\nvar keys = require(\"../../lib/keys\");\nmodule.exports.getEditorKeyboardShortcuts = function (editor) {\n    var KEY_MODS = keys.KEY_MODS;\n    var keybindings = [];\n    var commandMap = {};\n    editor.keyBinding.$handlers.forEach(function (handler) {\n        var ckb = handler[\"commandKeyBinding\"];\n        for (var i in ckb) {\n            var key = i.replace(/(^|-)\\w/g, function (x) { return x.toUpperCase(); });\n            var commands = ckb[i];\n            if (!Array.isArray(commands))\n                commands = [commands];\n            commands.forEach(function (command) {\n                if (typeof command != \"string\")\n                    command = command.name;\n                if (commandMap[command]) {\n                    commandMap[command].key += \"|\" + key;\n                }\n                else {\n                    commandMap[command] = { key: key, command: command };\n                    keybindings.push(commandMap[command]);\n                }\n            });\n        }\n    });\n    return keybindings;\n};\n\n});\n\nace.define(\"ace/ext/keybinding_menu\",[\"require\",\"exports\",\"module\",\"ace/editor\",\"ace/ext/menu_tools/overlay_page\",\"ace/ext/menu_tools/get_editor_keyboard_shortcuts\"], function(require, exports, module){/*jslint indent: 4, maxerr: 50, white: true, browser: true, vars: true*/\n\"use strict\";\nvar Editor = require(\"../editor\").Editor;\nfunction showKeyboardShortcuts(editor) {\n    if (!document.getElementById('kbshortcutmenu')) {\n        var overlayPage = require('./menu_tools/overlay_page').overlayPage;\n        var getEditorKeyboardShortcuts = require('./menu_tools/get_editor_keyboard_shortcuts').getEditorKeyboardShortcuts;\n        var kb = getEditorKeyboardShortcuts(editor);\n        var el = document.createElement('div');\n        var commands = kb.reduce(function (previous, current) {\n            return previous + '<div class=\"ace_optionsMenuEntry\"><span class=\"ace_optionsMenuCommand\">'\n                + current.command + '</span> : '\n                + '<span class=\"ace_optionsMenuKey\">' + current.key + '</span></div>';\n        }, '');\n        el.id = 'kbshortcutmenu';\n        el.innerHTML = '<h1>Keyboard Shortcuts</h1>' + commands + '</div>';\n        overlayPage(editor, el);\n    }\n}\nmodule.exports.init = function (editor) {\n    Editor.prototype.showKeyboardShortcuts = function () {\n        showKeyboardShortcuts(this);\n    };\n    editor.commands.addCommands([{\n            name: \"showKeyboardShortcuts\",\n            bindKey: {\n                win: \"Ctrl-Alt-h\",\n                mac: \"Command-Alt-h\"\n            },\n            exec: \n            function (editor, line) {\n                editor.showKeyboardShortcuts();\n            }\n        }]);\n};\n\n});                (function() {\n                    ace.require([\"ace/ext/keybinding_menu\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}