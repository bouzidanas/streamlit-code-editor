{"ast":null,"code":"ace.define(\"ace/mode/folding/coffee\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var Range = require(\"../../range\").Range;\n  var FoldMode = exports.FoldMode = function () {};\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.commentBlock = function (session, row) {\n      var re = /\\S/;\n      var line = session.getLine(row);\n      var startLevel = line.search(re);\n      if (startLevel == -1 || line[startLevel] != \"#\") return;\n      var startColumn = line.length;\n      var maxRow = session.getLength();\n      var startRow = row;\n      var endRow = row;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var level = line.search(re);\n        if (level == -1) continue;\n        if (line[level] != \"#\") break;\n        endRow = row;\n      }\n      if (endRow > startRow) {\n        var endColumn = session.getLine(endRow).length;\n        return new Range(startRow, startColumn, endRow, endColumn);\n      }\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var range = this.indentationBlock(session, row);\n      if (range) return range;\n      range = this.commentBlock(session, row);\n      if (range) return range;\n    };\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var indent = line.search(/\\S/);\n      var next = session.getLine(row + 1);\n      var prev = session.getLine(row - 1);\n      var prevIndent = prev.search(/\\S/);\n      var nextIndent = next.search(/\\S/);\n      if (indent == -1) {\n        session.foldWidgets[row - 1] = prevIndent != -1 && prevIndent < nextIndent ? \"start\" : \"\";\n        return \"\";\n      }\n      if (prevIndent == -1) {\n        if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n          session.foldWidgets[row - 1] = \"\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"start\";\n        }\n      } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n        if (session.getLine(row - 2).search(/\\S/) == -1) {\n          session.foldWidgets[row - 1] = \"start\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"\";\n        }\n      }\n      if (prevIndent != -1 && prevIndent < indent) session.foldWidgets[row - 1] = \"start\";else session.foldWidgets[row - 1] = \"\";\n      if (indent < nextIndent) return \"start\";else return \"\";\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/snippets\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/text_highlight_rules\", \"ace/mode/folding/coffee\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var SnippetHighlightRules = function () {\n    var builtins = \"SELECTION|CURRENT_WORD|SELECTED_TEXT|CURRENT_LINE|LINE_INDEX|\" + \"LINE_NUMBER|SOFT_TABS|TAB_SIZE|FILENAME|FILEPATH|FULLNAME\";\n    this.$rules = {\n      \"start\": [{\n        token: \"constant.language.escape\",\n        regex: /\\\\[\\$}`\\\\]/\n      }, {\n        token: \"keyword\",\n        regex: \"\\\\$(?:TM_)?(?:\" + builtins + \")\\\\b\"\n      }, {\n        token: \"variable\",\n        regex: \"\\\\$\\\\w+\"\n      }, {\n        onMatch: function (value, state, stack) {\n          if (stack[1]) stack[1]++;else stack.unshift(state, 1);\n          return this.tokenName;\n        },\n        tokenName: \"markup.list\",\n        regex: \"\\\\${\",\n        next: \"varDecl\"\n      }, {\n        onMatch: function (value, state, stack) {\n          if (!stack[1]) return \"text\";\n          stack[1]--;\n          if (!stack[1]) stack.splice(0, 2);\n          return this.tokenName;\n        },\n        tokenName: \"markup.list\",\n        regex: \"}\"\n      }, {\n        token: \"doc.comment\",\n        regex: /^\\${2}-{5,}$/\n      }],\n      \"varDecl\": [{\n        regex: /\\d+\\b/,\n        token: \"constant.numeric\"\n      }, {\n        token: \"keyword\",\n        regex: \"(?:TM_)?(?:\" + builtins + \")\\\\b\"\n      }, {\n        token: \"variable\",\n        regex: \"\\\\w+\"\n      }, {\n        regex: /:/,\n        token: \"punctuation.operator\",\n        next: \"start\"\n      }, {\n        regex: /\\//,\n        token: \"string.regex\",\n        next: \"regexp\"\n      }, {\n        regex: \"\",\n        next: \"start\"\n      }],\n      \"regexp\": [{\n        regex: /\\\\./,\n        token: \"escape\"\n      }, {\n        regex: /\\[/,\n        token: \"regex.start\",\n        next: \"charClass\"\n      }, {\n        regex: \"/\",\n        token: \"string.regex\",\n        next: \"format\"\n      }, {\n        \"token\": \"string.regex\",\n        regex: \".\"\n      }],\n      charClass: [{\n        regex: \"\\\\.\",\n        token: \"escape\"\n      }, {\n        regex: \"\\\\]\",\n        token: \"regex.end\",\n        next: \"regexp\"\n      }, {\n        \"token\": \"string.regex\",\n        regex: \".\"\n      }],\n      \"format\": [{\n        regex: /\\\\[ulULE]/,\n        token: \"keyword\"\n      }, {\n        regex: /\\$\\d+/,\n        token: \"variable\"\n      }, {\n        regex: \"/[gim]*:?\",\n        token: \"string.regex\",\n        next: \"start\"\n      }, {\n        \"token\": \"string\",\n        regex: \".\"\n      }]\n    };\n  };\n  oop.inherits(SnippetHighlightRules, TextHighlightRules);\n  exports.SnippetHighlightRules = SnippetHighlightRules;\n  var SnippetGroupHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        token: \"text\",\n        regex: \"^\\\\t\",\n        next: \"sn-start\"\n      }, {\n        token: \"invalid\",\n        regex: /^ \\s*/\n      }, {\n        token: \"comment\",\n        regex: /^#.*/\n      }, {\n        token: \"constant.language.escape\",\n        regex: \"^regex \",\n        next: \"regex\"\n      }, {\n        token: \"constant.language.escape\",\n        regex: \"^(trigger|endTrigger|name|snippet|guard|endGuard|tabTrigger|key)\\\\b\"\n      }],\n      \"regex\": [{\n        token: \"text\",\n        regex: \"\\\\.\"\n      }, {\n        token: \"keyword\",\n        regex: \"/\"\n      }, {\n        token: \"empty\",\n        regex: \"$\",\n        next: \"start\"\n      }]\n    };\n    this.embedRules(SnippetHighlightRules, \"sn-\", [{\n      token: \"text\",\n      regex: \"^\\\\t\",\n      next: \"sn-start\"\n    }, {\n      onMatch: function (value, state, stack) {\n        stack.splice(stack.length);\n        return this.tokenName;\n      },\n      tokenName: \"text\",\n      regex: \"^(?!\\t)\",\n      next: \"start\"\n    }]);\n  };\n  oop.inherits(SnippetGroupHighlightRules, TextHighlightRules);\n  exports.SnippetGroupHighlightRules = SnippetGroupHighlightRules;\n  var FoldMode = require(\"./folding/coffee\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = SnippetGroupHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.$indentWithTabs = true;\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/snippets\";\n    this.snippetFileId = \"ace/snippets/snippets\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/snippets\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","BaseFoldMode","FoldMode","Range","inherits","commentBlock","session","row","re","line","getLine","startLevel","search","startColumn","length","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidgetRange","foldStyle","range","indentationBlock","getFoldWidget","indent","next","prev","prevIndent","nextIndent","foldWidgets","call","prototype","TextMode","Mode","TextHighlightRules","SnippetHighlightRules","builtins","$rules","token","regex","onMatch","value","state","stack","unshift","tokenName","splice","charClass","SnippetGroupHighlightRules","embedRules","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","$indentWithTabs","lineCommentStart","$id","snippetFileId","m"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-snippets.js"],"sourcesContent":["ace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar Range = require(\"../../range\").Range;\nvar FoldMode = exports.FoldMode = function () { };\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.commentBlock = function (session, row) {\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        if (startLevel == -1 || line[startLevel] != \"#\")\n            return;\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var level = line.search(re);\n            if (level == -1)\n                continue;\n            if (line[level] != \"#\")\n                break;\n            endRow = row;\n        }\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n        var range = this.indentationBlock(session, row);\n        if (range)\n            return range;\n        range = this.commentBlock(session, row);\n        if (range)\n            return range;\n    };\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent != -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        }\n        else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n        if (prevIndent != -1 && prevIndent < indent)\n            session.foldWidgets[row - 1] = \"start\";\n        else\n            session.foldWidgets[row - 1] = \"\";\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/snippets\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/text_highlight_rules\",\"ace/mode/folding/coffee\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar SnippetHighlightRules = function () {\n    var builtins = \"SELECTION|CURRENT_WORD|SELECTED_TEXT|CURRENT_LINE|LINE_INDEX|\" +\n        \"LINE_NUMBER|SOFT_TABS|TAB_SIZE|FILENAME|FILEPATH|FULLNAME\";\n    this.$rules = {\n        \"start\": [\n            { token: \"constant.language.escape\", regex: /\\\\[\\$}`\\\\]/ },\n            { token: \"keyword\", regex: \"\\\\$(?:TM_)?(?:\" + builtins + \")\\\\b\" },\n            { token: \"variable\", regex: \"\\\\$\\\\w+\" },\n            { onMatch: function (value, state, stack) {\n                    if (stack[1])\n                        stack[1]++;\n                    else\n                        stack.unshift(state, 1);\n                    return this.tokenName;\n                }, tokenName: \"markup.list\", regex: \"\\\\${\", next: \"varDecl\" },\n            { onMatch: function (value, state, stack) {\n                    if (!stack[1])\n                        return \"text\";\n                    stack[1]--;\n                    if (!stack[1])\n                        stack.splice(0, 2);\n                    return this.tokenName;\n                }, tokenName: \"markup.list\", regex: \"}\" },\n            { token: \"doc.comment\", regex: /^\\${2}-{5,}$/ }\n        ],\n        \"varDecl\": [\n            { regex: /\\d+\\b/, token: \"constant.numeric\" },\n            { token: \"keyword\", regex: \"(?:TM_)?(?:\" + builtins + \")\\\\b\" },\n            { token: \"variable\", regex: \"\\\\w+\" },\n            { regex: /:/, token: \"punctuation.operator\", next: \"start\" },\n            { regex: /\\//, token: \"string.regex\", next: \"regexp\" },\n            { regex: \"\", next: \"start\" }\n        ],\n        \"regexp\": [\n            { regex: /\\\\./, token: \"escape\" },\n            { regex: /\\[/, token: \"regex.start\", next: \"charClass\" },\n            { regex: \"/\", token: \"string.regex\", next: \"format\" },\n            { \"token\": \"string.regex\", regex: \".\" }\n        ],\n        charClass: [\n            { regex: \"\\\\.\", token: \"escape\" },\n            { regex: \"\\\\]\", token: \"regex.end\", next: \"regexp\" },\n            { \"token\": \"string.regex\", regex: \".\" }\n        ],\n        \"format\": [\n            { regex: /\\\\[ulULE]/, token: \"keyword\" },\n            { regex: /\\$\\d+/, token: \"variable\" },\n            { regex: \"/[gim]*:?\", token: \"string.regex\", next: \"start\" },\n            { \"token\": \"string\", regex: \".\" }\n        ]\n    };\n};\noop.inherits(SnippetHighlightRules, TextHighlightRules);\nexports.SnippetHighlightRules = SnippetHighlightRules;\nvar SnippetGroupHighlightRules = function () {\n    this.$rules = {\n        \"start\": [\n            { token: \"text\", regex: \"^\\\\t\", next: \"sn-start\" },\n            { token: \"invalid\", regex: /^ \\s*/ },\n            { token: \"comment\", regex: /^#.*/ },\n            { token: \"constant.language.escape\", regex: \"^regex \", next: \"regex\" },\n            { token: \"constant.language.escape\", regex: \"^(trigger|endTrigger|name|snippet|guard|endGuard|tabTrigger|key)\\\\b\" }\n        ],\n        \"regex\": [\n            { token: \"text\", regex: \"\\\\.\" },\n            { token: \"keyword\", regex: \"/\" },\n            { token: \"empty\", regex: \"$\", next: \"start\" }\n        ]\n    };\n    this.embedRules(SnippetHighlightRules, \"sn-\", [\n        { token: \"text\", regex: \"^\\\\t\", next: \"sn-start\" },\n        { onMatch: function (value, state, stack) {\n                stack.splice(stack.length);\n                return this.tokenName;\n            }, tokenName: \"text\", regex: \"^(?!\\t)\", next: \"start\" }\n    ]);\n};\noop.inherits(SnippetGroupHighlightRules, TextHighlightRules);\nexports.SnippetGroupHighlightRules = SnippetGroupHighlightRules;\nvar FoldMode = require(\"./folding/coffee\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = SnippetGroupHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.$indentWithTabs = true;\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/snippets\";\n    this.snippetFileId = \"ace/snippets/snippets\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/snippets\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}