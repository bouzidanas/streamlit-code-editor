{"ast":null,"code":"ace.define(\"ace/mode/red_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var RedHighlightRules = function () {\n    var compoundKeywords = \"\";\n    this.$rules = {\n      \"start\": [{\n        token: \"keyword.operator\",\n        regex: /\\s([\\-+%/=<>*]|(?:\\*\\*\\|\\/\\/|==|>>>?|<>|<<|=>|<=|=\\?))(\\s|(?=:))/\n      }, {\n        token: \"string.email\",\n        regex: /\\w[-\\w._]*\\@\\w[-\\w._]*/\n      }, {\n        token: \"value.time\",\n        regex: /\\b\\d+:\\d+(:\\d+)?/\n      }, {\n        token: \"string.url\",\n        regex: /\\w[-\\w_]*\\:(\\/\\/)?\\w[-\\w._]*(:\\d+)?/\n      }, {\n        token: \"value.date\",\n        regex: /(\\b\\d{1,4}[-/]\\d{1,2}[-/]\\d{1,2}|\\d{1,2}[-/]\\d{1,2}[-/]\\d{1,4})\\b/\n      }, {\n        token: \"value.tuple\",\n        regex: /\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(\\.\\d{1,3}){0,9}/\n      }, {\n        token: \"value.pair\",\n        regex: /[+-]?\\d+x[-+]?\\d+/\n      }, {\n        token: \"value.binary\",\n        regex: /\\b2#{([01]{8})+}/\n      }, {\n        token: \"value.binary\",\n        regex: /\\b64#{([\\w/=+])+}/\n      }, {\n        token: \"value.binary\",\n        regex: /(16)?#{([\\dabcdefABCDEF][\\dabcdefABCDEF])*}/\n      }, {\n        token: \"value.issue\",\n        regex: /#\\w[-\\w'*.]*/\n      }, {\n        token: \"value.numeric\",\n        regex: /[+-]?\\d['\\d]*(?:\\.\\d+)?e[-+]?\\d{1,3}\\%?(?!\\w)/\n      }, {\n        token: \"invalid.illegal\",\n        regex: /[+-]?\\d['\\d]*(?:\\.\\d+)?\\%?[a-zA-Z]/\n      }, {\n        token: \"value.numeric\",\n        regex: /[+-]?\\d['\\d]*(?:\\.\\d+)?\\%?(?![a-zA-Z])/\n      }, {\n        token: \"value.character\",\n        regex: /#\"(\\^[-@/_~^\"HKLM\\[]|.)\"/\n      }, {\n        token: \"string.file\",\n        regex: /%[-\\w\\.\\/]+/\n      }, {\n        token: \"string.tag\",\n        regex: /</,\n        next: \"tag\"\n      }, {\n        token: \"string\",\n        regex: /\"/,\n        next: \"string\"\n      }, {\n        token: \"string.other\",\n        regex: \"{\",\n        next: \"string.other\"\n      }, {\n        token: \"comment\",\n        regex: \"comment [{]\",\n        next: \"comment\"\n      }, {\n        token: \"comment\",\n        regex: /;.+$/\n      }, {\n        token: \"paren.map-start\",\n        regex: \"#\\\\(\"\n      }, {\n        token: \"paren.block-start\",\n        regex: \"[\\\\[]\"\n      }, {\n        token: \"paren.block-end\",\n        regex: \"[\\\\]]\"\n      }, {\n        token: \"paren.parens-start\",\n        regex: \"[(]\"\n      }, {\n        token: \"paren.parens-end\",\n        regex: \"\\\\)\"\n      }, {\n        token: \"keyword\",\n        regex: \"/local|/external\"\n      }, {\n        token: \"keyword.preprocessor\",\n        regex: \"#(if|either|\" + \"switch|case|include|do|macrolocal|reset|process|trace)\"\n      }, {\n        token: \"constant.datatype!\",\n        regex: \"(?:datatype|unset|none|logic|block|paren|string|\" + \"file|url|char|integer|float|word|set-word|lit-word|\" + \"get-word|refinement|issue|native|action|op|function|\" + \"path|lit-path|set-path|get-path|routine|bitset|point|\" + \"object|typeset|error|vector|hash|pair|percent|tuple|\" + \"map|binary|time|tag|email|handle|date|image|event|\" + \"series|any-type|number|any-object|scalar|\" + \"any-string|any-word|any-function|any-block|any-list|\" + \"any-path|immediate|all-word|internal|external|default)!(?![-!?\\\\w~])\"\n      }, {\n        token: \"keyword.function\",\n        regex: \"\\\\b(?:collect|quote|on-parse-event|math|last|source|expand|\" + \"show|context|object|input|quit|dir|make-dir|cause-error|\" + \"error\\\\?|none\\\\?|block\\\\?|any-list\\\\?|word\\\\?|char\\\\?|\" + \"any-string\\\\?|series\\\\?|binary\\\\?|attempt|url\\\\?|\" + \"string\\\\?|suffix\\\\?|file\\\\?|object\\\\?|body-of|first|\" + \"second|third|mod|clean-path|dir\\\\?|to-red-file|\" + \"normalize-dir|list-dir|pad|empty\\\\?|dirize|offset\\\\?|\" + \"what-dir|expand-directives|load|split-path|change-dir|\" + \"to-file|path-thru|save|load-thru|View|float\\\\?|to-float|\" + \"charset|\\\\?|probe|set-word\\\\?|q|words-of|replace|repend|\" + \"react|function\\\\?|spec-of|unset\\\\?|halt|op\\\\?|\" + \"any-function\\\\?|to-paren|tag\\\\?|routine|class-of|\" + \"size-text|draw|handle\\\\?|link-tabs-to-parent|\" + \"link-sub-to-parent|on-face-deep-change*|\" + \"update-font-faces|do-actor|do-safe|do-events|pair\\\\?|\" + \"foreach-face|hex-to-rgb|issue\\\\?|alter|path\\\\?|\" + \"typeset\\\\?|datatype\\\\?|set-flag|layout|extract|image\\\\?|\" + \"get-word\\\\?|to-logic|to-set-word|to-block|center-face|\" + \"dump-face|request-font|request-file|request-dir|rejoin|\" + \"ellipsize-at|any-block\\\\?|any-object\\\\?|map\\\\?|keys-of|\" + \"a-an|also|parse-func-spec|help-string|what|routine\\\\?|\" + \"action\\\\?|native\\\\?|refinement\\\\?|common-substr|\" + \"red-complete-file|red-complete-path|unview|comment|\\\\?\\\\?|\" + \"fourth|fifth|values-of|bitset\\\\?|email\\\\?|get-path\\\\?|\" + \"hash\\\\?|integer\\\\?|lit-path\\\\?|lit-word\\\\?|logic\\\\?|\" + \"paren\\\\?|percent\\\\?|set-path\\\\?|time\\\\?|tuple\\\\?|date\\\\?|\" + \"vector\\\\?|any-path\\\\?|any-word\\\\?|number\\\\?|immediate\\\\?|\" + \"scalar\\\\?|all-word\\\\?|to-bitset|to-binary|to-char|to-email|\" + \"to-get-path|to-get-word|to-hash|to-integer|to-issue|\" + \"to-lit-path|to-lit-word|to-map|to-none|to-pair|to-path|\" + \"to-percent|to-refinement|to-set-path|to-string|to-tag|\" + \"to-time|to-typeset|to-tuple|to-unset|to-url|to-word|\" + \"to-image|to-date|parse-trace|modulo|eval-set-path|\" + \"extract-boot-args|flip-exe-flag|split|do-file|\" + \"exists-thru\\\\?|read-thru|do-thru|cos|sin|tan|acos|asin|\" + \"atan|atan2|sqrt|clear-reactions|dump-reactions|react\\\\?|\" + \"within\\\\?|overlap\\\\?|distance\\\\?|face\\\\?|metrics\\\\?|\" + \"get-scroller|insert-event-func|remove-event-func|\" + \"set-focus|help|fetch-help|about|ls|ll|pwd|cd|\" + \"red-complete-input|matrix)(?![-!?\\\\w~])\"\n      }, {\n        token: \"keyword.action\",\n        regex: \"\\\\b(?:to|remove|copy|insert|change|clear|move|poke|put|\" + \"random|reverse|sort|swap|take|trim|add|subtract|\" + \"divide|multiply|make|reflect|form|mold|modify|\" + \"absolute|negate|power|remainder|round|even\\\\?|odd\\\\?|\" + \"and~|complement|or~|xor~|append|at|back|find|skip|\" + \"tail|head|head\\\\?|index\\\\?|length\\\\?|next|pick|\" + \"select|tail\\\\?|delete|read|write)(?![-_!?\\\\w~])\"\n      }, {\n        token: \"keyword.native\",\n        regex: \"\\\\b(?:not|any|set|uppercase|lowercase|checksum|\" + \"try|catch|browse|throw|all|as|\" + \"remove-each|func|function|does|has|do|reduce|\" + \"compose|get|print|prin|equal\\\\?|not-equal\\\\?|\" + \"strict-equal\\\\?|lesser\\\\?|greater\\\\?|lesser-or-equal\\\\?|\" + \"greater-or-equal\\\\?|same\\\\?|type\\\\?|stats|bind|in|parse|\" + \"union|unique|intersect|difference|exclude|\" + \"complement\\\\?|dehex|negative\\\\?|positive\\\\?|max|min|\" + \"shift|to-hex|sine|cosine|tangent|arcsine|arccosine|\" + \"arctangent|arctangent2|NaN\\\\?|zero\\\\?|log-2|log-10|log-e|\" + \"exp|square-root|construct|value\\\\?|as-pair|\" + \"extend|debase|enbase|to-local-file|\" + \"wait|unset|new-line|new-line\\\\?|context\\\\?|set-env|\" + \"get-env|list-env|now|sign\\\\?|call|size\\\\?)(?![-!?\\\\w~])\"\n      }, {\n        token: \"keyword\",\n        regex: \"\\\\b(?:Red(?=\\\\s+\\\\[)|object|context|make|self|keep)(?![-!?\\\\w~])\"\n      }, {\n        token: \"variable.language\",\n        regex: \"this\"\n      }, {\n        token: \"keyword.control\",\n        regex: \"(?:while|if|return|case|unless|either|until|loop|repeat|\" + \"forever|foreach|forall|switch|break|continue|exit)(?![-!?\\\\w~])\"\n      }, {\n        token: \"constant.language\",\n        regex: \"\\\\b(?:true|false|on|off|yes|none|no)(?![-!?\\\\w~])\"\n      }, {\n        token: \"constant.numeric\",\n        regex: /\\bpi(?![^-_])/\n      }, {\n        token: \"constant.character\",\n        regex: \"\\\\b(space|tab|newline|cr|lf)(?![-!?\\\\w~])\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"\\s(or|and|xor|is)\\s\"\n      }, {\n        token: \"variable.get-path\",\n        regex: /:\\w[-\\w'*.?!]*(\\/\\w[-\\w'*.?!]*)(\\/\\w[-\\w'*.?!]*)*/\n      }, {\n        token: \"variable.set-path\",\n        regex: /\\w[-\\w'*.?!]*(\\/\\w[-\\w'*.?!]*)(\\/\\w[-\\w'*.?!]*)*:/\n      }, {\n        token: \"variable.lit-path\",\n        regex: /'\\w[-\\w'*.?!]*(\\/\\w[-\\w'*.?!]*)(\\/\\w[-\\w'*.?!]*)*/\n      }, {\n        token: \"variable.path\",\n        regex: /\\w[-\\w'*.?!]*(\\/\\w[-\\w'*.?!]*)(\\/\\w[-\\w'*.?!]*)*/\n      }, {\n        token: \"variable.refinement\",\n        regex: /\\/\\w[-\\w'*.?!]*/\n      }, {\n        token: \"keyword.view.style\",\n        regex: \"\\\\b(?:window|base|button|text|field|area|check|\" + \"radio|progress|slider|camera|text-list|\" + \"drop-list|drop-down|panel|group-box|\" + \"tab-panel|h1|h2|h3|h4|h5|box|image|init)(?![-!?\\\\w~])\"\n      }, {\n        token: \"keyword.view.event\",\n        regex: \"\\\\b(?:detect|on-detect|time|on-time|drawing|on-drawing|\" + \"scroll|on-scroll|down|on-down|up|on-up|mid-down|\" + \"on-mid-down|mid-up|on-mid-up|alt-down|on-alt-down|\" + \"alt-up|on-alt-up|aux-down|on-aux-down|aux-up|\" + \"on-aux-up|wheel|on-wheel|drag-start|on-drag-start|\" + \"drag|on-drag|drop|on-drop|click|on-click|dbl-click|\" + \"on-dbl-click|over|on-over|key|on-key|key-down|\" + \"on-key-down|key-up|on-key-up|ime|on-ime|focus|\" + \"on-focus|unfocus|on-unfocus|select|on-select|\" + \"change|on-change|enter|on-enter|menu|on-menu|close|\" + \"on-close|move|on-move|resize|on-resize|moving|\" + \"on-moving|resizing|on-resizing|zoom|on-zoom|pan|\" + \"on-pan|rotate|on-rotate|two-tap|on-two-tap|\" + \"press-tap|on-press-tap|create|on-create|created|on-created)(?![-!?\\\\w~])\"\n      }, {\n        token: \"keyword.view.option\",\n        regex: \"\\\\b(?:all-over|center|color|default|disabled|down|\" + \"flags|focus|font|font-color|font-name|\" + \"font-size|hidden|hint|left|loose|name|\" + \"no-border|now|rate|react|select|size|space)(?![-!?\\\\w~])\"\n      }, {\n        token: \"constant.other.colour\",\n        regex: \"\\\\b(?:Red|white|transparent|\" + \"black|gray|aqua|beige|blue|brick|brown|coal|coffee|\" + \"crimson|cyan|forest|gold|green|ivory|khaki|leaf|linen|\" + \"magenta|maroon|mint|navy|oldrab|olive|orange|papaya|\" + \"pewter|pink|purple|reblue|rebolor|sienna|silver|sky|\" + \"snow|tanned|teal|violet|water|wheat|yello|yellow|glass)(?![-!?\\\\w~])\"\n      }, {\n        token: \"variable.get-word\",\n        regex: /\\:\\w[-\\w'*.?!]*/\n      }, {\n        token: \"variable.set-word\",\n        regex: /\\w[-\\w'*.?!]*\\:/\n      }, {\n        token: \"variable.lit-word\",\n        regex: /'\\w[-\\w'*.?!]*/\n      }, {\n        token: \"variable.word\",\n        regex: /\\b\\w+[-\\w'*.!?]*/\n      }, {\n        caseInsensitive: true\n      }],\n      \"string\": [{\n        token: \"string\",\n        regex: /\"/,\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"string.other\": [{\n        token: \"string.other\",\n        regex: /}/,\n        next: \"start\"\n      }, {\n        defaultToken: \"string.other\"\n      }],\n      \"tag\": [{\n        token: \"string.tag\",\n        regex: />/,\n        next: \"start\"\n      }, {\n        defaultToken: \"string.tag\"\n      }],\n      \"comment\": [{\n        token: \"comment\",\n        regex: /}/,\n        next: \"start\"\n      }, {\n        defaultToken: \"comment\"\n      }]\n    };\n  };\n  oop.inherits(RedHighlightRules, TextHighlightRules);\n  exports.RedHighlightRules = RedHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Range = require(\"../../range\").Range;\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n      return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n        return range;\n      }\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n        endRow = row;\n      }\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n      var endRow = row;\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n  var MatchingBraceOutdent = function () {};\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/red\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/red_highlight_rules\", \"ace/mode/folding/cstyle\", \"ace/mode/matching_brace_outdent\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var RedHighlightRules = require(\"./red_highlight_rules\").RedHighlightRules;\n  var RedFoldMode = require(\"./folding/cstyle\").FoldMode;\n  var MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n  var Range = require(\"../range\").Range;\n  var Mode = function () {\n    this.HighlightRules = RedHighlightRules;\n    this.foldingRules = new RedFoldMode();\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \";\";\n    this.blockComment = {\n      start: \"comment {\",\n      end: \"}\"\n    };\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n      var endState = tokenizedLine.state;\n      if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n        return indent;\n      }\n      if (state == \"start\") {\n        var match = line.match(/^.*[\\{\\[\\(]\\s*$/);\n        if (match) {\n          indent += tab;\n        }\n      } else if (state == \"doc-start\") {\n        if (endState == \"start\") {\n          return \"\";\n        }\n        var match = line.match(/^\\s*(\\/?)\\*/);\n        if (match) {\n          if (match[1]) {\n            indent += \" \";\n          }\n          indent += \"* \";\n        }\n      }\n      return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n    this.$id = \"ace/mode/red\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/red\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","RedHighlightRules","compoundKeywords","$rules","token","regex","next","caseInsensitive","defaultToken","inherits","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","replace","start","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","MatchingBraceOutdent","checkOutdent","input","autoOutdent","doc","column","openBracePos","findMatchingBracket","$getIndent","TextMode","Mode","RedFoldMode","HighlightRules","foldingRules","$outdent","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","getNextLineIndent","state","tab","tokenizedLine","getTokenizer","getLineTokens","tokens","endState","type","$id"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-red.js"],"sourcesContent":["ace.define(\"ace/mode/red_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar RedHighlightRules = function () {\n    var compoundKeywords = \"\";\n    this.$rules = {\n        \"start\": [\n            { token: \"keyword.operator\",\n                regex: /\\s([\\-+%/=<>*]|(?:\\*\\*\\|\\/\\/|==|>>>?|<>|<<|=>|<=|=\\?))(\\s|(?=:))/ },\n            { token: \"string.email\", regex: /\\w[-\\w._]*\\@\\w[-\\w._]*/ },\n            { token: \"value.time\", regex: /\\b\\d+:\\d+(:\\d+)?/ },\n            { token: \"string.url\", regex: /\\w[-\\w_]*\\:(\\/\\/)?\\w[-\\w._]*(:\\d+)?/ },\n            { token: \"value.date\", regex: /(\\b\\d{1,4}[-/]\\d{1,2}[-/]\\d{1,2}|\\d{1,2}[-/]\\d{1,2}[-/]\\d{1,4})\\b/ },\n            { token: \"value.tuple\", regex: /\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(\\.\\d{1,3}){0,9}/ },\n            { token: \"value.pair\", regex: /[+-]?\\d+x[-+]?\\d+/ },\n            { token: \"value.binary\", regex: /\\b2#{([01]{8})+}/ },\n            { token: \"value.binary\", regex: /\\b64#{([\\w/=+])+}/ },\n            { token: \"value.binary\", regex: /(16)?#{([\\dabcdefABCDEF][\\dabcdefABCDEF])*}/ },\n            { token: \"value.issue\", regex: /#\\w[-\\w'*.]*/ },\n            { token: \"value.numeric\", regex: /[+-]?\\d['\\d]*(?:\\.\\d+)?e[-+]?\\d{1,3}\\%?(?!\\w)/ },\n            { token: \"invalid.illegal\", regex: /[+-]?\\d['\\d]*(?:\\.\\d+)?\\%?[a-zA-Z]/ },\n            { token: \"value.numeric\", regex: /[+-]?\\d['\\d]*(?:\\.\\d+)?\\%?(?![a-zA-Z])/ },\n            { token: \"value.character\", regex: /#\"(\\^[-@/_~^\"HKLM\\[]|.)\"/ },\n            { token: \"string.file\", regex: /%[-\\w\\.\\/]+/ },\n            { token: \"string.tag\", regex: /</, next: \"tag\" },\n            { token: \"string\", regex: /\"/, next: \"string\" },\n            { token: \"string.other\", regex: \"{\", next: \"string.other\" },\n            { token: \"comment\", regex: \"comment [{]\", next: \"comment\" },\n            { token: \"comment\", regex: /;.+$/ },\n            { token: \"paren.map-start\", regex: \"#\\\\(\" },\n            { token: \"paren.block-start\", regex: \"[\\\\[]\" },\n            { token: \"paren.block-end\", regex: \"[\\\\]]\" },\n            { token: \"paren.parens-start\", regex: \"[(]\" },\n            { token: \"paren.parens-end\", regex: \"\\\\)\" },\n            { token: \"keyword\", regex: \"/local|/external\" },\n            { token: \"keyword.preprocessor\", regex: \"#(if|either|\" +\n                    \"switch|case|include|do|macrolocal|reset|process|trace)\" },\n            { token: \"constant.datatype!\", regex: \"(?:datatype|unset|none|logic|block|paren|string|\" +\n                    \"file|url|char|integer|float|word|set-word|lit-word|\" +\n                    \"get-word|refinement|issue|native|action|op|function|\" +\n                    \"path|lit-path|set-path|get-path|routine|bitset|point|\" +\n                    \"object|typeset|error|vector|hash|pair|percent|tuple|\" +\n                    \"map|binary|time|tag|email|handle|date|image|event|\" +\n                    \"series|any-type|number|any-object|scalar|\" +\n                    \"any-string|any-word|any-function|any-block|any-list|\" +\n                    \"any-path|immediate|all-word|internal|external|default)!(?![-!?\\\\w~])\" },\n            { token: \"keyword.function\", regex: \"\\\\b(?:collect|quote|on-parse-event|math|last|source|expand|\" +\n                    \"show|context|object|input|quit|dir|make-dir|cause-error|\" +\n                    \"error\\\\?|none\\\\?|block\\\\?|any-list\\\\?|word\\\\?|char\\\\?|\" +\n                    \"any-string\\\\?|series\\\\?|binary\\\\?|attempt|url\\\\?|\" +\n                    \"string\\\\?|suffix\\\\?|file\\\\?|object\\\\?|body-of|first|\" +\n                    \"second|third|mod|clean-path|dir\\\\?|to-red-file|\" +\n                    \"normalize-dir|list-dir|pad|empty\\\\?|dirize|offset\\\\?|\" +\n                    \"what-dir|expand-directives|load|split-path|change-dir|\" +\n                    \"to-file|path-thru|save|load-thru|View|float\\\\?|to-float|\" +\n                    \"charset|\\\\?|probe|set-word\\\\?|q|words-of|replace|repend|\" +\n                    \"react|function\\\\?|spec-of|unset\\\\?|halt|op\\\\?|\" +\n                    \"any-function\\\\?|to-paren|tag\\\\?|routine|class-of|\" +\n                    \"size-text|draw|handle\\\\?|link-tabs-to-parent|\" +\n                    \"link-sub-to-parent|on-face-deep-change*|\" +\n                    \"update-font-faces|do-actor|do-safe|do-events|pair\\\\?|\" +\n                    \"foreach-face|hex-to-rgb|issue\\\\?|alter|path\\\\?|\" +\n                    \"typeset\\\\?|datatype\\\\?|set-flag|layout|extract|image\\\\?|\" +\n                    \"get-word\\\\?|to-logic|to-set-word|to-block|center-face|\" +\n                    \"dump-face|request-font|request-file|request-dir|rejoin|\" +\n                    \"ellipsize-at|any-block\\\\?|any-object\\\\?|map\\\\?|keys-of|\" +\n                    \"a-an|also|parse-func-spec|help-string|what|routine\\\\?|\" +\n                    \"action\\\\?|native\\\\?|refinement\\\\?|common-substr|\" +\n                    \"red-complete-file|red-complete-path|unview|comment|\\\\?\\\\?|\" +\n                    \"fourth|fifth|values-of|bitset\\\\?|email\\\\?|get-path\\\\?|\" +\n                    \"hash\\\\?|integer\\\\?|lit-path\\\\?|lit-word\\\\?|logic\\\\?|\" +\n                    \"paren\\\\?|percent\\\\?|set-path\\\\?|time\\\\?|tuple\\\\?|date\\\\?|\" +\n                    \"vector\\\\?|any-path\\\\?|any-word\\\\?|number\\\\?|immediate\\\\?|\" +\n                    \"scalar\\\\?|all-word\\\\?|to-bitset|to-binary|to-char|to-email|\" +\n                    \"to-get-path|to-get-word|to-hash|to-integer|to-issue|\" +\n                    \"to-lit-path|to-lit-word|to-map|to-none|to-pair|to-path|\" +\n                    \"to-percent|to-refinement|to-set-path|to-string|to-tag|\" +\n                    \"to-time|to-typeset|to-tuple|to-unset|to-url|to-word|\" +\n                    \"to-image|to-date|parse-trace|modulo|eval-set-path|\" +\n                    \"extract-boot-args|flip-exe-flag|split|do-file|\" +\n                    \"exists-thru\\\\?|read-thru|do-thru|cos|sin|tan|acos|asin|\" +\n                    \"atan|atan2|sqrt|clear-reactions|dump-reactions|react\\\\?|\" +\n                    \"within\\\\?|overlap\\\\?|distance\\\\?|face\\\\?|metrics\\\\?|\" +\n                    \"get-scroller|insert-event-func|remove-event-func|\" +\n                    \"set-focus|help|fetch-help|about|ls|ll|pwd|cd|\" +\n                    \"red-complete-input|matrix)(?![-!?\\\\w~])\" },\n            { token: \"keyword.action\", regex: \"\\\\b(?:to|remove|copy|insert|change|clear|move|poke|put|\" +\n                    \"random|reverse|sort|swap|take|trim|add|subtract|\" +\n                    \"divide|multiply|make|reflect|form|mold|modify|\" +\n                    \"absolute|negate|power|remainder|round|even\\\\?|odd\\\\?|\" +\n                    \"and~|complement|or~|xor~|append|at|back|find|skip|\" +\n                    \"tail|head|head\\\\?|index\\\\?|length\\\\?|next|pick|\" +\n                    \"select|tail\\\\?|delete|read|write)(?![-_!?\\\\w~])\"\n            },\n            { token: \"keyword.native\", regex: \"\\\\b(?:not|any|set|uppercase|lowercase|checksum|\" +\n                    \"try|catch|browse|throw|all|as|\" +\n                    \"remove-each|func|function|does|has|do|reduce|\" +\n                    \"compose|get|print|prin|equal\\\\?|not-equal\\\\?|\" +\n                    \"strict-equal\\\\?|lesser\\\\?|greater\\\\?|lesser-or-equal\\\\?|\" +\n                    \"greater-or-equal\\\\?|same\\\\?|type\\\\?|stats|bind|in|parse|\" +\n                    \"union|unique|intersect|difference|exclude|\" +\n                    \"complement\\\\?|dehex|negative\\\\?|positive\\\\?|max|min|\" +\n                    \"shift|to-hex|sine|cosine|tangent|arcsine|arccosine|\" +\n                    \"arctangent|arctangent2|NaN\\\\?|zero\\\\?|log-2|log-10|log-e|\" +\n                    \"exp|square-root|construct|value\\\\?|as-pair|\" +\n                    \"extend|debase|enbase|to-local-file|\" +\n                    \"wait|unset|new-line|new-line\\\\?|context\\\\?|set-env|\" +\n                    \"get-env|list-env|now|sign\\\\?|call|size\\\\?)(?![-!?\\\\w~])\"\n            },\n            { token: \"keyword\", regex: \"\\\\b(?:Red(?=\\\\s+\\\\[)|object|context|make|self|keep)(?![-!?\\\\w~])\"\n            },\n            { token: \"variable.language\", regex: \"this\" },\n            { token: \"keyword.control\", regex: \"(?:while|if|return|case|unless|either|until|loop|repeat|\" +\n                    \"forever|foreach|forall|switch|break|continue|exit)(?![-!?\\\\w~])\" },\n            { token: \"constant.language\", regex: \"\\\\b(?:true|false|on|off|yes|none|no)(?![-!?\\\\w~])\" },\n            { token: \"constant.numeric\", regex: /\\bpi(?![^-_])/ },\n            { token: \"constant.character\", regex: \"\\\\b(space|tab|newline|cr|lf)(?![-!?\\\\w~])\" },\n            { token: \"keyword.operator\", regex: \"\\s(or|and|xor|is)\\s\" },\n            { token: \"variable.get-path\", regex: /:\\w[-\\w'*.?!]*(\\/\\w[-\\w'*.?!]*)(\\/\\w[-\\w'*.?!]*)*/ },\n            { token: \"variable.set-path\", regex: /\\w[-\\w'*.?!]*(\\/\\w[-\\w'*.?!]*)(\\/\\w[-\\w'*.?!]*)*:/ },\n            { token: \"variable.lit-path\", regex: /'\\w[-\\w'*.?!]*(\\/\\w[-\\w'*.?!]*)(\\/\\w[-\\w'*.?!]*)*/ },\n            { token: \"variable.path\", regex: /\\w[-\\w'*.?!]*(\\/\\w[-\\w'*.?!]*)(\\/\\w[-\\w'*.?!]*)*/ },\n            { token: \"variable.refinement\", regex: /\\/\\w[-\\w'*.?!]*/ },\n            { token: \"keyword.view.style\", regex: \"\\\\b(?:window|base|button|text|field|area|check|\" +\n                    \"radio|progress|slider|camera|text-list|\" +\n                    \"drop-list|drop-down|panel|group-box|\" +\n                    \"tab-panel|h1|h2|h3|h4|h5|box|image|init)(?![-!?\\\\w~])\" },\n            { token: \"keyword.view.event\", regex: \"\\\\b(?:detect|on-detect|time|on-time|drawing|on-drawing|\" +\n                    \"scroll|on-scroll|down|on-down|up|on-up|mid-down|\" +\n                    \"on-mid-down|mid-up|on-mid-up|alt-down|on-alt-down|\" +\n                    \"alt-up|on-alt-up|aux-down|on-aux-down|aux-up|\" +\n                    \"on-aux-up|wheel|on-wheel|drag-start|on-drag-start|\" +\n                    \"drag|on-drag|drop|on-drop|click|on-click|dbl-click|\" +\n                    \"on-dbl-click|over|on-over|key|on-key|key-down|\" +\n                    \"on-key-down|key-up|on-key-up|ime|on-ime|focus|\" +\n                    \"on-focus|unfocus|on-unfocus|select|on-select|\" +\n                    \"change|on-change|enter|on-enter|menu|on-menu|close|\" +\n                    \"on-close|move|on-move|resize|on-resize|moving|\" +\n                    \"on-moving|resizing|on-resizing|zoom|on-zoom|pan|\" +\n                    \"on-pan|rotate|on-rotate|two-tap|on-two-tap|\" +\n                    \"press-tap|on-press-tap|create|on-create|created|on-created)(?![-!?\\\\w~])\" },\n            { token: \"keyword.view.option\", regex: \"\\\\b(?:all-over|center|color|default|disabled|down|\" +\n                    \"flags|focus|font|font-color|font-name|\" +\n                    \"font-size|hidden|hint|left|loose|name|\" +\n                    \"no-border|now|rate|react|select|size|space)(?![-!?\\\\w~])\" },\n            { token: \"constant.other.colour\", regex: \"\\\\b(?:Red|white|transparent|\" +\n                    \"black|gray|aqua|beige|blue|brick|brown|coal|coffee|\" +\n                    \"crimson|cyan|forest|gold|green|ivory|khaki|leaf|linen|\" +\n                    \"magenta|maroon|mint|navy|oldrab|olive|orange|papaya|\" +\n                    \"pewter|pink|purple|reblue|rebolor|sienna|silver|sky|\" +\n                    \"snow|tanned|teal|violet|water|wheat|yello|yellow|glass)(?![-!?\\\\w~])\" },\n            { token: \"variable.get-word\", regex: /\\:\\w[-\\w'*.?!]*/ },\n            { token: \"variable.set-word\", regex: /\\w[-\\w'*.?!]*\\:/ },\n            { token: \"variable.lit-word\", regex: /'\\w[-\\w'*.?!]*/ },\n            { token: \"variable.word\", regex: /\\b\\w+[-\\w'*.!?]*/ },\n            { caseInsensitive: true }\n        ],\n        \"string\": [\n            { token: \"string\", regex: /\"/, next: \"start\" },\n            { defaultToken: \"string\" }\n        ],\n        \"string.other\": [\n            { token: \"string.other\", regex: /}/, next: \"start\" },\n            { defaultToken: \"string.other\" }\n        ],\n        \"tag\": [\n            { token: \"string.tag\", regex: />/, next: \"start\" },\n            { defaultToken: \"string.tag\" }\n        ],\n        \"comment\": [\n            { token: \"comment\", regex: /}/, next: \"start\" },\n            { defaultToken: \"comment\" }\n        ]\n    };\n};\noop.inherits(RedHighlightRules, TextHighlightRules);\nexports.RedHighlightRules = RedHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n        this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n        return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                }\n                else if (foldStyle != \"all\")\n                    range = null;\n            }\n            return range;\n        }\n        if (foldStyle === \"markbegin\")\n            return;\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    this.getSectionRange = function (session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                }\n                else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                }\n                else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m)\n                continue;\n            if (m[1])\n                depth--;\n            else\n                depth++;\n            if (!depth)\n                break;\n        }\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module){\"use strict\";\nvar Range = require(\"../range\").Range;\nvar MatchingBraceOutdent = function () { };\n(function () {\n    this.checkOutdent = function (line, input) {\n        if (!/^\\s+$/.test(line))\n            return false;\n        return /^\\s*\\}/.test(input);\n    };\n    this.autoOutdent = function (doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n        if (!match)\n            return 0;\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({ row: row, column: column });\n        if (!openBracePos || openBracePos.row == row)\n            return 0;\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n    this.$getIndent = function (line) {\n        return line.match(/^\\s*/)[0];\n    };\n}).call(MatchingBraceOutdent.prototype);\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n\n});\n\nace.define(\"ace/mode/red\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/red_highlight_rules\",\"ace/mode/folding/cstyle\",\"ace/mode/matching_brace_outdent\",\"ace/range\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar RedHighlightRules = require(\"./red_highlight_rules\").RedHighlightRules;\nvar RedFoldMode = require(\"./folding/cstyle\").FoldMode;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar Range = require(\"../range\").Range;\nvar Mode = function () {\n    this.HighlightRules = RedHighlightRules;\n    this.foldingRules = new RedFoldMode();\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \";\";\n    this.blockComment = { start: \"comment {\", end: \"}\" };\n    this.getNextLineIndent = function (state, line, tab) {\n        var indent = this.$getIndent(line);\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        var endState = tokenizedLine.state;\n        if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n            return indent;\n        }\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\[\\(]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n        else if (state == \"doc-start\") {\n            if (endState == \"start\") {\n                return \"\";\n            }\n            var match = line.match(/^\\s*(\\/?)\\*/);\n            if (match) {\n                if (match[1]) {\n                    indent += \" \";\n                }\n                indent += \"* \";\n            }\n        }\n        return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n    this.autoOutdent = function (state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n    this.$id = \"ace/mode/red\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/red\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}