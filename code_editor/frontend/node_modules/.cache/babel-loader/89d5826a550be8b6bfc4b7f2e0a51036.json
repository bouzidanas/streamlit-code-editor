{"ast":null,"code":"ace.define(\"ace/ext/whitespace\", [\"require\", \"exports\", \"module\", \"ace/lib/lang\"], function (require, exports, module) {\n  \"use strict\";\n\n  var lang = require(\"../lib/lang\");\n  exports.$detectIndentation = function (lines, fallback) {\n    var stats = [];\n    var changes = [];\n    var tabIndents = 0;\n    var prevSpaces = 0;\n    var max = Math.min(lines.length, 1000);\n    for (var i = 0; i < max; i++) {\n      var line = lines[i];\n      if (!/^\\s*[^*+\\-\\s]/.test(line)) continue;\n      if (line[0] == \"\\t\") {\n        tabIndents++;\n        prevSpaces = -Number.MAX_VALUE;\n      } else {\n        var spaces = line.match(/^ */)[0].length;\n        if (spaces && line[spaces] != \"\\t\") {\n          var diff = spaces - prevSpaces;\n          if (diff > 0 && !(prevSpaces % diff) && !(spaces % diff)) changes[diff] = (changes[diff] || 0) + 1;\n          stats[spaces] = (stats[spaces] || 0) + 1;\n        }\n        prevSpaces = spaces;\n      }\n      while (i < max && line[line.length - 1] == \"\\\\\") line = lines[i++];\n    }\n    function getScore(indent) {\n      var score = 0;\n      for (var i = indent; i < stats.length; i += indent) score += stats[i] || 0;\n      return score;\n    }\n    var changesTotal = changes.reduce(function (a, b) {\n      return a + b;\n    }, 0);\n    var first = {\n      score: 0,\n      length: 0\n    };\n    var spaceIndents = 0;\n    for (var i = 1; i < 12; i++) {\n      var score = getScore(i);\n      if (i == 1) {\n        spaceIndents = score;\n        score = stats[1] ? 0.9 : 0.8;\n        if (!stats.length) score = 0;\n      } else score /= spaceIndents;\n      if (changes[i]) score += changes[i] / changesTotal;\n      if (score > first.score) first = {\n        score: score,\n        length: i\n      };\n    }\n    if (first.score && first.score > 1.4) var tabLength = first.length;\n    if (tabIndents > spaceIndents + 1) {\n      if (tabLength == 1 || spaceIndents < tabIndents / 4 || first.score < 1.8) tabLength = undefined;\n      return {\n        ch: \"\\t\",\n        length: tabLength\n      };\n    }\n    if (spaceIndents > tabIndents + 1) return {\n      ch: \" \",\n      length: tabLength\n    };\n  };\n  exports.detectIndentation = function (session) {\n    var lines = session.getLines(0, 1000);\n    var indent = exports.$detectIndentation(lines) || {};\n    if (indent.ch) session.setUseSoftTabs(indent.ch == \" \");\n    if (indent.length) session.setTabSize(indent.length);\n    return indent;\n  };\n  exports.trimTrailingSpace = function (session, options) {\n    var doc = session.getDocument();\n    var lines = doc.getAllLines();\n    var min = options && options.trimEmpty ? -1 : 0;\n    var cursors = [],\n      ci = -1;\n    if (options && options.keepCursorPosition) {\n      if (session.selection.rangeCount) {\n        session.selection.rangeList.ranges.forEach(function (x, i, ranges) {\n          var next = ranges[i + 1];\n          if (next && next.cursor.row == x.cursor.row) return;\n          cursors.push(x.cursor);\n        });\n      } else {\n        cursors.push(session.selection.getCursor());\n      }\n      ci = 0;\n    }\n    var cursorRow = cursors[ci] && cursors[ci].row;\n    for (var i = 0, l = lines.length; i < l; i++) {\n      var line = lines[i];\n      var index = line.search(/\\s+$/);\n      if (i == cursorRow) {\n        if (index < cursors[ci].column && index > min) index = cursors[ci].column;\n        ci++;\n        cursorRow = cursors[ci] ? cursors[ci].row : -1;\n      }\n      if (index > min) doc.removeInLine(i, index, line.length);\n    }\n  };\n  exports.convertIndentation = function (session, ch, len) {\n    var oldCh = session.getTabString()[0];\n    var oldLen = session.getTabSize();\n    if (!len) len = oldLen;\n    if (!ch) ch = oldCh;\n    var tab = ch == \"\\t\" ? ch : lang.stringRepeat(ch, len);\n    var doc = session.doc;\n    var lines = doc.getAllLines();\n    var cache = {};\n    var spaceCache = {};\n    for (var i = 0, l = lines.length; i < l; i++) {\n      var line = lines[i];\n      var match = line.match(/^\\s*/)[0];\n      if (match) {\n        var w = session.$getStringScreenWidth(match)[0];\n        var tabCount = Math.floor(w / oldLen);\n        var reminder = w % oldLen;\n        var toInsert = cache[tabCount] || (cache[tabCount] = lang.stringRepeat(tab, tabCount));\n        toInsert += spaceCache[reminder] || (spaceCache[reminder] = lang.stringRepeat(\" \", reminder));\n        if (toInsert != match) {\n          doc.removeInLine(i, 0, match.length);\n          doc.insertInLine({\n            row: i,\n            column: 0\n          }, toInsert);\n        }\n      }\n    }\n    session.setTabSize(len);\n    session.setUseSoftTabs(ch == \" \");\n  };\n  exports.$parseStringArg = function (text) {\n    var indent = {};\n    if (/t/.test(text)) indent.ch = \"\\t\";else if (/s/.test(text)) indent.ch = \" \";\n    var m = text.match(/\\d+/);\n    if (m) indent.length = parseInt(m[0], 10);\n    return indent;\n  };\n  exports.$parseArg = function (arg) {\n    if (!arg) return {};\n    if (typeof arg == \"string\") return exports.$parseStringArg(arg);\n    if (typeof arg.text == \"string\") return exports.$parseStringArg(arg.text);\n    return arg;\n  };\n  exports.commands = [{\n    name: \"detectIndentation\",\n    description: \"Detect indentation from content\",\n    exec: function (editor) {\n      exports.detectIndentation(editor.session);\n    }\n  }, {\n    name: \"trimTrailingSpace\",\n    description: \"Trim trailing whitespace\",\n    exec: function (editor, args) {\n      exports.trimTrailingSpace(editor.session, args);\n    }\n  }, {\n    name: \"convertIndentation\",\n    description: \"Convert indentation to ...\",\n    exec: function (editor, arg) {\n      var indent = exports.$parseArg(arg);\n      exports.convertIndentation(editor.session, indent.ch, indent.length);\n    }\n  }, {\n    name: \"setIndentation\",\n    description: \"Set indentation\",\n    exec: function (editor, arg) {\n      var indent = exports.$parseArg(arg);\n      indent.length && editor.session.setTabSize(indent.length);\n      indent.ch && editor.session.setUseSoftTabs(indent.ch == \" \");\n    }\n  }];\n});\n(function () {\n  ace.require([\"ace/ext/whitespace\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","lang","$detectIndentation","lines","fallback","stats","changes","tabIndents","prevSpaces","max","Math","min","length","i","line","test","Number","MAX_VALUE","spaces","match","diff","getScore","indent","score","changesTotal","reduce","a","b","first","spaceIndents","tabLength","undefined","ch","detectIndentation","session","getLines","setUseSoftTabs","setTabSize","trimTrailingSpace","options","doc","getDocument","getAllLines","trimEmpty","cursors","ci","keepCursorPosition","selection","rangeCount","rangeList","ranges","forEach","x","next","cursor","row","push","getCursor","cursorRow","l","index","search","column","removeInLine","convertIndentation","len","oldCh","getTabString","oldLen","getTabSize","tab","stringRepeat","cache","spaceCache","w","$getStringScreenWidth","tabCount","floor","reminder","toInsert","insertInLine","$parseStringArg","text","m","parseInt","$parseArg","arg","commands","name","description","exec","editor","args"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/ext-whitespace.js"],"sourcesContent":["ace.define(\"ace/ext/whitespace\",[\"require\",\"exports\",\"module\",\"ace/lib/lang\"], function(require, exports, module){\"use strict\";\nvar lang = require(\"../lib/lang\");\nexports.$detectIndentation = function (lines, fallback) {\n    var stats = [];\n    var changes = [];\n    var tabIndents = 0;\n    var prevSpaces = 0;\n    var max = Math.min(lines.length, 1000);\n    for (var i = 0; i < max; i++) {\n        var line = lines[i];\n        if (!/^\\s*[^*+\\-\\s]/.test(line))\n            continue;\n        if (line[0] == \"\\t\") {\n            tabIndents++;\n            prevSpaces = -Number.MAX_VALUE;\n        }\n        else {\n            var spaces = line.match(/^ */)[0].length;\n            if (spaces && line[spaces] != \"\\t\") {\n                var diff = spaces - prevSpaces;\n                if (diff > 0 && !(prevSpaces % diff) && !(spaces % diff))\n                    changes[diff] = (changes[diff] || 0) + 1;\n                stats[spaces] = (stats[spaces] || 0) + 1;\n            }\n            prevSpaces = spaces;\n        }\n        while (i < max && line[line.length - 1] == \"\\\\\")\n            line = lines[i++];\n    }\n    function getScore(indent) {\n        var score = 0;\n        for (var i = indent; i < stats.length; i += indent)\n            score += stats[i] || 0;\n        return score;\n    }\n    var changesTotal = changes.reduce(function (a, b) { return a + b; }, 0);\n    var first = { score: 0, length: 0 };\n    var spaceIndents = 0;\n    for (var i = 1; i < 12; i++) {\n        var score = getScore(i);\n        if (i == 1) {\n            spaceIndents = score;\n            score = stats[1] ? 0.9 : 0.8;\n            if (!stats.length)\n                score = 0;\n        }\n        else\n            score /= spaceIndents;\n        if (changes[i])\n            score += changes[i] / changesTotal;\n        if (score > first.score)\n            first = { score: score, length: i };\n    }\n    if (first.score && first.score > 1.4)\n        var tabLength = first.length;\n    if (tabIndents > spaceIndents + 1) {\n        if (tabLength == 1 || spaceIndents < tabIndents / 4 || first.score < 1.8)\n            tabLength = undefined;\n        return { ch: \"\\t\", length: tabLength };\n    }\n    if (spaceIndents > tabIndents + 1)\n        return { ch: \" \", length: tabLength };\n};\nexports.detectIndentation = function (session) {\n    var lines = session.getLines(0, 1000);\n    var indent = exports.$detectIndentation(lines) || {};\n    if (indent.ch)\n        session.setUseSoftTabs(indent.ch == \" \");\n    if (indent.length)\n        session.setTabSize(indent.length);\n    return indent;\n};\nexports.trimTrailingSpace = function (session, options) {\n    var doc = session.getDocument();\n    var lines = doc.getAllLines();\n    var min = options && options.trimEmpty ? -1 : 0;\n    var cursors = [], ci = -1;\n    if (options && options.keepCursorPosition) {\n        if (session.selection.rangeCount) {\n            session.selection.rangeList.ranges.forEach(function (x, i, ranges) {\n                var next = ranges[i + 1];\n                if (next && next.cursor.row == x.cursor.row)\n                    return;\n                cursors.push(x.cursor);\n            });\n        }\n        else {\n            cursors.push(session.selection.getCursor());\n        }\n        ci = 0;\n    }\n    var cursorRow = cursors[ci] && cursors[ci].row;\n    for (var i = 0, l = lines.length; i < l; i++) {\n        var line = lines[i];\n        var index = line.search(/\\s+$/);\n        if (i == cursorRow) {\n            if (index < cursors[ci].column && index > min)\n                index = cursors[ci].column;\n            ci++;\n            cursorRow = cursors[ci] ? cursors[ci].row : -1;\n        }\n        if (index > min)\n            doc.removeInLine(i, index, line.length);\n    }\n};\nexports.convertIndentation = function (session, ch, len) {\n    var oldCh = session.getTabString()[0];\n    var oldLen = session.getTabSize();\n    if (!len)\n        len = oldLen;\n    if (!ch)\n        ch = oldCh;\n    var tab = ch == \"\\t\" ? ch : lang.stringRepeat(ch, len);\n    var doc = session.doc;\n    var lines = doc.getAllLines();\n    var cache = {};\n    var spaceCache = {};\n    for (var i = 0, l = lines.length; i < l; i++) {\n        var line = lines[i];\n        var match = line.match(/^\\s*/)[0];\n        if (match) {\n            var w = session.$getStringScreenWidth(match)[0];\n            var tabCount = Math.floor(w / oldLen);\n            var reminder = w % oldLen;\n            var toInsert = cache[tabCount] || (cache[tabCount] = lang.stringRepeat(tab, tabCount));\n            toInsert += spaceCache[reminder] || (spaceCache[reminder] = lang.stringRepeat(\" \", reminder));\n            if (toInsert != match) {\n                doc.removeInLine(i, 0, match.length);\n                doc.insertInLine({ row: i, column: 0 }, toInsert);\n            }\n        }\n    }\n    session.setTabSize(len);\n    session.setUseSoftTabs(ch == \" \");\n};\nexports.$parseStringArg = function (text) {\n    var indent = {};\n    if (/t/.test(text))\n        indent.ch = \"\\t\";\n    else if (/s/.test(text))\n        indent.ch = \" \";\n    var m = text.match(/\\d+/);\n    if (m)\n        indent.length = parseInt(m[0], 10);\n    return indent;\n};\nexports.$parseArg = function (arg) {\n    if (!arg)\n        return {};\n    if (typeof arg == \"string\")\n        return exports.$parseStringArg(arg);\n    if (typeof arg.text == \"string\")\n        return exports.$parseStringArg(arg.text);\n    return arg;\n};\nexports.commands = [{\n        name: \"detectIndentation\",\n        description: \"Detect indentation from content\",\n        exec: function (editor) {\n            exports.detectIndentation(editor.session);\n        }\n    }, {\n        name: \"trimTrailingSpace\",\n        description: \"Trim trailing whitespace\",\n        exec: function (editor, args) {\n            exports.trimTrailingSpace(editor.session, args);\n        }\n    }, {\n        name: \"convertIndentation\",\n        description: \"Convert indentation to ...\",\n        exec: function (editor, arg) {\n            var indent = exports.$parseArg(arg);\n            exports.convertIndentation(editor.session, indent.ch, indent.length);\n        }\n    }, {\n        name: \"setIndentation\",\n        description: \"Set indentation\",\n        exec: function (editor, arg) {\n            var indent = exports.$parseArg(arg);\n            indent.length && editor.session.setTabSize(indent.length);\n            indent.ch && editor.session.setUseSoftTabs(indent.ch == \" \");\n        }\n    }];\n\n});                (function() {\n                    ace.require([\"ace/ext/whitespace\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}