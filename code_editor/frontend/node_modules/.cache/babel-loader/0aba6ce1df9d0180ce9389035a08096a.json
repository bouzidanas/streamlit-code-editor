{"ast":null,"code":"ace.define(\"ace/mode/alda_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  /* This file was autogenerated from ../../src/alda.JSON-tmLanguage (uuid: ) */\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var AldaHighlightRules = function () {\n    this.$rules = {\n      pitch: [{\n        token: \"variable.parameter.operator.pitch.alda\",\n        regex: /(?:[+\\-]+|\\=)/\n      }, {\n        token: \"\",\n        regex: \"\",\n        next: \"timing\"\n      }],\n      timing: [{\n        token: \"string.quoted.operator.timing.alda\",\n        regex: /\\d+(?:s|ms)?/\n      }, {\n        token: \"\",\n        regex: \"\",\n        next: \"start\"\n      }],\n      start: [{\n        token: [\"constant.language.instrument.alda\", \"constant.language.instrument.alda\", \"meta.part.call.alda\", \"storage.type.nickname.alda\", \"meta.part.call.alda\"],\n        regex: /^([a-zA-Z]{2}[\\w\\-+\\'()]*)((?:\\s*\\/\\s*[a-zA-Z]{2}[\\w\\-+\\'()]*)*)(?:(\\s*)(\\\"[a-zA-Z]{2}[\\w\\-+\\'()]*\\\"))?(\\s*:)/\n      }, {\n        token: [\"text\", \"entity.other.inherited-class.voice.alda\", \"text\"],\n        regex: /^(\\s*)(V\\d+)(:)/\n      }, {\n        token: \"comment.line.number-sign.alda\",\n        regex: /#.*$/\n      }, {\n        token: \"entity.name.function.pipe.measure.alda\",\n        regex: /\\|/\n      }, {\n        token: \"comment.block.inline.alda\",\n        regex: /\\(comment\\b/,\n        push: [{\n          token: \"comment.block.inline.alda\",\n          regex: /\\)/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"comment.block.inline.alda\"\n        }]\n      }, {\n        token: \"entity.name.function.marker.alda\",\n        regex: /%[a-zA-Z]{2}[\\w\\-+\\'()]*/\n      }, {\n        token: \"entity.name.function.at-marker.alda\",\n        regex: /@[a-zA-Z]{2}[\\w\\-+\\'()]*/\n      }, {\n        token: \"keyword.operator.octave-change.alda\",\n        regex: /\\bo\\d+\\b/\n      }, {\n        token: \"keyword.operator.octave-shift.alda\",\n        regex: /[><]/\n      }, {\n        token: \"keyword.operator.repeat.alda\",\n        regex: /\\*\\s*\\d+/\n      }, {\n        token: \"string.quoted.operator.timing.alda\",\n        regex: /[.]|r\\d*(?:s|ms)?/\n      }, {\n        token: \"text\",\n        regex: /([cdefgab])/,\n        next: \"pitch\"\n      }, {\n        token: \"string.quoted.operator.timing.alda\",\n        regex: /~/,\n        next: \"timing\"\n      }, {\n        token: \"punctuation.section.embedded.cram.alda\",\n        regex: /\\}/,\n        next: \"timing\"\n      }, {\n        token: \"constant.numeric.subchord.alda\",\n        regex: /\\//\n      }, {\n        todo: {\n          token: \"punctuation.section.embedded.cram.alda\",\n          regex: /\\{/,\n          push: [{\n            token: \"punctuation.section.embedded.cram.alda\",\n            regex: /\\}/,\n            next: \"pop\"\n          }, {\n            include: \"$self\"\n          }]\n        }\n      }, {\n        todo: {\n          token: \"keyword.control.sequence.alda\",\n          regex: /\\[/,\n          push: [{\n            token: \"keyword.control.sequence.alda\",\n            regex: /\\]/,\n            next: \"pop\"\n          }, {\n            include: \"$self\"\n          }]\n        }\n      }, {\n        token: \"meta.inline.clojure.alda\",\n        regex: /\\(/,\n        push: [{\n          token: \"meta.inline.clojure.alda\",\n          regex: /\\)/,\n          next: \"pop\"\n        }, {\n          include: \"source.clojure\"\n        }, {\n          defaultToken: \"meta.inline.clojure.alda\"\n        }]\n      }]\n    };\n    this.normalizeRules();\n  };\n  AldaHighlightRules.metaData = {\n    scopeName: \"source.alda\",\n    fileTypes: [\"alda\"],\n    name: \"Alda\"\n  };\n  oop.inherits(AldaHighlightRules, TextHighlightRules);\n  exports.AldaHighlightRules = AldaHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Range = require(\"../../range\").Range;\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n      return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n        return range;\n      }\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n        endRow = row;\n      }\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n      var endRow = row;\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/alda\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/alda_highlight_rules\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  /*\n  THIS FILE WAS AUTOGENERATED BY mode.tmpl.js\n  */\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var AldaHighlightRules = require(\"./alda_highlight_rules\").AldaHighlightRules;\n  var FoldMode = require(\"./folding/cstyle\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = AldaHighlightRules;\n    this.foldingRules = new FoldMode();\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.$id = \"ace/mode/alda\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/alda\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","AldaHighlightRules","$rules","pitch","token","regex","next","timing","start","push","defaultToken","todo","include","normalizeRules","metaData","scopeName","fileTypes","name","inherits","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","replace","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$id"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-alda.js"],"sourcesContent":["ace.define(\"ace/mode/alda_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){/* This file was autogenerated from ../../src/alda.JSON-tmLanguage (uuid: ) */\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar AldaHighlightRules = function () {\n    this.$rules = {\n        pitch: [{\n                token: \"variable.parameter.operator.pitch.alda\",\n                regex: /(?:[+\\-]+|\\=)/\n            }, {\n                token: \"\",\n                regex: \"\",\n                next: \"timing\"\n            }],\n        timing: [{\n                token: \"string.quoted.operator.timing.alda\",\n                regex: /\\d+(?:s|ms)?/\n            }, {\n                token: \"\",\n                regex: \"\",\n                next: \"start\"\n            }],\n        start: [{\n                token: [\n                    \"constant.language.instrument.alda\",\n                    \"constant.language.instrument.alda\",\n                    \"meta.part.call.alda\",\n                    \"storage.type.nickname.alda\",\n                    \"meta.part.call.alda\"\n                ],\n                regex: /^([a-zA-Z]{2}[\\w\\-+\\'()]*)((?:\\s*\\/\\s*[a-zA-Z]{2}[\\w\\-+\\'()]*)*)(?:(\\s*)(\\\"[a-zA-Z]{2}[\\w\\-+\\'()]*\\\"))?(\\s*:)/\n            }, {\n                token: [\n                    \"text\",\n                    \"entity.other.inherited-class.voice.alda\",\n                    \"text\"\n                ],\n                regex: /^(\\s*)(V\\d+)(:)/\n            }, {\n                token: \"comment.line.number-sign.alda\",\n                regex: /#.*$/\n            }, {\n                token: \"entity.name.function.pipe.measure.alda\",\n                regex: /\\|/\n            }, {\n                token: \"comment.block.inline.alda\",\n                regex: /\\(comment\\b/,\n                push: [{\n                        token: \"comment.block.inline.alda\",\n                        regex: /\\)/,\n                        next: \"pop\"\n                    }, {\n                        defaultToken: \"comment.block.inline.alda\"\n                    }]\n            }, {\n                token: \"entity.name.function.marker.alda\",\n                regex: /%[a-zA-Z]{2}[\\w\\-+\\'()]*/\n            }, {\n                token: \"entity.name.function.at-marker.alda\",\n                regex: /@[a-zA-Z]{2}[\\w\\-+\\'()]*/\n            }, {\n                token: \"keyword.operator.octave-change.alda\",\n                regex: /\\bo\\d+\\b/\n            }, {\n                token: \"keyword.operator.octave-shift.alda\",\n                regex: /[><]/\n            }, {\n                token: \"keyword.operator.repeat.alda\",\n                regex: /\\*\\s*\\d+/\n            }, {\n                token: \"string.quoted.operator.timing.alda\",\n                regex: /[.]|r\\d*(?:s|ms)?/\n            }, {\n                token: \"text\",\n                regex: /([cdefgab])/,\n                next: \"pitch\"\n            }, {\n                token: \"string.quoted.operator.timing.alda\",\n                regex: /~/,\n                next: \"timing\"\n            }, {\n                token: \"punctuation.section.embedded.cram.alda\",\n                regex: /\\}/,\n                next: \"timing\"\n            }, {\n                token: \"constant.numeric.subchord.alda\",\n                regex: /\\//\n            }, {\n                todo: {\n                    token: \"punctuation.section.embedded.cram.alda\",\n                    regex: /\\{/,\n                    push: [{\n                            token: \"punctuation.section.embedded.cram.alda\",\n                            regex: /\\}/,\n                            next: \"pop\"\n                        }, {\n                            include: \"$self\"\n                        }]\n                }\n            }, {\n                todo: {\n                    token: \"keyword.control.sequence.alda\",\n                    regex: /\\[/,\n                    push: [{\n                            token: \"keyword.control.sequence.alda\",\n                            regex: /\\]/,\n                            next: \"pop\"\n                        }, {\n                            include: \"$self\"\n                        }]\n                }\n            }, {\n                token: \"meta.inline.clojure.alda\",\n                regex: /\\(/,\n                push: [{\n                        token: \"meta.inline.clojure.alda\",\n                        regex: /\\)/,\n                        next: \"pop\"\n                    }, {\n                        include: \"source.clojure\"\n                    }, {\n                        defaultToken: \"meta.inline.clojure.alda\"\n                    }]\n            }]\n    };\n    this.normalizeRules();\n};\nAldaHighlightRules.metaData = {\n    scopeName: \"source.alda\",\n    fileTypes: [\"alda\"],\n    name: \"Alda\"\n};\noop.inherits(AldaHighlightRules, TextHighlightRules);\nexports.AldaHighlightRules = AldaHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n        this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n        return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                }\n                else if (foldStyle != \"all\")\n                    range = null;\n            }\n            return range;\n        }\n        if (foldStyle === \"markbegin\")\n            return;\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    this.getSectionRange = function (session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                }\n                else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                }\n                else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m)\n                continue;\n            if (m[1])\n                depth--;\n            else\n                depth++;\n            if (!depth)\n                break;\n        }\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/alda\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/alda_highlight_rules\",\"ace/mode/folding/cstyle\"], function(require, exports, module){/*\n  THIS FILE WAS AUTOGENERATED BY mode.tmpl.js\n*/\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar AldaHighlightRules = require(\"./alda_highlight_rules\").AldaHighlightRules;\nvar FoldMode = require(\"./folding/cstyle\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = AldaHighlightRules;\n    this.foldingRules = new FoldMode();\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.$id = \"ace/mode/alda\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/alda\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"AAAAA,GAAG,CAACC,MAAM,CAAC,+BAA+B,EAAC,CAAC,SAAS,EAAC,SAAS,EAAC,QAAQ,EAAC,aAAa,EAAC,+BAA+B,CAAC,EAAE,UAASC,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAC;EAAC;EAC5J,YAAY;;EACZ,IAAIC,GAAG,GAAGH,OAAO,CAAC,YAAY,CAAC;EAC/B,IAAII,kBAAkB,GAAGJ,OAAO,CAAC,wBAAwB,CAAC,CAACI,kBAAkB;EAC7E,IAAIC,kBAAkB,GAAG,SAAAA,CAAA,EAAY;IACjC,IAAI,CAACC,MAAM,GAAG;MACVC,KAAK,EAAE,CAAC;QACAC,KAAK,EAAE,wCAAwC;QAC/CC,KAAK,EAAE;MACX,CAAC,EAAE;QACCD,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE;MACV,CAAC,CAAC;MACNC,MAAM,EAAE,CAAC;QACDH,KAAK,EAAE,oCAAoC;QAC3CC,KAAK,EAAE;MACX,CAAC,EAAE;QACCD,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE;MACV,CAAC,CAAC;MACNE,KAAK,EAAE,CAAC;QACAJ,KAAK,EAAE,CACH,mCAAmC,EACnC,mCAAmC,EACnC,qBAAqB,EACrB,4BAA4B,EAC5B,qBAAqB,CACxB;QACDC,KAAK,EAAE;MACX,CAAC,EAAE;QACCD,KAAK,EAAE,CACH,MAAM,EACN,yCAAyC,EACzC,MAAM,CACT;QACDC,KAAK,EAAE;MACX,CAAC,EAAE;QACCD,KAAK,EAAE,+BAA+B;QACtCC,KAAK,EAAE;MACX,CAAC,EAAE;QACCD,KAAK,EAAE,wCAAwC;QAC/CC,KAAK,EAAE;MACX,CAAC,EAAE;QACCD,KAAK,EAAE,2BAA2B;QAClCC,KAAK,EAAE,aAAa;QACpBI,IAAI,EAAE,CAAC;UACCL,KAAK,EAAE,2BAA2B;UAClCC,KAAK,EAAE,IAAI;UACXC,IAAI,EAAE;QACV,CAAC,EAAE;UACCI,YAAY,EAAE;QAClB,CAAC;MACT,CAAC,EAAE;QACCN,KAAK,EAAE,kCAAkC;QACzCC,KAAK,EAAE;MACX,CAAC,EAAE;QACCD,KAAK,EAAE,qCAAqC;QAC5CC,KAAK,EAAE;MACX,CAAC,EAAE;QACCD,KAAK,EAAE,qCAAqC;QAC5CC,KAAK,EAAE;MACX,CAAC,EAAE;QACCD,KAAK,EAAE,oCAAoC;QAC3CC,KAAK,EAAE;MACX,CAAC,EAAE;QACCD,KAAK,EAAE,8BAA8B;QACrCC,KAAK,EAAE;MACX,CAAC,EAAE;QACCD,KAAK,EAAE,oCAAoC;QAC3CC,KAAK,EAAE;MACX,CAAC,EAAE;QACCD,KAAK,EAAE,MAAM;QACbC,KAAK,EAAE,aAAa;QACpBC,IAAI,EAAE;MACV,CAAC,EAAE;QACCF,KAAK,EAAE,oCAAoC;QAC3CC,KAAK,EAAE,GAAG;QACVC,IAAI,EAAE;MACV,CAAC,EAAE;QACCF,KAAK,EAAE,wCAAwC;QAC/CC,KAAK,EAAE,IAAI;QACXC,IAAI,EAAE;MACV,CAAC,EAAE;QACCF,KAAK,EAAE,gCAAgC;QACvCC,KAAK,EAAE;MACX,CAAC,EAAE;QACCM,IAAI,EAAE;UACFP,KAAK,EAAE,wCAAwC;UAC/CC,KAAK,EAAE,IAAI;UACXI,IAAI,EAAE,CAAC;YACCL,KAAK,EAAE,wCAAwC;YAC/CC,KAAK,EAAE,IAAI;YACXC,IAAI,EAAE;UACV,CAAC,EAAE;YACCM,OAAO,EAAE;UACb,CAAC;QACT;MACJ,CAAC,EAAE;QACCD,IAAI,EAAE;UACFP,KAAK,EAAE,+BAA+B;UACtCC,KAAK,EAAE,IAAI;UACXI,IAAI,EAAE,CAAC;YACCL,KAAK,EAAE,+BAA+B;YACtCC,KAAK,EAAE,IAAI;YACXC,IAAI,EAAE;UACV,CAAC,EAAE;YACCM,OAAO,EAAE;UACb,CAAC;QACT;MACJ,CAAC,EAAE;QACCR,KAAK,EAAE,0BAA0B;QACjCC,KAAK,EAAE,IAAI;QACXI,IAAI,EAAE,CAAC;UACCL,KAAK,EAAE,0BAA0B;UACjCC,KAAK,EAAE,IAAI;UACXC,IAAI,EAAE;QACV,CAAC,EAAE;UACCM,OAAO,EAAE;QACb,CAAC,EAAE;UACCF,YAAY,EAAE;QAClB,CAAC;MACT,CAAC;IACT,CAAC;IACD,IAAI,CAACG,cAAc,CAAC,CAAC;EACzB,CAAC;EACDZ,kBAAkB,CAACa,QAAQ,GAAG;IAC1BC,SAAS,EAAE,aAAa;IACxBC,SAAS,EAAE,CAAC,MAAM,CAAC;IACnBC,IAAI,EAAE;EACV,CAAC;EACDlB,GAAG,CAACmB,QAAQ,CAACjB,kBAAkB,EAAED,kBAAkB,CAAC;EACpDH,OAAO,CAACI,kBAAkB,GAAGA,kBAAkB;AAE/C,CAAC,CAAC;AAEFP,GAAG,CAACC,MAAM,CAAC,yBAAyB,EAAC,CAAC,SAAS,EAAC,SAAS,EAAC,QAAQ,EAAC,aAAa,EAAC,WAAW,EAAC,4BAA4B,CAAC,EAAE,UAASC,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAC;EAAC,YAAY;;EAC3K,IAAIC,GAAG,GAAGH,OAAO,CAAC,eAAe,CAAC;EAClC,IAAIuB,KAAK,GAAGvB,OAAO,CAAC,aAAa,CAAC,CAACuB,KAAK;EACxC,IAAIC,YAAY,GAAGxB,OAAO,CAAC,aAAa,CAAC,CAACyB,QAAQ;EAClD,IAAIA,QAAQ,GAAGxB,OAAO,CAACwB,QAAQ,GAAG,UAAUC,YAAY,EAAE;IACtD,IAAIA,YAAY,EAAE;MACd,IAAI,CAACC,kBAAkB,GAAG,IAAIC,MAAM,CAAC,IAAI,CAACD,kBAAkB,CAACE,MAAM,CAACC,OAAO,CAAC,WAAW,EAAE,GAAG,GAAGJ,YAAY,CAACd,KAAK,CAAC,CAAC;MACnH,IAAI,CAACmB,iBAAiB,GAAG,IAAIH,MAAM,CAAC,IAAI,CAACG,iBAAiB,CAACF,MAAM,CAACC,OAAO,CAAC,WAAW,EAAE,GAAG,GAAGJ,YAAY,CAACM,GAAG,CAAC,CAAC;IACnH;EACJ,CAAC;EACD7B,GAAG,CAACmB,QAAQ,CAACG,QAAQ,EAAED,YAAY,CAAC;EACpC,CAAC,YAAY;IACT,IAAI,CAACG,kBAAkB,GAAG,kCAAkC;IAC5D,IAAI,CAACI,iBAAiB,GAAG,sCAAsC;IAC/D,IAAI,CAACE,wBAAwB,GAAG,sBAAsB;IACtD,IAAI,CAACC,wBAAwB,GAAG,0BAA0B;IAC1D,IAAI,CAACC,aAAa,GAAG,2BAA2B;IAChD,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACC,aAAa;IAC5C,IAAI,CAACA,aAAa,GAAG,UAAUC,OAAO,EAAEC,SAAS,EAAEC,GAAG,EAAE;MACpD,IAAIC,IAAI,GAAGH,OAAO,CAACI,OAAO,CAACF,GAAG,CAAC;MAC/B,IAAI,IAAI,CAACP,wBAAwB,CAACU,IAAI,CAACF,IAAI,CAAC,EAAE;QAC1C,IAAI,CAAC,IAAI,CAACN,aAAa,CAACQ,IAAI,CAACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAACP,wBAAwB,CAACS,IAAI,CAACF,IAAI,CAAC,EAC3E,OAAO,EAAE;MACjB;MACA,IAAIG,EAAE,GAAG,IAAI,CAACR,kBAAkB,CAACE,OAAO,EAAEC,SAAS,EAAEC,GAAG,CAAC;MACzD,IAAI,CAACI,EAAE,IAAI,IAAI,CAACT,aAAa,CAACQ,IAAI,CAACF,IAAI,CAAC,EACpC,OAAO,OAAO,CAAC,CAAC;MACpB,OAAOG,EAAE;IACb,CAAC;IACD,IAAI,CAACC,kBAAkB,GAAG,UAAUP,OAAO,EAAEC,SAAS,EAAEC,GAAG,EAAEM,cAAc,EAAE;MACzE,IAAIL,IAAI,GAAGH,OAAO,CAACI,OAAO,CAACF,GAAG,CAAC;MAC/B,IAAI,IAAI,CAACL,aAAa,CAACQ,IAAI,CAACF,IAAI,CAAC,EAC7B,OAAO,IAAI,CAACM,qBAAqB,CAACT,OAAO,EAAEG,IAAI,EAAED,GAAG,CAAC;MACzD,IAAIQ,KAAK,GAAGP,IAAI,CAACO,KAAK,CAAC,IAAI,CAACrB,kBAAkB,CAAC;MAC/C,IAAIqB,KAAK,EAAE;QACP,IAAIC,CAAC,GAAGD,KAAK,CAACE,KAAK;QACnB,IAAIF,KAAK,CAAC,CAAC,CAAC,EACR,OAAO,IAAI,CAACG,mBAAmB,CAACb,OAAO,EAAEU,KAAK,CAAC,CAAC,CAAC,EAAER,GAAG,EAAES,CAAC,CAAC;QAC9D,IAAIG,KAAK,GAAGd,OAAO,CAACe,mBAAmB,CAACb,GAAG,EAAES,CAAC,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACM,MAAM,EAAE,CAAC,CAAC;QACpE,IAAIF,KAAK,IAAI,CAACA,KAAK,CAACG,WAAW,CAAC,CAAC,EAAE;UAC/B,IAAIT,cAAc,EAAE;YAChBM,KAAK,GAAG,IAAI,CAACI,eAAe,CAAClB,OAAO,EAAEE,GAAG,CAAC;UAC9C,CAAC,MACI,IAAID,SAAS,IAAI,KAAK,EACvBa,KAAK,GAAG,IAAI;QACpB;QACA,OAAOA,KAAK;MAChB;MACA,IAAIb,SAAS,KAAK,WAAW,EACzB;MACJ,IAAIS,KAAK,GAAGP,IAAI,CAACO,KAAK,CAAC,IAAI,CAACjB,iBAAiB,CAAC;MAC9C,IAAIiB,KAAK,EAAE;QACP,IAAIC,CAAC,GAAGD,KAAK,CAACE,KAAK,GAAGF,KAAK,CAAC,CAAC,CAAC,CAACM,MAAM;QACrC,IAAIN,KAAK,CAAC,CAAC,CAAC,EACR,OAAO,IAAI,CAACS,mBAAmB,CAACnB,OAAO,EAAEU,KAAK,CAAC,CAAC,CAAC,EAAER,GAAG,EAAES,CAAC,CAAC;QAC9D,OAAOX,OAAO,CAACe,mBAAmB,CAACb,GAAG,EAAES,CAAC,EAAE,CAAC,CAAC,CAAC;MAClD;IACJ,CAAC;IACD,IAAI,CAACO,eAAe,GAAG,UAAUlB,OAAO,EAAEE,GAAG,EAAE;MAC3C,IAAIC,IAAI,GAAGH,OAAO,CAACI,OAAO,CAACF,GAAG,CAAC;MAC/B,IAAIkB,WAAW,GAAGjB,IAAI,CAACkB,MAAM,CAAC,IAAI,CAAC;MACnC,IAAIC,QAAQ,GAAGpB,GAAG;MAClB,IAAIqB,WAAW,GAAGpB,IAAI,CAACa,MAAM;MAC7Bd,GAAG,GAAGA,GAAG,GAAG,CAAC;MACb,IAAIsB,MAAM,GAAGtB,GAAG;MAChB,IAAIuB,MAAM,GAAGzB,OAAO,CAAC0B,SAAS,CAAC,CAAC;MAChC,OAAO,EAAExB,GAAG,GAAGuB,MAAM,EAAE;QACnBtB,IAAI,GAAGH,OAAO,CAACI,OAAO,CAACF,GAAG,CAAC;QAC3B,IAAIyB,MAAM,GAAGxB,IAAI,CAACkB,MAAM,CAAC,IAAI,CAAC;QAC9B,IAAIM,MAAM,KAAK,CAAC,CAAC,EACb;QACJ,IAAIP,WAAW,GAAGO,MAAM,EACpB;QACJ,IAAIC,QAAQ,GAAG,IAAI,CAACrB,kBAAkB,CAACP,OAAO,EAAE,KAAK,EAAEE,GAAG,CAAC;QAC3D,IAAI0B,QAAQ,EAAE;UACV,IAAIA,QAAQ,CAACtD,KAAK,CAAC4B,GAAG,IAAIoB,QAAQ,EAAE;YAChC;UACJ,CAAC,MACI,IAAIM,QAAQ,CAACX,WAAW,CAAC,CAAC,EAAE;YAC7Bf,GAAG,GAAG0B,QAAQ,CAAClC,GAAG,CAACQ,GAAG;UAC1B,CAAC,MACI,IAAIkB,WAAW,IAAIO,MAAM,EAAE;YAC5B;UACJ;QACJ;QACAH,MAAM,GAAGtB,GAAG;MAChB;MACA,OAAO,IAAIjB,KAAK,CAACqC,QAAQ,EAAEC,WAAW,EAAEC,MAAM,EAAExB,OAAO,CAACI,OAAO,CAACoB,MAAM,CAAC,CAACR,MAAM,CAAC;IACnF,CAAC;IACD,IAAI,CAACP,qBAAqB,GAAG,UAAUT,OAAO,EAAEG,IAAI,EAAED,GAAG,EAAE;MACvD,IAAIqB,WAAW,GAAGpB,IAAI,CAACkB,MAAM,CAAC,MAAM,CAAC;MACrC,IAAII,MAAM,GAAGzB,OAAO,CAAC0B,SAAS,CAAC,CAAC;MAChC,IAAIJ,QAAQ,GAAGpB,GAAG;MAClB,IAAI2B,EAAE,GAAG,sCAAsC;MAC/C,IAAIC,KAAK,GAAG,CAAC;MACb,OAAO,EAAE5B,GAAG,GAAGuB,MAAM,EAAE;QACnBtB,IAAI,GAAGH,OAAO,CAACI,OAAO,CAACF,GAAG,CAAC;QAC3B,IAAI6B,CAAC,GAAGF,EAAE,CAACG,IAAI,CAAC7B,IAAI,CAAC;QACrB,IAAI,CAAC4B,CAAC,EACF;QACJ,IAAIA,CAAC,CAAC,CAAC,CAAC,EACJD,KAAK,EAAE,CAAC,KAERA,KAAK,EAAE;QACX,IAAI,CAACA,KAAK,EACN;MACR;MACA,IAAIN,MAAM,GAAGtB,GAAG;MAChB,IAAIsB,MAAM,GAAGF,QAAQ,EAAE;QACnB,OAAO,IAAIrC,KAAK,CAACqC,QAAQ,EAAEC,WAAW,EAAEC,MAAM,EAAErB,IAAI,CAACa,MAAM,CAAC;MAChE;IACJ,CAAC;EACL,CAAC,EAAEiB,IAAI,CAAC9C,QAAQ,CAAC+C,SAAS,CAAC;AAE3B,CAAC,CAAC;AAEF1E,GAAG,CAACC,MAAM,CAAC,eAAe,EAAC,CAAC,SAAS,EAAC,SAAS,EAAC,QAAQ,EAAC,aAAa,EAAC,eAAe,EAAC,+BAA+B,EAAC,yBAAyB,CAAC,EAAE,UAASC,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAC;EAAC;AACtL;AACA;EACA,YAAY;;EACZ,IAAIC,GAAG,GAAGH,OAAO,CAAC,YAAY,CAAC;EAC/B,IAAIyE,QAAQ,GAAGzE,OAAO,CAAC,QAAQ,CAAC,CAAC0E,IAAI;EACrC,IAAIrE,kBAAkB,GAAGL,OAAO,CAAC,wBAAwB,CAAC,CAACK,kBAAkB;EAC7E,IAAIoB,QAAQ,GAAGzB,OAAO,CAAC,kBAAkB,CAAC,CAACyB,QAAQ;EACnD,IAAIiD,IAAI,GAAG,SAAAA,CAAA,EAAY;IACnB,IAAI,CAACC,cAAc,GAAGtE,kBAAkB;IACxC,IAAI,CAACuE,YAAY,GAAG,IAAInD,QAAQ,CAAC,CAAC;EACtC,CAAC;EACDtB,GAAG,CAACmB,QAAQ,CAACoD,IAAI,EAAED,QAAQ,CAAC;EAC5B,CAAC,YAAY;IACT,IAAI,CAACI,GAAG,GAAG,eAAe;EAC9B,CAAC,EAAEN,IAAI,CAACG,IAAI,CAACF,SAAS,CAAC;EACvBvE,OAAO,CAACyE,IAAI,GAAGA,IAAI;AAEnB,CAAC,CAAC;AAAiB,CAAC,YAAW;EACX5E,GAAG,CAACE,OAAO,CAAC,CAAC,eAAe,CAAC,EAAE,UAASqE,CAAC,EAAE;IACvC,IAAI,OAAOnE,MAAM,IAAI,QAAQ,IAAI,OAAOD,OAAO,IAAI,QAAQ,IAAIC,MAAM,EAAE;MACnEA,MAAM,CAACD,OAAO,GAAGoE,CAAC;IACtB;EACJ,CAAC,CAAC;AACN,CAAC,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}