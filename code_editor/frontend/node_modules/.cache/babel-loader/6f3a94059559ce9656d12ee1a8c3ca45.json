{"ast":null,"code":"ace.define(\"ace/ext/elastic_tabstops_lite\", [\"require\", \"exports\", \"module\", \"ace/editor\", \"ace/config\"], function (require, exports, module) {\n  \"use strict\";\n\n  var ElasticTabstopsLite = /** @class */function () {\n    function ElasticTabstopsLite(editor) {\n      this.$editor = editor;\n      var self = this;\n      var changedRows = [];\n      var recordChanges = false;\n      this.onAfterExec = function () {\n        recordChanges = false;\n        self.processRows(changedRows);\n        changedRows = [];\n      };\n      this.onExec = function () {\n        recordChanges = true;\n      };\n      this.onChange = function (delta) {\n        if (recordChanges) {\n          if (changedRows.indexOf(delta.start.row) == -1) changedRows.push(delta.start.row);\n          if (delta.end.row != delta.start.row) changedRows.push(delta.end.row);\n        }\n      };\n    }\n    ElasticTabstopsLite.prototype.processRows = function (rows) {\n      this.$inChange = true;\n      var checkedRows = [];\n      for (var r = 0, rowCount = rows.length; r < rowCount; r++) {\n        var row = rows[r];\n        if (checkedRows.indexOf(row) > -1) continue;\n        var cellWidthObj = this.$findCellWidthsForBlock(row);\n        var cellWidths = this.$setBlockCellWidthsToMax(cellWidthObj.cellWidths);\n        var rowIndex = cellWidthObj.firstRow;\n        for (var w = 0, l = cellWidths.length; w < l; w++) {\n          var widths = cellWidths[w];\n          checkedRows.push(rowIndex);\n          this.$adjustRow(rowIndex, widths);\n          rowIndex++;\n        }\n      }\n      this.$inChange = false;\n    };\n    ElasticTabstopsLite.prototype.$findCellWidthsForBlock = function (row) {\n      var cellWidths = [],\n        widths;\n      var rowIter = row;\n      while (rowIter >= 0) {\n        widths = this.$cellWidthsForRow(rowIter);\n        if (widths.length == 0) break;\n        cellWidths.unshift(widths);\n        rowIter--;\n      }\n      var firstRow = rowIter + 1;\n      rowIter = row;\n      var numRows = this.$editor.session.getLength();\n      while (rowIter < numRows - 1) {\n        rowIter++;\n        widths = this.$cellWidthsForRow(rowIter);\n        if (widths.length == 0) break;\n        cellWidths.push(widths);\n      }\n      return {\n        cellWidths: cellWidths,\n        firstRow: firstRow\n      };\n    };\n    ElasticTabstopsLite.prototype.$cellWidthsForRow = function (row) {\n      var selectionColumns = this.$selectionColumnsForRow(row);\n      var tabs = [-1].concat(this.$tabsForRow(row));\n      var widths = tabs.map(function (el) {\n        return 0;\n      }).slice(1);\n      var line = this.$editor.session.getLine(row);\n      for (var i = 0, len = tabs.length - 1; i < len; i++) {\n        var leftEdge = tabs[i] + 1;\n        var rightEdge = tabs[i + 1];\n        var rightmostSelection = this.$rightmostSelectionInCell(selectionColumns, rightEdge);\n        var cell = line.substring(leftEdge, rightEdge);\n        widths[i] = Math.max(cell.replace(/\\s+$/g, '').length, rightmostSelection - leftEdge);\n      }\n      return widths;\n    };\n    ElasticTabstopsLite.prototype.$selectionColumnsForRow = function (row) {\n      var selections = [],\n        cursor = this.$editor.getCursorPosition();\n      if (this.$editor.session.getSelection().isEmpty()) {\n        if (row == cursor.row) selections.push(cursor.column);\n      }\n      return selections;\n    };\n    ElasticTabstopsLite.prototype.$setBlockCellWidthsToMax = function (cellWidths) {\n      var startingNewBlock = true,\n        blockStartRow,\n        blockEndRow,\n        maxWidth;\n      var columnInfo = this.$izip_longest(cellWidths);\n      for (var c = 0, l = columnInfo.length; c < l; c++) {\n        var column = columnInfo[c];\n        if (!column.push) {\n          console.error(column);\n          continue;\n        }\n        column.push(NaN);\n        for (var r = 0, s = column.length; r < s; r++) {\n          var width = column[r];\n          if (startingNewBlock) {\n            blockStartRow = r;\n            maxWidth = 0;\n            startingNewBlock = false;\n          }\n          if (isNaN(width)) {\n            blockEndRow = r;\n            for (var j = blockStartRow; j < blockEndRow; j++) {\n              cellWidths[j][c] = maxWidth;\n            }\n            startingNewBlock = true;\n          }\n          maxWidth = Math.max(maxWidth, width);\n        }\n      }\n      return cellWidths;\n    };\n    ElasticTabstopsLite.prototype.$rightmostSelectionInCell = function (selectionColumns, cellRightEdge) {\n      var rightmost = 0;\n      if (selectionColumns.length) {\n        var lengths = [];\n        for (var s = 0, length = selectionColumns.length; s < length; s++) {\n          if (selectionColumns[s] <= cellRightEdge) lengths.push(s);else lengths.push(0);\n        }\n        rightmost = Math.max.apply(Math, lengths);\n      }\n      return rightmost;\n    };\n    ElasticTabstopsLite.prototype.$tabsForRow = function (row) {\n      var rowTabs = [],\n        line = this.$editor.session.getLine(row),\n        re = /\\t/g,\n        match;\n      while ((match = re.exec(line)) != null) {\n        rowTabs.push(match.index);\n      }\n      return rowTabs;\n    };\n    ElasticTabstopsLite.prototype.$adjustRow = function (row, widths) {\n      var rowTabs = this.$tabsForRow(row);\n      if (rowTabs.length == 0) return;\n      var bias = 0,\n        location = -1;\n      var expandedSet = this.$izip(widths, rowTabs);\n      for (var i = 0, l = expandedSet.length; i < l; i++) {\n        var w = expandedSet[i][0],\n          it = expandedSet[i][1];\n        location += 1 + w;\n        it += bias;\n        var difference = location - it;\n        if (difference == 0) continue;\n        var partialLine = this.$editor.session.getLine(row).substr(0, it);\n        var strippedPartialLine = partialLine.replace(/\\s*$/g, \"\");\n        var ispaces = partialLine.length - strippedPartialLine.length;\n        if (difference > 0) {\n          this.$editor.session.getDocument().insertInLine({\n            row: row,\n            column: it + 1\n          }, Array(difference + 1).join(\" \") + \"\\t\");\n          this.$editor.session.getDocument().removeInLine(row, it, it + 1);\n          bias += difference;\n        }\n        if (difference < 0 && ispaces >= -difference) {\n          this.$editor.session.getDocument().removeInLine(row, it + difference, it);\n          bias += difference;\n        }\n      }\n    };\n    ElasticTabstopsLite.prototype.$izip_longest = function (iterables) {\n      if (!iterables[0]) return [];\n      var longest = iterables[0].length;\n      var iterablesLength = iterables.length;\n      for (var i = 1; i < iterablesLength; i++) {\n        var iLength = iterables[i].length;\n        if (iLength > longest) longest = iLength;\n      }\n      var expandedSet = [];\n      for (var l = 0; l < longest; l++) {\n        var set = [];\n        for (var i = 0; i < iterablesLength; i++) {\n          if (iterables[i][l] === \"\") set.push(NaN);else set.push(iterables[i][l]);\n        }\n        expandedSet.push(set);\n      }\n      return expandedSet;\n    };\n    ElasticTabstopsLite.prototype.$izip = function (widths, tabs) {\n      var size = widths.length >= tabs.length ? tabs.length : widths.length;\n      var expandedSet = [];\n      for (var i = 0; i < size; i++) {\n        var set = [widths[i], tabs[i]];\n        expandedSet.push(set);\n      }\n      return expandedSet;\n    };\n    return ElasticTabstopsLite;\n  }();\n  exports.ElasticTabstopsLite = ElasticTabstopsLite;\n  var Editor = require(\"../editor\").Editor;\n  require(\"../config\").defineOptions(Editor.prototype, \"editor\", {\n    useElasticTabstops: {\n      set: function (val) {\n        if (val) {\n          if (!this.elasticTabstops) this.elasticTabstops = new ElasticTabstopsLite(this);\n          this.commands.on(\"afterExec\", this.elasticTabstops.onAfterExec);\n          this.commands.on(\"exec\", this.elasticTabstops.onExec);\n          this.on(\"change\", this.elasticTabstops.onChange);\n        } else if (this.elasticTabstops) {\n          this.commands.removeListener(\"afterExec\", this.elasticTabstops.onAfterExec);\n          this.commands.removeListener(\"exec\", this.elasticTabstops.onExec);\n          this.removeListener(\"change\", this.elasticTabstops.onChange);\n        }\n      }\n    }\n  });\n});\n(function () {\n  ace.require([\"ace/ext/elastic_tabstops_lite\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","ElasticTabstopsLite","editor","$editor","self","changedRows","recordChanges","onAfterExec","processRows","onExec","onChange","delta","indexOf","start","row","push","end","prototype","rows","$inChange","checkedRows","r","rowCount","length","cellWidthObj","$findCellWidthsForBlock","cellWidths","$setBlockCellWidthsToMax","rowIndex","firstRow","w","l","widths","$adjustRow","rowIter","$cellWidthsForRow","unshift","numRows","session","getLength","selectionColumns","$selectionColumnsForRow","tabs","concat","$tabsForRow","map","el","slice","line","getLine","i","len","leftEdge","rightEdge","rightmostSelection","$rightmostSelectionInCell","cell","substring","Math","max","replace","selections","cursor","getCursorPosition","getSelection","isEmpty","column","startingNewBlock","blockStartRow","blockEndRow","maxWidth","columnInfo","$izip_longest","c","console","error","NaN","s","width","isNaN","j","cellRightEdge","rightmost","lengths","apply","rowTabs","re","match","exec","index","bias","location","expandedSet","$izip","it","difference","partialLine","substr","strippedPartialLine","ispaces","getDocument","insertInLine","Array","join","removeInLine","iterables","longest","iterablesLength","iLength","set","size","Editor","defineOptions","useElasticTabstops","val","elasticTabstops","commands","on","removeListener","m"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/ext-elastic_tabstops_lite.js"],"sourcesContent":["ace.define(\"ace/ext/elastic_tabstops_lite\",[\"require\",\"exports\",\"module\",\"ace/editor\",\"ace/config\"], function(require, exports, module){\"use strict\";\nvar ElasticTabstopsLite = /** @class */ (function () {\n    function ElasticTabstopsLite(editor) {\n        this.$editor = editor;\n        var self = this;\n        var changedRows = [];\n        var recordChanges = false;\n        this.onAfterExec = function () {\n            recordChanges = false;\n            self.processRows(changedRows);\n            changedRows = [];\n        };\n        this.onExec = function () {\n            recordChanges = true;\n        };\n        this.onChange = function (delta) {\n            if (recordChanges) {\n                if (changedRows.indexOf(delta.start.row) == -1)\n                    changedRows.push(delta.start.row);\n                if (delta.end.row != delta.start.row)\n                    changedRows.push(delta.end.row);\n            }\n        };\n    }\n    ElasticTabstopsLite.prototype.processRows = function (rows) {\n        this.$inChange = true;\n        var checkedRows = [];\n        for (var r = 0, rowCount = rows.length; r < rowCount; r++) {\n            var row = rows[r];\n            if (checkedRows.indexOf(row) > -1)\n                continue;\n            var cellWidthObj = this.$findCellWidthsForBlock(row);\n            var cellWidths = this.$setBlockCellWidthsToMax(cellWidthObj.cellWidths);\n            var rowIndex = cellWidthObj.firstRow;\n            for (var w = 0, l = cellWidths.length; w < l; w++) {\n                var widths = cellWidths[w];\n                checkedRows.push(rowIndex);\n                this.$adjustRow(rowIndex, widths);\n                rowIndex++;\n            }\n        }\n        this.$inChange = false;\n    };\n    ElasticTabstopsLite.prototype.$findCellWidthsForBlock = function (row) {\n        var cellWidths = [], widths;\n        var rowIter = row;\n        while (rowIter >= 0) {\n            widths = this.$cellWidthsForRow(rowIter);\n            if (widths.length == 0)\n                break;\n            cellWidths.unshift(widths);\n            rowIter--;\n        }\n        var firstRow = rowIter + 1;\n        rowIter = row;\n        var numRows = this.$editor.session.getLength();\n        while (rowIter < numRows - 1) {\n            rowIter++;\n            widths = this.$cellWidthsForRow(rowIter);\n            if (widths.length == 0)\n                break;\n            cellWidths.push(widths);\n        }\n        return { cellWidths: cellWidths, firstRow: firstRow };\n    };\n    ElasticTabstopsLite.prototype.$cellWidthsForRow = function (row) {\n        var selectionColumns = this.$selectionColumnsForRow(row);\n        var tabs = [-1].concat(this.$tabsForRow(row));\n        var widths = tabs.map(function (el) { return 0; }).slice(1);\n        var line = this.$editor.session.getLine(row);\n        for (var i = 0, len = tabs.length - 1; i < len; i++) {\n            var leftEdge = tabs[i] + 1;\n            var rightEdge = tabs[i + 1];\n            var rightmostSelection = this.$rightmostSelectionInCell(selectionColumns, rightEdge);\n            var cell = line.substring(leftEdge, rightEdge);\n            widths[i] = Math.max(cell.replace(/\\s+$/g, '').length, rightmostSelection - leftEdge);\n        }\n        return widths;\n    };\n    ElasticTabstopsLite.prototype.$selectionColumnsForRow = function (row) {\n        var selections = [], cursor = this.$editor.getCursorPosition();\n        if (this.$editor.session.getSelection().isEmpty()) {\n            if (row == cursor.row)\n                selections.push(cursor.column);\n        }\n        return selections;\n    };\n    ElasticTabstopsLite.prototype.$setBlockCellWidthsToMax = function (cellWidths) {\n        var startingNewBlock = true, blockStartRow, blockEndRow, maxWidth;\n        var columnInfo = this.$izip_longest(cellWidths);\n        for (var c = 0, l = columnInfo.length; c < l; c++) {\n            var column = columnInfo[c];\n            if (!column.push) {\n                console.error(column);\n                continue;\n            }\n            column.push(NaN);\n            for (var r = 0, s = column.length; r < s; r++) {\n                var width = column[r];\n                if (startingNewBlock) {\n                    blockStartRow = r;\n                    maxWidth = 0;\n                    startingNewBlock = false;\n                }\n                if (isNaN(width)) {\n                    blockEndRow = r;\n                    for (var j = blockStartRow; j < blockEndRow; j++) {\n                        cellWidths[j][c] = maxWidth;\n                    }\n                    startingNewBlock = true;\n                }\n                maxWidth = Math.max(maxWidth, width);\n            }\n        }\n        return cellWidths;\n    };\n    ElasticTabstopsLite.prototype.$rightmostSelectionInCell = function (selectionColumns, cellRightEdge) {\n        var rightmost = 0;\n        if (selectionColumns.length) {\n            var lengths = [];\n            for (var s = 0, length = selectionColumns.length; s < length; s++) {\n                if (selectionColumns[s] <= cellRightEdge)\n                    lengths.push(s);\n                else\n                    lengths.push(0);\n            }\n            rightmost = Math.max.apply(Math, lengths);\n        }\n        return rightmost;\n    };\n    ElasticTabstopsLite.prototype.$tabsForRow = function (row) {\n        var rowTabs = [], line = this.$editor.session.getLine(row), re = /\\t/g, match;\n        while ((match = re.exec(line)) != null) {\n            rowTabs.push(match.index);\n        }\n        return rowTabs;\n    };\n    ElasticTabstopsLite.prototype.$adjustRow = function (row, widths) {\n        var rowTabs = this.$tabsForRow(row);\n        if (rowTabs.length == 0)\n            return;\n        var bias = 0, location = -1;\n        var expandedSet = this.$izip(widths, rowTabs);\n        for (var i = 0, l = expandedSet.length; i < l; i++) {\n            var w = expandedSet[i][0], it = expandedSet[i][1];\n            location += 1 + w;\n            it += bias;\n            var difference = location - it;\n            if (difference == 0)\n                continue;\n            var partialLine = this.$editor.session.getLine(row).substr(0, it);\n            var strippedPartialLine = partialLine.replace(/\\s*$/g, \"\");\n            var ispaces = partialLine.length - strippedPartialLine.length;\n            if (difference > 0) {\n                this.$editor.session.getDocument().insertInLine({ row: row, column: it + 1 }, Array(difference + 1).join(\" \") + \"\\t\");\n                this.$editor.session.getDocument().removeInLine(row, it, it + 1);\n                bias += difference;\n            }\n            if (difference < 0 && ispaces >= -difference) {\n                this.$editor.session.getDocument().removeInLine(row, it + difference, it);\n                bias += difference;\n            }\n        }\n    };\n    ElasticTabstopsLite.prototype.$izip_longest = function (iterables) {\n        if (!iterables[0])\n            return [];\n        var longest = iterables[0].length;\n        var iterablesLength = iterables.length;\n        for (var i = 1; i < iterablesLength; i++) {\n            var iLength = iterables[i].length;\n            if (iLength > longest)\n                longest = iLength;\n        }\n        var expandedSet = [];\n        for (var l = 0; l < longest; l++) {\n            var set = [];\n            for (var i = 0; i < iterablesLength; i++) {\n                if (iterables[i][l] === \"\")\n                    set.push(NaN);\n                else\n                    set.push(iterables[i][l]);\n            }\n            expandedSet.push(set);\n        }\n        return expandedSet;\n    };\n    ElasticTabstopsLite.prototype.$izip = function (widths, tabs) {\n        var size = widths.length >= tabs.length ? tabs.length : widths.length;\n        var expandedSet = [];\n        for (var i = 0; i < size; i++) {\n            var set = [widths[i], tabs[i]];\n            expandedSet.push(set);\n        }\n        return expandedSet;\n    };\n    return ElasticTabstopsLite;\n}());\nexports.ElasticTabstopsLite = ElasticTabstopsLite;\nvar Editor = require(\"../editor\").Editor;\nrequire(\"../config\").defineOptions(Editor.prototype, \"editor\", {\n    useElasticTabstops: {\n        set: function (val) {\n            if (val) {\n                if (!this.elasticTabstops)\n                    this.elasticTabstops = new ElasticTabstopsLite(this);\n                this.commands.on(\"afterExec\", this.elasticTabstops.onAfterExec);\n                this.commands.on(\"exec\", this.elasticTabstops.onExec);\n                this.on(\"change\", this.elasticTabstops.onChange);\n            }\n            else if (this.elasticTabstops) {\n                this.commands.removeListener(\"afterExec\", this.elasticTabstops.onAfterExec);\n                this.commands.removeListener(\"exec\", this.elasticTabstops.onExec);\n                this.removeListener(\"change\", this.elasticTabstops.onChange);\n            }\n        }\n    }\n});\n\n});                (function() {\n                    ace.require([\"ace/ext/elastic_tabstops_lite\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}