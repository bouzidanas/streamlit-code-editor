{"ast":null,"code":"ace.define(\"ace/mode/diff_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var DiffHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        regex: \"^(?:\\\\*{15}|={67}|-{3}|\\\\+{3})$\",\n        token: \"punctuation.definition.separator.diff\",\n        \"name\": \"keyword\"\n      }, {\n        regex: \"^(@@)(\\\\s*.+?\\\\s*)(@@)(.*)$\",\n        token: [\"constant\", \"constant.numeric\", \"constant\", \"comment.doc.tag\"]\n      }, {\n        regex: \"^(\\\\d+)([,\\\\d]+)(a|d|c)(\\\\d+)([,\\\\d]+)(.*)$\",\n        token: [\"constant.numeric\", \"punctuation.definition.range.diff\", \"constant.function\", \"constant.numeric\", \"punctuation.definition.range.diff\", \"invalid\"],\n        \"name\": \"meta.\"\n      }, {\n        regex: \"^(\\\\-{3}|\\\\+{3}|\\\\*{3})( .+)$\",\n        token: [\"constant.numeric\", \"meta.tag\"]\n      }, {\n        regex: \"^([!+>])(.*?)(\\\\s*)$\",\n        token: [\"support.constant\", \"text\", \"invalid\"]\n      }, {\n        regex: \"^([<\\\\-])(.*?)(\\\\s*)$\",\n        token: [\"support.function\", \"string\", \"invalid\"]\n      }, {\n        regex: \"^(diff)(\\\\s+--\\\\w+)?(.+?)( .+)?$\",\n        token: [\"variable\", \"variable\", \"keyword\", \"variable\"]\n      }, {\n        regex: \"^Index.+$\",\n        token: \"variable\"\n      }, {\n        regex: \"^\\\\s+$\",\n        token: \"text\"\n      }, {\n        regex: \"\\\\s*$\",\n        token: \"invalid\"\n      }, {\n        defaultToken: \"invisible\",\n        caseInsensitive: true\n      }]\n    };\n  };\n  oop.inherits(DiffHighlightRules, TextHighlightRules);\n  exports.DiffHighlightRules = DiffHighlightRules;\n});\nace.define(\"ace/mode/folding/diff\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var Range = require(\"../../range\").Range;\n  var FoldMode = exports.FoldMode = function (levels, flag) {\n    this.regExpList = levels;\n    this.flag = flag;\n    this.foldingStartMarker = RegExp(\"^(\" + levels.join(\"|\") + \")\", this.flag);\n  };\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var start = {\n        row: row,\n        column: line.length\n      };\n      var regList = this.regExpList;\n      for (var i = 1; i <= regList.length; i++) {\n        var re = RegExp(\"^(\" + regList.slice(0, i).join(\"|\") + \")\", this.flag);\n        if (re.test(line)) break;\n      }\n      for (var l = session.getLength(); ++row < l;) {\n        line = session.getLine(row);\n        if (re.test(line)) break;\n      }\n      if (row == start.row + 1) return;\n      return new Range(start.row, start.column, row - 1, line.length);\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/diff\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/diff_highlight_rules\", \"ace/mode/folding/diff\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var HighlightRules = require(\"./diff_highlight_rules\").DiffHighlightRules;\n  var FoldMode = require(\"./folding/diff\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = HighlightRules;\n    this.foldingRules = new FoldMode([\"diff\", \"@@|\\\\*{5}\"], \"i\");\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.$id = \"ace/mode/diff\";\n    this.snippetFileId = \"ace/snippets/diff\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/diff\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","DiffHighlightRules","$rules","regex","token","defaultToken","caseInsensitive","inherits","BaseFoldMode","FoldMode","Range","levels","flag","regExpList","foldingStartMarker","RegExp","join","getFoldWidgetRange","session","foldStyle","row","line","getLine","start","column","length","regList","i","re","slice","test","l","getLength","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$id","snippetFileId","m"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-diff.js"],"sourcesContent":["ace.define(\"ace/mode/diff_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar DiffHighlightRules = function () {\n    this.$rules = {\n        \"start\": [{\n                regex: \"^(?:\\\\*{15}|={67}|-{3}|\\\\+{3})$\",\n                token: \"punctuation.definition.separator.diff\",\n                \"name\": \"keyword\"\n            }, {\n                regex: \"^(@@)(\\\\s*.+?\\\\s*)(@@)(.*)$\",\n                token: [\n                    \"constant\",\n                    \"constant.numeric\",\n                    \"constant\",\n                    \"comment.doc.tag\"\n                ]\n            }, {\n                regex: \"^(\\\\d+)([,\\\\d]+)(a|d|c)(\\\\d+)([,\\\\d]+)(.*)$\",\n                token: [\n                    \"constant.numeric\",\n                    \"punctuation.definition.range.diff\",\n                    \"constant.function\",\n                    \"constant.numeric\",\n                    \"punctuation.definition.range.diff\",\n                    \"invalid\"\n                ],\n                \"name\": \"meta.\"\n            }, {\n                regex: \"^(\\\\-{3}|\\\\+{3}|\\\\*{3})( .+)$\",\n                token: [\n                    \"constant.numeric\",\n                    \"meta.tag\"\n                ]\n            }, {\n                regex: \"^([!+>])(.*?)(\\\\s*)$\",\n                token: [\n                    \"support.constant\",\n                    \"text\",\n                    \"invalid\"\n                ]\n            }, {\n                regex: \"^([<\\\\-])(.*?)(\\\\s*)$\",\n                token: [\n                    \"support.function\",\n                    \"string\",\n                    \"invalid\"\n                ]\n            }, {\n                regex: \"^(diff)(\\\\s+--\\\\w+)?(.+?)( .+)?$\",\n                token: [\"variable\", \"variable\", \"keyword\", \"variable\"]\n            }, {\n                regex: \"^Index.+$\",\n                token: \"variable\"\n            }, {\n                regex: \"^\\\\s+$\",\n                token: \"text\"\n            }, {\n                regex: \"\\\\s*$\",\n                token: \"invalid\"\n            }, {\n                defaultToken: \"invisible\",\n                caseInsensitive: true\n            }\n        ]\n    };\n};\noop.inherits(DiffHighlightRules, TextHighlightRules);\nexports.DiffHighlightRules = DiffHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/diff\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar Range = require(\"../../range\").Range;\nvar FoldMode = exports.FoldMode = function (levels, flag) {\n    this.regExpList = levels;\n    this.flag = flag;\n    this.foldingStartMarker = RegExp(\"^(\" + levels.join(\"|\") + \")\", this.flag);\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        var start = { row: row, column: line.length };\n        var regList = this.regExpList;\n        for (var i = 1; i <= regList.length; i++) {\n            var re = RegExp(\"^(\" + regList.slice(0, i).join(\"|\") + \")\", this.flag);\n            if (re.test(line))\n                break;\n        }\n        for (var l = session.getLength(); ++row < l;) {\n            line = session.getLine(row);\n            if (re.test(line))\n                break;\n        }\n        if (row == start.row + 1)\n            return;\n        return new Range(start.row, start.column, row - 1, line.length);\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/diff\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/diff_highlight_rules\",\"ace/mode/folding/diff\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar HighlightRules = require(\"./diff_highlight_rules\").DiffHighlightRules;\nvar FoldMode = require(\"./folding/diff\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = HighlightRules;\n    this.foldingRules = new FoldMode([\"diff\", \"@@|\\\\*{5}\"], \"i\");\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.$id = \"ace/mode/diff\";\n    this.snippetFileId = \"ace/snippets/diff\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/diff\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}