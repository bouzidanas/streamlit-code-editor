{"ast":null,"code":"ace.define(\"ace/ext/rtl\", [\"require\", \"exports\", \"module\", \"ace/editor\", \"ace/config\"], function (require, exports, module) {\n  \"use strict\";\n\n  var commands = [{\n    name: \"leftToRight\",\n    bindKey: {\n      win: \"Ctrl-Alt-Shift-L\",\n      mac: \"Command-Alt-Shift-L\"\n    },\n    exec: function (editor) {\n      editor.session.$bidiHandler.setRtlDirection(editor, false);\n    },\n    readOnly: true\n  }, {\n    name: \"rightToLeft\",\n    bindKey: {\n      win: \"Ctrl-Alt-Shift-R\",\n      mac: \"Command-Alt-Shift-R\"\n    },\n    exec: function (editor) {\n      editor.session.$bidiHandler.setRtlDirection(editor, true);\n    },\n    readOnly: true\n  }];\n  var Editor = require(\"../editor\").Editor;\n  require(\"../config\").defineOptions(Editor.prototype, \"editor\", {\n    rtlText: {\n      set: function (val) {\n        if (val) {\n          this.on(\"change\", onChange);\n          this.on(\"changeSelection\", onChangeSelection);\n          this.renderer.on(\"afterRender\", updateLineDirection);\n          this.commands.on(\"exec\", onCommandEmitted);\n          this.commands.addCommands(commands);\n        } else {\n          this.off(\"change\", onChange);\n          this.off(\"changeSelection\", onChangeSelection);\n          this.renderer.off(\"afterRender\", updateLineDirection);\n          this.commands.off(\"exec\", onCommandEmitted);\n          this.commands.removeCommands(commands);\n          clearTextLayer(this.renderer);\n        }\n        this.renderer.updateFull();\n      }\n    },\n    rtl: {\n      set: function (val) {\n        this.session.$bidiHandler.$isRtl = val;\n        if (val) {\n          this.setOption(\"rtlText\", false);\n          this.renderer.on(\"afterRender\", updateLineDirection);\n          this.session.$bidiHandler.seenBidi = true;\n        } else {\n          this.renderer.off(\"afterRender\", updateLineDirection);\n          clearTextLayer(this.renderer);\n        }\n        this.renderer.updateFull();\n      }\n    }\n  });\n  function onChangeSelection(e, editor) {\n    var lead = editor.getSelection().lead;\n    if (editor.session.$bidiHandler.isRtlLine(lead.row)) {\n      if (lead.column === 0) {\n        if (editor.session.$bidiHandler.isMoveLeftOperation && lead.row > 0) {\n          editor.getSelection().moveCursorTo(lead.row - 1, editor.session.getLine(lead.row - 1).length);\n        } else {\n          if (editor.getSelection().isEmpty()) lead.column += 1;else lead.setPosition(lead.row, lead.column + 1);\n        }\n      }\n    }\n  }\n  function onCommandEmitted(commadEvent) {\n    commadEvent.editor.session.$bidiHandler.isMoveLeftOperation = /gotoleft|selectleft|backspace|removewordleft/.test(commadEvent.command.name);\n  }\n  function onChange(delta, editor) {\n    var session = editor.session;\n    session.$bidiHandler.currentRow = null;\n    if (session.$bidiHandler.isRtlLine(delta.start.row) && delta.action === 'insert' && delta.lines.length > 1) {\n      for (var row = delta.start.row; row < delta.end.row; row++) {\n        if (session.getLine(row + 1).charAt(0) !== session.$bidiHandler.RLE) session.doc.$lines[row + 1] = session.$bidiHandler.RLE + session.getLine(row + 1);\n      }\n    }\n  }\n  function updateLineDirection(e, renderer) {\n    var session = renderer.session;\n    var $bidiHandler = session.$bidiHandler;\n    var cells = renderer.$textLayer.$lines.cells;\n    var width = renderer.layerConfig.width - renderer.layerConfig.padding + \"px\";\n    cells.forEach(function (cell) {\n      var style = cell.element.style;\n      if ($bidiHandler && $bidiHandler.isRtlLine(cell.row)) {\n        style.direction = \"rtl\";\n        style.textAlign = \"right\";\n        style.width = width;\n      } else {\n        style.direction = \"\";\n        style.textAlign = \"\";\n        style.width = \"\";\n      }\n    });\n  }\n  function clearTextLayer(renderer) {\n    var lines = renderer.$textLayer.$lines;\n    lines.cells.forEach(clear);\n    lines.cellCache.forEach(clear);\n    function clear(cell) {\n      var style = cell.element.style;\n      style.direction = style.textAlign = style.width = \"\";\n    }\n  }\n});\n(function () {\n  ace.require([\"ace/ext/rtl\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","commands","name","bindKey","win","mac","exec","editor","session","$bidiHandler","setRtlDirection","readOnly","Editor","defineOptions","prototype","rtlText","set","val","on","onChange","onChangeSelection","renderer","updateLineDirection","onCommandEmitted","addCommands","off","removeCommands","clearTextLayer","updateFull","rtl","$isRtl","setOption","seenBidi","e","lead","getSelection","isRtlLine","row","column","isMoveLeftOperation","moveCursorTo","getLine","length","isEmpty","setPosition","commadEvent","test","command","delta","currentRow","start","action","lines","end","charAt","RLE","doc","$lines","cells","$textLayer","width","layerConfig","padding","forEach","cell","style","element","direction","textAlign","clear","cellCache","m"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/ext-rtl.js"],"sourcesContent":["ace.define(\"ace/ext/rtl\",[\"require\",\"exports\",\"module\",\"ace/editor\",\"ace/config\"], function(require, exports, module){\"use strict\";\nvar commands = [{\n        name: \"leftToRight\",\n        bindKey: { win: \"Ctrl-Alt-Shift-L\", mac: \"Command-Alt-Shift-L\" },\n        exec: function (editor) {\n            editor.session.$bidiHandler.setRtlDirection(editor, false);\n        },\n        readOnly: true\n    }, {\n        name: \"rightToLeft\",\n        bindKey: { win: \"Ctrl-Alt-Shift-R\", mac: \"Command-Alt-Shift-R\" },\n        exec: function (editor) {\n            editor.session.$bidiHandler.setRtlDirection(editor, true);\n        },\n        readOnly: true\n    }];\nvar Editor = require(\"../editor\").Editor;\nrequire(\"../config\").defineOptions(Editor.prototype, \"editor\", {\n    rtlText: {\n        set: function (val) {\n            if (val) {\n                this.on(\"change\", onChange);\n                this.on(\"changeSelection\", onChangeSelection);\n                this.renderer.on(\"afterRender\", updateLineDirection);\n                this.commands.on(\"exec\", onCommandEmitted);\n                this.commands.addCommands(commands);\n            }\n            else {\n                this.off(\"change\", onChange);\n                this.off(\"changeSelection\", onChangeSelection);\n                this.renderer.off(\"afterRender\", updateLineDirection);\n                this.commands.off(\"exec\", onCommandEmitted);\n                this.commands.removeCommands(commands);\n                clearTextLayer(this.renderer);\n            }\n            this.renderer.updateFull();\n        }\n    },\n    rtl: {\n        set: function (val) {\n            this.session.$bidiHandler.$isRtl = val;\n            if (val) {\n                this.setOption(\"rtlText\", false);\n                this.renderer.on(\"afterRender\", updateLineDirection);\n                this.session.$bidiHandler.seenBidi = true;\n            }\n            else {\n                this.renderer.off(\"afterRender\", updateLineDirection);\n                clearTextLayer(this.renderer);\n            }\n            this.renderer.updateFull();\n        }\n    }\n});\nfunction onChangeSelection(e, editor) {\n    var lead = editor.getSelection().lead;\n    if (editor.session.$bidiHandler.isRtlLine(lead.row)) {\n        if (lead.column === 0) {\n            if (editor.session.$bidiHandler.isMoveLeftOperation && lead.row > 0) {\n                editor.getSelection().moveCursorTo(lead.row - 1, editor.session.getLine(lead.row - 1).length);\n            }\n            else {\n                if (editor.getSelection().isEmpty())\n                    lead.column += 1;\n                else\n                    lead.setPosition(lead.row, lead.column + 1);\n            }\n        }\n    }\n}\nfunction onCommandEmitted(commadEvent) {\n    commadEvent.editor.session.$bidiHandler.isMoveLeftOperation = /gotoleft|selectleft|backspace|removewordleft/.test(commadEvent.command.name);\n}\nfunction onChange(delta, editor) {\n    var session = editor.session;\n    session.$bidiHandler.currentRow = null;\n    if (session.$bidiHandler.isRtlLine(delta.start.row) && delta.action === 'insert' && delta.lines.length > 1) {\n        for (var row = delta.start.row; row < delta.end.row; row++) {\n            if (session.getLine(row + 1).charAt(0) !== session.$bidiHandler.RLE)\n                session.doc.$lines[row + 1] = session.$bidiHandler.RLE + session.getLine(row + 1);\n        }\n    }\n}\nfunction updateLineDirection(e, renderer) {\n    var session = renderer.session;\n    var $bidiHandler = session.$bidiHandler;\n    var cells = renderer.$textLayer.$lines.cells;\n    var width = renderer.layerConfig.width - renderer.layerConfig.padding + \"px\";\n    cells.forEach(function (cell) {\n        var style = cell.element.style;\n        if ($bidiHandler && $bidiHandler.isRtlLine(cell.row)) {\n            style.direction = \"rtl\";\n            style.textAlign = \"right\";\n            style.width = width;\n        }\n        else {\n            style.direction = \"\";\n            style.textAlign = \"\";\n            style.width = \"\";\n        }\n    });\n}\nfunction clearTextLayer(renderer) {\n    var lines = renderer.$textLayer.$lines;\n    lines.cells.forEach(clear);\n    lines.cellCache.forEach(clear);\n    function clear(cell) {\n        var style = cell.element.style;\n        style.direction = style.textAlign = style.width = \"\";\n    }\n}\n\n});                (function() {\n                    ace.require([\"ace/ext/rtl\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}