{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";import _styled,{createGlobalStyle as _createGlobalStyle}from\"styled-components\";var _templateObject;import{Streamlit,withStreamlitConnection}from\"streamlit-component-lib\";import{v1}from'uuid';import{useState,useRef,useEffect,useMemo}from\"react\";import ace from\"ace-builds\";import{Editor}from'./editor';import{Menu as ButtonMenu,Set as ButtonSet,Info as InfoBar}from\"./button-menu\";import\"ace-builds/webpack-resolver\";import\"ace-builds/src-noconflict/mode-python\";import\"ace-builds/src-noconflict/mode-javascript\";import\"ace-builds/src-noconflict/ext-language_tools\";import\"ace-builds/src-noconflict/ext-searchbox\";import\"ace-builds/src-noconflict/ext-prompt\";import\"ace-builds/src-noconflict/ext-modelist\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const defaultOptions={fontFamily:'\"Source Code Pro\", monospace',cursorStyle:\"smooth\",displayIndentGuides:false,wrap:false,highlightActiveLine:true,showPrintMargin:false,showLineNumbers:false,foldStyle:\"markbegin\",autoScrollEditorIntoView:false,animatedScroll:true,fadeFoldWidgets:true};const defaultEditorProps={editorProps:{$blockScrolling:true}};const defaultProps={cursorStart:1,enableBasicAutocompletion:false,enableLiveAutocompletion:true,enableSnippets:true,focus:false,fontSize:14,highlightActiveLine:true,navigateToFileEnd:true,placeholder:null,readOnly:false,scrollMargin:[15,15,0,0],setOptions:defaultOptions,showGutter:true,showPrintMargin:false,style:{},tabSize:4,width:\"auto\",debounceChangePeriod:250};const GlobalCSS=_createGlobalStyle(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  html {\\n    opacity: \",\";\\n    cursor: \",\";\\n    pointer-events: \",\";\\n  }\\n  \",\"\\n\"])),props=>props.isDisabled?\"0.5\":\"1\",props=>props.isDisabled?\"not-allowed\":\"auto\",props=>props.isDisabled?\"none\":\"auto\",props=>props.inject);const StyledCodeEditor=_styled.div.withConfig({displayName:\"CodeEditor__StyledCodeEditor\",componentId:\"sc-wmif04-0\"})([\"width:100%;border-radius:8px;overflow:hidden;display:flex;flex-direction:column;:hover button{opacity:1;transform:scale(1);}button.always-on{opacity:1;transform:scale(1);transition:none;}:hover button svg{opacity:1;transform:scale(1);}:hover button.with-icon span{opacity:1;transform:scale(1);}button.always-on > span{opacity:1;transform:scale(1);transition:none;}button.always-on > svg{opacity:1;transform:scale(1);transition:none;}\"]);var _StyledStyledCodeEditor=_styled(StyledCodeEditor).withConfig({displayName:\"CodeEditor___StyledStyledCodeEditor\",componentId:\"sc-wmif04-1\"})([\"\",\"\"],p=>p.$_css);const CodeEditor=_ref=>{var _ref3;let{args,width,disabled,theme}=_ref;//sets code to the initial value every time the component is rendered\n//to set the initial value once, use a function instead of a value.\nconst[code,setCode]=useState(args['code']);// const [keybindingAddRemove, setKeybindingAddRemove] = useState([\"\",\"\"]);\nconst aceEditor=useRef(null);const infoTextRef=useRef(null);const baseSession=useRef(null);const keepFocus=useRef(false);const reset=useRef(false);var timeoutId;/**\n    * This function takes as input either a snippetText string that is expected\n    * to be already formatted like the text in a SnippetFile or a dictionary or \n    * and array of dictionaries. For the first case, it just returns the input.\n    * For the second and third case, a (SnippetFile format) string is constructed\n    * from the dict(s) and returned. Learn more about snippets {@link  here}\n    * @param snippetRaw snippets to be converted to a single snippetText string\n    * @returns {string} snippetText\n    */const createSnippets=snippetRaw=>{return typeof snippetRaw===\"string\"?snippetRaw:(Array.isArray(snippetRaw)?snippetRaw:[snippetRaw]).map(_ref2=>{let{name,code}=_ref2;return['snippet '+name,code.split('\\n').map(c=>'\\t'+c).join('\\n')].join('\\n');}).join('\\n');};const[snippetAddRemove,setSnippetAddRemove]=useState({[args['lang']]:[createSnippets(args[\"snippets\"][0]),createSnippets(args[\"snippets\"][1])]});const[keybindingAddRemove,setKeybindingAddRemove]=useState(args['keybindings']);useEffect(()=>{return()=>{if(timeoutId){clearTimeout(timeoutId);}};},[]);useEffect(()=>{if(aceEditor.current&&keepFocus.current){aceEditor.current.editor.focus();keepFocus.current=false;}},[keepFocus.current]);// To reasons for the useEffect here: \n//   1. to set the focus on the editor only when the focus argument has changed to true.\n//   2. to set the focus on the editor after rendering the component at which point, the \n//      editor should be ready.\nuseEffect(()=>{if(aceEditor.current&&args.focus){aceEditor.current.editor.focus();}},[args.focus]);const onChangeHandler=newCode=>{setCode(newCode);const responseMode=typeof args[\"response_mode\"]===\"string\"?[args[\"response_mode\"]]:args[\"response_mode\"];if(responseMode.includes(\"debounce\")&&aceEditor.current&&aceEditor.current.editor){const editor=aceEditor.current.editor;const outgoingMode=editor.getSession().$modeId.split(\"/\").pop();Streamlit.setComponentValue({id:v1().slice(0,8),type:\"change\",lang:outgoingMode,text:newCode,selected:editor.getSelectedText(),cursor:editor.getCursorPosition()});}};const onSelectionChangeHandler=selectedText=>{const responseMode=typeof args[\"response_mode\"]===\"string\"?[args[\"response_mode\"]]:args[\"response_mode\"];if(responseMode.includes(\"select\")&&aceEditor.current&&aceEditor.current.editor){const editor=aceEditor.current.editor;const outgoingMode=editor.getSession().$modeId.split(\"/\").pop();Streamlit.setComponentValue({id:v1().slice(0,8),type:\"selection\",lang:outgoingMode,text:code,selected:editor.getSelectedText(),cursor:editor.getCursorPosition()});}};const onEditorBlur=(event,editor)=>{const responseMode=typeof args[\"response_mode\"]===\"string\"?[args[\"response_mode\"]]:args[\"response_mode\"];if(responseMode.includes(\"blur\")&&editor){const outgoingMode=editor.getSession().$modeId.split(\"/\").pop();setCode(editor.getValue());Streamlit.setComponentValue({id:v1().slice(0,8),type:\"blur\",lang:outgoingMode,text:editor.getValue(),selected:editor.getSelectedText(),cursor:editor.getCursorPosition()});}};// commands is an array of objects containing functions\n// that the editor can be triggered to call.\nconst commands={commands:[{name:'submit',//name for the key binding.\ndescription:\"Send 'submit' response\",//description of the command\nbindKey:{win:'Ctrl-Enter',mac:'Command-Enter'},//key combination used for the command.\nexec:editor=>{const outgoingMode=editor.getSession().$modeId.split(\"/\").pop();Streamlit.setComponentValue({id:v1().slice(0,8),type:\"submit\",lang:outgoingMode,text:editor.getValue(),selected:editor.getSelectedText(),cursor:editor.getCursorPosition()});}},{name:'saveState',description:\"Save state\",bindKey:{win:'Ctrl-Alt-S',mac:'Command-Alt-S'},exec:editor=>{setCode(editor.getValue());}},{name:'copyAll',description:\"Copy all text to clipboard\",exec:editor=>{unsecureCopyTextToClipboard(editor.getValue());}},{name:'reset',exec:()=>{resetEditor();}},{name:'keepFocus',description:\"Return cursor to editor\",exec:()=>{keepFocus.current=true;}},{name:\"setMode\",description:\"Set language mode\",exec:(editor,lang)=>{if(lang&&typeof lang===\"string\")editor.getSession().setMode(\"ace/mode/\"+lang);},readOnly:true},{name:\"changeShortcuts\",description:\"Switch shortcuts\",exec:(editor,shortcuts)=>{if(shortcuts&&typeof shortcuts===\"string\")editor.setKeyboardHandler(\"ace/keyboard/\"+shortcuts);else{//rotate through the available keyboard handlers\nconst handlers=[\"ace/keyboard/vim\",\"ace/keyboard/emacs\",\"ace/keyboard/sublime\",\"ace/keyboard/vscode\"];const currentHandler=handlers[(handlers.indexOf(editor.$keybindingId)+1)%4];editor.setKeyboardHandler(currentHandler);}},readOnly:true},{name:'toggleKeyboardShortcuts',exec:editor=>{if(!document.getElementById('kbshortcutmenu'))editor.execCommand('showKeyboardShortcuts');else editor.execCommand('simulateKeyPress',{type:\"keydown\",keyCode:27});}},{name:'simulateKeyPress',exec:(editor,args)=>{if(args.key)document.dispatchEvent(new KeyboardEvent(args.type,{'key':args.key}));else if(args.keyCode)document.dispatchEvent(new KeyboardEvent(args.type,{'keyCode':args.keyCode}));}},{name:'infoMessage',description:\"Display message in info bar\",exec:(editor,args)=>{if(args.targetQueryString){const target=document.querySelector(args.targetQueryString);if(target){target.innerText=args.text;target.classList.add(args.classToggle||\"\");if(args.timeout){timeoutId=setTimeout(()=>{target.classList.remove(args.classToggle||\"\");},args.timeout);}}}else if(infoTextRef.current){infoTextRef.current.innerText=args.text;infoTextRef.current.classList.add(args.classToggle||\"\");if(args.timeout){timeoutId=setTimeout(()=>{var _infoTextRef$current;(_infoTextRef$current=infoTextRef.current)===null||_infoTextRef$current===void 0?void 0:_infoTextRef$current.classList.remove(args.classToggle||\"\");},args.timeout);}}}},{name:'response',//name for the key binding.\ndescription:\"Send custom response\",//description of the command\nexec:function(editor){let responseType=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"\";const outgoingMode=editor.getSession().$modeId.split(\"/\").pop();Streamlit.setComponentValue({id:v1().slice(0,8),type:responseType,lang:outgoingMode,text:editor.getValue(),selected:editor.getSelectedText(),cursor:editor.getCursorPosition()});}},{name:'returnSelection',//name for the key binding.\ndescription:\"Send selected text to Streamlit\",//description of the command\nexec:editor=>{const outgoingMode=editor.getSession().$modeId.split(\"/\").pop();Streamlit.setComponentValue({id:v1().slice(0,8),type:\"selection\",lang:outgoingMode,text:editor.getSelectedText(),cursor:editor.getCursorPosition()});}},{name:'appendGhostText',description:\"Add ghost test to end of line\",bindKey:{win:'Ctrl-/',mac:'Command-Alt-N'},exec:editor=>{const ghostText=args['ghost_text'];if(ghostText){const cursorPos=editor.getCursorPosition();const line=editor.session.getLine(cursorPos.row);editor.session.replace({start:{row:cursorPos.row,column:line.length},end:{row:cursorPos.row,column:line.length}},ghostText);}}},{name:'editSnippets',description:\"Edit snippets\",bindKey:{win:'Ctrl-Alt-N',mac:'Command-Alt-N'},exec:editor=>{const snippetManager=ace.require('ace/snippets').snippetManager;if(baseSession.current){const outgoingMode=editor.getSession().$modeId.split(\"/\").pop();if(outgoingMode===\"snippets\"){const snippetText=editor.getSession().getValue();editor.setSession(baseSession.current);baseSession.current=null;setCode(editor.getSession().getValue());if(outgoingMode===\"snippets\"){}try{const snippetsPlusMinus=snippetText.split(\"###~~~\")[1];const[snippetsPlus,snippetsMinus]=snippetsPlusMinus.split(\"###---\");const snippetsToAdd=snippetsPlus.split(\"###+++\")[1];const snippetsToRemove=snippetsMinus;const langMode=editor.getSession().$modeId.split(\"/\").pop();setSnippetAddRemove({[langMode]:[snippetAddRemove[langMode][0]+snippetsToAdd,snippetAddRemove[langMode][1]+snippetsToRemove]});}catch(error){editor.execCommand(\"infoMessage\",{text:\"error parsing file, restoring original file\",timeout:2000,classToggle:\"show\"});}}}else{const langMode=editor.getSession().$modeId.split(\"/\").pop();const snippetConcatText=\"\\n###~~~#(DO NOT EDIT THIS LINE)\\n# Commented out above are all the snippets that are currently\\n# registered for \".concat(args['lang'],\" mode.\\n\\n\\n###+++#(DO NOT EDIT THIS LINE) \\n# Put the snippets you want to add below this line.\\n\\n\\n\\n\\n\\n\\n\\n###---#(DO NOT EDIT THIS LINE) \\n# Put the snippets you want to remove below this line.\\n\\n\\n\\n\\n\\n\\n\");const snippetText=\"#\"+createSnippets(snippetManager.snippetMap[langMode].map(snip=>({name:snip.name,code:snip.content}))).replace(/\\n/g,\"\\n#\")+snippetConcatText;// snippetManager.files[editor.getSession().$modeId].snippetText\nconst lineCount=(snippetText.match(/\\n/g)||[]).length;baseSession.current=editor.getSession();const snippetsSession=ace.createEditSession(snippetText,\"ace/mode/snippets\");editor.setSession(snippetsSession);const cursorPos={row:lineCount-15>0?lineCount-15:0,column:0};editor.moveCursorTo(cursorPos.row,cursorPos.column);editor.renderer.scrollCursorIntoView(cursorPos,0.5);}}},{name:'editKeyBindings',description:\"Edit keybindings\",bindKey:{win:'Ctrl-Alt-B',mac:'Command-Alt-B'},exec:editor=>{ace.require('ace/autocomplete').Autocomplete.for(editor);if(baseSession.current){const outgoingMode=editor.getSession().$modeId.split(\"/\").pop();if(outgoingMode===\"json\"){const keybindingsJSON=editor.getSession().getValue();editor.setSession(baseSession.current);baseSession.current=null;setCode(editor.getSession().getValue());try{setKeybindingAddRemove(JSON.parse(keybindingsJSON));}catch(error){editor.execCommand(\"infoMessage\",{text:\"error parsing file, restoring original file\",timeout:2000,classToggle:\"show\"});}}}else{const keybindings={commands:{},completer:{}};if(editor.completer&&editor.completer.keyboardHandler.commands){keybindings.completer=Object.keys(editor.completer.keyboardHandler.commands).map(key=>{var _editor$completer$key;return{bindkey:(_editor$completer$key=editor.completer.keyboardHandler.commands[key].bindKey)!==null&&_editor$completer$key!==void 0?_editor$completer$key:\"\",name:editor.completer.keyboardHandler.commands[key].name};});}if(editor.commands.commands){keybindings.commands=Object.keys(editor.commands.commands).map(key=>{var _editor$commands$comm;return{bindkey:(_editor$commands$comm=editor.commands.commands[key].bindKey)!==null&&_editor$commands$comm!==void 0?_editor$commands$comm:\"\",name:editor.commands.commands[key].name};});}const keybindingsJSON=JSON.stringify(keybindings,undefined,2);baseSession.current=editor.getSession();const keybindingsSession=ace.createEditSession(keybindingsJSON,\"ace/mode/json\");editor.setSession(keybindingsSession);}}},{name:'exitSession',//name for the key binding.\nbindKey:{win:'Esc',mac:'Esc'},description:\"Return to main session (keep changes)\",//description of the command\nexec:editor=>{if(baseSession.current){const mode=editor.getSession().$modeId.split(\"/\").pop();if(mode===\"snippets\")editor.execCommand(\"editSnippets\");else if(mode===\"json\")editor.execCommand(\"editKeyBindings\");}}},{name:'abandonSession',//name for the key binding.\nbindKey:{win:'Ctrl-Alt-Esc',mac:'Command-Alt-Esc'},description:\"Return to main session (discard changes)\",//description of the command\nexec:editor=>{if(baseSession.current){editor.setSession(baseSession.current);baseSession.current=null;setCode(editor.getSession().getValue());}}},{name:'classART',//name for the key binding.\ndescription:\"Add/Remove/Toggle class for element\",//description of the command\nexec:(editor,args)=>{var _document$querySelect,_document$querySelect2,_document$querySelect3;if(args.targetQueryString&&args.type&&args.class){switch(args.type){case\"add\":(_document$querySelect=document.querySelectorAll(args.targetQueryString))===null||_document$querySelect===void 0?void 0:_document$querySelect.forEach(el=>el.classList.add(args.class));break;case\"remove\":(_document$querySelect2=document.querySelectorAll(args.targetQueryString))===null||_document$querySelect2===void 0?void 0:_document$querySelect2.forEach(el=>el.classList.remove(args.class));break;case\"toggle\":(_document$querySelect3=document.querySelectorAll(args.targetQueryString))===null||_document$querySelect3===void 0?void 0:_document$querySelect3.forEach(el=>el.classList.toggle(args.class));break;default:break;}}}},{name:'conditionalExecute',//name for the key binding.\ndescription:\"Execute command if element exists\",//description of the command\nexec:(editor,args)=>{if(args.targetQueryString&&args.command&&Array.isArray(args.command)){var _args$condition;if(!((_args$condition=args.condition)!==null&&_args$condition!==void 0?_args$condition:true)===!document.querySelector(args.targetQueryString)){typeof args.command[0]===\"string\"?execute(args.command[0],args.command[1]):console.warn(\"Editor command - conditionalExecute: improper command format! Command array must contain name of command as first element and arguments as second element.\");}}}},{name:'delayedExecute',//name for the key binding.\ndescription:\"Execute command after a period of time\",//description of the command\nexec:(editor,args)=>{if(args.command){if(Array.isArray(args.command)&&args.command.length===2){var _args$timeout;typeof args.command[0]===\"string\"?setTimeout(()=>{execute(args.command[0],args.command[1]);},(_args$timeout=args.timeout)!==null&&_args$timeout!==void 0?_args$timeout:defaultProps.debounceChangePeriod):console.warn(\"Editor command - conditionalExecute: improper command format! Command array must contain name of command as first element and arguments as second element.\");}else if(typeof args.command===\"string\"){var _args$timeout2;setTimeout(()=>{execute(args.command);},(_args$timeout2=args.timeout)!==null&&_args$timeout2!==void 0?_args$timeout2:defaultProps.debounceChangePeriod);}}}}]};const execute=function(command){var _aceEditor$current;let args=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"\";const editor=(_aceEditor$current=aceEditor.current)===null||_aceEditor$current===void 0?void 0:_aceEditor$current.editor;if(editor){if(!args){editor.execCommand(command);}else if(typeof args===\"number\"||typeof args===\"string\"){editor.execCommand(command,args);}else if(typeof args===\"object\"&&!Array.isArray(args)){var containsNumsStr=true;Object.keys(args).forEach(key=>{containsNumsStr=typeof args[key]===\"string\"||typeof args[key]===\"number\"||Array.isArray(args[key]);});if(Object.keys(args).length<4&&containsNumsStr){editor.execCommand(command,args);}}else{console.warn(\"Function - execute: failed to parse/execute \\\"\".concat(command,\"\\\" command!\"));}}};const executeAll=commands=>{commands.forEach(singleCommand=>{if(Array.isArray(singleCommand)){typeof singleCommand[0]===\"string\"?execute(singleCommand[0],singleCommand[1]):console.warn(\"Function - executeAll: improper command format! Singular commands must contain name of command as first element and arguments as second element.\");}else if(typeof singleCommand===\"string\"){execute(singleCommand);}else{console.warn(\"Function - executeAll: failed to parse/execute command(s)!\");}});};const resetEditor=()=>{setCode(args['code']);};const unsecureCopyTextToClipboard=text=>{const textField=document.createElement('textarea');textField.value=text;document.body.appendChild(textField);textField.select();document.execCommand('copy');textField.remove();};/**\n   * resizeObserver observes changes in elements its given to observe and is used here\n   * to communicate to streamlit the height of the component that has changed\n   * so that streamlit can adjust the iframe containing the component accordingly.\n   */const resizeObserver=new ResizeObserver(entries=>{var _entries$0$contentBox;// If we know that the body will always fully contain our component (without cutting it off)\n// then we can use docuemnt.body height instead\nStreamlit.setFrameHeight((_entries$0$contentBox=entries[0].contentBoxSize.blockSize)!==null&&_entries$0$contentBox!==void 0?_entries$0$contentBox:entries[0].contentRect.height);});const observe=divElem=>{divElem?resizeObserver.observe(divElem):resizeObserver.disconnect();};// This useEffect is used to reset the editor when the code argument changes and\n// the allow_reset argument is true. The allow_reset argument only impacts the\n// behavior of the component when the component has a fixed key argument because\n// changing the key argument results in the creation of a new component instance.\n// Everything would be reset anyways.\nuseEffect(()=>{if(args['allow_reset']===true&&args['code']!==code){reset.current=!reset.current;resetEditor();}},[args['code']]);/**\n   * This could also be memoized but I don't think it would be necessary because its not expensive.\n   */const themeChoice=()=>{const isDarkTheme=theme?theme.base===\"dark\":true;switch(args['theme']){case\"contrast\":return isDarkTheme?\"streamlit_light\":\"streamlit_dark\";case\"light\":return\"streamlit_light\";case\"dark\":return\"streamlit_dark\";case\"default\":return isDarkTheme?\"streamlit_dark\":\"streamlit_light\";default:return isDarkTheme?\"streamlit_dark\":\"streamlit_light\";}};const themeProp=themeChoice();const componentContainerProps=args[\"component_props\"];const{info:infoArg,menu:menuArg,focus:focusArg,code:codeArg,...rest}=args;const editorArgsString=JSON.stringify(rest);const menuArgsString=JSON.stringify(menuArg);const infoArgsString=JSON.stringify(infoArg);const buttonArgsString=JSON.stringify(args['buttons']);const themeString=JSON.stringify(theme);const snippets=JSON.stringify(snippetAddRemove);/**\n   * This section contains the main sub-components (child components). These components are wrapped in useMemos\n   * in order to prevent unnecessary re-rendering of the components. This is listed as one of its use cases in the\n   * React docs ({@link https://beta.reactjs.org/reference/react/useMemo#skipping-re-rendering-of-components Skipping re-rendering of components})\n   *\n   * This component is the editor component that is rendered. It is only re-rendered when\n   * certain properties change. This is important because we should account for the possibility that the editor \n   * is being used at any given moment. Unnecessary and frequent re-rendering of the editor (for outside reasons\n   * especially) can impact user experience and responsiveness.\n   */const editor=useMemo(()=>{const keybindings=JSON.stringify(keybindingAddRemove);const revertedArgs=JSON.parse(editorArgsString);// Create commands for each button\nif(revertedArgs['buttons'].length>0){revertedArgs['buttons'].forEach(button=>{commands.commands=[...commands.commands,{name:button.name.trim().replace(/\\s+/g,'_')+'_button',bindKey:button.bindKey,description:\"Execute '\"+button.name+\"' button command(s)\",exec:()=>{executeAll(button.commands);}}];});}let heightProps={};if(typeof revertedArgs['height']===\"number\")heightProps={minLines:1,maxLines:revertedArgs['height']};else if(typeof revertedArgs['height']===\"string\")heightProps={height:revertedArgs['height']};else if(Array.isArray(revertedArgs['height'])&&revertedArgs['height'].length===2)heightProps={minLines:revertedArgs['height'][0],maxLines:revertedArgs['height'][1]};const aceEditorProps={...defaultEditorProps,...revertedArgs['editor_props']};const aceOptions={...defaultOptions,...revertedArgs['options']};const partProps={setOptions:aceOptions,editorProps:aceEditorProps};const aceProps={...defaultProps,...partProps,...heightProps,...revertedArgs['props']};/**\n     * TODO: Remove props from aceProps that we don't want to allow user access to.\n     */return/*#__PURE__*/_jsx(Editor,{editorRef:aceEditor,code:code,lang:revertedArgs['lang'],theme:themeProp,shortcuts:revertedArgs['shortcuts'],snippetString:snippets,ghostText:revertedArgs['ghost_text'],commands:commands.commands,completions:revertedArgs['completions'],replaceCompleter:revertedArgs['replace_completer'],keybindingString:keybindings,props:aceProps,onChange:onChangeHandler,onSelectionChange:onSelectionChangeHandler,onBlur:onEditorBlur});},[editorArgsString,themeProp,snippets,keybindingAddRemove,reset.current]);const buttons=useMemo(()=>{const revertedButtons=JSON.parse(buttonArgsString);const revertedTheme=JSON.parse(themeString);const customButtonTheme=revertedTheme!==null&&revertedTheme!==void 0?revertedTheme:{};const customButtons={buttons:revertedButtons!==null&&revertedButtons!==void 0?revertedButtons:[],name:\"customButtons\"};return/*#__PURE__*/_jsx(ButtonSet,{buttonGroup:customButtons,theme:customButtonTheme,themeProp:themeProp,executeAll:commands=>executeAll(commands)});},[buttonArgsString,themeString,themeProp]);const menu=useMemo(()=>{const revertedMenu=JSON.parse(menuArgsString);const revertedTheme=JSON.parse(themeString);const menuTheme=revertedTheme!==null&&revertedTheme!==void 0?revertedTheme:{};return/*#__PURE__*/_jsx(ButtonMenu,{menu:revertedMenu,theme:menuTheme,themeProp:themeProp,executeAll:commands=>executeAll(commands)});},[menuArgsString,themeString,themeProp]);const info=useMemo(()=>{const revertedInfo=JSON.parse(infoArgsString);const revertedTheme=JSON.parse(themeString);const infoTheme=revertedTheme!==null&&revertedTheme!==void 0?revertedTheme:{};return/*#__PURE__*/_jsx(InfoBar,{infoRef:infoTextRef,info:revertedInfo,theme:infoTheme});},[infoArgsString,themeString]);const globalCSS=useMemo(()=>{return/*#__PURE__*/_jsx(GlobalCSS,{isDisabled:disabled,inject:componentContainerProps.globalCSS});},[componentContainerProps.globalCSS,disabled]);return/*#__PURE__*/_jsxs(_StyledStyledCodeEditor,{ref:observe,style:componentContainerProps.style,className:(_ref3=\"streamlit_code-editor \"+(theme===null||theme===void 0?void 0:theme.base))!==null&&_ref3!==void 0?_ref3:\"\",$_css:componentContainerProps.css,children:[globalCSS,editor,buttons,menu,info]});};export default withStreamlitConnection(CodeEditor);","map":{"version":3,"names":["Streamlit","withStreamlitConnection","v1","useState","useRef","useEffect","useMemo","ace","Editor","Menu","ButtonMenu","Set","ButtonSet","Info","InfoBar","jsx","_jsx","jsxs","_jsxs","defaultOptions","fontFamily","cursorStyle","displayIndentGuides","wrap","highlightActiveLine","showPrintMargin","showLineNumbers","foldStyle","autoScrollEditorIntoView","animatedScroll","fadeFoldWidgets","defaultEditorProps","editorProps","$blockScrolling","defaultProps","cursorStart","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","focus","fontSize","navigateToFileEnd","placeholder","readOnly","scrollMargin","setOptions","showGutter","style","tabSize","width","debounceChangePeriod","GlobalCSS","createGlobalStyle","_templateObject","_taggedTemplateLiteral","props","isDisabled","inject","StyledCodeEditor","styled","div","withConfig","displayName","componentId","_StyledStyledCodeEditor","_styled","p","$_css","CodeEditor","_ref","_ref3","args","disabled","theme","code","setCode","aceEditor","infoTextRef","baseSession","keepFocus","reset","timeoutId","createSnippets","snippetRaw","Array","isArray","map","_ref2","name","split","c","join","snippetAddRemove","setSnippetAddRemove","keybindingAddRemove","setKeybindingAddRemove","clearTimeout","current","editor","onChangeHandler","newCode","responseMode","includes","outgoingMode","getSession","$modeId","pop","setComponentValue","id","slice","type","lang","text","selected","getSelectedText","cursor","getCursorPosition","onSelectionChangeHandler","selectedText","onEditorBlur","event","getValue","commands","description","bindKey","win","mac","exec","unsecureCopyTextToClipboard","resetEditor","setMode","shortcuts","setKeyboardHandler","handlers","currentHandler","indexOf","$keybindingId","document","getElementById","execCommand","keyCode","key","dispatchEvent","KeyboardEvent","targetQueryString","target","querySelector","innerText","classList","add","classToggle","timeout","setTimeout","remove","_infoTextRef$current","responseType","arguments","length","undefined","ghostText","cursorPos","line","session","getLine","row","replace","start","column","end","snippetManager","require","snippetText","setSession","snippetsPlusMinus","snippetsPlus","snippetsMinus","snippetsToAdd","snippetsToRemove","langMode","error","snippetConcatText","concat","snippetMap","snip","content","lineCount","match","snippetsSession","createEditSession","moveCursorTo","renderer","scrollCursorIntoView","Autocomplete","for","keybindingsJSON","JSON","parse","keybindings","completer","keyboardHandler","Object","keys","_editor$completer$key","bindkey","_editor$commands$comm","stringify","keybindingsSession","mode","_document$querySelect","_document$querySelect2","_document$querySelect3","class","querySelectorAll","forEach","el","toggle","command","_args$condition","condition","execute","console","warn","_args$timeout","_args$timeout2","_aceEditor$current","containsNumsStr","executeAll","singleCommand","textField","createElement","value","body","appendChild","select","resizeObserver","ResizeObserver","entries","_entries$0$contentBox","setFrameHeight","contentBoxSize","blockSize","contentRect","height","observe","divElem","disconnect","themeChoice","isDarkTheme","base","themeProp","componentContainerProps","info","infoArg","menu","menuArg","focusArg","codeArg","rest","editorArgsString","menuArgsString","infoArgsString","buttonArgsString","themeString","snippets","revertedArgs","button","trim","heightProps","minLines","maxLines","aceEditorProps","aceOptions","partProps","aceProps","editorRef","snippetString","completions","replaceCompleter","keybindingString","onChange","onSelectionChange","onBlur","buttons","revertedButtons","revertedTheme","customButtonTheme","customButtons","buttonGroup","revertedMenu","menuTheme","revertedInfo","infoTheme","infoRef","globalCSS","ref","className","css","children"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/src/CodeEditor.tsx"],"sourcesContent":["import {\n  Streamlit,\n  withStreamlitConnection,\n  ComponentProps,\n  Theme,\n} from \"streamlit-component-lib\"\nimport {v1} from 'uuid';\nimport styled, { createGlobalStyle } from \"styled-components/macro\"\nimport { useState, useRef, useEffect, useMemo } from \"react\"\nimport AceEditor from \"react-ace\";\nimport ace from \"ace-builds\";\nimport { Editor } from './editor';\nimport { Menu as ButtonMenu, Set as ButtonSet, customButton, buttonGroup, Info as InfoBar } from \"./button-menu\"\n\nimport \"ace-builds/webpack-resolver\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/ext-searchbox\";\nimport \"ace-builds/src-noconflict/ext-prompt\";\nimport \"ace-builds/src-noconflict/ext-modelist\";\n\ninterface CodeEditorProps extends ComponentProps {\n  args: any\n  width: number\n  disabled: boolean\n  theme?: Theme\n}\n\nconst defaultOptions = {\n  fontFamily: '\"Source Code Pro\", monospace',\n  cursorStyle: \"smooth\",\n  displayIndentGuides: false,\n  wrap: false,\n  highlightActiveLine: true,\n  showPrintMargin: false,\n  showLineNumbers: false,\n  foldStyle: \"markbegin\",\n  autoScrollEditorIntoView: false,\n  animatedScroll: true,\n  fadeFoldWidgets: true,\n}\n\nconst defaultEditorProps = {\n  editorProps: {\n    $blockScrolling: true\n  }\n}\n\nconst defaultProps = {\n  cursorStart: 1,\n  enableBasicAutocompletion: false,\n  enableLiveAutocompletion: true,\n  enableSnippets: true,\n  focus: false,\n  fontSize: 14,\n  highlightActiveLine: true,\n  navigateToFileEnd: true,\n  placeholder: null,\n  readOnly: false,\n  scrollMargin: [15, 15, 0, 0],\n  setOptions: defaultOptions,\n  showGutter: true,\n  showPrintMargin: false,\n  style: {},\n  tabSize: 4,\n  width: \"auto\",\n  debounceChangePeriod: 250,\n}\n\nconst GlobalCSS = createGlobalStyle<{isDisabled?: boolean, inject: string}>`\n  html {\n    opacity: ${props => props.isDisabled? \"0.5\": \"1\"};\n    cursor: ${props => props.isDisabled? \"not-allowed\": \"auto\"};\n    pointer-events: ${props => props.isDisabled? \"none\": \"auto\"};\n  }\n  ${props => props.inject}\n`\nconst StyledCodeEditor = styled.div`\n  width: 100%;\n  border-radius: 8px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  :hover button {\n    opacity: 1;\n    transform: scale(1);\n  }\n  button.always-on {\n    opacity: 1;\n    transform: scale(1);\n    transition: none;\n  }\n  :hover button svg {\n        opacity: 1;\n        transform: scale(1);\n  }\n  :hover button.with-icon span {\n    opacity: 1;\n    transform: scale(1);\n  }\n  button.always-on > span {\n    opacity: 1;\n    transform: scale(1);\n    transition: none;\n  }\n  button.always-on > svg {\n    opacity: 1;\n    transform: scale(1);\n    transition: none;\n  }\n  `;\n\nconst CodeEditor = ({ args, width, disabled, theme }: CodeEditorProps) => {\n\n  //sets code to the initial value every time the component is rendered\n  //to set the initial value once, use a function instead of a value.\n  const [code, setCode] = useState(args['code']);\n  // const [keybindingAddRemove, setKeybindingAddRemove] = useState([\"\",\"\"]);\n\n  const aceEditor = useRef<AceEditor>(null);\n  const infoTextRef = useRef<HTMLSpanElement>(null);\n  const baseSession = useRef<ace.Ace.EditSession | null>(null);\n  const keepFocus = useRef<boolean>(false);\n  const reset = useRef<boolean>(false);\n\n  var timeoutId: NodeJS.Timeout;\n\n  /**\n    * This function takes as input either a snippetText string that is expected\n    * to be already formatted like the text in a SnippetFile or a dictionary or \n    * and array of dictionaries. For the first case, it just returns the input.\n    * For the second and third case, a (SnippetFile format) string is constructed\n    * from the dict(s) and returned. Learn more about snippets {@link  here}\n    * @param snippetRaw snippets to be converted to a single snippetText string\n    * @returns {string} snippetText\n    */\n  const createSnippets = (snippetRaw: string | object | [object]): string => {\n    return (typeof snippetRaw === \"string\" ? snippetRaw : (Array.isArray(snippetRaw) ? snippetRaw : [snippetRaw]).map(({ name, code }) =>\n    ([\n      'snippet ' + name,\n      code.split('\\n')\n        .map((c: string) => '\\t' + c)\n        .join('\\n'),\n    ].join('\\n'))\n    ).join('\\n'))\n  }\n  const [snippetAddRemove, setSnippetAddRemove] = useState({[args['lang']] : [createSnippets(args[\"snippets\"][0]), createSnippets(args[\"snippets\"][1])]});\n  const [keybindingAddRemove, setKeybindingAddRemove] = useState(args['keybindings']);\n\n\n  useEffect(() => {\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    if(aceEditor.current && keepFocus.current){\n      aceEditor.current.editor.focus();\n      keepFocus.current = false;\n    }\n  }, [keepFocus.current]);\n\n  // To reasons for the useEffect here: \n  //   1. to set the focus on the editor only when the focus argument has changed to true.\n  //   2. to set the focus on the editor after rendering the component at which point, the \n  //      editor should be ready.\n  useEffect(() => {\n    if(aceEditor.current && args.focus){\n      aceEditor.current.editor.focus();\n    }\n  }, [args.focus]);\n\n  const onChangeHandler = (newCode: string) => {\n    setCode(newCode);\n\n    const responseMode = typeof args[\"response_mode\"] === \"string\" ? [args[\"response_mode\"]] : args[\"response_mode\"];\n    if (responseMode.includes(\"debounce\") && aceEditor.current && aceEditor.current.editor) {\n      const editor = aceEditor.current.editor as any;\n      const outgoingMode = editor.getSession().$modeId.split(\"/\").pop();\n      Streamlit.setComponentValue({id: v1().slice(0,8), type: \"change\", lang: outgoingMode, text: newCode, selected: editor.getSelectedText(), cursor: editor.getCursorPosition()});\n    }\n  }\n  \n  const onSelectionChangeHandler = (selectedText: any) => {\n    const responseMode = typeof args[\"response_mode\"] === \"string\" ? [args[\"response_mode\"]] : args[\"response_mode\"];\n    if (responseMode.includes(\"select\") && aceEditor.current && aceEditor.current.editor) {\n      const editor = aceEditor.current.editor as any;\n      const outgoingMode = editor.getSession().$modeId.split(\"/\").pop();\n      Streamlit.setComponentValue({id: v1().slice(0,8), type: \"selection\", lang: outgoingMode, text: code, selected: editor.getSelectedText(), cursor: editor.getCursorPosition()});\n    }\n  }\n\n  const onEditorBlur = (event: any, editor: any) => {\n    const responseMode = typeof args[\"response_mode\"] === \"string\" ? [args[\"response_mode\"]] : args[\"response_mode\"];\n    if (responseMode.includes(\"blur\") && editor) {\n      const outgoingMode = editor.getSession().$modeId.split(\"/\").pop();\n      setCode(editor.getValue());\n      Streamlit.setComponentValue({id: v1().slice(0,8), type: \"blur\", lang: outgoingMode, text: editor.getValue(), selected: editor.getSelectedText(), cursor: editor.getCursorPosition()});\n    }\n  }\n\n  // commands is an array of objects containing functions\n  // that the editor can be triggered to call.\n  const commands = { commands: [\n    {\n      name: 'submit', //name for the key binding.\n      description: \"Send 'submit' response\", //description of the command\n      bindKey: { win: 'Ctrl-Enter', mac: 'Command-Enter' }, //key combination used for the command.\n      exec: (editor: any) => {\n        const outgoingMode = editor.getSession().$modeId.split(\"/\").pop();\n        Streamlit.setComponentValue({id: v1().slice(0,8), type: \"submit\", lang: outgoingMode, text: editor.getValue(), selected: editor.getSelectedText(), cursor: editor.getCursorPosition()});\n      }\n    },\n    {\n      name: 'saveState',\n      description: \"Save state\",\n      bindKey: { win: 'Ctrl-Alt-S', mac: 'Command-Alt-S' },\n      exec: (editor: ace.Ace.Editor) => {\n        setCode(editor.getValue());\n      }\n    },\n    {\n      name: 'copyAll',\n      description: \"Copy all text to clipboard\",\n      exec: (editor: ace.Ace.Editor) => {\n        unsecureCopyTextToClipboard(editor.getValue());\n      }\n    },\n    {\n      name: 'reset',\n      exec: () => {\n        resetEditor();\n      }\n    },\n    {\n      name: 'keepFocus',\n      description: \"Return cursor to editor\",\n      exec: () => {\n        keepFocus.current = true;\n      }\n    },\n    {\n      name: \"setMode\",\n      description: \"Set language mode\",\n      exec: (editor: ace.Ace.Editor, lang: string) => {\n          if(lang && typeof lang === \"string\")\n            editor.getSession().setMode(\"ace/mode/\" + lang);\n      },\n      readOnly: true\n    },\n    {\n      name: \"changeShortcuts\",\n      description: \"Switch shortcuts\",\n      exec: (editor: any, shortcuts?: string) => {\n        if(shortcuts && typeof shortcuts === \"string\")\n          editor.setKeyboardHandler(\"ace/keyboard/\" + shortcuts);\n        else {\n          //rotate through the available keyboard handlers\n          const handlers = [\"ace/keyboard/vim\", \"ace/keyboard/emacs\", \"ace/keyboard/sublime\", \"ace/keyboard/vscode\"];\n          const currentHandler = handlers[(handlers.indexOf(editor.$keybindingId) + 1) % 4];\n          editor.setKeyboardHandler(currentHandler);\n        }\n      },\n      readOnly: true\n    },\n    {\n      name: 'toggleKeyboardShortcuts',\n      exec: (editor: ace.Ace.Editor) => {\n        if(!document.getElementById('kbshortcutmenu'))\n          editor.execCommand('showKeyboardShortcuts');\n        else \n          editor.execCommand('simulateKeyPress', {type:\"keydown\", keyCode: 27});\n      }\n    },\n    {\n      name: 'simulateKeyPress',\n      exec: (editor: ace.Ace.Editor, args: {type: string, key?: string, keyCode?: number}) => {\n        if(args.key)\n          document.dispatchEvent(new KeyboardEvent(args.type,{'key': args.key})); \n        else if(args.keyCode)\n          document.dispatchEvent(new KeyboardEvent(args.type,{'keyCode': args.keyCode})); \n      }\n    },\n    {\n      name: 'infoMessage',\n      description: \"Display message in info bar\",\n      exec: (editor: ace.Ace.Editor, args: {text: string, timeout?: number, classToggle?: string, targetQueryString?: string} ) => {\n        if(args.targetQueryString){\n          const target = document.querySelector(args.targetQueryString) as HTMLElement;\n          if(target){\n            target.innerText = args.text;\n            target.classList.add(args.classToggle || \"\")\n            if(args.timeout){\n              timeoutId = setTimeout(() => {\n                target.classList.remove(args.classToggle || \"\");\n              }, args.timeout);\n            }\n          }\n        }\n        else if(infoTextRef.current){\n          infoTextRef.current.innerText = args.text;\n          infoTextRef.current.classList.add(args.classToggle || \"\");\n          if(args.timeout){\n            timeoutId = setTimeout(() => {\n              infoTextRef.current?.classList.remove(args.classToggle || \"\");\n            }, args.timeout);\n          }\n        }\n      }\n    },\n    {\n      name: 'response', //name for the key binding.\n      description: \"Send custom response\", //description of the command\n      exec: (editor: any, responseType = \"\") => {\n        const outgoingMode = editor.getSession().$modeId.split(\"/\").pop();\n        Streamlit.setComponentValue({id: v1().slice(0,8), type: responseType, lang: outgoingMode, text: editor.getValue(), selected: editor.getSelectedText(), cursor: editor.getCursorPosition()});\n      }\n    },\n    {\n      name: 'returnSelection', //name for the key binding.\n      description: \"Send selected text to Streamlit\", //description of the command\n      exec: (editor: any) => {\n        const outgoingMode = editor.getSession().$modeId.split(\"/\").pop();\n        Streamlit.setComponentValue({id: v1().slice(0,8), type: \"selection\", lang: outgoingMode, text: editor.getSelectedText(), cursor: editor.getCursorPosition()});\n      }\n    },\n    {\n      name: 'appendGhostText',\n      description: \"Add ghost test to end of line\",\n      bindKey: { win: 'Ctrl-/', mac: 'Command-Alt-N' },\n      exec: (editor: any) => {\n        const ghostText = args['ghost_text'];\n        if(ghostText){\n          const cursorPos = editor.getCursorPosition();\n          const line = editor.session.getLine(cursorPos.row);\n          editor.session.replace({start: {row: cursorPos.row, column: line.length}, end: {row: cursorPos.row, column: line.length}}, ghostText);\n        }\n      }\n    },\n    {\n      name: 'editSnippets',\n      description: \"Edit snippets\",\n      bindKey: { win: 'Ctrl-Alt-N', mac: 'Command-Alt-N' },\n      exec: (editor: any) => {\n        const snippetManager = ace.require('ace/snippets').snippetManager;\n        if(baseSession.current){\n          const outgoingMode = editor.getSession().$modeId.split(\"/\").pop();\n          if(outgoingMode === \"snippets\"){\n            const snippetText = editor.getSession().getValue();\n            editor.setSession(baseSession.current);\n            baseSession.current = null;\n            setCode(editor.getSession().getValue());\n            if(outgoingMode === \"snippets\"){}\n            try{\n              const snippetsPlusMinus = snippetText.split(\"###~~~\")[1];\n              const [snippetsPlus, snippetsMinus] = snippetsPlusMinus.split(\"###---\");\n              const snippetsToAdd = snippetsPlus.split(\"###+++\")[1];\n              const snippetsToRemove = snippetsMinus;\n              const langMode = editor.getSession().$modeId.split(\"/\").pop();\n              setSnippetAddRemove({[langMode] : [snippetAddRemove[langMode][0] + snippetsToAdd, snippetAddRemove[langMode][1] + snippetsToRemove]});\n            } catch (error) {\n              editor.execCommand(\"infoMessage\",{text: \"error parsing file, restoring original file\", timeout: 2000, classToggle: \"show\"});\n            }\n          }\n        } else {\n          const langMode = editor.getSession().$modeId.split(\"/\").pop()\n          const snippetConcatText = `\\n###~~~#(DO NOT EDIT THIS LINE)\n# Commented out above are all the snippets that are currently\n# registered for ${args['lang']} mode.\n\\n\\n###+++#(DO NOT EDIT THIS LINE) \\n# Put the snippets you want to add below this line.\\n\\n\\n\\n\n\\n\\n\\n###---#(DO NOT EDIT THIS LINE) \\n# Put the snippets you want to remove below this line.\\n\\n\\n\\n\\n\\n\\n`;\n          const snippetText = \"#\" + createSnippets(snippetManager.snippetMap[langMode].map((snip: any) => ({name: snip.name, code: snip.content}))).replace(/\\n/g, \"\\n#\") + snippetConcatText;\n          // snippetManager.files[editor.getSession().$modeId].snippetText\n          const lineCount = (snippetText.match(/\\n/g) || []).length;\n          baseSession.current = editor.getSession();\n          const snippetsSession = ace.createEditSession(snippetText, \"ace/mode/snippets\");\n          editor.setSession(snippetsSession);\n          const cursorPos = {row: (lineCount - 15)>0? lineCount - 15 : 0, column: 0};\n          editor.moveCursorTo(cursorPos.row, cursorPos.column);\n          editor.renderer.scrollCursorIntoView(cursorPos, 0.5);\n        }\n      }\n    },\n    {\n      name: 'editKeyBindings',\n      description: \"Edit keybindings\",\n      bindKey: { win: 'Ctrl-Alt-B', mac: 'Command-Alt-B' },\n      exec: (editor: any) => {\n        ace.require('ace/autocomplete').Autocomplete.for(editor);\n        if(baseSession.current){\n          const outgoingMode = editor.getSession().$modeId.split(\"/\").pop();\n          if(outgoingMode === \"json\"){\n            const keybindingsJSON = editor.getSession().getValue();\n            editor.setSession(baseSession.current);\n            baseSession.current = null;\n            setCode(editor.getSession().getValue());\n            try{\n              setKeybindingAddRemove(JSON.parse(keybindingsJSON));\n            } catch (error) {\n              editor.execCommand(\"infoMessage\",{text: \"error parsing file, restoring original file\", timeout: 2000, classToggle: \"show\"});\n            }\n          }\n        } else {\n          const keybindings = {commands: {}, completer: {}};\n          if(editor.completer && editor.completer.keyboardHandler.commands){\n            keybindings.completer = Object.keys(editor.completer.keyboardHandler.commands).map((key: any) => ({bindkey: editor.completer.keyboardHandler.commands[key].bindKey ?? \"\", name: editor.completer.keyboardHandler.commands[key].name}));\n          }\n          if(editor.commands.commands){\n            keybindings.commands = Object.keys(editor.commands.commands).map((key: any) => ({bindkey: editor.commands.commands[key].bindKey ?? \"\", name: editor.commands.commands[key].name}));\n          }\n          const keybindingsJSON = JSON.stringify(keybindings, undefined, 2);\n          baseSession.current = editor.getSession();\n          const keybindingsSession = ace.createEditSession(keybindingsJSON, \"ace/mode/json\");\n          editor.setSession(keybindingsSession);\n        }\n      }\n    },\n    {\n      name: 'exitSession', //name for the key binding.\n      bindKey: { win: 'Esc', mac: 'Esc' },\n      description: \"Return to main session (keep changes)\", //description of the command\n      exec: (editor: any) => {\n        if(baseSession.current){\n          const mode = editor.getSession().$modeId.split(\"/\").pop();\n          if (mode === \"snippets\")\n            editor.execCommand(\"editSnippets\");\n          else if (mode === \"json\")\n            editor.execCommand(\"editKeyBindings\");\n        }\n      }\n    },\n    {\n      name: 'abandonSession', //name for the key binding.\n      bindKey: { win: 'Ctrl-Alt-Esc', mac: 'Command-Alt-Esc' },\n      description: \"Return to main session (discard changes)\", //description of the command\n      exec: (editor: any) => {\n        if(baseSession.current){\n          editor.setSession(baseSession.current);\n          baseSession.current = null;\n          setCode(editor.getSession().getValue());\n        }\n      }\n    },\n    {\n      name: 'classART', //name for the key binding.\n      description: \"Add/Remove/Toggle class for element\", //description of the command\n      exec: (editor: any, args: {targetQueryString: string, type: string, class: string}) => {\n        if(args.targetQueryString && args.type && args.class){\n          switch(args.type){\n            case \"add\":\n              document.querySelectorAll(args.targetQueryString)?.forEach((el: any) => el.classList.add(args.class));\n              break;\n            case \"remove\":\n              document.querySelectorAll(args.targetQueryString)?.forEach((el: any) => el.classList.remove(args.class));\n              break;\n            case \"toggle\":\n              document.querySelectorAll(args.targetQueryString)?.forEach((el: any) => el.classList.toggle(args.class));\n              break;\n            default:\n              break;\n          }\n        }\n      }\n    },\n    {\n      name: 'conditionalExecute', //name for the key binding.\n      description: \"Execute command if element exists\", //description of the command\n      exec: (editor: any, args: {targetQueryString: string, command: any[], condition?: boolean}) => {\n        if(args.targetQueryString && args.command && Array.isArray(args.command)){\n          if(!(args.condition ?? true) === !document.querySelector(args.targetQueryString)){\n            typeof args.command[0] === \"string\" ? execute(args.command[0], args.command[1]) : console.warn(\"Editor command - conditionalExecute: improper command format! Command array must contain name of command as first element and arguments as second element.\");\n          }\n        }\n      }\n    },\n    {\n      name: 'delayedExecute', //name for the key binding.\n      description: \"Execute command after a period of time\", //description of the command\n      exec: (editor: any, args: { command: string | any[], timeout?: number}) => {\n        if(args.command){\n          if(Array.isArray(args.command) && args.command.length === 2){\n            typeof args.command[0] === \"string\" ? setTimeout(() => {execute(args.command[0], args.command[1])}, args.timeout ?? defaultProps.debounceChangePeriod) : console.warn(\"Editor command - conditionalExecute: improper command format! Command array must contain name of command as first element and arguments as second element.\");\n          }\n          else if(typeof args.command === \"string\"){\n            setTimeout(() => {\n              execute(args.command as string);\n            }, args.timeout ?? defaultProps.debounceChangePeriod);\n          }\n        }\n      }\n    }\n  ]};\n\n  const execute = (command: string, args: any = \"\") => {\n    const editor = aceEditor.current?.editor;\n    if (editor) {\n      if (!args) {\n        editor.execCommand(command)\n      }\n      else if (typeof args === \"number\" || typeof args === \"string\") {\n        editor.execCommand(command, args);\n      }\n      else if (typeof args === \"object\" && !Array.isArray(args)) {\n        var containsNumsStr = true;\n        Object.keys(args).forEach((key: any) => {\n          containsNumsStr = typeof args[key] === \"string\" || typeof args[key] === \"number\" || Array.isArray(args[key]);\n        });\n        if (Object.keys(args).length < 4 && containsNumsStr) {\n          editor.execCommand(command, args);\n        }\n      }\n      else {\n        console.warn(`Function - execute: failed to parse/execute \"${command}\" command!`);\n      }\n    }\n  }\n\n  const executeAll = (commands: any[]) => {\n    commands.forEach(singleCommand => {\n      if (Array.isArray(singleCommand)) {\n        typeof singleCommand[0] === \"string\" ? execute(singleCommand[0], singleCommand[1]) : console.warn(\"Function - executeAll: improper command format! Singular commands must contain name of command as first element and arguments as second element.\");\n      } else if (typeof singleCommand === \"string\") {\n        execute(singleCommand);\n      } else {\n        console.warn(\"Function - executeAll: failed to parse/execute command(s)!\");\n      }\n    });\n  }\n\n  const resetEditor = () => {\n    setCode(args['code']);\n  }\n\n  const unsecureCopyTextToClipboard = (text: string) => {\n    const textField = document.createElement('textarea');\n    textField.value = text;\n    document.body.appendChild(textField);\n    textField.select();\n    document.execCommand('copy');\n    textField.remove();\n  }\n\n  /**\n   * resizeObserver observes changes in elements its given to observe and is used here\n   * to communicate to streamlit the height of the component that has changed\n   * so that streamlit can adjust the iframe containing the component accordingly.\n   */\n  const resizeObserver = new ResizeObserver((entries: any) => {\n    // If we know that the body will always fully contain our component (without cutting it off)\n    // then we can use docuemnt.body height instead\n    Streamlit.setFrameHeight((entries[0].contentBoxSize.blockSize ?? entries[0].contentRect.height)); \n  })\n\n  const observe = (divElem: any) => {\n    divElem ? resizeObserver.observe(divElem as HTMLDivElement) : resizeObserver.disconnect();\n  }\n\n  // This useEffect is used to reset the editor when the code argument changes and\n  // the allow_reset argument is true. The allow_reset argument only impacts the\n  // behavior of the component when the component has a fixed key argument because\n  // changing the key argument results in the creation of a new component instance.\n  // Everything would be reset anyways.\n  useEffect(() => {\n    if (args['allow_reset'] === true && args['code'] !== code) {\n      reset.current = !reset.current;\n      resetEditor();\n    }\n  }, [args['code']]);\n\n  /**\n   * This could also be memoized but I don't think it would be necessary because its not expensive.\n   */\n  const themeChoice = () => {\n    const isDarkTheme = theme? theme.base === \"dark\" : true;\n    switch (args['theme']) {\n      case \"contrast\":\n        return isDarkTheme? \"streamlit_light\" : \"streamlit_dark\";\n      case \"light\":\n        return \"streamlit_light\";\n      case \"dark\":\n        return \"streamlit_dark\";\n      case \"default\":\n        return isDarkTheme? \"streamlit_dark\" : \"streamlit_light\";\n      default:\n        return isDarkTheme? \"streamlit_dark\" : \"streamlit_light\";\n    }\n  }\n\n  const themeProp = themeChoice();\n  const componentContainerProps = args[\"component_props\"];\n\n  const {info: infoArg, menu: menuArg, focus: focusArg, code: codeArg, ...rest} = args;\n  const editorArgsString = JSON.stringify(rest);\n  const menuArgsString = JSON.stringify(menuArg);\n  const infoArgsString = JSON.stringify(infoArg);\n  const buttonArgsString = JSON.stringify(args['buttons']);\n  const themeString = JSON.stringify(theme);\n  const snippets = JSON.stringify(snippetAddRemove);\n\n  /**\n   * This section contains the main sub-components (child components). These components are wrapped in useMemos\n   * in order to prevent unnecessary re-rendering of the components. This is listed as one of its use cases in the\n   * React docs ({@link https://beta.reactjs.org/reference/react/useMemo#skipping-re-rendering-of-components Skipping re-rendering of components})\n   *\n   * This component is the editor component that is rendered. It is only re-rendered when\n   * certain properties change. This is important because we should account for the possibility that the editor \n   * is being used at any given moment. Unnecessary and frequent re-rendering of the editor (for outside reasons\n   * especially) can impact user experience and responsiveness.\n   */\n  const editor = useMemo(() => {\n    const keybindings = JSON.stringify(keybindingAddRemove);\n    const revertedArgs = JSON.parse(editorArgsString);\n\n    // Create commands for each button\n    if(revertedArgs['buttons'].length > 0) {\n      revertedArgs['buttons'].forEach((button: any) => {\n          commands.commands = [...commands.commands, {\n            name: (button.name as string).trim().replace(/\\s+/g, '_') + '_button',\n            bindKey: button.bindKey,\n            description: \"Execute '\" + button.name + \"' button command(s)\",\n            exec: () => {\n            executeAll(button.commands);\n          }}];\n      });\n    }\n\n    let heightProps = {};\n    if(typeof revertedArgs['height'] === \"number\") \n      heightProps = {minLines: 1, maxLines: revertedArgs['height']};\n    else if(typeof revertedArgs['height'] === \"string\") \n      heightProps = {height: revertedArgs['height']};\n    else if(Array.isArray(revertedArgs['height']) && revertedArgs['height'].length === 2) \n      heightProps = {minLines: revertedArgs['height'][0], maxLines: revertedArgs['height'][1]};\n\n    const aceEditorProps = { ...defaultEditorProps, ...revertedArgs['editor_props'] };\n    const aceOptions = { ...defaultOptions, ...revertedArgs['options'] };\n    const partProps = { setOptions: aceOptions, editorProps: aceEditorProps };\n    const aceProps = { ...defaultProps, ...partProps,...heightProps, ...revertedArgs['props'] };\n\n    /**\n     * TODO: Remove props from aceProps that we don't want to allow user access to.\n     */\n    return (\n        <Editor\n         editorRef={aceEditor}\n         code={code} \n         lang={revertedArgs['lang']} \n         theme={themeProp} \n         shortcuts={revertedArgs['shortcuts']} \n         snippetString={snippets} \n         ghostText={revertedArgs['ghost_text']}\n         commands={commands.commands} \n         completions={revertedArgs['completions']}\n         replaceCompleter={revertedArgs['replace_completer']}\n         keybindingString={keybindings} \n         props={aceProps} \n         onChange={onChangeHandler}\n         onSelectionChange={onSelectionChangeHandler}\n         onBlur={onEditorBlur}  \n        />\n      );\n  }, [editorArgsString, themeProp, snippets, keybindingAddRemove, reset.current]);\n\n  const buttons = useMemo(() => {\n    const revertedButtons = JSON.parse(buttonArgsString);\n    const revertedTheme = JSON.parse(themeString);\n    const customButtonTheme = revertedTheme ?? {};\n    const customButtons = {buttons: (revertedButtons ?? []) as customButton[], name: \"customButtons\"} as buttonGroup;\n    return (\n      < ButtonSet\n       buttonGroup={customButtons} \n       theme={customButtonTheme} \n       themeProp={themeProp} \n       executeAll={(commands) => executeAll(commands)} />\n    );\n  }, [buttonArgsString, themeString, themeProp]);\n\n  const menu = useMemo(() => {\n    const revertedMenu = JSON.parse(menuArgsString);\n    const revertedTheme = JSON.parse(themeString);\n    const menuTheme = revertedTheme ?? {};\n    return (\n      <ButtonMenu\n       menu={revertedMenu} \n       theme={menuTheme} \n       themeProp={themeProp} \n       executeAll={(commands) => executeAll(commands)} />\n    );\n  }, [menuArgsString, themeString, themeProp]);\n\n  const info = useMemo(() => {\n    const revertedInfo = JSON.parse(infoArgsString);\n    const revertedTheme = JSON.parse(themeString);\n    const infoTheme = revertedTheme ?? {};\n    return (\n      <InfoBar\n       infoRef={infoTextRef} \n       info={revertedInfo} \n       theme={infoTheme} />\n    );\n  }, [infoArgsString, themeString]);\n\n  const globalCSS = useMemo(() => {\n    return (\n      <GlobalCSS isDisabled={disabled} inject={componentContainerProps.globalCSS} />\n    );\n  }, [componentContainerProps.globalCSS, disabled]);\n\n  return (\n    <StyledCodeEditor ref={observe} style={componentContainerProps.style} css={componentContainerProps.css} className={\"streamlit_code-editor \" + theme?.base ?? \"\" } >\n      {globalCSS}\n      {editor}\n      {buttons}\n      {menu}\n      {info}\n    </StyledCodeEditor>\n  )\n}\n\nexport default withStreamlitConnection(CodeEditor)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}