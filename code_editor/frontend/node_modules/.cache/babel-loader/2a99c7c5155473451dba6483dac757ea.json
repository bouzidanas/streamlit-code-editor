{"ast":null,"code":"ace.define(\"ace/mode/smithy_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  /* This file was autogenerated from https://raw.githubusercontent.com/awslabs/smithy-vscode/master/syntaxes/smithy.tmLanguage (uuid: ) */\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var SmithyHighlightRules = function () {\n    this.$rules = {\n      start: [{\n        include: \"#comment\"\n      }, {\n        token: [\"meta.keyword.statement.smithy\", \"variable.other.smithy\", \"text\", \"keyword.operator.smithy\"],\n        regex: /^(\\$)(\\s+.+)(\\s*)(=)/\n      }, {\n        token: [\"keyword.statement.smithy\", \"text\", \"entity.name.type.namespace.smithy\"],\n        regex: /^(namespace)(\\s+)([A-Z-a-z0-9_\\.#$-]+)/\n      }, {\n        token: [\"keyword.statement.smithy\", \"text\", \"keyword.statement.smithy\", \"text\", \"entity.name.type.smithy\"],\n        regex: /^(use)(\\s+)(shape|trait)(\\s+)([A-Z-a-z0-9_\\.#$-]+)\\b/\n      }, {\n        token: [\"keyword.statement.smithy\", \"variable.other.smithy\", \"text\", \"keyword.operator.smithy\"],\n        regex: /^(metadata)(\\s+.+)(\\s*)(=)/\n      }, {\n        token: [\"keyword.statement.smithy\", \"text\", \"entity.name.type.smithy\"],\n        regex: /^(apply|byte|short|integer|long|float|double|bigInteger|bigDecimal|boolean|blob|string|timestamp|service|resource|trait|list|map|set|structure|union|document)(\\s+)([A-Z-a-z0-9_\\.#$-]+)\\b/\n      }, {\n        token: [\"keyword.operator.smithy\", \"text\", \"entity.name.type.smithy\", \"text\", \"text\", \"support.function.smithy\", \"text\", \"text\", \"support.function.smithy\"],\n        regex: /^(operation)(\\s+)([A-Z-a-z0-9_\\.#$-]+)(\\(.*\\))(?:(\\s*)(->)(\\s*[A-Z-a-z0-9_\\.#$-]+))?(?:(\\s+)(errors))?/\n      }, {\n        include: \"#trait\"\n      }, {\n        token: [\"support.type.property-name.smithy\", \"punctuation.separator.dictionary.pair.smithy\"],\n        regex: /([A-Z-a-z0-9_\\.#$-]+)(:)/\n      }, {\n        include: \"#value\"\n      }, {\n        token: \"keyword.other.smithy\",\n        regex: /\\->/\n      }],\n      \"#comment\": [{\n        include: \"#doc_comment\"\n      }, {\n        include: \"#line_comment\"\n      }],\n      \"#doc_comment\": [{\n        token: \"comment.block.documentation.smithy\",\n        regex: /\\/\\/\\/.*/\n      }],\n      \"#line_comment\": [{\n        token: \"comment.line.double-slash.smithy\",\n        regex: /\\/\\/.*/\n      }],\n      \"#trait\": [{\n        token: [\"punctuation.definition.annotation.smithy\", \"storage.type.annotation.smithy\"],\n        regex: /(@)([0-9a-zA-Z\\.#-]+)/\n      }, {\n        token: [\"punctuation.definition.annotation.smithy\", \"punctuation.definition.object.end.smithy\", \"meta.structure.smithy\"],\n        regex: /(@)([0-9a-zA-Z\\.#-]+)(\\()/,\n        push: [{\n          token: \"punctuation.definition.object.end.smithy\",\n          regex: /\\)/,\n          next: \"pop\"\n        }, {\n          include: \"#value\"\n        }, {\n          include: \"#object_inner\"\n        }, {\n          defaultToken: \"meta.structure.smithy\"\n        }]\n      }],\n      \"#value\": [{\n        include: \"#constant\"\n      }, {\n        include: \"#number\"\n      }, {\n        include: \"#string\"\n      }, {\n        include: \"#array\"\n      }, {\n        include: \"#object\"\n      }],\n      \"#array\": [{\n        token: \"punctuation.definition.array.begin.smithy\",\n        regex: /\\[/,\n        push: [{\n          token: \"punctuation.definition.array.end.smithy\",\n          regex: /\\]/,\n          next: \"pop\"\n        }, {\n          include: \"#comment\"\n        }, {\n          include: \"#value\"\n        }, {\n          token: \"punctuation.separator.array.smithy\",\n          regex: /,/\n        }, {\n          token: \"invalid.illegal.expected-array-separator.smithy\",\n          regex: /[^\\s\\]]/\n        }, {\n          defaultToken: \"meta.structure.array.smithy\"\n        }]\n      }],\n      \"#constant\": [{\n        token: \"constant.language.smithy\",\n        regex: /\\b(?:true|false|null)\\b/\n      }],\n      \"#number\": [{\n        token: \"constant.numeric.smithy\",\n        regex: /-?(?:0|[1-9]\\d*)(?:(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)?/\n      }],\n      \"#object\": [{\n        token: \"punctuation.definition.dictionary.begin.smithy\",\n        regex: /\\{/,\n        push: [{\n          token: \"punctuation.definition.dictionary.end.smithy\",\n          regex: /\\}/,\n          next: \"pop\"\n        }, {\n          include: \"#trait\"\n        }, {\n          include: \"#object_inner\"\n        }, {\n          defaultToken: \"meta.structure.dictionary.smithy\"\n        }]\n      }],\n      \"#object_inner\": [{\n        include: \"#comment\"\n      }, {\n        include: \"#string_key\"\n      }, {\n        token: \"punctuation.separator.dictionary.key-value.smithy\",\n        regex: /:/,\n        push: [{\n          token: \"punctuation.separator.dictionary.pair.smithy\",\n          regex: /,|(?=\\})/,\n          next: \"pop\"\n        }, {\n          include: \"#value\"\n        }, {\n          token: \"invalid.illegal.expected-dictionary-separator.smithy\",\n          regex: /[^\\s,]/\n        }, {\n          defaultToken: \"meta.structure.dictionary.value.smithy\"\n        }]\n      }, {\n        token: \"invalid.illegal.expected-dictionary-separator.smithy\",\n        regex: /[^\\s\\}]/\n      }],\n      \"#string_key\": [{\n        include: \"#identifier_key\"\n      }, {\n        include: \"#dquote_key\"\n      }, {\n        include: \"#squote_key\"\n      }],\n      \"#identifier_key\": [{\n        token: \"support.type.property-name.smithy\",\n        regex: /[A-Z-a-z0-9_\\.#$-]+/\n      }],\n      \"#dquote_key\": [{\n        include: \"#dquote\"\n      }],\n      \"#squote_key\": [{\n        include: \"#squote\"\n      }],\n      \"#string\": [{\n        include: \"#textblock\"\n      }, {\n        include: \"#dquote\"\n      }, {\n        include: \"#squote\"\n      }, {\n        include: \"#identifier\"\n      }],\n      \"#textblock\": [{\n        token: \"punctuation.definition.string.begin.smithy\",\n        regex: /\"\"\"/,\n        push: [{\n          token: \"punctuation.definition.string.end.smithy\",\n          regex: /\"\"\"/,\n          next: \"pop\"\n        }, {\n          token: \"constant.character.escape.smithy\",\n          regex: /\\\\./\n        }, {\n          defaultToken: \"string.quoted.double.smithy\"\n        }]\n      }],\n      \"#dquote\": [{\n        token: \"punctuation.definition.string.begin.smithy\",\n        regex: /\"/,\n        push: [{\n          token: \"punctuation.definition.string.end.smithy\",\n          regex: /\"/,\n          next: \"pop\"\n        }, {\n          token: \"constant.character.escape.smithy\",\n          regex: /\\\\./\n        }, {\n          defaultToken: \"string.quoted.double.smithy\"\n        }]\n      }],\n      \"#squote\": [{\n        token: \"punctuation.definition.string.begin.smithy\",\n        regex: /'/,\n        push: [{\n          token: \"punctuation.definition.string.end.smithy\",\n          regex: /'/,\n          next: \"pop\"\n        }, {\n          token: \"constant.character.escape.smithy\",\n          regex: /\\\\./\n        }, {\n          defaultToken: \"string.quoted.single.smithy\"\n        }]\n      }],\n      \"#identifier\": [{\n        token: \"storage.type.smithy\",\n        regex: /[A-Z-a-z_][A-Z-a-z0-9_\\.#$-]*/\n      }]\n    };\n    this.normalizeRules();\n  };\n  SmithyHighlightRules.metaData = {\n    name: \"Smithy\",\n    fileTypes: [\"smithy\"],\n    scopeName: \"source.smithy\",\n    foldingStartMarker: \"(\\\\{|\\\\[)\\\\s*\",\n    foldingStopMarker: \"\\\\s*(\\\\}|\\\\])\"\n  };\n  oop.inherits(SmithyHighlightRules, TextHighlightRules);\n  exports.SmithyHighlightRules = SmithyHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n  var MatchingBraceOutdent = function () {};\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Range = require(\"../../range\").Range;\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n      return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n        return range;\n      }\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n        endRow = row;\n      }\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n      var endRow = row;\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/smithy\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/smithy_highlight_rules\", \"ace/mode/matching_brace_outdent\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var SmithyHighlightRules = require(\"./smithy_highlight_rules\").SmithyHighlightRules;\n  var MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n  var CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = SmithyHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = this.$defaultBehaviour;\n    this.foldingRules = new CStyleFoldMode();\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.$quotes = {\n      '\"': '\"'\n    };\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n    this.$id = \"ace/mode/smithy\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/smithy\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","SmithyHighlightRules","$rules","start","include","token","regex","push","next","defaultToken","normalizeRules","metaData","name","fileTypes","scopeName","foldingStartMarker","foldingStopMarker","inherits","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","match","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","BaseFoldMode","FoldMode","commentRegex","RegExp","source","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","exec","TextMode","Mode","CStyleFoldMode","HighlightRules","$outdent","$behaviour","$defaultBehaviour","foldingRules","lineCommentStart","$quotes","state","$id"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-smithy.js"],"sourcesContent":["ace.define(\"ace/mode/smithy_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){/* This file was autogenerated from https://raw.githubusercontent.com/awslabs/smithy-vscode/master/syntaxes/smithy.tmLanguage (uuid: ) */\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar SmithyHighlightRules = function () {\n    this.$rules = {\n        start: [{\n                include: \"#comment\"\n            }, {\n                token: [\n                    \"meta.keyword.statement.smithy\",\n                    \"variable.other.smithy\",\n                    \"text\",\n                    \"keyword.operator.smithy\"\n                ],\n                regex: /^(\\$)(\\s+.+)(\\s*)(=)/\n            }, {\n                token: [\n                    \"keyword.statement.smithy\",\n                    \"text\",\n                    \"entity.name.type.namespace.smithy\"\n                ],\n                regex: /^(namespace)(\\s+)([A-Z-a-z0-9_\\.#$-]+)/\n            }, {\n                token: [\n                    \"keyword.statement.smithy\",\n                    \"text\",\n                    \"keyword.statement.smithy\",\n                    \"text\",\n                    \"entity.name.type.smithy\"\n                ],\n                regex: /^(use)(\\s+)(shape|trait)(\\s+)([A-Z-a-z0-9_\\.#$-]+)\\b/\n            }, {\n                token: [\n                    \"keyword.statement.smithy\",\n                    \"variable.other.smithy\",\n                    \"text\",\n                    \"keyword.operator.smithy\"\n                ],\n                regex: /^(metadata)(\\s+.+)(\\s*)(=)/\n            }, {\n                token: [\n                    \"keyword.statement.smithy\",\n                    \"text\",\n                    \"entity.name.type.smithy\"\n                ],\n                regex: /^(apply|byte|short|integer|long|float|double|bigInteger|bigDecimal|boolean|blob|string|timestamp|service|resource|trait|list|map|set|structure|union|document)(\\s+)([A-Z-a-z0-9_\\.#$-]+)\\b/\n            }, {\n                token: [\n                    \"keyword.operator.smithy\",\n                    \"text\",\n                    \"entity.name.type.smithy\",\n                    \"text\",\n                    \"text\",\n                    \"support.function.smithy\",\n                    \"text\",\n                    \"text\",\n                    \"support.function.smithy\"\n                ],\n                regex: /^(operation)(\\s+)([A-Z-a-z0-9_\\.#$-]+)(\\(.*\\))(?:(\\s*)(->)(\\s*[A-Z-a-z0-9_\\.#$-]+))?(?:(\\s+)(errors))?/\n            }, {\n                include: \"#trait\"\n            }, {\n                token: [\n                    \"support.type.property-name.smithy\",\n                    \"punctuation.separator.dictionary.pair.smithy\"\n                ],\n                regex: /([A-Z-a-z0-9_\\.#$-]+)(:)/\n            }, {\n                include: \"#value\"\n            }, {\n                token: \"keyword.other.smithy\",\n                regex: /\\->/\n            }],\n        \"#comment\": [{\n                include: \"#doc_comment\"\n            }, {\n                include: \"#line_comment\"\n            }],\n        \"#doc_comment\": [{\n                token: \"comment.block.documentation.smithy\",\n                regex: /\\/\\/\\/.*/\n            }],\n        \"#line_comment\": [{\n                token: \"comment.line.double-slash.smithy\",\n                regex: /\\/\\/.*/\n            }],\n        \"#trait\": [{\n                token: [\n                    \"punctuation.definition.annotation.smithy\",\n                    \"storage.type.annotation.smithy\"\n                ],\n                regex: /(@)([0-9a-zA-Z\\.#-]+)/\n            }, {\n                token: [\n                    \"punctuation.definition.annotation.smithy\",\n                    \"punctuation.definition.object.end.smithy\",\n                    \"meta.structure.smithy\"\n                ],\n                regex: /(@)([0-9a-zA-Z\\.#-]+)(\\()/,\n                push: [{\n                        token: \"punctuation.definition.object.end.smithy\",\n                        regex: /\\)/,\n                        next: \"pop\"\n                    }, {\n                        include: \"#value\"\n                    }, {\n                        include: \"#object_inner\"\n                    }, {\n                        defaultToken: \"meta.structure.smithy\"\n                    }]\n            }],\n        \"#value\": [{\n                include: \"#constant\"\n            }, {\n                include: \"#number\"\n            }, {\n                include: \"#string\"\n            }, {\n                include: \"#array\"\n            }, {\n                include: \"#object\"\n            }],\n        \"#array\": [{\n                token: \"punctuation.definition.array.begin.smithy\",\n                regex: /\\[/,\n                push: [{\n                        token: \"punctuation.definition.array.end.smithy\",\n                        regex: /\\]/,\n                        next: \"pop\"\n                    }, {\n                        include: \"#comment\"\n                    }, {\n                        include: \"#value\"\n                    }, {\n                        token: \"punctuation.separator.array.smithy\",\n                        regex: /,/\n                    }, {\n                        token: \"invalid.illegal.expected-array-separator.smithy\",\n                        regex: /[^\\s\\]]/\n                    }, {\n                        defaultToken: \"meta.structure.array.smithy\"\n                    }]\n            }],\n        \"#constant\": [{\n                token: \"constant.language.smithy\",\n                regex: /\\b(?:true|false|null)\\b/\n            }],\n        \"#number\": [{\n                token: \"constant.numeric.smithy\",\n                regex: /-?(?:0|[1-9]\\d*)(?:(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)?/\n            }],\n        \"#object\": [{\n                token: \"punctuation.definition.dictionary.begin.smithy\",\n                regex: /\\{/,\n                push: [{\n                        token: \"punctuation.definition.dictionary.end.smithy\",\n                        regex: /\\}/,\n                        next: \"pop\"\n                    }, {\n                        include: \"#trait\"\n                    }, {\n                        include: \"#object_inner\"\n                    }, {\n                        defaultToken: \"meta.structure.dictionary.smithy\"\n                    }]\n            }],\n        \"#object_inner\": [{\n                include: \"#comment\"\n            }, {\n                include: \"#string_key\"\n            }, {\n                token: \"punctuation.separator.dictionary.key-value.smithy\",\n                regex: /:/,\n                push: [{\n                        token: \"punctuation.separator.dictionary.pair.smithy\",\n                        regex: /,|(?=\\})/,\n                        next: \"pop\"\n                    }, {\n                        include: \"#value\"\n                    }, {\n                        token: \"invalid.illegal.expected-dictionary-separator.smithy\",\n                        regex: /[^\\s,]/\n                    }, {\n                        defaultToken: \"meta.structure.dictionary.value.smithy\"\n                    }]\n            }, {\n                token: \"invalid.illegal.expected-dictionary-separator.smithy\",\n                regex: /[^\\s\\}]/\n            }],\n        \"#string_key\": [{\n                include: \"#identifier_key\"\n            }, {\n                include: \"#dquote_key\"\n            }, {\n                include: \"#squote_key\"\n            }],\n        \"#identifier_key\": [{\n                token: \"support.type.property-name.smithy\",\n                regex: /[A-Z-a-z0-9_\\.#$-]+/\n            }],\n        \"#dquote_key\": [{\n                include: \"#dquote\"\n            }],\n        \"#squote_key\": [{\n                include: \"#squote\"\n            }],\n        \"#string\": [{\n                include: \"#textblock\"\n            }, {\n                include: \"#dquote\"\n            }, {\n                include: \"#squote\"\n            }, {\n                include: \"#identifier\"\n            }],\n        \"#textblock\": [{\n                token: \"punctuation.definition.string.begin.smithy\",\n                regex: /\"\"\"/,\n                push: [{\n                        token: \"punctuation.definition.string.end.smithy\",\n                        regex: /\"\"\"/,\n                        next: \"pop\"\n                    }, {\n                        token: \"constant.character.escape.smithy\",\n                        regex: /\\\\./\n                    }, {\n                        defaultToken: \"string.quoted.double.smithy\"\n                    }]\n            }],\n        \"#dquote\": [{\n                token: \"punctuation.definition.string.begin.smithy\",\n                regex: /\"/,\n                push: [{\n                        token: \"punctuation.definition.string.end.smithy\",\n                        regex: /\"/,\n                        next: \"pop\"\n                    }, {\n                        token: \"constant.character.escape.smithy\",\n                        regex: /\\\\./\n                    }, {\n                        defaultToken: \"string.quoted.double.smithy\"\n                    }]\n            }],\n        \"#squote\": [{\n                token: \"punctuation.definition.string.begin.smithy\",\n                regex: /'/,\n                push: [{\n                        token: \"punctuation.definition.string.end.smithy\",\n                        regex: /'/,\n                        next: \"pop\"\n                    }, {\n                        token: \"constant.character.escape.smithy\",\n                        regex: /\\\\./\n                    }, {\n                        defaultToken: \"string.quoted.single.smithy\"\n                    }]\n            }],\n        \"#identifier\": [{\n                token: \"storage.type.smithy\",\n                regex: /[A-Z-a-z_][A-Z-a-z0-9_\\.#$-]*/\n            }]\n    };\n    this.normalizeRules();\n};\nSmithyHighlightRules.metaData = {\n    name: \"Smithy\",\n    fileTypes: [\"smithy\"],\n    scopeName: \"source.smithy\",\n    foldingStartMarker: \"(\\\\{|\\\\[)\\\\s*\",\n    foldingStopMarker: \"\\\\s*(\\\\}|\\\\])\"\n};\noop.inherits(SmithyHighlightRules, TextHighlightRules);\nexports.SmithyHighlightRules = SmithyHighlightRules;\n\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module){\"use strict\";\nvar Range = require(\"../range\").Range;\nvar MatchingBraceOutdent = function () { };\n(function () {\n    this.checkOutdent = function (line, input) {\n        if (!/^\\s+$/.test(line))\n            return false;\n        return /^\\s*\\}/.test(input);\n    };\n    this.autoOutdent = function (doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n        if (!match)\n            return 0;\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({ row: row, column: column });\n        if (!openBracePos || openBracePos.row == row)\n            return 0;\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n    this.$getIndent = function (line) {\n        return line.match(/^\\s*/)[0];\n    };\n}).call(MatchingBraceOutdent.prototype);\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n        this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n        return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                }\n                else if (foldStyle != \"all\")\n                    range = null;\n            }\n            return range;\n        }\n        if (foldStyle === \"markbegin\")\n            return;\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    this.getSectionRange = function (session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                }\n                else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                }\n                else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m)\n                continue;\n            if (m[1])\n                depth--;\n            else\n                depth++;\n            if (!depth)\n                break;\n        }\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/smithy\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/smithy_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/folding/cstyle\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar SmithyHighlightRules = require(\"./smithy_highlight_rules\").SmithyHighlightRules;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = SmithyHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = this.$defaultBehaviour;\n    this.foldingRules = new CStyleFoldMode();\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"//\";\n    this.$quotes = { '\"': '\"' };\n    this.checkOutdent = function (state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n    this.autoOutdent = function (state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n    this.$id = \"ace/mode/smithy\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/smithy\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}