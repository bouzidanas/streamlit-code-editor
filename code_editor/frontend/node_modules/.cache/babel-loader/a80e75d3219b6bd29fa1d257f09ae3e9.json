{"ast":null,"code":"// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { Struct } from '../type';\n/** @ignore */\nexport class StructBuilder extends Builder {\n  addChild(child, name = `${this.numChildren}`) {\n    const childIndex = this.children.push(child);\n    this.type = new Struct([...this.type.children, new Field(name, child.type, true)]);\n    return childIndex;\n  }\n}","map":{"version":3,"names":["Field","Builder","Struct","StructBuilder","addChild","child","name","numChildren","childIndex","children","push","type"],"sources":["builder/struct.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { DataType, Struct } from '../type';\n\n/** @ignore */\nexport class StructBuilder<T extends { [key: string]: DataType } = any, TNull = any> extends Builder<Struct<T>, TNull> {\n    public addChild(child: Builder, name = `${this.numChildren}`) {\n        const childIndex = this.children.push(child);\n        this.type = new Struct([...this.type.children, new Field(name, child.type, true)]);\n        return childIndex;\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,KAAK,QAAQ,WAAW;AACjC,SAASC,OAAO,QAAQ,YAAY;AACpC,SAAmBC,MAAM,QAAQ,SAAS;AAE1C;AACA,OAAM,MAAOC,aAAwE,SAAQF,OAAyB;EAC3GG,QAAQA,CAACC,KAAc,EAAEC,IAAI,GAAG,GAAG,IAAI,CAACC,WAAW,EAAE;IACxD,MAAMC,UAAU,GAAG,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACL,KAAK,CAAC;IAC5C,IAAI,CAACM,IAAI,GAAG,IAAIT,MAAM,CAAC,CAAC,GAAG,IAAI,CAACS,IAAI,CAACF,QAAQ,EAAE,IAAIT,KAAK,CAACM,IAAI,EAAED,KAAK,CAACM,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;IAClF,OAAOH,UAAU;EACrB","ignoreList":[]},"metadata":{},"sourceType":"module"}