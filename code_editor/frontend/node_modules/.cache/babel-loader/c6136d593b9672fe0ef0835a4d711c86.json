{"ast":null,"code":"ace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n  var MatchingBraceOutdent = function () {};\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/doc_comment_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var DocCommentHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.doc.tag\",\n        regex: \"@\\\\w+(?=\\\\s|$)\"\n      }, DocCommentHighlightRules.getTagRule(), {\n        defaultToken: \"comment.doc.body\",\n        caseInsensitive: true\n      }]\n    };\n  };\n  oop.inherits(DocCommentHighlightRules, TextHighlightRules);\n  DocCommentHighlightRules.getTagRule = function (start) {\n    return {\n      token: \"comment.doc.tag.storage.type\",\n      regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n  };\n  DocCommentHighlightRules.getStartRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // doc comment\n      regex: /\\/\\*\\*(?!\\/)/,\n      next: start\n    };\n  };\n  DocCommentHighlightRules.getEndRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // closing comment\n      regex: \"\\\\*\\\\/\",\n      next: start\n    };\n  };\n  exports.DocCommentHighlightRules = DocCommentHighlightRules;\n});\nace.define(\"ace/mode/dot_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/lib/lang\", \"ace/mode/text_highlight_rules\", \"ace/mode/doc_comment_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var lang = require(\"../lib/lang\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\n  var DotHighlightRules = function () {\n    var keywords = lang.arrayToMap(\"strict|node|edge|graph|digraph|subgraph\".split(\"|\"));\n    var attributes = lang.arrayToMap(\"damping|k|url|area|arrowhead|arrowsize|arrowtail|aspect|bb|bgcolor|center|charset|clusterrank|color|colorscheme|comment|compound|concentrate|constraint|decorate|defaultdist|dim|dimen|dir|diredgeconstraints|distortion|dpi|edgeurl|edgehref|edgetarget|edgetooltip|epsilon|esep|fillcolor|fixedsize|fontcolor|fontname|fontnames|fontpath|fontsize|forcelabels|gradientangle|group|headurl|head_lp|headclip|headhref|headlabel|headport|headtarget|headtooltip|height|href|id|image|imagepath|imagescale|label|labelurl|label_scheme|labelangle|labeldistance|labelfloat|labelfontcolor|labelfontname|labelfontsize|labelhref|labeljust|labelloc|labeltarget|labeltooltip|landscape|layer|layerlistsep|layers|layerselect|layersep|layout|len|levels|levelsgap|lhead|lheight|lp|ltail|lwidth|margin|maxiter|mclimit|mindist|minlen|mode|model|mosek|nodesep|nojustify|normalize|nslimit|nslimit1|ordering|orientation|outputorder|overlap|overlap_scaling|pack|packmode|pad|page|pagedir|pencolor|penwidth|peripheries|pin|pos|quadtree|quantum|rank|rankdir|ranksep|ratio|rects|regular|remincross|repulsiveforce|resolution|root|rotate|rotation|samehead|sametail|samplepoints|scale|searchsize|sep|shape|shapefile|showboxes|sides|size|skew|smoothing|sortv|splines|start|style|stylesheet|tailurl|tail_lp|tailclip|tailhref|taillabel|tailport|tailtarget|tailtooltip|target|tooltip|truecolor|vertices|viewport|voro_margin|weight|width|xlabel|xlp|z\".split(\"|\"));\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: /\\/\\/.*$/\n      }, {\n        token: \"comment\",\n        regex: /#.*$/\n      }, {\n        token: \"comment\",\n        // multi line comment\n        merge: true,\n        regex: /\\/\\*/,\n        next: \"comment\"\n      }, {\n        token: \"string\",\n        regex: \"'(?=.)\",\n        next: \"qstring\"\n      }, {\n        token: \"string\",\n        regex: '\"(?=.)',\n        next: \"qqstring\"\n      }, {\n        token: \"constant.numeric\",\n        regex: /[+\\-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)?\\b/\n      }, {\n        token: \"keyword.operator\",\n        regex: /\\+|=|\\->/\n      }, {\n        token: \"punctuation.operator\",\n        regex: /,|;/\n      }, {\n        token: \"paren.lparen\",\n        regex: /[\\[{]/\n      }, {\n        token: \"paren.rparen\",\n        regex: /[\\]}]/\n      }, {\n        token: \"comment\",\n        regex: /^#!.*$/\n      }, {\n        token: function (value) {\n          if (keywords.hasOwnProperty(value.toLowerCase())) {\n            return \"keyword\";\n          } else if (attributes.hasOwnProperty(value.toLowerCase())) {\n            return \"variable\";\n          } else {\n            return \"text\";\n          }\n        },\n        regex: \"\\\\-?[a-zA-Z_][a-zA-Z0-9_\\\\-]*\"\n      }],\n      \"comment\": [{\n        token: \"comment\",\n        // closing comment\n        regex: \"\\\\*\\\\/\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment\"\n      }],\n      \"qqstring\": [{\n        token: \"string\",\n        regex: '[^\"\\\\\\\\]+',\n        merge: true\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"qqstring\",\n        merge: true\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\",\n        merge: true\n      }],\n      \"qstring\": [{\n        token: \"string\",\n        regex: \"[^'\\\\\\\\]+\",\n        merge: true\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"qstring\",\n        merge: true\n      }, {\n        token: \"string\",\n        regex: \"'|$\",\n        next: \"start\",\n        merge: true\n      }]\n    };\n  };\n  oop.inherits(DotHighlightRules, TextHighlightRules);\n  exports.DotHighlightRules = DotHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Range = require(\"../../range\").Range;\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n      return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n        return range;\n      }\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n        endRow = row;\n      }\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n      var endRow = row;\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/dot\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/matching_brace_outdent\", \"ace/mode/dot_highlight_rules\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n  var DotHighlightRules = require(\"./dot_highlight_rules\").DotHighlightRules;\n  var DotFoldMode = require(\"./folding/cstyle\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = DotHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.foldingRules = new DotFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = [\"//\", \"#\"];\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\"\n    };\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n      var endState = tokenizedLine.state;\n      if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n        return indent;\n      }\n      if (state == \"start\") {\n        var match = line.match(/^.*(?:\\bcase\\b.*:|[\\{\\(\\[])\\s*$/);\n        if (match) {\n          indent += tab;\n        }\n      }\n      return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n    this.$id = \"ace/mode/dot\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/dot\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","match","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","oop","TextHighlightRules","DocCommentHighlightRules","$rules","token","regex","getTagRule","defaultToken","caseInsensitive","inherits","start","getStartRule","next","getEndRule","lang","DotHighlightRules","keywords","arrayToMap","split","attributes","merge","value","hasOwnProperty","toLowerCase","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","exec","TextMode","Mode","DotFoldMode","HighlightRules","$outdent","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","getNextLineIndent","state","tab","tokenizedLine","getTokenizer","getLineTokens","tokens","endState","type","$id"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-dot.js"],"sourcesContent":["ace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module){\"use strict\";\nvar Range = require(\"../range\").Range;\nvar MatchingBraceOutdent = function () { };\n(function () {\n    this.checkOutdent = function (line, input) {\n        if (!/^\\s+$/.test(line))\n            return false;\n        return /^\\s*\\}/.test(input);\n    };\n    this.autoOutdent = function (doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n        if (!match)\n            return 0;\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({ row: row, column: column });\n        if (!openBracePos || openBracePos.row == row)\n            return 0;\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n    this.$getIndent = function (line) {\n        return line.match(/^\\s*/)[0];\n    };\n}).call(MatchingBraceOutdent.prototype);\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n\n});\n\nace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar DocCommentHighlightRules = function () {\n    this.$rules = {\n        \"start\": [\n            {\n                token: \"comment.doc.tag\",\n                regex: \"@\\\\w+(?=\\\\s|$)\"\n            }, DocCommentHighlightRules.getTagRule(), {\n                defaultToken: \"comment.doc.body\",\n                caseInsensitive: true\n            }\n        ]\n    };\n};\noop.inherits(DocCommentHighlightRules, TextHighlightRules);\nDocCommentHighlightRules.getTagRule = function (start) {\n    return {\n        token: \"comment.doc.tag.storage.type\",\n        regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n};\nDocCommentHighlightRules.getStartRule = function (start) {\n    return {\n        token: \"comment.doc\", // doc comment\n        regex: /\\/\\*\\*(?!\\/)/,\n        next: start\n    };\n};\nDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token: \"comment.doc\", // closing comment\n        regex: \"\\\\*\\\\/\",\n        next: start\n    };\n};\nexports.DocCommentHighlightRules = DocCommentHighlightRules;\n\n});\n\nace.define(\"ace/mode/dot_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text_highlight_rules\",\"ace/mode/doc_comment_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar lang = require(\"../lib/lang\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\nvar DotHighlightRules = function () {\n    var keywords = lang.arrayToMap((\"strict|node|edge|graph|digraph|subgraph\").split(\"|\"));\n    var attributes = lang.arrayToMap((\"damping|k|url|area|arrowhead|arrowsize|arrowtail|aspect|bb|bgcolor|center|charset|clusterrank|color|colorscheme|comment|compound|concentrate|constraint|decorate|defaultdist|dim|dimen|dir|diredgeconstraints|distortion|dpi|edgeurl|edgehref|edgetarget|edgetooltip|epsilon|esep|fillcolor|fixedsize|fontcolor|fontname|fontnames|fontpath|fontsize|forcelabels|gradientangle|group|headurl|head_lp|headclip|headhref|headlabel|headport|headtarget|headtooltip|height|href|id|image|imagepath|imagescale|label|labelurl|label_scheme|labelangle|labeldistance|labelfloat|labelfontcolor|labelfontname|labelfontsize|labelhref|labeljust|labelloc|labeltarget|labeltooltip|landscape|layer|layerlistsep|layers|layerselect|layersep|layout|len|levels|levelsgap|lhead|lheight|lp|ltail|lwidth|margin|maxiter|mclimit|mindist|minlen|mode|model|mosek|nodesep|nojustify|normalize|nslimit|nslimit1|ordering|orientation|outputorder|overlap|overlap_scaling|pack|packmode|pad|page|pagedir|pencolor|penwidth|peripheries|pin|pos|quadtree|quantum|rank|rankdir|ranksep|ratio|rects|regular|remincross|repulsiveforce|resolution|root|rotate|rotation|samehead|sametail|samplepoints|scale|searchsize|sep|shape|shapefile|showboxes|sides|size|skew|smoothing|sortv|splines|start|style|stylesheet|tailurl|tail_lp|tailclip|tailhref|taillabel|tailport|tailtarget|tailtooltip|target|tooltip|truecolor|vertices|viewport|voro_margin|weight|width|xlabel|xlp|z\").split(\"|\"));\n    this.$rules = {\n        \"start\": [\n            {\n                token: \"comment\",\n                regex: /\\/\\/.*$/\n            }, {\n                token: \"comment\",\n                regex: /#.*$/\n            }, {\n                token: \"comment\", // multi line comment\n                merge: true,\n                regex: /\\/\\*/,\n                next: \"comment\"\n            }, {\n                token: \"string\",\n                regex: \"'(?=.)\",\n                next: \"qstring\"\n            }, {\n                token: \"string\",\n                regex: '\"(?=.)',\n                next: \"qqstring\"\n            }, {\n                token: \"constant.numeric\",\n                regex: /[+\\-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)?\\b/\n            }, {\n                token: \"keyword.operator\",\n                regex: /\\+|=|\\->/\n            }, {\n                token: \"punctuation.operator\",\n                regex: /,|;/\n            }, {\n                token: \"paren.lparen\",\n                regex: /[\\[{]/\n            }, {\n                token: \"paren.rparen\",\n                regex: /[\\]}]/\n            }, {\n                token: \"comment\",\n                regex: /^#!.*$/\n            }, {\n                token: function (value) {\n                    if (keywords.hasOwnProperty(value.toLowerCase())) {\n                        return \"keyword\";\n                    }\n                    else if (attributes.hasOwnProperty(value.toLowerCase())) {\n                        return \"variable\";\n                    }\n                    else {\n                        return \"text\";\n                    }\n                },\n                regex: \"\\\\-?[a-zA-Z_][a-zA-Z0-9_\\\\-]*\"\n            }\n        ],\n        \"comment\": [\n            {\n                token: \"comment\", // closing comment\n                regex: \"\\\\*\\\\/\",\n                next: \"start\"\n            }, {\n                defaultToken: \"comment\"\n            }\n        ],\n        \"qqstring\": [\n            {\n                token: \"string\",\n                regex: '[^\"\\\\\\\\]+',\n                merge: true\n            }, {\n                token: \"string\",\n                regex: \"\\\\\\\\$\",\n                next: \"qqstring\",\n                merge: true\n            }, {\n                token: \"string\",\n                regex: '\"|$',\n                next: \"start\",\n                merge: true\n            }\n        ],\n        \"qstring\": [\n            {\n                token: \"string\",\n                regex: \"[^'\\\\\\\\]+\",\n                merge: true\n            }, {\n                token: \"string\",\n                regex: \"\\\\\\\\$\",\n                next: \"qstring\",\n                merge: true\n            }, {\n                token: \"string\",\n                regex: \"'|$\",\n                next: \"start\",\n                merge: true\n            }\n        ]\n    };\n};\noop.inherits(DotHighlightRules, TextHighlightRules);\nexports.DotHighlightRules = DotHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n        this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n        return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                }\n                else if (foldStyle != \"all\")\n                    range = null;\n            }\n            return range;\n        }\n        if (foldStyle === \"markbegin\")\n            return;\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    this.getSectionRange = function (session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                }\n                else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                }\n                else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m)\n                continue;\n            if (m[1])\n                depth--;\n            else\n                depth++;\n            if (!depth)\n                break;\n        }\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/dot\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/matching_brace_outdent\",\"ace/mode/dot_highlight_rules\",\"ace/mode/folding/cstyle\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar DotHighlightRules = require(\"./dot_highlight_rules\").DotHighlightRules;\nvar DotFoldMode = require(\"./folding/cstyle\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = DotHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.foldingRules = new DotFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = [\"//\", \"#\"];\n    this.blockComment = { start: \"/*\", end: \"*/\" };\n    this.getNextLineIndent = function (state, line, tab) {\n        var indent = this.$getIndent(line);\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        var endState = tokenizedLine.state;\n        if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n            return indent;\n        }\n        if (state == \"start\") {\n            var match = line.match(/^.*(?:\\bcase\\b.*:|[\\{\\(\\[])\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n        return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n    this.autoOutdent = function (state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n    this.$id = \"ace/mode/dot\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/dot\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}