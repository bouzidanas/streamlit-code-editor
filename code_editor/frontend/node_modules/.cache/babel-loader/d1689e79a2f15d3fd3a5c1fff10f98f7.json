{"ast":null,"code":"ace.define(\"ace/mode/vbscript_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  /*\n  THIS FILE WAS AUTOGENERATED BY mode_highlight_rules.tmpl.js (UUID: 7F9C9343-D48E-4E7D-BFE8-F680714DCD3E) */\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var VBScriptHighlightRules = function () {\n    var keywordMapper = this.createKeywordMapper({\n      \"keyword.control.asp\": \"If|Then|Else|ElseIf|End|While|Wend|For|To|Each|Case|Select|Return\" + \"|Continue|Do|Until|Loop|Next|With|Exit|Function|Property|Type|Enum|Sub|IIf|Class\",\n      \"storage.type.asp\": \"Dim|Call|Const|Redim|Set|Let|Get|New|Randomize|Option|Explicit|Preserve|Erase|Execute|ExecuteGlobal\",\n      \"storage.modifier.asp\": \"Private|Public|Default\",\n      \"keyword.operator.asp\": \"Mod|And|Not|Or|Xor|As|Eqv|Imp|Is\",\n      \"constant.language.asp\": \"Empty|False|Nothing|Null|True\",\n      \"variable.language.vb.asp\": \"Me\",\n      \"support.class.vb.asp\": \"RegExp\",\n      \"support.class.asp\": \"Application|ObjectContext|Request|Response|Server|Session\",\n      \"support.class.collection.asp\": \"Contents|StaticObjects|ClientCertificate|Cookies|Form|QueryString|ServerVariables\",\n      \"support.constant.asp\": \"TotalBytes|Buffer|CacheControl|Charset|ContentType|Expires|ExpiresAbsolute\" + \"|IsClientConnected|PICS|Status|ScriptTimeout|CodePage|LCID|SessionID|Timeout\",\n      \"support.function.asp\": \"Lock|Unlock|SetAbort|SetComplete|BinaryRead|AddHeader|AppendToLog\" + \"|BinaryWrite|Clear|Flush|Redirect|Write|CreateObject|HTMLEncode|MapPath|URLEncode|Abandon|Convert|Regex\",\n      \"support.function.event.asp\": \"Application_OnEnd|Application_OnStart\" + \"|OnTransactionAbort|OnTransactionCommit|Session_OnEnd|Session_OnStart\",\n      \"support.function.vb.asp\": \"Array|Add|Asc|Atn|CBool|CByte|CCur|CDate|CDbl|Chr|CInt|CLng\" + \"|Conversions|Cos|CreateObject|CSng|CStr|Date|DateAdd|DateDiff|DatePart|DateSerial\" + \"|DateValue|Day|Derived|Math|Escape|Eval|Exists|Exp|Filter|FormatCurrency\" + \"|FormatDateTime|FormatNumber|FormatPercent|GetLocale|GetObject|GetRef|Hex\" + \"|Hour|InputBox|InStr|InStrRev|Int|Fix|IsArray|IsDate|IsEmpty|IsNull|IsNumeric\" + \"|IsObject|Item|Items|Join|Keys|LBound|LCase|Left|Len|LoadPicture|Log|LTrim|RTrim\" + \"|Trim|Maths|Mid|Minute|Month|MonthName|MsgBox|Now|Oct|Remove|RemoveAll|Replace\" + \"|RGB|Right|Rnd|Round|ScriptEngine|ScriptEngineBuildVersion|ScriptEngineMajorVersion\" + \"|ScriptEngineMinorVersion|Second|SetLocale|Sgn|Sin|Space|Split|Sqr|StrComp|String|StrReverse\" + \"|Tan|Time|Timer|TimeSerial|TimeValue|TypeName|UBound|UCase|Unescape|VarType|Weekday|WeekdayName|Year\" + \"|AscB|AscW|ChrB|ChrW|InStrB|LeftB|LenB|MidB|RightB|Abs|GetUILanguage\",\n      \"support.type.vb.asp\": \"vbTrue|vbFalse|vbCr|vbCrLf|vbFormFeed|vbLf|vbNewLine|vbNullChar|vbNullString\" + \"|vbTab|vbVerticalTab|vbBinaryCompare|vbTextCompare|vbSunday|vbMonday|vbTuesday|vbWednesday\" + \"|vbThursday|vbFriday|vbSaturday|vbUseSystemDayOfWeek|vbFirstJan1|vbFirstFourDays|vbFirstFullWeek\" + \"|vbGeneralDate|vbLongDate|vbShortDate|vbLongTime|vbShortTime|vbObjectError|vbEmpty|vbNull|vbInteger\" + \"|vbLong|vbSingle|vbDouble|vbCurrency|vbDate|vbString|vbObject|vbError|vbBoolean|vbVariant\" + \"|vbDataObject|vbDecimal|vbByte|vbArray|vbOKOnly|vbOKCancel|vbAbortRetryIgnore|vbYesNoCancel|vbYesNo\" + \"|vbRetryCancel|vbCritical|vbQuestion|vbExclamation|vbInformation|vbDefaultButton1|vbDefaultButton2\" + \"|vbDefaultButton3|vbDefaultButton4|vbApplicationModal|vbSystemModal|vbOK|vbCancel|vbAbort|vbRetry|vbIgnore|vbYes|vbNo\" + \"|vbUseDefault\"\n    }, \"identifier\", true);\n    this.$rules = {\n      \"start\": [{\n        token: [\"meta.ending-space\"],\n        regex: \"$\"\n      }, {\n        token: [null],\n        regex: \"^(?=\\\\t)\",\n        next: \"state_3\"\n      }, {\n        token: [null],\n        regex: \"^(?= )\",\n        next: \"state_4\"\n      }, {\n        token: [\"text\", \"storage.type.function.asp\", \"text\", \"entity.name.function.asp\", \"text\", \"punctuation.definition.parameters.asp\", \"variable.parameter.function.asp\", \"punctuation.definition.parameters.asp\"],\n        regex: \"^(\\\\s*)(Function|Sub)(\\\\s+)([a-zA-Z_]\\\\w*)(\\\\s*)(\\\\()([^)]*)(\\\\))\"\n      }, {\n        token: \"punctuation.definition.comment.asp\",\n        regex: \"'|REM(?=\\\\s|$)\",\n        next: \"comment\",\n        caseInsensitive: true\n      }, {\n        token: \"storage.type.asp\",\n        regex: \"On\\\\s+Error\\\\s+(?:Resume\\\\s+Next|GoTo)\\\\b\",\n        caseInsensitive: true\n      }, {\n        token: \"punctuation.definition.string.begin.asp\",\n        regex: '\"',\n        next: \"string\"\n      }, {\n        token: [\"punctuation.definition.variable.asp\"],\n        regex: \"(\\\\$)[a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*?\\\\b\\\\s*\"\n      }, {\n        token: \"constant.numeric.asp\",\n        regex: \"-?\\\\b(?:(?:0(?:x|X)[0-9a-fA-F]*)|(?:(?:[0-9]+\\\\.?[0-9]*)|(?:\\\\.[0-9]+))(?:(?:e|E)(?:\\\\+|-)?[0-9]+)?)(?:L|l|UL|ul|u|U|F|f)?\\\\b\"\n      }, {\n        regex: \"\\\\w+\",\n        token: keywordMapper\n      }, {\n        token: [\"entity.name.function.asp\"],\n        regex: \"(?:(\\\\b[a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*?\\\\b)(?=\\\\(\\\\)?))\"\n      }, {\n        token: [\"keyword.operator.asp\"],\n        regex: \"\\\\-|\\\\+|\\\\*|\\\\/|\\\\>|\\\\<|\\\\=|\\\\&|\\\\\\\\|\\\\^\"\n      }],\n      \"state_3\": [{\n        token: [\"meta.odd-tab.tabs\", \"meta.even-tab.tabs\"],\n        regex: \"(\\\\t)(\\\\t)?\"\n      }, {\n        token: \"meta.leading-space\",\n        regex: \"(?=[^\\\\t])\",\n        next: \"start\"\n      }, {\n        token: \"meta.leading-space\",\n        regex: \".\",\n        next: \"state_3\"\n      }],\n      \"state_4\": [{\n        token: [\"meta.odd-tab.spaces\", \"meta.even-tab.spaces\"],\n        regex: \"(  )(  )?\"\n      }, {\n        token: \"meta.leading-space\",\n        regex: \"(?=[^ ])\",\n        next: \"start\"\n      }, {\n        defaultToken: \"meta.leading-space\"\n      }],\n      \"comment\": [{\n        token: \"comment.line.apostrophe.asp\",\n        regex: \"$\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment.line.apostrophe.asp\"\n      }],\n      \"string\": [{\n        token: \"constant.character.escape.apostrophe.asp\",\n        regex: '\"\"'\n      }, {\n        token: \"string.quoted.double.asp\",\n        regex: '\"',\n        next: \"start\"\n      }, {\n        defaultToken: \"string.quoted.double.asp\"\n      }]\n    };\n  };\n  oop.inherits(VBScriptHighlightRules, TextHighlightRules);\n  exports.VBScriptHighlightRules = VBScriptHighlightRules;\n});\nace.define(\"ace/mode/folding/vbscript\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\", \"ace/token_iterator\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var Range = require(\"../../range\").Range;\n  var TokenIterator = require(\"../../token_iterator\").TokenIterator;\n  var FoldMode = exports.FoldMode = function () {};\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.indentKeywords = {\n      \"class\": 1,\n      \"function\": 1,\n      \"sub\": 1,\n      \"if\": 1,\n      \"select\": 1,\n      \"do\": 1,\n      \"for\": 1,\n      \"while\": 1,\n      \"with\": 1,\n      \"property\": 1,\n      \"else\": 1,\n      \"elseif\": 1,\n      \"end\": -1,\n      \"loop\": -1,\n      \"next\": -1,\n      \"wend\": -1\n    };\n    this.foldingStartMarker = /(?:\\s|^)(class|function|sub|if|select|do|for|while|with|property|else|elseif)\\b/i;\n    this.foldingStopMarker = /\\b(end|loop|next|wend)\\b/i;\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var isStart = this.foldingStartMarker.test(line);\n      var isEnd = this.foldingStopMarker.test(line);\n      if (isStart || isEnd) {\n        var match = isEnd ? this.foldingStopMarker.exec(line) : this.foldingStartMarker.exec(line);\n        var keyword = match && match[1].toLowerCase();\n        if (keyword) {\n          var type = session.getTokenAt(row, match.index + 2).type;\n          if (type === \"keyword.control.asp\" || type === \"storage.type.function.asp\") return this.vbsBlock(session, row, match.index + 2);\n        }\n      }\n    };\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var isStart = this.foldingStartMarker.test(line);\n      var isEnd = this.foldingStopMarker.test(line);\n      if (isStart && !isEnd) {\n        var match = this.foldingStartMarker.exec(line);\n        var keyword = match && match[1].toLowerCase();\n        if (keyword) {\n          var type = session.getTokenAt(row, match.index + 2).type;\n          if (type == \"keyword.control.asp\" || type == \"storage.type.function.asp\") {\n            if (keyword == \"if\" && !/then\\s*('|$)/i.test(line)) return \"\";\n            return \"start\";\n          }\n        }\n      }\n      return \"\";\n    };\n    this.vbsBlock = function (session, row, column, tokenRange) {\n      var stream = new TokenIterator(session, row, column);\n      var endOpenings = {\n        \"class\": 1,\n        \"function\": 1,\n        \"sub\": 1,\n        \"if\": 1,\n        \"select\": 1,\n        \"with\": 1,\n        \"property\": 1,\n        \"else\": 1,\n        \"elseif\": 1\n      };\n      var token = stream.getCurrentToken();\n      if (!token || token.type != \"keyword.control.asp\" && token.type != \"storage.type.function.asp\") return;\n      var startTokenValue = token.value.toLowerCase();\n      var val = token.value.toLowerCase();\n      var stack = [val];\n      var dir = this.indentKeywords[val];\n      if (!dir) return;\n      var firstRange = stream.getCurrentTokenRange();\n      switch (val) {\n        case \"property\":\n        case \"sub\":\n        case \"function\":\n        case \"if\":\n        case \"select\":\n        case \"do\":\n        case \"for\":\n        case \"class\":\n        case \"while\":\n        case \"with\":\n          var line = session.getLine(row);\n          var singleLineCondition = /^\\s*If\\s+.*\\s+Then(?!')\\s+(?!')\\S/i.test(line);\n          if (singleLineCondition) return;\n          var checkToken = new RegExp(\"(?:^|\\\\s)\" + val, \"i\");\n          var endTest = /^\\s*End\\s(If|Sub|Select|Function|Class|With|Property)\\s*/i.test(line);\n          if (!checkToken.test(line) && !endTest) {\n            return;\n          }\n          if (endTest) {\n            var tokenRange = stream.getCurrentTokenRange();\n            stream.step = stream.stepBackward;\n            stream.step();\n            stream.step();\n            token = stream.getCurrentToken();\n            if (token) {\n              val = token.value.toLowerCase();\n              if (val == \"end\") {\n                firstRange = stream.getCurrentTokenRange();\n                firstRange = new Range(firstRange.start.row, firstRange.start.column, tokenRange.start.row, tokenRange.end.column);\n              }\n            }\n            dir = -1;\n          }\n          break;\n        case \"end\":\n          var tokenPos = stream.getCurrentTokenPosition();\n          firstRange = stream.getCurrentTokenRange();\n          stream.step = stream.stepForward;\n          stream.step();\n          stream.step();\n          token = stream.getCurrentToken();\n          if (token) {\n            val = token.value.toLowerCase();\n            if (val in endOpenings) {\n              startTokenValue = val;\n              var nextTokenPos = stream.getCurrentTokenPosition();\n              var endColumn = nextTokenPos.column + val.length;\n              firstRange = new Range(tokenPos.row, tokenPos.column, nextTokenPos.row, endColumn);\n            }\n          }\n          stream.step = stream.stepBackward;\n          stream.step();\n          stream.step();\n          break;\n      }\n      var startColumn = dir === -1 ? session.getLine(row - 1).length : session.getLine(row).length;\n      var startRow = row;\n      var ranges = [];\n      ranges.push(firstRange);\n      stream.step = dir === -1 ? stream.stepBackward : stream.stepForward;\n      while (token = stream.step()) {\n        var outputRange = null;\n        var ignore = false;\n        if (token.type != \"keyword.control.asp\" && token.type != \"storage.type.function.asp\") continue;\n        val = token.value.toLowerCase();\n        var level = dir * this.indentKeywords[val];\n        switch (val) {\n          case \"property\":\n          case \"sub\":\n          case \"function\":\n          case \"if\":\n          case \"select\":\n          case \"do\":\n          case \"for\":\n          case \"class\":\n          case \"while\":\n          case \"with\":\n            var line = session.getLine(stream.getCurrentTokenRow());\n            var singleLineCondition = /^\\s*If\\s+.*\\s+Then(?!')\\s+(?!')\\S/i.test(line);\n            if (singleLineCondition) {\n              level = 0;\n              ignore = true;\n            }\n            var checkToken = new RegExp(\"^\\\\s* end\\\\s+\" + val, \"i\");\n            if (checkToken.test(line)) {\n              level = 0;\n              ignore = true;\n            }\n            break;\n          case \"elseif\":\n          case \"else\":\n            level = 0;\n            if (startTokenValue != \"elseif\") {\n              ignore = true;\n            }\n            break;\n        }\n        if (level > 0) {\n          stack.unshift(val);\n        } else if (level <= 0 && ignore === false) {\n          stack.shift();\n          if (!stack.length) {\n            switch (val) {\n              case \"end\":\n                var tokenPos = stream.getCurrentTokenPosition();\n                outputRange = stream.getCurrentTokenRange();\n                stream.step();\n                stream.step();\n                token = stream.getCurrentToken();\n                if (token) {\n                  val = token.value.toLowerCase();\n                  if (val in endOpenings) {\n                    if (startTokenValue == \"else\" || startTokenValue == \"elseif\") {\n                      if (val !== \"if\") {\n                        ranges.shift();\n                      }\n                    } else {\n                      if (val != startTokenValue) ranges.shift();\n                    }\n                    var nextTokenPos = stream.getCurrentTokenPosition();\n                    var endColumn = nextTokenPos.column + val.length;\n                    outputRange = new Range(tokenPos.row, tokenPos.column, nextTokenPos.row, endColumn);\n                  } else {\n                    ranges.shift();\n                  }\n                } else {\n                  ranges.shift();\n                }\n                stream.step = stream.stepBackward;\n                stream.step();\n                stream.step();\n                token = stream.getCurrentToken();\n                val = token.value.toLowerCase();\n                break;\n              case \"select\":\n              case \"sub\":\n              case \"if\":\n              case \"function\":\n              case \"class\":\n              case \"with\":\n              case \"property\":\n                if (val != startTokenValue) ranges.shift();\n                break;\n              case \"do\":\n                if (startTokenValue != \"loop\") ranges.shift();\n                break;\n              case \"loop\":\n                if (startTokenValue != \"do\") ranges.shift();\n                break;\n              case \"for\":\n                if (startTokenValue != \"next\") ranges.shift();\n                break;\n              case \"next\":\n                if (startTokenValue != \"for\") ranges.shift();\n                break;\n              case \"while\":\n                if (startTokenValue != \"wend\") ranges.shift();\n                break;\n              case \"wend\":\n                if (startTokenValue != \"while\") ranges.shift();\n                break;\n            }\n            break;\n          }\n          if (level === 0) {\n            stack.unshift(val);\n          }\n        }\n      }\n      if (!token) return null;\n      if (tokenRange) {\n        if (!outputRange) {\n          ranges.push(stream.getCurrentTokenRange());\n        } else {\n          ranges.push(outputRange);\n        }\n        return ranges;\n      }\n      var row = stream.getCurrentTokenRow();\n      if (dir === -1) {\n        var endColumn = session.getLine(row).length;\n        return new Range(row, endColumn, startRow - 1, startColumn);\n      } else return new Range(startRow, startColumn, row - 1, session.getLine(row - 1).length);\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/vbscript\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/vbscript_highlight_rules\", \"ace/mode/folding/vbscript\", \"ace/range\"], function (require, exports, module) {\n  /*\n  THIS FILE WAS AUTOGENERATED BY mode.tmpl.js\n  */\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var VBScriptHighlightRules = require(\"./vbscript_highlight_rules\").VBScriptHighlightRules;\n  var FoldMode = require(\"./folding/vbscript\").FoldMode;\n  var Range = require(\"../range\").Range;\n  var Mode = function () {\n    this.HighlightRules = VBScriptHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n    this.indentKeywords = this.foldingRules.indentKeywords;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = [\"'\", \"REM\"];\n    var outdentKeywords = [\"else\", \"elseif\", \"end\", \"loop\", \"next\", \"wend\"];\n    function getNetIndentLevel(tokens, line, indentKeywords) {\n      var level = 0;\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i];\n        if (token.type == \"keyword.control.asp\" || token.type == \"storage.type.function.asp\") {\n          var val = token.value.toLowerCase();\n          if (val in indentKeywords) {\n            switch (val) {\n              case \"property\":\n              case \"sub\":\n              case \"function\":\n              case \"select\":\n              case \"do\":\n              case \"for\":\n              case \"class\":\n              case \"while\":\n              case \"with\":\n              case \"if\":\n                var checkToken = new RegExp(\"^\\\\s* end\\\\s+\" + val, \"i\");\n                var singleLineCondition = /^\\s*If\\s+.*\\s+Then(?!')\\s+(?!')\\S/i.test(line);\n                if (!singleLineCondition && !checkToken.test(line)) level += indentKeywords[val];\n                break;\n              default:\n                level += indentKeywords[val];\n                break;\n            }\n          }\n        }\n      }\n      if (level < 0) {\n        return -1;\n      } else if (level > 0) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var level = 0;\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n      if (state == \"start\") {\n        level = getNetIndentLevel(tokens, line, this.indentKeywords);\n      }\n      if (level > 0) {\n        return indent + tab;\n      } else if (level < 0 && indent.substr(indent.length - tab.length) == tab) {\n        if (!this.checkOutdent(state, line, \"\\n\")) {\n          return indent.substr(0, indent.length - tab.length);\n        }\n      }\n      return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n      if (input != \"\\n\" && input != \"\\r\" && input != \"\\r\\n\") return false;\n      var tokens = this.getTokenizer().getLineTokens(line.trim(), state).tokens;\n      if (!tokens || !tokens.length) return false;\n      var val = tokens[0].value.toLowerCase();\n      return (tokens[0].type == \"keyword.control.asp\" || tokens[0].type == \"storage.type.function.asp\") && outdentKeywords.indexOf(val) != -1;\n    };\n    this.getMatching = function (session, row, column, tokenRange) {\n      if (row == undefined) {\n        var pos = session.selection.lead;\n        column = pos.column;\n        row = pos.row;\n      }\n      if (tokenRange == undefined) tokenRange = true;\n      var startToken = session.getTokenAt(row, column);\n      if (startToken) {\n        var val = startToken.value.toLowerCase();\n        if (val in this.indentKeywords) return this.foldingRules.vbsBlock(session, row, column, tokenRange);\n      }\n    };\n    this.autoOutdent = function (state, session, row) {\n      var line = session.getLine(row);\n      var column = line.match(/^\\s*/)[0].length;\n      if (!column || !row) return;\n      var startRange = this.getMatching(session, row, column + 1, false);\n      if (!startRange || startRange.start.row == row) return;\n      var indent = this.$getIndent(session.getLine(startRange.start.row));\n      if (indent.length != column) {\n        session.replace(new Range(row, 0, row, column), indent);\n        session.outdentRows(new Range(row + 1, 0, row + 1, 0));\n      }\n    };\n    this.$id = \"ace/mode/vbscript\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/vbscript\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","VBScriptHighlightRules","keywordMapper","createKeywordMapper","$rules","token","regex","next","caseInsensitive","defaultToken","inherits","BaseFoldMode","FoldMode","Range","TokenIterator","indentKeywords","foldingStartMarker","foldingStopMarker","getFoldWidgetRange","session","foldStyle","row","line","getLine","isStart","test","isEnd","match","exec","keyword","toLowerCase","type","getTokenAt","index","vbsBlock","getFoldWidget","column","tokenRange","stream","endOpenings","getCurrentToken","startTokenValue","value","val","stack","dir","firstRange","getCurrentTokenRange","singleLineCondition","checkToken","RegExp","endTest","step","stepBackward","start","end","tokenPos","getCurrentTokenPosition","stepForward","nextTokenPos","endColumn","length","startColumn","startRow","ranges","push","outputRange","ignore","level","getCurrentTokenRow","unshift","shift","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","outdentKeywords","getNetIndentLevel","tokens","i","getNextLineIndent","state","tab","indent","$getIndent","tokenizedLine","getTokenizer","getLineTokens","substr","checkOutdent","input","trim","indexOf","getMatching","undefined","pos","selection","lead","startToken","autoOutdent","startRange","replace","outdentRows","$id","m"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-vbscript.js"],"sourcesContent":["ace.define(\"ace/mode/vbscript_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){/*\n  THIS FILE WAS AUTOGENERATED BY mode_highlight_rules.tmpl.js (UUID: 7F9C9343-D48E-4E7D-BFE8-F680714DCD3E) */\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar VBScriptHighlightRules = function () {\n    var keywordMapper = this.createKeywordMapper({\n        \"keyword.control.asp\": \"If|Then|Else|ElseIf|End|While|Wend|For|To|Each|Case|Select|Return\"\n            + \"|Continue|Do|Until|Loop|Next|With|Exit|Function|Property|Type|Enum|Sub|IIf|Class\",\n        \"storage.type.asp\": \"Dim|Call|Const|Redim|Set|Let|Get|New|Randomize|Option|Explicit|Preserve|Erase|Execute|ExecuteGlobal\",\n        \"storage.modifier.asp\": \"Private|Public|Default\",\n        \"keyword.operator.asp\": \"Mod|And|Not|Or|Xor|As|Eqv|Imp|Is\",\n        \"constant.language.asp\": \"Empty|False|Nothing|Null|True\",\n        \"variable.language.vb.asp\": \"Me\",\n        \"support.class.vb.asp\": \"RegExp\",\n        \"support.class.asp\": \"Application|ObjectContext|Request|Response|Server|Session\",\n        \"support.class.collection.asp\": \"Contents|StaticObjects|ClientCertificate|Cookies|Form|QueryString|ServerVariables\",\n        \"support.constant.asp\": \"TotalBytes|Buffer|CacheControl|Charset|ContentType|Expires|ExpiresAbsolute\"\n            + \"|IsClientConnected|PICS|Status|ScriptTimeout|CodePage|LCID|SessionID|Timeout\",\n        \"support.function.asp\": \"Lock|Unlock|SetAbort|SetComplete|BinaryRead|AddHeader|AppendToLog\"\n            + \"|BinaryWrite|Clear|Flush|Redirect|Write|CreateObject|HTMLEncode|MapPath|URLEncode|Abandon|Convert|Regex\",\n        \"support.function.event.asp\": \"Application_OnEnd|Application_OnStart\"\n            + \"|OnTransactionAbort|OnTransactionCommit|Session_OnEnd|Session_OnStart\",\n        \"support.function.vb.asp\": \"Array|Add|Asc|Atn|CBool|CByte|CCur|CDate|CDbl|Chr|CInt|CLng\"\n            + \"|Conversions|Cos|CreateObject|CSng|CStr|Date|DateAdd|DateDiff|DatePart|DateSerial\"\n            + \"|DateValue|Day|Derived|Math|Escape|Eval|Exists|Exp|Filter|FormatCurrency\"\n            + \"|FormatDateTime|FormatNumber|FormatPercent|GetLocale|GetObject|GetRef|Hex\"\n            + \"|Hour|InputBox|InStr|InStrRev|Int|Fix|IsArray|IsDate|IsEmpty|IsNull|IsNumeric\"\n            + \"|IsObject|Item|Items|Join|Keys|LBound|LCase|Left|Len|LoadPicture|Log|LTrim|RTrim\"\n            + \"|Trim|Maths|Mid|Minute|Month|MonthName|MsgBox|Now|Oct|Remove|RemoveAll|Replace\"\n            + \"|RGB|Right|Rnd|Round|ScriptEngine|ScriptEngineBuildVersion|ScriptEngineMajorVersion\"\n            + \"|ScriptEngineMinorVersion|Second|SetLocale|Sgn|Sin|Space|Split|Sqr|StrComp|String|StrReverse\"\n            + \"|Tan|Time|Timer|TimeSerial|TimeValue|TypeName|UBound|UCase|Unescape|VarType|Weekday|WeekdayName|Year\"\n            + \"|AscB|AscW|ChrB|ChrW|InStrB|LeftB|LenB|MidB|RightB|Abs|GetUILanguage\",\n        \"support.type.vb.asp\": \"vbTrue|vbFalse|vbCr|vbCrLf|vbFormFeed|vbLf|vbNewLine|vbNullChar|vbNullString\"\n            + \"|vbTab|vbVerticalTab|vbBinaryCompare|vbTextCompare|vbSunday|vbMonday|vbTuesday|vbWednesday\"\n            + \"|vbThursday|vbFriday|vbSaturday|vbUseSystemDayOfWeek|vbFirstJan1|vbFirstFourDays|vbFirstFullWeek\"\n            + \"|vbGeneralDate|vbLongDate|vbShortDate|vbLongTime|vbShortTime|vbObjectError|vbEmpty|vbNull|vbInteger\"\n            + \"|vbLong|vbSingle|vbDouble|vbCurrency|vbDate|vbString|vbObject|vbError|vbBoolean|vbVariant\"\n            + \"|vbDataObject|vbDecimal|vbByte|vbArray|vbOKOnly|vbOKCancel|vbAbortRetryIgnore|vbYesNoCancel|vbYesNo\"\n            + \"|vbRetryCancel|vbCritical|vbQuestion|vbExclamation|vbInformation|vbDefaultButton1|vbDefaultButton2\"\n            + \"|vbDefaultButton3|vbDefaultButton4|vbApplicationModal|vbSystemModal|vbOK|vbCancel|vbAbort|vbRetry|vbIgnore|vbYes|vbNo\"\n            + \"|vbUseDefault\"\n    }, \"identifier\", true);\n    this.$rules = {\n        \"start\": [\n            {\n                token: [\n                    \"meta.ending-space\"\n                ],\n                regex: \"$\"\n            },\n            {\n                token: [null],\n                regex: \"^(?=\\\\t)\",\n                next: \"state_3\"\n            },\n            {\n                token: [null],\n                regex: \"^(?= )\",\n                next: \"state_4\"\n            },\n            {\n                token: [\n                    \"text\",\n                    \"storage.type.function.asp\",\n                    \"text\",\n                    \"entity.name.function.asp\",\n                    \"text\",\n                    \"punctuation.definition.parameters.asp\",\n                    \"variable.parameter.function.asp\",\n                    \"punctuation.definition.parameters.asp\"\n                ],\n                regex: \"^(\\\\s*)(Function|Sub)(\\\\s+)([a-zA-Z_]\\\\w*)(\\\\s*)(\\\\()([^)]*)(\\\\))\"\n            },\n            {\n                token: \"punctuation.definition.comment.asp\",\n                regex: \"'|REM(?=\\\\s|$)\",\n                next: \"comment\",\n                caseInsensitive: true\n            },\n            {\n                token: \"storage.type.asp\",\n                regex: \"On\\\\s+Error\\\\s+(?:Resume\\\\s+Next|GoTo)\\\\b\",\n                caseInsensitive: true\n            },\n            {\n                token: \"punctuation.definition.string.begin.asp\",\n                regex: '\"',\n                next: \"string\"\n            },\n            {\n                token: [\n                    \"punctuation.definition.variable.asp\"\n                ],\n                regex: \"(\\\\$)[a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*?\\\\b\\\\s*\"\n            },\n            {\n                token: \"constant.numeric.asp\",\n                regex: \"-?\\\\b(?:(?:0(?:x|X)[0-9a-fA-F]*)|(?:(?:[0-9]+\\\\.?[0-9]*)|(?:\\\\.[0-9]+))(?:(?:e|E)(?:\\\\+|-)?[0-9]+)?)(?:L|l|UL|ul|u|U|F|f)?\\\\b\"\n            },\n            {\n                regex: \"\\\\w+\",\n                token: keywordMapper\n            },\n            {\n                token: [\"entity.name.function.asp\"],\n                regex: \"(?:(\\\\b[a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*?\\\\b)(?=\\\\(\\\\)?))\"\n            },\n            {\n                token: [\"keyword.operator.asp\"],\n                regex: \"\\\\-|\\\\+|\\\\*|\\\\/|\\\\>|\\\\<|\\\\=|\\\\&|\\\\\\\\|\\\\^\"\n            }\n        ],\n        \"state_3\": [\n            {\n                token: [\n                    \"meta.odd-tab.tabs\",\n                    \"meta.even-tab.tabs\"\n                ],\n                regex: \"(\\\\t)(\\\\t)?\"\n            },\n            {\n                token: \"meta.leading-space\",\n                regex: \"(?=[^\\\\t])\",\n                next: \"start\"\n            },\n            {\n                token: \"meta.leading-space\",\n                regex: \".\",\n                next: \"state_3\"\n            }\n        ],\n        \"state_4\": [\n            {\n                token: [\"meta.odd-tab.spaces\", \"meta.even-tab.spaces\"],\n                regex: \"(  )(  )?\"\n            },\n            {\n                token: \"meta.leading-space\",\n                regex: \"(?=[^ ])\",\n                next: \"start\"\n            },\n            {\n                defaultToken: \"meta.leading-space\"\n            }\n        ],\n        \"comment\": [\n            {\n                token: \"comment.line.apostrophe.asp\",\n                regex: \"$\",\n                next: \"start\"\n            },\n            {\n                defaultToken: \"comment.line.apostrophe.asp\"\n            }\n        ],\n        \"string\": [\n            {\n                token: \"constant.character.escape.apostrophe.asp\",\n                regex: '\"\"'\n            },\n            {\n                token: \"string.quoted.double.asp\",\n                regex: '\"',\n                next: \"start\"\n            },\n            {\n                defaultToken: \"string.quoted.double.asp\"\n            }\n        ]\n    };\n};\noop.inherits(VBScriptHighlightRules, TextHighlightRules);\nexports.VBScriptHighlightRules = VBScriptHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/vbscript\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\",\"ace/token_iterator\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar Range = require(\"../../range\").Range;\nvar TokenIterator = require(\"../../token_iterator\").TokenIterator;\nvar FoldMode = exports.FoldMode = function () { };\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.indentKeywords = {\n        \"class\": 1,\n        \"function\": 1,\n        \"sub\": 1,\n        \"if\": 1,\n        \"select\": 1,\n        \"do\": 1,\n        \"for\": 1,\n        \"while\": 1,\n        \"with\": 1,\n        \"property\": 1,\n        \"else\": 1,\n        \"elseif\": 1,\n        \"end\": -1,\n        \"loop\": -1,\n        \"next\": -1,\n        \"wend\": -1\n    };\n    this.foldingStartMarker = /(?:\\s|^)(class|function|sub|if|select|do|for|while|with|property|else|elseif)\\b/i;\n    this.foldingStopMarker = /\\b(end|loop|next|wend)\\b/i;\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        var isStart = this.foldingStartMarker.test(line);\n        var isEnd = this.foldingStopMarker.test(line);\n        if (isStart || isEnd) {\n            var match = (isEnd) ? this.foldingStopMarker.exec(line) : this.foldingStartMarker.exec(line);\n            var keyword = match && match[1].toLowerCase();\n            if (keyword) {\n                var type = session.getTokenAt(row, match.index + 2).type;\n                if (type === \"keyword.control.asp\" || type === \"storage.type.function.asp\")\n                    return this.vbsBlock(session, row, match.index + 2);\n            }\n        }\n    };\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        var isStart = this.foldingStartMarker.test(line);\n        var isEnd = this.foldingStopMarker.test(line);\n        if (isStart && !isEnd) {\n            var match = this.foldingStartMarker.exec(line);\n            var keyword = match && match[1].toLowerCase();\n            if (keyword) {\n                var type = session.getTokenAt(row, match.index + 2).type;\n                if (type == \"keyword.control.asp\" || type == \"storage.type.function.asp\") {\n                    if (keyword == \"if\" && !/then\\s*('|$)/i.test(line))\n                        return \"\";\n                    return \"start\";\n                }\n            }\n        }\n        return \"\";\n    };\n    this.vbsBlock = function (session, row, column, tokenRange) {\n        var stream = new TokenIterator(session, row, column);\n        var endOpenings = {\n            \"class\": 1,\n            \"function\": 1,\n            \"sub\": 1,\n            \"if\": 1,\n            \"select\": 1,\n            \"with\": 1,\n            \"property\": 1,\n            \"else\": 1,\n            \"elseif\": 1\n        };\n        var token = stream.getCurrentToken();\n        if (!token || (token.type != \"keyword.control.asp\" && token.type != \"storage.type.function.asp\"))\n            return;\n        var startTokenValue = token.value.toLowerCase();\n        var val = token.value.toLowerCase();\n        var stack = [val];\n        var dir = this.indentKeywords[val];\n        if (!dir)\n            return;\n        var firstRange = stream.getCurrentTokenRange();\n        switch (val) {\n            case \"property\":\n            case \"sub\":\n            case \"function\":\n            case \"if\":\n            case \"select\":\n            case \"do\":\n            case \"for\":\n            case \"class\":\n            case \"while\":\n            case \"with\":\n                var line = session.getLine(row);\n                var singleLineCondition = /^\\s*If\\s+.*\\s+Then(?!')\\s+(?!')\\S/i.test(line);\n                if (singleLineCondition)\n                    return;\n                var checkToken = new RegExp(\"(?:^|\\\\s)\" + val, \"i\");\n                var endTest = /^\\s*End\\s(If|Sub|Select|Function|Class|With|Property)\\s*/i.test(line);\n                if (!checkToken.test(line) && !endTest) {\n                    return;\n                }\n                if (endTest) {\n                    var tokenRange = stream.getCurrentTokenRange();\n                    stream.step = stream.stepBackward;\n                    stream.step();\n                    stream.step();\n                    token = stream.getCurrentToken();\n                    if (token) {\n                        val = token.value.toLowerCase();\n                        if (val == \"end\") {\n                            firstRange = stream.getCurrentTokenRange();\n                            firstRange = new Range(firstRange.start.row, firstRange.start.column, tokenRange.start.row, tokenRange.end.column);\n                        }\n                    }\n                    dir = -1;\n                }\n                break;\n            case \"end\":\n                var tokenPos = stream.getCurrentTokenPosition();\n                firstRange = stream.getCurrentTokenRange();\n                stream.step = stream.stepForward;\n                stream.step();\n                stream.step();\n                token = stream.getCurrentToken();\n                if (token) {\n                    val = token.value.toLowerCase();\n                    if (val in endOpenings) {\n                        startTokenValue = val;\n                        var nextTokenPos = stream.getCurrentTokenPosition();\n                        var endColumn = nextTokenPos.column + val.length;\n                        firstRange = new Range(tokenPos.row, tokenPos.column, nextTokenPos.row, endColumn);\n                    }\n                }\n                stream.step = stream.stepBackward;\n                stream.step();\n                stream.step();\n                break;\n        }\n        var startColumn = dir === -1 ? session.getLine(row - 1).length : session.getLine(row).length;\n        var startRow = row;\n        var ranges = [];\n        ranges.push(firstRange);\n        stream.step = dir === -1 ? stream.stepBackward : stream.stepForward;\n        while (token = stream.step()) {\n            var outputRange = null;\n            var ignore = false;\n            if (token.type != \"keyword.control.asp\" && token.type != \"storage.type.function.asp\")\n                continue;\n            val = token.value.toLowerCase();\n            var level = dir * this.indentKeywords[val];\n            switch (val) {\n                case \"property\":\n                case \"sub\":\n                case \"function\":\n                case \"if\":\n                case \"select\":\n                case \"do\":\n                case \"for\":\n                case \"class\":\n                case \"while\":\n                case \"with\":\n                    var line = session.getLine(stream.getCurrentTokenRow());\n                    var singleLineCondition = /^\\s*If\\s+.*\\s+Then(?!')\\s+(?!')\\S/i.test(line);\n                    if (singleLineCondition) {\n                        level = 0;\n                        ignore = true;\n                    }\n                    var checkToken = new RegExp(\"^\\\\s* end\\\\s+\" + val, \"i\");\n                    if (checkToken.test(line)) {\n                        level = 0;\n                        ignore = true;\n                    }\n                    break;\n                case \"elseif\":\n                case \"else\":\n                    level = 0;\n                    if (startTokenValue != \"elseif\") {\n                        ignore = true;\n                    }\n                    break;\n            }\n            if (level > 0) {\n                stack.unshift(val);\n            }\n            else if (level <= 0 && ignore === false) {\n                stack.shift();\n                if (!stack.length) {\n                    switch (val) {\n                        case \"end\":\n                            var tokenPos = stream.getCurrentTokenPosition();\n                            outputRange = stream.getCurrentTokenRange();\n                            stream.step();\n                            stream.step();\n                            token = stream.getCurrentToken();\n                            if (token) {\n                                val = token.value.toLowerCase();\n                                if (val in endOpenings) {\n                                    if ((startTokenValue == \"else\" || startTokenValue == \"elseif\")) {\n                                        if (val !== \"if\") {\n                                            ranges.shift();\n                                        }\n                                    }\n                                    else {\n                                        if (val != startTokenValue)\n                                            ranges.shift();\n                                    }\n                                    var nextTokenPos = stream.getCurrentTokenPosition();\n                                    var endColumn = nextTokenPos.column + val.length;\n                                    outputRange = new Range(tokenPos.row, tokenPos.column, nextTokenPos.row, endColumn);\n                                }\n                                else {\n                                    ranges.shift();\n                                }\n                            }\n                            else {\n                                ranges.shift();\n                            }\n                            stream.step = stream.stepBackward;\n                            stream.step();\n                            stream.step();\n                            token = stream.getCurrentToken();\n                            val = token.value.toLowerCase();\n                            break;\n                        case \"select\":\n                        case \"sub\":\n                        case \"if\":\n                        case \"function\":\n                        case \"class\":\n                        case \"with\":\n                        case \"property\":\n                            if (val != startTokenValue)\n                                ranges.shift();\n                            break;\n                        case \"do\":\n                            if (startTokenValue != \"loop\")\n                                ranges.shift();\n                            break;\n                        case \"loop\":\n                            if (startTokenValue != \"do\")\n                                ranges.shift();\n                            break;\n                        case \"for\":\n                            if (startTokenValue != \"next\")\n                                ranges.shift();\n                            break;\n                        case \"next\":\n                            if (startTokenValue != \"for\")\n                                ranges.shift();\n                            break;\n                        case \"while\":\n                            if (startTokenValue != \"wend\")\n                                ranges.shift();\n                            break;\n                        case \"wend\":\n                            if (startTokenValue != \"while\")\n                                ranges.shift();\n                            break;\n                    }\n                    break;\n                }\n                if (level === 0) {\n                    stack.unshift(val);\n                }\n            }\n        }\n        if (!token)\n            return null;\n        if (tokenRange) {\n            if (!outputRange) {\n                ranges.push(stream.getCurrentTokenRange());\n            }\n            else {\n                ranges.push(outputRange);\n            }\n            return ranges;\n        }\n        var row = stream.getCurrentTokenRow();\n        if (dir === -1) {\n            var endColumn = session.getLine(row).length;\n            return new Range(row, endColumn, startRow - 1, startColumn);\n        }\n        else\n            return new Range(startRow, startColumn, row - 1, session.getLine(row - 1).length);\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/vbscript\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/vbscript_highlight_rules\",\"ace/mode/folding/vbscript\",\"ace/range\"], function(require, exports, module){/*\n  THIS FILE WAS AUTOGENERATED BY mode.tmpl.js\n*/\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar VBScriptHighlightRules = require(\"./vbscript_highlight_rules\").VBScriptHighlightRules;\nvar FoldMode = require(\"./folding/vbscript\").FoldMode;\nvar Range = require(\"../range\").Range;\nvar Mode = function () {\n    this.HighlightRules = VBScriptHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n    this.indentKeywords = this.foldingRules.indentKeywords;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = [\"'\", \"REM\"];\n    var outdentKeywords = [\n        \"else\",\n        \"elseif\",\n        \"end\",\n        \"loop\",\n        \"next\",\n        \"wend\"\n    ];\n    function getNetIndentLevel(tokens, line, indentKeywords) {\n        var level = 0;\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            if (token.type == \"keyword.control.asp\" || token.type == \"storage.type.function.asp\") {\n                var val = token.value.toLowerCase();\n                if (val in indentKeywords) {\n                    switch (val) {\n                        case \"property\":\n                        case \"sub\":\n                        case \"function\":\n                        case \"select\":\n                        case \"do\":\n                        case \"for\":\n                        case \"class\":\n                        case \"while\":\n                        case \"with\":\n                        case \"if\":\n                            var checkToken = new RegExp(\"^\\\\s* end\\\\s+\" + val, \"i\");\n                            var singleLineCondition = /^\\s*If\\s+.*\\s+Then(?!')\\s+(?!')\\S/i.test(line);\n                            if (!singleLineCondition && !checkToken.test(line))\n                                level += indentKeywords[val];\n                            break;\n                        default:\n                            level += indentKeywords[val];\n                            break;\n                    }\n                }\n            }\n        }\n        if (level < 0) {\n            return -1;\n        }\n        else if (level > 0) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    this.getNextLineIndent = function (state, line, tab) {\n        var indent = this.$getIndent(line);\n        var level = 0;\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        if (state == \"start\") {\n            level = getNetIndentLevel(tokens, line, this.indentKeywords);\n        }\n        if (level > 0) {\n            return indent + tab;\n        }\n        else if (level < 0 && indent.substr(indent.length - tab.length) == tab) {\n            if (!this.checkOutdent(state, line, \"\\n\")) {\n                return indent.substr(0, indent.length - tab.length);\n            }\n        }\n        return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n        if (input != \"\\n\" && input != \"\\r\" && input != \"\\r\\n\")\n            return false;\n        var tokens = this.getTokenizer().getLineTokens(line.trim(), state).tokens;\n        if (!tokens || !tokens.length)\n            return false;\n        var val = tokens[0].value.toLowerCase();\n        return ((tokens[0].type == \"keyword.control.asp\" || tokens[0].type == \"storage.type.function.asp\") && outdentKeywords.indexOf(val) != -1);\n    };\n    this.getMatching = function (session, row, column, tokenRange) {\n        if (row == undefined) {\n            var pos = session.selection.lead;\n            column = pos.column;\n            row = pos.row;\n        }\n        if (tokenRange == undefined)\n            tokenRange = true;\n        var startToken = session.getTokenAt(row, column);\n        if (startToken) {\n            var val = startToken.value.toLowerCase();\n            if (val in this.indentKeywords)\n                return this.foldingRules.vbsBlock(session, row, column, tokenRange);\n        }\n    };\n    this.autoOutdent = function (state, session, row) {\n        var line = session.getLine(row);\n        var column = line.match(/^\\s*/)[0].length;\n        if (!column || !row)\n            return;\n        var startRange = this.getMatching(session, row, column + 1, false);\n        if (!startRange || startRange.start.row == row)\n            return;\n        var indent = this.$getIndent(session.getLine(startRange.start.row));\n        if (indent.length != column) {\n            session.replace(new Range(row, 0, row, column), indent);\n            session.outdentRows(new Range(row + 1, 0, row + 1, 0));\n        }\n    };\n    this.$id = \"ace/mode/vbscript\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/vbscript\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}