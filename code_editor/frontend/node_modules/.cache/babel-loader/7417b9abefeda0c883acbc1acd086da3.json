{"ast":null,"code":"// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor';\nimport { BinaryBuilder } from '../builder/binary';\nimport { BoolBuilder } from '../builder/bool';\nimport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from '../builder/date';\nimport { DecimalBuilder } from '../builder/decimal';\nimport { DictionaryBuilder } from '../builder/dictionary';\nimport { FixedSizeBinaryBuilder } from '../builder/fixedsizebinary';\nimport { FixedSizeListBuilder } from '../builder/fixedsizelist';\nimport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from '../builder/float';\nimport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from '../builder/interval';\nimport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from '../builder/int';\nimport { ListBuilder } from '../builder/list';\nimport { MapBuilder } from '../builder/map';\nimport { NullBuilder } from '../builder/null';\nimport { StructBuilder } from '../builder/struct';\nimport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from '../builder/timestamp';\nimport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from '../builder/time';\nimport { UnionBuilder, DenseUnionBuilder, SparseUnionBuilder } from '../builder/union';\nimport { Utf8Builder } from '../builder/utf8';\n/** @ignore */\nexport class GetBuilderCtor extends Visitor {\n  visitNull() {\n    return NullBuilder;\n  }\n  visitBool() {\n    return BoolBuilder;\n  }\n  visitInt() {\n    return IntBuilder;\n  }\n  visitInt8() {\n    return Int8Builder;\n  }\n  visitInt16() {\n    return Int16Builder;\n  }\n  visitInt32() {\n    return Int32Builder;\n  }\n  visitInt64() {\n    return Int64Builder;\n  }\n  visitUint8() {\n    return Uint8Builder;\n  }\n  visitUint16() {\n    return Uint16Builder;\n  }\n  visitUint32() {\n    return Uint32Builder;\n  }\n  visitUint64() {\n    return Uint64Builder;\n  }\n  visitFloat() {\n    return FloatBuilder;\n  }\n  visitFloat16() {\n    return Float16Builder;\n  }\n  visitFloat32() {\n    return Float32Builder;\n  }\n  visitFloat64() {\n    return Float64Builder;\n  }\n  visitUtf8() {\n    return Utf8Builder;\n  }\n  visitBinary() {\n    return BinaryBuilder;\n  }\n  visitFixedSizeBinary() {\n    return FixedSizeBinaryBuilder;\n  }\n  visitDate() {\n    return DateBuilder;\n  }\n  visitDateDay() {\n    return DateDayBuilder;\n  }\n  visitDateMillisecond() {\n    return DateMillisecondBuilder;\n  }\n  visitTimestamp() {\n    return TimestampBuilder;\n  }\n  visitTimestampSecond() {\n    return TimestampSecondBuilder;\n  }\n  visitTimestampMillisecond() {\n    return TimestampMillisecondBuilder;\n  }\n  visitTimestampMicrosecond() {\n    return TimestampMicrosecondBuilder;\n  }\n  visitTimestampNanosecond() {\n    return TimestampNanosecondBuilder;\n  }\n  visitTime() {\n    return TimeBuilder;\n  }\n  visitTimeSecond() {\n    return TimeSecondBuilder;\n  }\n  visitTimeMillisecond() {\n    return TimeMillisecondBuilder;\n  }\n  visitTimeMicrosecond() {\n    return TimeMicrosecondBuilder;\n  }\n  visitTimeNanosecond() {\n    return TimeNanosecondBuilder;\n  }\n  visitDecimal() {\n    return DecimalBuilder;\n  }\n  visitList() {\n    return ListBuilder;\n  }\n  visitStruct() {\n    return StructBuilder;\n  }\n  visitUnion() {\n    return UnionBuilder;\n  }\n  visitDenseUnion() {\n    return DenseUnionBuilder;\n  }\n  visitSparseUnion() {\n    return SparseUnionBuilder;\n  }\n  visitDictionary() {\n    return DictionaryBuilder;\n  }\n  visitInterval() {\n    return IntervalBuilder;\n  }\n  visitIntervalDayTime() {\n    return IntervalDayTimeBuilder;\n  }\n  visitIntervalYearMonth() {\n    return IntervalYearMonthBuilder;\n  }\n  visitFixedSizeList() {\n    return FixedSizeListBuilder;\n  }\n  visitMap() {\n    return MapBuilder;\n  }\n}\n/** @ignore */\nexport const instance = new GetBuilderCtor();","map":{"version":3,"names":["Visitor","BinaryBuilder","BoolBuilder","DateBuilder","DateDayBuilder","DateMillisecondBuilder","DecimalBuilder","DictionaryBuilder","FixedSizeBinaryBuilder","FixedSizeListBuilder","FloatBuilder","Float16Builder","Float32Builder","Float64Builder","IntervalBuilder","IntervalDayTimeBuilder","IntervalYearMonthBuilder","IntBuilder","Int8Builder","Int16Builder","Int32Builder","Int64Builder","Uint8Builder","Uint16Builder","Uint32Builder","Uint64Builder","ListBuilder","MapBuilder","NullBuilder","StructBuilder","TimestampBuilder","TimestampSecondBuilder","TimestampMillisecondBuilder","TimestampMicrosecondBuilder","TimestampNanosecondBuilder","TimeBuilder","TimeSecondBuilder","TimeMillisecondBuilder","TimeMicrosecondBuilder","TimeNanosecondBuilder","UnionBuilder","DenseUnionBuilder","SparseUnionBuilder","Utf8Builder","GetBuilderCtor","visitNull","visitBool","visitInt","visitInt8","visitInt16","visitInt32","visitInt64","visitUint8","visitUint16","visitUint32","visitUint64","visitFloat","visitFloat16","visitFloat32","visitFloat64","visitUtf8","visitBinary","visitFixedSizeBinary","visitDate","visitDateDay","visitDateMillisecond","visitTimestamp","visitTimestampSecond","visitTimestampMillisecond","visitTimestampMicrosecond","visitTimestampNanosecond","visitTime","visitTimeSecond","visitTimeMillisecond","visitTimeMicrosecond","visitTimeNanosecond","visitDecimal","visitList","visitStruct","visitUnion","visitDenseUnion","visitSparseUnion","visitDictionary","visitInterval","visitIntervalDayTime","visitIntervalYearMonth","visitFixedSizeList","visitMap","instance"],"sources":["visitor/builderctor.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, BuilderCtor } from '../interfaces';\nimport { BinaryBuilder } from '../builder/binary';\nimport { BoolBuilder } from '../builder/bool';\nimport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from '../builder/date';\nimport { DecimalBuilder } from '../builder/decimal';\nimport { DictionaryBuilder } from '../builder/dictionary';\nimport { FixedSizeBinaryBuilder } from '../builder/fixedsizebinary';\nimport { FixedSizeListBuilder } from '../builder/fixedsizelist';\nimport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from '../builder/float';\nimport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from '../builder/interval';\nimport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from '../builder/int';\nimport { ListBuilder } from '../builder/list';\nimport { MapBuilder } from '../builder/map';\nimport { NullBuilder } from '../builder/null';\nimport { StructBuilder } from '../builder/struct';\nimport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from '../builder/timestamp';\nimport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from '../builder/time';\nimport { UnionBuilder, DenseUnionBuilder, SparseUnionBuilder } from '../builder/union';\nimport { Utf8Builder } from '../builder/utf8';\n\n/** @ignore */\nexport interface GetBuilderCtor extends Visitor {\n    visit<T extends Type>(type: T): BuilderCtor<T>;\n    visitMany<T extends Type>(types: T[]): BuilderCtor<T>[];\n    getVisitFn<T extends Type>(type: T): () => BuilderCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => BuilderCtor<T>;\n}\n\n/** @ignore */\nexport class GetBuilderCtor extends Visitor {\n    public visitNull                 () { return NullBuilder;                 }\n    public visitBool                 () { return BoolBuilder;                 }\n    public visitInt                  () { return IntBuilder;                  }\n    public visitInt8                 () { return Int8Builder;                 }\n    public visitInt16                () { return Int16Builder;                }\n    public visitInt32                () { return Int32Builder;                }\n    public visitInt64                () { return Int64Builder;                }\n    public visitUint8                () { return Uint8Builder;                }\n    public visitUint16               () { return Uint16Builder;               }\n    public visitUint32               () { return Uint32Builder;               }\n    public visitUint64               () { return Uint64Builder;               }\n    public visitFloat                () { return FloatBuilder;                }\n    public visitFloat16              () { return Float16Builder;              }\n    public visitFloat32              () { return Float32Builder;              }\n    public visitFloat64              () { return Float64Builder;              }\n    public visitUtf8                 () { return Utf8Builder;                 }\n    public visitBinary               () { return BinaryBuilder;               }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryBuilder;      }\n    public visitDate                 () { return DateBuilder;                 }\n    public visitDateDay              () { return DateDayBuilder;              }\n    public visitDateMillisecond      () { return DateMillisecondBuilder;      }\n    public visitTimestamp            () { return TimestampBuilder;            }\n    public visitTimestampSecond      () { return TimestampSecondBuilder;      }\n    public visitTimestampMillisecond () { return TimestampMillisecondBuilder; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondBuilder; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondBuilder;  }\n    public visitTime                 () { return TimeBuilder;                 }\n    public visitTimeSecond           () { return TimeSecondBuilder;           }\n    public visitTimeMillisecond      () { return TimeMillisecondBuilder;      }\n    public visitTimeMicrosecond      () { return TimeMicrosecondBuilder;      }\n    public visitTimeNanosecond       () { return TimeNanosecondBuilder;       }\n    public visitDecimal              () { return DecimalBuilder;              }\n    public visitList                 () { return ListBuilder;                 }\n    public visitStruct               () { return StructBuilder;               }\n    public visitUnion                () { return UnionBuilder;                }\n    public visitDenseUnion           () { return DenseUnionBuilder;           }\n    public visitSparseUnion          () { return SparseUnionBuilder;          }\n    public visitDictionary           () { return DictionaryBuilder;           }\n    public visitInterval             () { return IntervalBuilder;             }\n    public visitIntervalDayTime      () { return IntervalDayTimeBuilder;      }\n    public visitIntervalYearMonth    () { return IntervalYearMonthBuilder;    }\n    public visitFixedSizeList        () { return FixedSizeListBuilder;        }\n    public visitMap                  () { return MapBuilder;                  }\n}\n\n/** @ignore */\nexport const instance = new GetBuilderCtor();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}