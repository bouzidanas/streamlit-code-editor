{"ast":null,"code":"ace.define(\"ace/mode/latex_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var LatexHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"%.*$\"\n      }, {\n        token: [\"keyword\", \"lparen\", \"variable.parameter\", \"rparen\", \"lparen\", \"storage.type\", \"rparen\"],\n        regex: \"(\\\\\\\\(?:documentclass|usepackage|input))(?:(\\\\[)([^\\\\]]*)(\\\\]))?({)([^}]*)(})\"\n      }, {\n        token: [\"keyword\", \"lparen\", \"variable.parameter\", \"rparen\"],\n        regex: \"(\\\\\\\\(?:label|v?ref|cite(?:[^{]*)))(?:({)([^}]*)(}))?\"\n      }, {\n        token: [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\n        regex: \"(\\\\\\\\begin)({)(verbatim)(})\",\n        next: \"verbatim\"\n      }, {\n        token: [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\n        regex: \"(\\\\\\\\begin)({)(lstlisting)(})\",\n        next: \"lstlisting\"\n      }, {\n        token: [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\n        regex: \"(\\\\\\\\(?:begin|end))({)([\\\\w*]*)(})\"\n      }, {\n        token: \"storage.type\",\n        regex: /\\\\verb\\b\\*?/,\n        next: [{\n          token: [\"keyword.operator\", \"string\", \"keyword.operator\"],\n          regex: \"(.)(.*?)(\\\\1|$)|\",\n          next: \"start\"\n        }]\n      }, {\n        token: \"storage.type\",\n        regex: \"\\\\\\\\[a-zA-Z]+\"\n      }, {\n        token: \"lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"constant.character.escape\",\n        regex: \"\\\\\\\\[^a-zA-Z]?\"\n      }, {\n        token: \"string\",\n        regex: \"\\\\${1,2}\",\n        next: \"equation\"\n      }],\n      \"equation\": [{\n        token: \"comment\",\n        regex: \"%.*$\"\n      }, {\n        token: \"string\",\n        regex: \"\\\\${1,2}\",\n        next: \"start\"\n      }, {\n        token: \"constant.character.escape\",\n        regex: \"\\\\\\\\(?:[^a-zA-Z]|[a-zA-Z]+)\"\n      }, {\n        token: \"error\",\n        regex: \"^\\\\s*$\",\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"verbatim\": [{\n        token: [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\n        regex: \"(\\\\\\\\end)({)(verbatim)(})\",\n        next: \"start\"\n      }, {\n        defaultToken: \"text\"\n      }],\n      \"lstlisting\": [{\n        token: [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\n        regex: \"(\\\\\\\\end)({)(lstlisting)(})\",\n        next: \"start\"\n      }, {\n        defaultToken: \"text\"\n      }]\n    };\n    this.normalizeRules();\n  };\n  oop.inherits(LatexHighlightRules, TextHighlightRules);\n  exports.LatexHighlightRules = LatexHighlightRules;\n});\nace.define(\"ace/mode/folding/latex\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\", \"ace/token_iterator\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var Range = require(\"../../range\").Range;\n  var TokenIterator = require(\"../../token_iterator\").TokenIterator;\n  var keywordLevels = {\n    \"\\\\subparagraph\": 1,\n    \"\\\\paragraph\": 2,\n    \"\\\\subsubsubsection\": 3,\n    \"\\\\subsubsection\": 4,\n    \"\\\\subsection\": 5,\n    \"\\\\section\": 6,\n    \"\\\\chapter\": 7,\n    \"\\\\part\": 8,\n    \"\\\\begin\": 9,\n    \"\\\\end\": 10\n  };\n  var FoldMode = exports.FoldMode = function () {};\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /^\\s*\\\\(begin)|\\s*\\\\(part|chapter|(?:sub)*(?:section|paragraph))\\b|{\\s*$/;\n    this.foldingStopMarker = /^\\s*\\\\(end)\\b|^\\s*}/;\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var line = session.doc.getLine(row);\n      var match = this.foldingStartMarker.exec(line);\n      if (match) {\n        if (match[1]) return this.latexBlock(session, row, match[0].length - 1);\n        if (match[2]) return this.latexSection(session, row, match[0].length - 1);\n        return this.openingBracketBlock(session, \"{\", row, match.index);\n      }\n      var match = this.foldingStopMarker.exec(line);\n      if (match) {\n        if (match[1]) return this.latexBlock(session, row, match[0].length - 1);\n        return this.closingBracketBlock(session, \"}\", row, match.index + match[0].length);\n      }\n    };\n    this.latexBlock = function (session, row, column, returnRange) {\n      var keywords = {\n        \"\\\\begin\": 1,\n        \"\\\\end\": -1\n      };\n      var stream = new TokenIterator(session, row, column);\n      var token = stream.getCurrentToken();\n      if (!token || !(token.type == \"storage.type\" || token.type == \"constant.character.escape\")) return;\n      var val = token.value;\n      var dir = keywords[val];\n      var getType = function () {\n        var token = stream.stepForward();\n        var type = token && token.type == \"lparen\" ? stream.stepForward().value : \"\";\n        if (dir === -1) {\n          stream.stepBackward();\n          if (type) stream.stepBackward();\n        }\n        return type;\n      };\n      var stack = [getType()];\n      var startColumn = dir === -1 ? stream.getCurrentTokenColumn() : session.getLine(row).length;\n      var startRow = row;\n      stream.step = dir === -1 ? stream.stepBackward : stream.stepForward;\n      while (token = stream.step()) {\n        if (!token || !(token.type == \"storage.type\" || token.type == \"constant.character.escape\")) continue;\n        var level = keywords[token.value];\n        if (!level) continue;\n        var type = getType();\n        if (level === dir) stack.unshift(type);else if (stack.shift() !== type || !stack.length) break;\n      }\n      if (stack.length) return;\n      if (dir == 1) {\n        stream.stepBackward();\n        stream.stepBackward();\n      }\n      if (returnRange) return stream.getCurrentTokenRange();\n      var row = stream.getCurrentTokenRow();\n      if (dir === -1) return new Range(row, session.getLine(row).length, startRow, startColumn);else return new Range(startRow, startColumn, row, stream.getCurrentTokenColumn());\n    };\n    this.latexSection = function (session, row, column) {\n      var stream = new TokenIterator(session, row, column);\n      var token = stream.getCurrentToken();\n      if (!token || token.type != \"storage.type\") return;\n      var startLevel = keywordLevels[token.value] || 0;\n      var stackDepth = 0;\n      var endRow = row;\n      while (token = stream.stepForward()) {\n        if (token.type !== \"storage.type\") continue;\n        var level = keywordLevels[token.value] || 0;\n        if (level >= 9) {\n          if (!stackDepth) endRow = stream.getCurrentTokenRow() - 1;\n          stackDepth += level == 9 ? 1 : -1;\n          if (stackDepth < 0) break;\n        } else if (level >= startLevel) break;\n      }\n      if (!stackDepth) endRow = stream.getCurrentTokenRow() - 1;\n      while (endRow > row && !/\\S/.test(session.getLine(endRow))) endRow--;\n      return new Range(row, session.getLine(row).length, endRow, session.getLine(endRow).length);\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/latex\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/latex_highlight_rules\", \"ace/mode/behaviour/cstyle\", \"ace/mode/folding/latex\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var LatexHighlightRules = require(\"./latex_highlight_rules\").LatexHighlightRules;\n  var CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\n  var LatexFoldMode = require(\"./folding/latex\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = LatexHighlightRules;\n    this.foldingRules = new LatexFoldMode();\n    this.$behaviour = new CstyleBehaviour({\n      braces: true\n    });\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.type = \"text\";\n    this.lineCommentStart = \"%\";\n    this.$id = \"ace/mode/latex\";\n    this.getMatching = function (session, row, column) {\n      if (row == undefined) row = session.selection.lead;\n      if (typeof row == \"object\") {\n        column = row.column;\n        row = row.row;\n      }\n      var startToken = session.getTokenAt(row, column);\n      if (!startToken) return;\n      if (startToken.value == \"\\\\begin\" || startToken.value == \"\\\\end\") {\n        return this.foldingRules.latexBlock(session, row, column, true);\n      }\n    };\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/latex\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","LatexHighlightRules","$rules","token","regex","next","defaultToken","normalizeRules","inherits","BaseFoldMode","FoldMode","Range","TokenIterator","keywordLevels","foldingStartMarker","foldingStopMarker","getFoldWidgetRange","session","foldStyle","row","line","doc","getLine","match","exec","latexBlock","length","latexSection","openingBracketBlock","index","closingBracketBlock","column","returnRange","keywords","stream","getCurrentToken","type","val","value","dir","getType","stepForward","stepBackward","stack","startColumn","getCurrentTokenColumn","startRow","step","level","unshift","shift","getCurrentTokenRange","getCurrentTokenRow","startLevel","stackDepth","endRow","test","call","prototype","TextMode","Mode","CstyleBehaviour","LatexFoldMode","HighlightRules","foldingRules","$behaviour","braces","lineCommentStart","$id","getMatching","undefined","selection","lead","startToken","getTokenAt","m"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-latex.js"],"sourcesContent":["ace.define(\"ace/mode/latex_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar LatexHighlightRules = function () {\n    this.$rules = {\n        \"start\": [{\n                token: \"comment\",\n                regex: \"%.*$\"\n            }, {\n                token: [\"keyword\", \"lparen\", \"variable.parameter\", \"rparen\", \"lparen\", \"storage.type\", \"rparen\"],\n                regex: \"(\\\\\\\\(?:documentclass|usepackage|input))(?:(\\\\[)([^\\\\]]*)(\\\\]))?({)([^}]*)(})\"\n            }, {\n                token: [\"keyword\", \"lparen\", \"variable.parameter\", \"rparen\"],\n                regex: \"(\\\\\\\\(?:label|v?ref|cite(?:[^{]*)))(?:({)([^}]*)(}))?\"\n            }, {\n                token: [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\n                regex: \"(\\\\\\\\begin)({)(verbatim)(})\",\n                next: \"verbatim\"\n            }, {\n                token: [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\n                regex: \"(\\\\\\\\begin)({)(lstlisting)(})\",\n                next: \"lstlisting\"\n            }, {\n                token: [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\n                regex: \"(\\\\\\\\(?:begin|end))({)([\\\\w*]*)(})\"\n            }, {\n                token: \"storage.type\",\n                regex: /\\\\verb\\b\\*?/,\n                next: [{\n                        token: [\"keyword.operator\", \"string\", \"keyword.operator\"],\n                        regex: \"(.)(.*?)(\\\\1|$)|\",\n                        next: \"start\"\n                    }]\n            }, {\n                token: \"storage.type\",\n                regex: \"\\\\\\\\[a-zA-Z]+\"\n            }, {\n                token: \"lparen\",\n                regex: \"[[({]\"\n            }, {\n                token: \"rparen\",\n                regex: \"[\\\\])}]\"\n            }, {\n                token: \"constant.character.escape\",\n                regex: \"\\\\\\\\[^a-zA-Z]?\"\n            }, {\n                token: \"string\",\n                regex: \"\\\\${1,2}\",\n                next: \"equation\"\n            }],\n        \"equation\": [{\n                token: \"comment\",\n                regex: \"%.*$\"\n            }, {\n                token: \"string\",\n                regex: \"\\\\${1,2}\",\n                next: \"start\"\n            }, {\n                token: \"constant.character.escape\",\n                regex: \"\\\\\\\\(?:[^a-zA-Z]|[a-zA-Z]+)\"\n            }, {\n                token: \"error\",\n                regex: \"^\\\\s*$\",\n                next: \"start\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"verbatim\": [{\n                token: [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\n                regex: \"(\\\\\\\\end)({)(verbatim)(})\",\n                next: \"start\"\n            }, {\n                defaultToken: \"text\"\n            }],\n        \"lstlisting\": [{\n                token: [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\n                regex: \"(\\\\\\\\end)({)(lstlisting)(})\",\n                next: \"start\"\n            }, {\n                defaultToken: \"text\"\n            }]\n    };\n    this.normalizeRules();\n};\noop.inherits(LatexHighlightRules, TextHighlightRules);\nexports.LatexHighlightRules = LatexHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/latex\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\",\"ace/token_iterator\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar Range = require(\"../../range\").Range;\nvar TokenIterator = require(\"../../token_iterator\").TokenIterator;\nvar keywordLevels = {\n    \"\\\\subparagraph\": 1,\n    \"\\\\paragraph\": 2,\n    \"\\\\subsubsubsection\": 3,\n    \"\\\\subsubsection\": 4,\n    \"\\\\subsection\": 5,\n    \"\\\\section\": 6,\n    \"\\\\chapter\": 7,\n    \"\\\\part\": 8,\n    \"\\\\begin\": 9,\n    \"\\\\end\": 10\n};\nvar FoldMode = exports.FoldMode = function () { };\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /^\\s*\\\\(begin)|\\s*\\\\(part|chapter|(?:sub)*(?:section|paragraph))\\b|{\\s*$/;\n    this.foldingStopMarker = /^\\s*\\\\(end)\\b|^\\s*}/;\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n        var line = session.doc.getLine(row);\n        var match = this.foldingStartMarker.exec(line);\n        if (match) {\n            if (match[1])\n                return this.latexBlock(session, row, match[0].length - 1);\n            if (match[2])\n                return this.latexSection(session, row, match[0].length - 1);\n            return this.openingBracketBlock(session, \"{\", row, match.index);\n        }\n        var match = this.foldingStopMarker.exec(line);\n        if (match) {\n            if (match[1])\n                return this.latexBlock(session, row, match[0].length - 1);\n            return this.closingBracketBlock(session, \"}\", row, match.index + match[0].length);\n        }\n    };\n    this.latexBlock = function (session, row, column, returnRange) {\n        var keywords = {\n            \"\\\\begin\": 1,\n            \"\\\\end\": -1\n        };\n        var stream = new TokenIterator(session, row, column);\n        var token = stream.getCurrentToken();\n        if (!token || !(token.type == \"storage.type\" || token.type == \"constant.character.escape\"))\n            return;\n        var val = token.value;\n        var dir = keywords[val];\n        var getType = function () {\n            var token = stream.stepForward();\n            var type = token && token.type == \"lparen\" ? stream.stepForward().value : \"\";\n            if (dir === -1) {\n                stream.stepBackward();\n                if (type)\n                    stream.stepBackward();\n            }\n            return type;\n        };\n        var stack = [getType()];\n        var startColumn = dir === -1 ? stream.getCurrentTokenColumn() : session.getLine(row).length;\n        var startRow = row;\n        stream.step = dir === -1 ? stream.stepBackward : stream.stepForward;\n        while (token = stream.step()) {\n            if (!token || !(token.type == \"storage.type\" || token.type == \"constant.character.escape\"))\n                continue;\n            var level = keywords[token.value];\n            if (!level)\n                continue;\n            var type = getType();\n            if (level === dir)\n                stack.unshift(type);\n            else if (stack.shift() !== type || !stack.length)\n                break;\n        }\n        if (stack.length)\n            return;\n        if (dir == 1) {\n            stream.stepBackward();\n            stream.stepBackward();\n        }\n        if (returnRange)\n            return stream.getCurrentTokenRange();\n        var row = stream.getCurrentTokenRow();\n        if (dir === -1)\n            return new Range(row, session.getLine(row).length, startRow, startColumn);\n        else\n            return new Range(startRow, startColumn, row, stream.getCurrentTokenColumn());\n    };\n    this.latexSection = function (session, row, column) {\n        var stream = new TokenIterator(session, row, column);\n        var token = stream.getCurrentToken();\n        if (!token || token.type != \"storage.type\")\n            return;\n        var startLevel = keywordLevels[token.value] || 0;\n        var stackDepth = 0;\n        var endRow = row;\n        while (token = stream.stepForward()) {\n            if (token.type !== \"storage.type\")\n                continue;\n            var level = keywordLevels[token.value] || 0;\n            if (level >= 9) {\n                if (!stackDepth)\n                    endRow = stream.getCurrentTokenRow() - 1;\n                stackDepth += level == 9 ? 1 : -1;\n                if (stackDepth < 0)\n                    break;\n            }\n            else if (level >= startLevel)\n                break;\n        }\n        if (!stackDepth)\n            endRow = stream.getCurrentTokenRow() - 1;\n        while (endRow > row && !/\\S/.test(session.getLine(endRow)))\n            endRow--;\n        return new Range(row, session.getLine(row).length, endRow, session.getLine(endRow).length);\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/latex\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/latex_highlight_rules\",\"ace/mode/behaviour/cstyle\",\"ace/mode/folding/latex\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar LatexHighlightRules = require(\"./latex_highlight_rules\").LatexHighlightRules;\nvar CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\nvar LatexFoldMode = require(\"./folding/latex\").FoldMode;\nvar Mode = function () {\n    this.HighlightRules = LatexHighlightRules;\n    this.foldingRules = new LatexFoldMode();\n    this.$behaviour = new CstyleBehaviour({ braces: true });\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.type = \"text\";\n    this.lineCommentStart = \"%\";\n    this.$id = \"ace/mode/latex\";\n    this.getMatching = function (session, row, column) {\n        if (row == undefined)\n            row = session.selection.lead;\n        if (typeof row == \"object\") {\n            column = row.column;\n            row = row.row;\n        }\n        var startToken = session.getTokenAt(row, column);\n        if (!startToken)\n            return;\n        if (startToken.value == \"\\\\begin\" || startToken.value == \"\\\\end\") {\n            return this.foldingRules.latexBlock(session, row, column, true);\n        }\n    };\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/latex\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}