{"ast":null,"code":"ace.define(\"ace/mode/lua_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var LuaHighlightRules = function () {\n    var keywords = \"break|do|else|elseif|end|for|function|if|in|local|repeat|\" + \"return|then|until|while|or|and|not\";\n    var builtinConstants = \"true|false|nil|_G|_VERSION\";\n    var functions = \"string|xpcall|package|tostring|print|os|unpack|require|\" + \"getfenv|setmetatable|next|assert|tonumber|io|rawequal|\" + \"collectgarbage|getmetatable|module|rawset|math|debug|\" + \"pcall|table|newproxy|type|coroutine|_G|select|gcinfo|\" + \"pairs|rawget|loadstring|ipairs|_VERSION|dofile|setfenv|\" + \"load|error|loadfile|\" + \"sub|upper|len|gfind|rep|find|match|char|dump|gmatch|\" + \"reverse|byte|format|gsub|lower|preload|loadlib|loaded|\" + \"loaders|cpath|config|path|seeall|exit|setlocale|date|\" + \"getenv|difftime|remove|time|clock|tmpname|rename|execute|\" + \"lines|write|close|flush|open|output|type|read|stderr|\" + \"stdin|input|stdout|popen|tmpfile|log|max|acos|huge|\" + \"ldexp|pi|cos|tanh|pow|deg|tan|cosh|sinh|random|randomseed|\" + \"frexp|ceil|floor|rad|abs|sqrt|modf|asin|min|mod|fmod|log10|\" + \"atan2|exp|sin|atan|getupvalue|debug|sethook|getmetatable|\" + \"gethook|setmetatable|setlocal|traceback|setfenv|getinfo|\" + \"setupvalue|getlocal|getregistry|getfenv|setn|insert|getn|\" + \"foreachi|maxn|foreach|concat|sort|remove|resume|yield|\" + \"status|wrap|create|running|\" + \"__add|__sub|__mod|__unm|__concat|__lt|__index|__call|__gc|__metatable|\" + \"__mul|__div|__pow|__len|__eq|__le|__newindex|__tostring|__mode|__tonumber\";\n    var stdLibaries = \"string|package|os|io|math|debug|table|coroutine\";\n    var deprecatedIn5152 = \"setn|foreach|foreachi|gcinfo|log10|maxn\";\n    var keywordMapper = this.createKeywordMapper({\n      \"keyword\": keywords,\n      \"support.function\": functions,\n      \"keyword.deprecated\": deprecatedIn5152,\n      \"constant.library\": stdLibaries,\n      \"constant.language\": builtinConstants,\n      \"variable.language\": \"self\"\n    }, \"identifier\");\n    var decimalInteger = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\n    var hexInteger = \"(?:0[xX][\\\\dA-Fa-f]+)\";\n    var integer = \"(?:\" + decimalInteger + \"|\" + hexInteger + \")\";\n    var fraction = \"(?:\\\\.\\\\d+)\";\n    var intPart = \"(?:\\\\d+)\";\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\n    var floatNumber = \"(?:\" + pointFloat + \")\";\n    this.$rules = {\n      \"start\": [{\n        stateName: \"bracketedComment\",\n        onMatch: function (value, currentState, stack) {\n          stack.unshift(this.next, value.length - 2, currentState);\n          return \"comment\";\n        },\n        regex: /\\-\\-\\[=*\\[/,\n        next: [{\n          onMatch: function (value, currentState, stack) {\n            if (value.length == stack[1]) {\n              stack.shift();\n              stack.shift();\n              this.next = stack.shift();\n            } else {\n              this.next = \"\";\n            }\n            return \"comment\";\n          },\n          regex: /\\]=*\\]/,\n          next: \"start\"\n        }, {\n          defaultToken: \"comment.body\"\n        }]\n      }, {\n        token: \"comment\",\n        regex: \"\\\\-\\\\-.*$\"\n      }, {\n        stateName: \"bracketedString\",\n        onMatch: function (value, currentState, stack) {\n          stack.unshift(this.next, value.length, currentState);\n          return \"string.start\";\n        },\n        regex: /\\[=*\\[/,\n        next: [{\n          onMatch: function (value, currentState, stack) {\n            if (value.length == stack[1]) {\n              stack.shift();\n              stack.shift();\n              this.next = stack.shift();\n            } else {\n              this.next = \"\";\n            }\n            return \"string.end\";\n          },\n          regex: /\\]=*\\]/,\n          next: \"start\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        token: \"string\",\n        // \" string\n        regex: '\"(?:[^\\\\\\\\]|\\\\\\\\.)*?\"'\n      }, {\n        token: \"string\",\n        // ' string\n        regex: \"'(?:[^\\\\\\\\]|\\\\\\\\.)*?'\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: floatNumber\n      }, {\n        token: \"constant.numeric\",\n        // integer\n        regex: integer + \"\\\\b\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"\\\\+|\\\\-|\\\\*|\\\\/|%|\\\\#|\\\\^|~|<|>|<=|=>|==|~=|=|\\\\:|\\\\.\\\\.\\\\.|\\\\.\\\\.\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[\\\\[\\\\(\\\\{]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\]\\\\)\\\\}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+|\\\\w+\"\n      }]\n    };\n    this.normalizeRules();\n  };\n  oop.inherits(LuaHighlightRules, TextHighlightRules);\n  exports.LuaHighlightRules = LuaHighlightRules;\n});\nace.define(\"ace/mode/folding/lua\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\", \"ace/token_iterator\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var Range = require(\"../../range\").Range;\n  var TokenIterator = require(\"../../token_iterator\").TokenIterator;\n  var FoldMode = exports.FoldMode = function () {};\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /\\b(function|then|do|repeat)\\b|{\\s*$|(\\[=*\\[)/;\n    this.foldingStopMarker = /\\bend\\b|^\\s*}|\\]=*\\]/;\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var isStart = this.foldingStartMarker.test(line);\n      var isEnd = this.foldingStopMarker.test(line);\n      if (isStart && !isEnd) {\n        var match = line.match(this.foldingStartMarker);\n        if (match[1] == \"then\" && /\\belseif\\b/.test(line)) return;\n        if (match[1]) {\n          if (session.getTokenAt(row, match.index + 1).type === \"keyword\") return \"start\";\n        } else if (match[2]) {\n          var type = session.bgTokenizer.getState(row) || \"\";\n          if (type[0] == \"bracketedComment\" || type[0] == \"bracketedString\") return \"start\";\n        } else {\n          return \"start\";\n        }\n      }\n      if (foldStyle != \"markbeginend\" || !isEnd || isStart && isEnd) return \"\";\n      var match = line.match(this.foldingStopMarker);\n      if (match[0] === \"end\") {\n        if (session.getTokenAt(row, match.index + 1).type === \"keyword\") return \"end\";\n      } else if (match[0][0] === \"]\") {\n        var type = session.bgTokenizer.getState(row - 1) || \"\";\n        if (type[0] == \"bracketedComment\" || type[0] == \"bracketedString\") return \"end\";\n      } else return \"end\";\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var line = session.doc.getLine(row);\n      var match = this.foldingStartMarker.exec(line);\n      if (match) {\n        if (match[1]) return this.luaBlock(session, row, match.index + 1);\n        if (match[2]) return session.getCommentFoldRange(row, match.index + 1);\n        return this.openingBracketBlock(session, \"{\", row, match.index);\n      }\n      var match = this.foldingStopMarker.exec(line);\n      if (match) {\n        if (match[0] === \"end\") {\n          if (session.getTokenAt(row, match.index + 1).type === \"keyword\") return this.luaBlock(session, row, match.index + 1);\n        }\n        if (match[0][0] === \"]\") return session.getCommentFoldRange(row, match.index + 1);\n        return this.closingBracketBlock(session, \"}\", row, match.index + match[0].length);\n      }\n    };\n    this.luaBlock = function (session, row, column, tokenRange) {\n      var stream = new TokenIterator(session, row, column);\n      var indentKeywords = {\n        \"function\": 1,\n        \"do\": 1,\n        \"then\": 1,\n        \"elseif\": -1,\n        \"end\": -1,\n        \"repeat\": 1,\n        \"until\": -1\n      };\n      var token = stream.getCurrentToken();\n      if (!token || token.type != \"keyword\") return;\n      var val = token.value;\n      var stack = [val];\n      var dir = indentKeywords[val];\n      if (!dir) return;\n      var startColumn = dir === -1 ? stream.getCurrentTokenColumn() : session.getLine(row).length;\n      var startRow = row;\n      stream.step = dir === -1 ? stream.stepBackward : stream.stepForward;\n      while (token = stream.step()) {\n        if (token.type !== \"keyword\") continue;\n        var level = dir * indentKeywords[token.value];\n        if (level > 0) {\n          stack.unshift(token.value);\n        } else if (level <= 0) {\n          stack.shift();\n          if (!stack.length && token.value != \"elseif\") break;\n          if (level === 0) stack.unshift(token.value);\n        }\n      }\n      if (!token) return null;\n      if (tokenRange) return stream.getCurrentTokenRange();\n      var row = stream.getCurrentTokenRow();\n      if (dir === -1) return new Range(row, session.getLine(row).length, startRow, startColumn);else return new Range(startRow, startColumn, row, stream.getCurrentTokenColumn());\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/lua\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/lua_highlight_rules\", \"ace/mode/folding/lua\", \"ace/range\", \"ace/worker/worker_client\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var LuaHighlightRules = require(\"./lua_highlight_rules\").LuaHighlightRules;\n  var LuaFoldMode = require(\"./folding/lua\").FoldMode;\n  var Range = require(\"../range\").Range;\n  var WorkerClient = require(\"../worker/worker_client\").WorkerClient;\n  var Mode = function () {\n    this.HighlightRules = LuaHighlightRules;\n    this.foldingRules = new LuaFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"--\";\n    this.blockComment = {\n      start: \"--[[\",\n      end: \"--]]\"\n    };\n    var indentKeywords = {\n      \"function\": 1,\n      \"then\": 1,\n      \"do\": 1,\n      \"else\": 1,\n      \"elseif\": 1,\n      \"repeat\": 1,\n      \"end\": -1,\n      \"until\": -1\n    };\n    var outdentKeywords = [\"else\", \"elseif\", \"end\", \"until\"];\n    function getNetIndentLevel(tokens) {\n      var level = 0;\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i];\n        if (token.type == \"keyword\") {\n          if (token.value in indentKeywords) {\n            level += indentKeywords[token.value];\n          }\n        } else if (token.type == \"paren.lparen\") {\n          level += token.value.length;\n        } else if (token.type == \"paren.rparen\") {\n          level -= token.value.length;\n        }\n      }\n      if (level < 0) {\n        return -1;\n      } else if (level > 0) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var level = 0;\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n      if (state == \"start\") {\n        level = getNetIndentLevel(tokens);\n      }\n      if (level > 0) {\n        return indent + tab;\n      } else if (level < 0 && indent.substr(indent.length - tab.length) == tab) {\n        if (!this.checkOutdent(state, line, \"\\n\")) {\n          return indent.substr(0, indent.length - tab.length);\n        }\n      }\n      return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n      if (input != \"\\n\" && input != \"\\r\" && input != \"\\r\\n\") return false;\n      if (line.match(/^\\s*[\\)\\}\\]]$/)) return true;\n      var tokens = this.getTokenizer().getLineTokens(line.trim(), state).tokens;\n      if (!tokens || !tokens.length) return false;\n      return tokens[0].type == \"keyword\" && outdentKeywords.indexOf(tokens[0].value) != -1;\n    };\n    this.getMatching = function (session, row, column) {\n      if (row == undefined) {\n        var pos = session.selection.lead;\n        column = pos.column;\n        row = pos.row;\n      }\n      var startToken = session.getTokenAt(row, column);\n      if (startToken && startToken.value in indentKeywords) return this.foldingRules.luaBlock(session, row, column, true);\n    };\n    this.autoOutdent = function (state, session, row) {\n      var line = session.getLine(row);\n      var column = line.match(/^\\s*/)[0].length;\n      if (!column || !row) return;\n      var startRange = this.getMatching(session, row, column + 1);\n      if (!startRange || startRange.start.row == row) return;\n      var indent = this.$getIndent(session.getLine(startRange.start.row));\n      if (indent.length != column) {\n        session.replace(new Range(row, 0, row, column), indent);\n        session.outdentRows(new Range(row + 1, 0, row + 1, 0));\n      }\n    };\n    this.createWorker = function (session) {\n      var worker = new WorkerClient([\"ace\"], \"ace/mode/lua_worker\", \"Worker\");\n      worker.attachToDocument(session.getDocument());\n      worker.on(\"annotate\", function (e) {\n        session.setAnnotations(e.data);\n      });\n      worker.on(\"terminate\", function () {\n        session.clearAnnotations();\n      });\n      return worker;\n    };\n    this.$id = \"ace/mode/lua\";\n    this.snippetFileId = \"ace/snippets/lua\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/lua\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","LuaHighlightRules","keywords","builtinConstants","functions","stdLibaries","deprecatedIn5152","keywordMapper","createKeywordMapper","decimalInteger","hexInteger","integer","fraction","intPart","pointFloat","floatNumber","$rules","stateName","onMatch","value","currentState","stack","unshift","next","length","regex","shift","defaultToken","token","normalizeRules","inherits","BaseFoldMode","FoldMode","Range","TokenIterator","foldingStartMarker","foldingStopMarker","getFoldWidget","session","foldStyle","row","line","getLine","isStart","test","isEnd","match","getTokenAt","index","type","bgTokenizer","getState","getFoldWidgetRange","doc","exec","luaBlock","getCommentFoldRange","openingBracketBlock","closingBracketBlock","column","tokenRange","stream","indentKeywords","getCurrentToken","val","dir","startColumn","getCurrentTokenColumn","startRow","step","stepBackward","stepForward","level","getCurrentTokenRange","getCurrentTokenRow","call","prototype","TextMode","Mode","LuaFoldMode","WorkerClient","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","start","end","outdentKeywords","getNetIndentLevel","tokens","i","getNextLineIndent","state","tab","indent","$getIndent","tokenizedLine","getTokenizer","getLineTokens","substr","checkOutdent","input","trim","indexOf","getMatching","undefined","pos","selection","lead","startToken","autoOutdent","startRange","replace","outdentRows","createWorker","worker","attachToDocument","getDocument","on","e","setAnnotations","data","clearAnnotations","$id","snippetFileId","m"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-lua.js"],"sourcesContent":["ace.define(\"ace/mode/lua_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar LuaHighlightRules = function () {\n    var keywords = (\"break|do|else|elseif|end|for|function|if|in|local|repeat|\" +\n        \"return|then|until|while|or|and|not\");\n    var builtinConstants = (\"true|false|nil|_G|_VERSION\");\n    var functions = (\n    \"string|xpcall|package|tostring|print|os|unpack|require|\" +\n        \"getfenv|setmetatable|next|assert|tonumber|io|rawequal|\" +\n        \"collectgarbage|getmetatable|module|rawset|math|debug|\" +\n        \"pcall|table|newproxy|type|coroutine|_G|select|gcinfo|\" +\n        \"pairs|rawget|loadstring|ipairs|_VERSION|dofile|setfenv|\" +\n        \"load|error|loadfile|\" +\n        \"sub|upper|len|gfind|rep|find|match|char|dump|gmatch|\" +\n        \"reverse|byte|format|gsub|lower|preload|loadlib|loaded|\" +\n        \"loaders|cpath|config|path|seeall|exit|setlocale|date|\" +\n        \"getenv|difftime|remove|time|clock|tmpname|rename|execute|\" +\n        \"lines|write|close|flush|open|output|type|read|stderr|\" +\n        \"stdin|input|stdout|popen|tmpfile|log|max|acos|huge|\" +\n        \"ldexp|pi|cos|tanh|pow|deg|tan|cosh|sinh|random|randomseed|\" +\n        \"frexp|ceil|floor|rad|abs|sqrt|modf|asin|min|mod|fmod|log10|\" +\n        \"atan2|exp|sin|atan|getupvalue|debug|sethook|getmetatable|\" +\n        \"gethook|setmetatable|setlocal|traceback|setfenv|getinfo|\" +\n        \"setupvalue|getlocal|getregistry|getfenv|setn|insert|getn|\" +\n        \"foreachi|maxn|foreach|concat|sort|remove|resume|yield|\" +\n        \"status|wrap|create|running|\" +\n        \"__add|__sub|__mod|__unm|__concat|__lt|__index|__call|__gc|__metatable|\" +\n        \"__mul|__div|__pow|__len|__eq|__le|__newindex|__tostring|__mode|__tonumber\");\n    var stdLibaries = (\"string|package|os|io|math|debug|table|coroutine\");\n    var deprecatedIn5152 = (\"setn|foreach|foreachi|gcinfo|log10|maxn\");\n    var keywordMapper = this.createKeywordMapper({\n        \"keyword\": keywords,\n        \"support.function\": functions,\n        \"keyword.deprecated\": deprecatedIn5152,\n        \"constant.library\": stdLibaries,\n        \"constant.language\": builtinConstants,\n        \"variable.language\": \"self\"\n    }, \"identifier\");\n    var decimalInteger = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\n    var hexInteger = \"(?:0[xX][\\\\dA-Fa-f]+)\";\n    var integer = \"(?:\" + decimalInteger + \"|\" + hexInteger + \")\";\n    var fraction = \"(?:\\\\.\\\\d+)\";\n    var intPart = \"(?:\\\\d+)\";\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\n    var floatNumber = \"(?:\" + pointFloat + \")\";\n    this.$rules = {\n        \"start\": [{\n                stateName: \"bracketedComment\",\n                onMatch: function (value, currentState, stack) {\n                    stack.unshift(this.next, value.length - 2, currentState);\n                    return \"comment\";\n                },\n                regex: /\\-\\-\\[=*\\[/,\n                next: [\n                    {\n                        onMatch: function (value, currentState, stack) {\n                            if (value.length == stack[1]) {\n                                stack.shift();\n                                stack.shift();\n                                this.next = stack.shift();\n                            }\n                            else {\n                                this.next = \"\";\n                            }\n                            return \"comment\";\n                        },\n                        regex: /\\]=*\\]/,\n                        next: \"start\"\n                    }, {\n                        defaultToken: \"comment.body\"\n                    }\n                ]\n            },\n            {\n                token: \"comment\",\n                regex: \"\\\\-\\\\-.*$\"\n            },\n            {\n                stateName: \"bracketedString\",\n                onMatch: function (value, currentState, stack) {\n                    stack.unshift(this.next, value.length, currentState);\n                    return \"string.start\";\n                },\n                regex: /\\[=*\\[/,\n                next: [\n                    {\n                        onMatch: function (value, currentState, stack) {\n                            if (value.length == stack[1]) {\n                                stack.shift();\n                                stack.shift();\n                                this.next = stack.shift();\n                            }\n                            else {\n                                this.next = \"\";\n                            }\n                            return \"string.end\";\n                        },\n                        regex: /\\]=*\\]/,\n                        next: \"start\"\n                    }, {\n                        defaultToken: \"string\"\n                    }\n                ]\n            },\n            {\n                token: \"string\", // \" string\n                regex: '\"(?:[^\\\\\\\\]|\\\\\\\\.)*?\"'\n            }, {\n                token: \"string\", // ' string\n                regex: \"'(?:[^\\\\\\\\]|\\\\\\\\.)*?'\"\n            }, {\n                token: \"constant.numeric\", // float\n                regex: floatNumber\n            }, {\n                token: \"constant.numeric\", // integer\n                regex: integer + \"\\\\b\"\n            }, {\n                token: keywordMapper,\n                regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n            }, {\n                token: \"keyword.operator\",\n                regex: \"\\\\+|\\\\-|\\\\*|\\\\/|%|\\\\#|\\\\^|~|<|>|<=|=>|==|~=|=|\\\\:|\\\\.\\\\.\\\\.|\\\\.\\\\.\"\n            }, {\n                token: \"paren.lparen\",\n                regex: \"[\\\\[\\\\(\\\\{]\"\n            }, {\n                token: \"paren.rparen\",\n                regex: \"[\\\\]\\\\)\\\\}]\"\n            }, {\n                token: \"text\",\n                regex: \"\\\\s+|\\\\w+\"\n            }]\n    };\n    this.normalizeRules();\n};\noop.inherits(LuaHighlightRules, TextHighlightRules);\nexports.LuaHighlightRules = LuaHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/lua\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\",\"ace/token_iterator\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar Range = require(\"../../range\").Range;\nvar TokenIterator = require(\"../../token_iterator\").TokenIterator;\nvar FoldMode = exports.FoldMode = function () { };\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /\\b(function|then|do|repeat)\\b|{\\s*$|(\\[=*\\[)/;\n    this.foldingStopMarker = /\\bend\\b|^\\s*}|\\]=*\\]/;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        var isStart = this.foldingStartMarker.test(line);\n        var isEnd = this.foldingStopMarker.test(line);\n        if (isStart && !isEnd) {\n            var match = line.match(this.foldingStartMarker);\n            if (match[1] == \"then\" && /\\belseif\\b/.test(line))\n                return;\n            if (match[1]) {\n                if (session.getTokenAt(row, match.index + 1).type === \"keyword\")\n                    return \"start\";\n            }\n            else if (match[2]) {\n                var type = session.bgTokenizer.getState(row) || \"\";\n                if (type[0] == \"bracketedComment\" || type[0] == \"bracketedString\")\n                    return \"start\";\n            }\n            else {\n                return \"start\";\n            }\n        }\n        if (foldStyle != \"markbeginend\" || !isEnd || isStart && isEnd)\n            return \"\";\n        var match = line.match(this.foldingStopMarker);\n        if (match[0] === \"end\") {\n            if (session.getTokenAt(row, match.index + 1).type === \"keyword\")\n                return \"end\";\n        }\n        else if (match[0][0] === \"]\") {\n            var type = session.bgTokenizer.getState(row - 1) || \"\";\n            if (type[0] == \"bracketedComment\" || type[0] == \"bracketedString\")\n                return \"end\";\n        }\n        else\n            return \"end\";\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n        var line = session.doc.getLine(row);\n        var match = this.foldingStartMarker.exec(line);\n        if (match) {\n            if (match[1])\n                return this.luaBlock(session, row, match.index + 1);\n            if (match[2])\n                return session.getCommentFoldRange(row, match.index + 1);\n            return this.openingBracketBlock(session, \"{\", row, match.index);\n        }\n        var match = this.foldingStopMarker.exec(line);\n        if (match) {\n            if (match[0] === \"end\") {\n                if (session.getTokenAt(row, match.index + 1).type === \"keyword\")\n                    return this.luaBlock(session, row, match.index + 1);\n            }\n            if (match[0][0] === \"]\")\n                return session.getCommentFoldRange(row, match.index + 1);\n            return this.closingBracketBlock(session, \"}\", row, match.index + match[0].length);\n        }\n    };\n    this.luaBlock = function (session, row, column, tokenRange) {\n        var stream = new TokenIterator(session, row, column);\n        var indentKeywords = {\n            \"function\": 1,\n            \"do\": 1,\n            \"then\": 1,\n            \"elseif\": -1,\n            \"end\": -1,\n            \"repeat\": 1,\n            \"until\": -1\n        };\n        var token = stream.getCurrentToken();\n        if (!token || token.type != \"keyword\")\n            return;\n        var val = token.value;\n        var stack = [val];\n        var dir = indentKeywords[val];\n        if (!dir)\n            return;\n        var startColumn = dir === -1 ? stream.getCurrentTokenColumn() : session.getLine(row).length;\n        var startRow = row;\n        stream.step = dir === -1 ? stream.stepBackward : stream.stepForward;\n        while (token = stream.step()) {\n            if (token.type !== \"keyword\")\n                continue;\n            var level = dir * indentKeywords[token.value];\n            if (level > 0) {\n                stack.unshift(token.value);\n            }\n            else if (level <= 0) {\n                stack.shift();\n                if (!stack.length && token.value != \"elseif\")\n                    break;\n                if (level === 0)\n                    stack.unshift(token.value);\n            }\n        }\n        if (!token)\n            return null;\n        if (tokenRange)\n            return stream.getCurrentTokenRange();\n        var row = stream.getCurrentTokenRow();\n        if (dir === -1)\n            return new Range(row, session.getLine(row).length, startRow, startColumn);\n        else\n            return new Range(startRow, startColumn, row, stream.getCurrentTokenColumn());\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/lua\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/lua_highlight_rules\",\"ace/mode/folding/lua\",\"ace/range\",\"ace/worker/worker_client\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar LuaHighlightRules = require(\"./lua_highlight_rules\").LuaHighlightRules;\nvar LuaFoldMode = require(\"./folding/lua\").FoldMode;\nvar Range = require(\"../range\").Range;\nvar WorkerClient = require(\"../worker/worker_client\").WorkerClient;\nvar Mode = function () {\n    this.HighlightRules = LuaHighlightRules;\n    this.foldingRules = new LuaFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"--\";\n    this.blockComment = { start: \"--[[\", end: \"--]]\" };\n    var indentKeywords = {\n        \"function\": 1,\n        \"then\": 1,\n        \"do\": 1,\n        \"else\": 1,\n        \"elseif\": 1,\n        \"repeat\": 1,\n        \"end\": -1,\n        \"until\": -1\n    };\n    var outdentKeywords = [\n        \"else\",\n        \"elseif\",\n        \"end\",\n        \"until\"\n    ];\n    function getNetIndentLevel(tokens) {\n        var level = 0;\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            if (token.type == \"keyword\") {\n                if (token.value in indentKeywords) {\n                    level += indentKeywords[token.value];\n                }\n            }\n            else if (token.type == \"paren.lparen\") {\n                level += token.value.length;\n            }\n            else if (token.type == \"paren.rparen\") {\n                level -= token.value.length;\n            }\n        }\n        if (level < 0) {\n            return -1;\n        }\n        else if (level > 0) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    this.getNextLineIndent = function (state, line, tab) {\n        var indent = this.$getIndent(line);\n        var level = 0;\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        if (state == \"start\") {\n            level = getNetIndentLevel(tokens);\n        }\n        if (level > 0) {\n            return indent + tab;\n        }\n        else if (level < 0 && indent.substr(indent.length - tab.length) == tab) {\n            if (!this.checkOutdent(state, line, \"\\n\")) {\n                return indent.substr(0, indent.length - tab.length);\n            }\n        }\n        return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n        if (input != \"\\n\" && input != \"\\r\" && input != \"\\r\\n\")\n            return false;\n        if (line.match(/^\\s*[\\)\\}\\]]$/))\n            return true;\n        var tokens = this.getTokenizer().getLineTokens(line.trim(), state).tokens;\n        if (!tokens || !tokens.length)\n            return false;\n        return (tokens[0].type == \"keyword\" && outdentKeywords.indexOf(tokens[0].value) != -1);\n    };\n    this.getMatching = function (session, row, column) {\n        if (row == undefined) {\n            var pos = session.selection.lead;\n            column = pos.column;\n            row = pos.row;\n        }\n        var startToken = session.getTokenAt(row, column);\n        if (startToken && startToken.value in indentKeywords)\n            return this.foldingRules.luaBlock(session, row, column, true);\n    };\n    this.autoOutdent = function (state, session, row) {\n        var line = session.getLine(row);\n        var column = line.match(/^\\s*/)[0].length;\n        if (!column || !row)\n            return;\n        var startRange = this.getMatching(session, row, column + 1);\n        if (!startRange || startRange.start.row == row)\n            return;\n        var indent = this.$getIndent(session.getLine(startRange.start.row));\n        if (indent.length != column) {\n            session.replace(new Range(row, 0, row, column), indent);\n            session.outdentRows(new Range(row + 1, 0, row + 1, 0));\n        }\n    };\n    this.createWorker = function (session) {\n        var worker = new WorkerClient([\"ace\"], \"ace/mode/lua_worker\", \"Worker\");\n        worker.attachToDocument(session.getDocument());\n        worker.on(\"annotate\", function (e) {\n            session.setAnnotations(e.data);\n        });\n        worker.on(\"terminate\", function () {\n            session.clearAnnotations();\n        });\n        return worker;\n    };\n    this.$id = \"ace/mode/lua\";\n    this.snippetFileId = \"ace/snippets/lua\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/lua\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}