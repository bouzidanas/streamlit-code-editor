{"ast":null,"code":"ace.define(\"ace/mode/doc_comment_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var DocCommentHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.doc.tag\",\n        regex: \"@\\\\w+(?=\\\\s|$)\"\n      }, DocCommentHighlightRules.getTagRule(), {\n        defaultToken: \"comment.doc.body\",\n        caseInsensitive: true\n      }]\n    };\n  };\n  oop.inherits(DocCommentHighlightRules, TextHighlightRules);\n  DocCommentHighlightRules.getTagRule = function (start) {\n    return {\n      token: \"comment.doc.tag.storage.type\",\n      regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n  };\n  DocCommentHighlightRules.getStartRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // doc comment\n      regex: /\\/\\*\\*(?!\\/)/,\n      next: start\n    };\n  };\n  DocCommentHighlightRules.getEndRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // closing comment\n      regex: \"\\\\*\\\\/\",\n      next: start\n    };\n  };\n  exports.DocCommentHighlightRules = DocCommentHighlightRules;\n});\nace.define(\"ace/mode/apex_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\", \"ace/mode/doc_comment_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"../mode/text_highlight_rules\").TextHighlightRules;\n  var DocCommentHighlightRules = require(\"../mode/doc_comment_highlight_rules\").DocCommentHighlightRules;\n  var ApexHighlightRules = function () {\n    var mainKeywordMapper = this.createKeywordMapper({\n      \"variable.language\": \"activate|any|autonomous|begin|bigdecimal|byte|cast|char|collect|const\" + \"|end|exit|export|float|goto|group|having|hint|import|inner|into|join|loop|number|object|of|outer\" + \"|parallel|pragma|retrieve|returning|search|short|stat|synchronized|then|this_month\" + \"|transaction|type|when\",\n      \"keyword\": \"private|protected|public|native|synchronized|abstract|threadsafe|transient|static|final\" + \"|and|array|as|asc|break|bulk|by|catch|class|commit|continue|convertcurrency\" + \"|delete|desc|do|else|enum|extends|false|final|finally|for|from|future|global\" + \"|if|implements|in|insert|instanceof|interface|last_90_days|last_month\" + \"|last_n_days|last_week|like|limit|list|map|merge|new|next_90_days|next_month|next_n_days\" + \"|next_week|not|null|nulls|on|or|override|package|return\" + \"|rollback|savepoint|select|set|sort|super|testmethod|this|this_week|throw|today\" + \"|tolabel|tomorrow|trigger|true|try|undelete|update|upsert|using|virtual|webservice\" + \"|where|while|yesterday|switch|case|default\",\n      \"storage.type\": \"def|boolean|byte|char|short|int|float|pblob|date|datetime|decimal|double|id|integer|long|string|time|void|blob|Object\",\n      \"constant.language\": \"true|false|null|after|before|count|excludes|first|includes|last|order|sharing|with\",\n      \"support.function\": \"system|apex|label|apexpages|userinfo|schema\"\n    }, \"identifier\", true);\n    function keywordMapper(value) {\n      if (value.slice(-3) == \"__c\") return \"support.function\";\n      return mainKeywordMapper(value);\n    }\n    function string(start, options) {\n      return {\n        regex: start + (options.multiline ? \"\" : \"(?=.)\"),\n        token: \"string.start\",\n        next: [{\n          regex: options.escape,\n          token: \"character.escape\"\n        }, {\n          regex: options.error,\n          token: \"error.invalid\"\n        }, {\n          regex: start + (options.multiline ? \"\" : \"|$\"),\n          token: \"string.end\",\n          next: options.next || \"start\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      };\n    }\n    function comments() {\n      return [{\n        token: \"comment\",\n        regex: \"\\\\/\\\\/(?=.)\",\n        next: [DocCommentHighlightRules.getTagRule(), {\n          token: \"comment\",\n          regex: \"$|^\",\n          next: \"start\"\n        }, {\n          defaultToken: \"comment\",\n          caseInsensitive: true\n        }]\n      }, DocCommentHighlightRules.getStartRule(\"doc-start\"), {\n        token: \"comment\",\n        // multi line comment\n        regex: /\\/\\*/,\n        next: [DocCommentHighlightRules.getTagRule(), {\n          token: \"comment\",\n          regex: \"\\\\*\\\\/\",\n          next: \"start\"\n        }, {\n          defaultToken: \"comment\",\n          caseInsensitive: true\n        }]\n      }];\n    }\n    this.$rules = {\n      start: [string(\"'\", {\n        escape: /\\\\[nb'\"\\\\]/,\n        error: /\\\\./,\n        multiline: false\n      }), comments(\"c\"), {\n        type: \"decoration\",\n        token: [\"meta.package.apex\", \"keyword.other.package.apex\", \"meta.package.apex\", \"storage.modifier.package.apex\", \"meta.package.apex\", \"punctuation.terminator.apex\"],\n        regex: /^(\\s*)(package)\\b(?:(\\s*)([^ ;$]+)(\\s*)((?:;)?))?/\n      }, {\n        regex: /@[a-zA-Z_$][a-zA-Z_$\\d\\u0080-\\ufffe]*/,\n        token: \"constant.language\"\n      }, {\n        regex: /[a-zA-Z_$][a-zA-Z_$\\d\\u0080-\\ufffe]*/,\n        token: keywordMapper\n      }, {\n        regex: \"`#%\",\n        token: \"error.invalid\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: /[+-]?\\d+(?:(?:\\.\\d*)?(?:[LlDdEe][+-]?\\d+)?)\\b|\\.\\d+[LlDdEe]/\n      }, {\n        token: \"keyword.operator\",\n        regex: /--|\\+\\+|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\|\\||\\?\\:|[!$%&*+\\-~\\/^]=?/,\n        next: \"start\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: /[?:,;.]/,\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: /[\\[]/,\n        next: \"maybe_soql\",\n        merge: false\n      }, {\n        token: \"paren.lparen\",\n        regex: /[\\[({]/,\n        next: \"start\",\n        merge: false\n      }, {\n        token: \"paren.rparen\",\n        regex: /[\\])}]/,\n        merge: false\n      }],\n      maybe_soql: [{\n        regex: /\\s+/,\n        token: \"text\"\n      }, {\n        regex: /(SELECT|FIND)\\b/,\n        token: \"keyword\",\n        caseInsensitive: true,\n        next: \"soql\"\n      }, {\n        regex: \"\",\n        token: \"none\",\n        next: \"start\"\n      }],\n      soql: [{\n        regex: \"(:?ASC|BY|CATEGORY|CUBE|DATA|DESC|END|FIND|FIRST|FOR|FROM|GROUP|HAVING|IN|LAST\" + \"|LIMIT|NETWORK|NULLS|OFFSET|ORDER|REFERENCE|RETURNING|ROLLUP|SCOPE|SELECT\" + \"|SNIPPET|TRACKING|TYPEOF|UPDATE|USING|VIEW|VIEWSTAT|WHERE|WITH|AND|OR)\\\\b\",\n        token: \"keyword\",\n        caseInsensitive: true\n      }, {\n        regex: \"(:?target_length|toLabel|convertCurrency|count|Contact|Account|User|FIELDS)\\\\b\",\n        token: \"support.function\",\n        caseInsensitive: true\n      }, {\n        token: \"paren.rparen\",\n        regex: /[\\]]/,\n        next: \"start\",\n        merge: false\n      }, string(\"'\", {\n        escape: /\\\\[nb'\"\\\\]/,\n        error: /\\\\./,\n        multiline: false,\n        next: \"soql\"\n      }), string('\"', {\n        escape: /\\\\[nb'\"\\\\]/,\n        error: /\\\\./,\n        multiline: false,\n        next: \"soql\"\n      }), {\n        regex: /\\\\./,\n        token: \"character.escape\"\n      }, {\n        regex: /[\\?\\&\\|\\!\\{\\}\\[\\]\\(\\)\\^\\~\\*\\:\\\"\\'\\+\\-\\,\\.=\\\\\\/]/,\n        token: \"keyword.operator\"\n      }],\n      \"log-start\": [{\n        token: \"timestamp.invisible\",\n        regex: /^[\\d:.() ]+\\|/,\n        next: \"log-header\"\n      }, {\n        token: \"timestamp.invisible\",\n        regex: /^  (Number of|Maximum)[^:]*:/,\n        next: \"log-comment\"\n      }, {\n        token: \"invisible\",\n        regex: /^Execute Anonymous:/,\n        next: \"log-comment\"\n      }, {\n        defaultToken: \"text\"\n      }],\n      \"log-comment\": [{\n        token: \"log-comment\",\n        regex: /.*$/,\n        next: \"log-start\"\n      }],\n      \"log-header\": [{\n        token: \"timestamp.invisible\",\n        regex: /((USER_DEBUG|\\[\\d+\\]|DEBUG)\\|)+/\n      }, {\n        token: \"keyword\",\n        regex: \"(?:EXECUTION_FINISHED|EXECUTION_STARTED|CODE_UNIT_STARTED\" + \"|CUMULATIVE_LIMIT_USAGE|LIMIT_USAGE_FOR_NS\" + \"|CUMULATIVE_LIMIT_USAGE_END|CODE_UNIT_FINISHED)\"\n      }, {\n        regex: \"\",\n        next: \"log-start\"\n      }]\n    };\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"start\")]);\n    this.normalizeRules();\n  };\n  oop.inherits(ApexHighlightRules, TextHighlightRules);\n  exports.ApexHighlightRules = ApexHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Range = require(\"../../range\").Range;\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n      return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n        return range;\n      }\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n        endRow = row;\n      }\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n      var endRow = row;\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/apex\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/apex_highlight_rules\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  /* caption: Apex; extensions: apex,cls,trigger,tgr */\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"../mode/text\").Mode;\n  var ApexHighlightRules = require(\"./apex_highlight_rules\").ApexHighlightRules;\n  var FoldMode = require(\"../mode/folding/cstyle\").FoldMode;\n  function ApexMode() {\n    TextMode.call(this);\n    this.HighlightRules = ApexHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  }\n  oop.inherits(ApexMode, TextMode);\n  ApexMode.prototype.lineCommentStart = \"//\";\n  ApexMode.prototype.blockComment = {\n    start: \"/*\",\n    end: \"*/\"\n  };\n  exports.Mode = ApexMode;\n});\n(function () {\n  ace.require([\"ace/mode/apex\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","DocCommentHighlightRules","$rules","token","regex","getTagRule","defaultToken","caseInsensitive","inherits","start","getStartRule","next","getEndRule","ApexHighlightRules","mainKeywordMapper","createKeywordMapper","keywordMapper","value","slice","string","options","multiline","escape","error","comments","type","merge","maybe_soql","soql","embedRules","normalizeRules","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","replace","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","ApexMode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-apex.js"],"sourcesContent":["ace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar DocCommentHighlightRules = function () {\n    this.$rules = {\n        \"start\": [\n            {\n                token: \"comment.doc.tag\",\n                regex: \"@\\\\w+(?=\\\\s|$)\"\n            }, DocCommentHighlightRules.getTagRule(), {\n                defaultToken: \"comment.doc.body\",\n                caseInsensitive: true\n            }\n        ]\n    };\n};\noop.inherits(DocCommentHighlightRules, TextHighlightRules);\nDocCommentHighlightRules.getTagRule = function (start) {\n    return {\n        token: \"comment.doc.tag.storage.type\",\n        regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n};\nDocCommentHighlightRules.getStartRule = function (start) {\n    return {\n        token: \"comment.doc\", // doc comment\n        regex: /\\/\\*\\*(?!\\/)/,\n        next: start\n    };\n};\nDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token: \"comment.doc\", // closing comment\n        regex: \"\\\\*\\\\/\",\n        next: start\n    };\n};\nexports.DocCommentHighlightRules = DocCommentHighlightRules;\n\n});\n\nace.define(\"ace/mode/apex_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\",\"ace/mode/doc_comment_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"../mode/text_highlight_rules\").TextHighlightRules;\nvar DocCommentHighlightRules = require(\"../mode/doc_comment_highlight_rules\").DocCommentHighlightRules;\nvar ApexHighlightRules = function () {\n    var mainKeywordMapper = this.createKeywordMapper({\n        \"variable.language\": \"activate|any|autonomous|begin|bigdecimal|byte|cast|char|collect|const\"\n            + \"|end|exit|export|float|goto|group|having|hint|import|inner|into|join|loop|number|object|of|outer\"\n            + \"|parallel|pragma|retrieve|returning|search|short|stat|synchronized|then|this_month\"\n            + \"|transaction|type|when\",\n        \"keyword\": \"private|protected|public|native|synchronized|abstract|threadsafe|transient|static|final\"\n            + \"|and|array|as|asc|break|bulk|by|catch|class|commit|continue|convertcurrency\"\n            + \"|delete|desc|do|else|enum|extends|false|final|finally|for|from|future|global\"\n            + \"|if|implements|in|insert|instanceof|interface|last_90_days|last_month\"\n            + \"|last_n_days|last_week|like|limit|list|map|merge|new|next_90_days|next_month|next_n_days\"\n            + \"|next_week|not|null|nulls|on|or|override|package|return\"\n            + \"|rollback|savepoint|select|set|sort|super|testmethod|this|this_week|throw|today\"\n            + \"|tolabel|tomorrow|trigger|true|try|undelete|update|upsert|using|virtual|webservice\"\n            + \"|where|while|yesterday|switch|case|default\",\n        \"storage.type\": \"def|boolean|byte|char|short|int|float|pblob|date|datetime|decimal|double|id|integer|long|string|time|void|blob|Object\",\n        \"constant.language\": \"true|false|null|after|before|count|excludes|first|includes|last|order|sharing|with\",\n        \"support.function\": \"system|apex|label|apexpages|userinfo|schema\"\n    }, \"identifier\", true);\n    function keywordMapper(value) {\n        if (value.slice(-3) == \"__c\")\n            return \"support.function\";\n        return mainKeywordMapper(value);\n    }\n    function string(start, options) {\n        return {\n            regex: start + (options.multiline ? \"\" : \"(?=.)\"),\n            token: \"string.start\",\n            next: [{\n                    regex: options.escape,\n                    token: \"character.escape\"\n                }, {\n                    regex: options.error,\n                    token: \"error.invalid\"\n                }, {\n                    regex: start + (options.multiline ? \"\" : \"|$\"),\n                    token: \"string.end\",\n                    next: options.next || \"start\"\n                }, {\n                    defaultToken: \"string\"\n                }]\n        };\n    }\n    function comments() {\n        return [{\n                token: \"comment\",\n                regex: \"\\\\/\\\\/(?=.)\",\n                next: [\n                    DocCommentHighlightRules.getTagRule(),\n                    { token: \"comment\", regex: \"$|^\", next: \"start\" },\n                    { defaultToken: \"comment\", caseInsensitive: true }\n                ]\n            },\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            {\n                token: \"comment\", // multi line comment\n                regex: /\\/\\*/,\n                next: [\n                    DocCommentHighlightRules.getTagRule(),\n                    { token: \"comment\", regex: \"\\\\*\\\\/\", next: \"start\" },\n                    { defaultToken: \"comment\", caseInsensitive: true }\n                ]\n            }\n        ];\n    }\n    this.$rules = {\n        start: [\n            string(\"'\", {\n                escape: /\\\\[nb'\"\\\\]/,\n                error: /\\\\./,\n                multiline: false\n            }),\n            comments(\"c\"),\n            {\n                type: \"decoration\",\n                token: [\n                    \"meta.package.apex\",\n                    \"keyword.other.package.apex\",\n                    \"meta.package.apex\",\n                    \"storage.modifier.package.apex\",\n                    \"meta.package.apex\",\n                    \"punctuation.terminator.apex\"\n                ],\n                regex: /^(\\s*)(package)\\b(?:(\\s*)([^ ;$]+)(\\s*)((?:;)?))?/\n            }, {\n                regex: /@[a-zA-Z_$][a-zA-Z_$\\d\\u0080-\\ufffe]*/,\n                token: \"constant.language\"\n            },\n            {\n                regex: /[a-zA-Z_$][a-zA-Z_$\\d\\u0080-\\ufffe]*/,\n                token: keywordMapper\n            },\n            {\n                regex: \"`#%\",\n                token: \"error.invalid\"\n            }, {\n                token: \"constant.numeric\", // float\n                regex: /[+-]?\\d+(?:(?:\\.\\d*)?(?:[LlDdEe][+-]?\\d+)?)\\b|\\.\\d+[LlDdEe]/\n            }, {\n                token: \"keyword.operator\",\n                regex: /--|\\+\\+|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\|\\||\\?\\:|[!$%&*+\\-~\\/^]=?/,\n                next: \"start\"\n            }, {\n                token: \"punctuation.operator\",\n                regex: /[?:,;.]/,\n                next: \"start\"\n            }, {\n                token: \"paren.lparen\",\n                regex: /[\\[]/,\n                next: \"maybe_soql\",\n                merge: false\n            }, {\n                token: \"paren.lparen\",\n                regex: /[\\[({]/,\n                next: \"start\",\n                merge: false\n            }, {\n                token: \"paren.rparen\",\n                regex: /[\\])}]/,\n                merge: false\n            }\n        ],\n        maybe_soql: [{\n                regex: /\\s+/,\n                token: \"text\"\n            }, {\n                regex: /(SELECT|FIND)\\b/,\n                token: \"keyword\",\n                caseInsensitive: true,\n                next: \"soql\"\n            }, {\n                regex: \"\",\n                token: \"none\",\n                next: \"start\"\n            }],\n        soql: [{\n                regex: \"(:?ASC|BY|CATEGORY|CUBE|DATA|DESC|END|FIND|FIRST|FOR|FROM|GROUP|HAVING|IN|LAST\"\n                    + \"|LIMIT|NETWORK|NULLS|OFFSET|ORDER|REFERENCE|RETURNING|ROLLUP|SCOPE|SELECT\"\n                    + \"|SNIPPET|TRACKING|TYPEOF|UPDATE|USING|VIEW|VIEWSTAT|WHERE|WITH|AND|OR)\\\\b\",\n                token: \"keyword\",\n                caseInsensitive: true\n            }, {\n                regex: \"(:?target_length|toLabel|convertCurrency|count|Contact|Account|User|FIELDS)\\\\b\",\n                token: \"support.function\",\n                caseInsensitive: true\n            }, {\n                token: \"paren.rparen\",\n                regex: /[\\]]/,\n                next: \"start\",\n                merge: false\n            },\n            string(\"'\", {\n                escape: /\\\\[nb'\"\\\\]/,\n                error: /\\\\./,\n                multiline: false,\n                next: \"soql\"\n            }),\n            string('\"', {\n                escape: /\\\\[nb'\"\\\\]/,\n                error: /\\\\./,\n                multiline: false,\n                next: \"soql\"\n            }),\n            {\n                regex: /\\\\./,\n                token: \"character.escape\"\n            },\n            {\n                regex: /[\\?\\&\\|\\!\\{\\}\\[\\]\\(\\)\\^\\~\\*\\:\\\"\\'\\+\\-\\,\\.=\\\\\\/]/,\n                token: \"keyword.operator\"\n            }],\n        \"log-start\": [{\n                token: \"timestamp.invisible\",\n                regex: /^[\\d:.() ]+\\|/,\n                next: \"log-header\"\n            }, {\n                token: \"timestamp.invisible\",\n                regex: /^  (Number of|Maximum)[^:]*:/,\n                next: \"log-comment\"\n            }, {\n                token: \"invisible\",\n                regex: /^Execute Anonymous:/,\n                next: \"log-comment\"\n            }, {\n                defaultToken: \"text\"\n            }],\n        \"log-comment\": [{\n                token: \"log-comment\",\n                regex: /.*$/,\n                next: \"log-start\"\n            }],\n        \"log-header\": [{\n                token: \"timestamp.invisible\",\n                regex: /((USER_DEBUG|\\[\\d+\\]|DEBUG)\\|)+/\n            },\n            {\n                token: \"keyword\",\n                regex: \"(?:EXECUTION_FINISHED|EXECUTION_STARTED|CODE_UNIT_STARTED\"\n                    + \"|CUMULATIVE_LIMIT_USAGE|LIMIT_USAGE_FOR_NS\"\n                    + \"|CUMULATIVE_LIMIT_USAGE_END|CODE_UNIT_FINISHED)\"\n            }, {\n                regex: \"\",\n                next: \"log-start\"\n            }]\n    };\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"start\")]);\n    this.normalizeRules();\n};\noop.inherits(ApexHighlightRules, TextHighlightRules);\nexports.ApexHighlightRules = ApexHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n        this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n        return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                }\n                else if (foldStyle != \"all\")\n                    range = null;\n            }\n            return range;\n        }\n        if (foldStyle === \"markbegin\")\n            return;\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    this.getSectionRange = function (session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                }\n                else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                }\n                else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m)\n                continue;\n            if (m[1])\n                depth--;\n            else\n                depth++;\n            if (!depth)\n                break;\n        }\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/apex\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/apex_highlight_rules\",\"ace/mode/folding/cstyle\"], function(require, exports, module){/* caption: Apex; extensions: apex,cls,trigger,tgr */\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"../mode/text\").Mode;\nvar ApexHighlightRules = require(\"./apex_highlight_rules\").ApexHighlightRules;\nvar FoldMode = require(\"../mode/folding/cstyle\").FoldMode;\nfunction ApexMode() {\n    TextMode.call(this);\n    this.HighlightRules = ApexHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n}\noop.inherits(ApexMode, TextMode);\nApexMode.prototype.lineCommentStart = \"//\";\nApexMode.prototype.blockComment = {\n    start: \"/*\",\n    end: \"*/\"\n};\nexports.Mode = ApexMode;\n\n});                (function() {\n                    ace.require([\"ace/mode/apex\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}