{"ast":null,"code":"ace.define(\"ace/mode/doc_comment_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var DocCommentHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.doc.tag\",\n        regex: \"@\\\\w+(?=\\\\s|$)\"\n      }, DocCommentHighlightRules.getTagRule(), {\n        defaultToken: \"comment.doc.body\",\n        caseInsensitive: true\n      }]\n    };\n  };\n  oop.inherits(DocCommentHighlightRules, TextHighlightRules);\n  DocCommentHighlightRules.getTagRule = function (start) {\n    return {\n      token: \"comment.doc.tag.storage.type\",\n      regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n  };\n  DocCommentHighlightRules.getStartRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // doc comment\n      regex: /\\/\\*\\*(?!\\/)/,\n      next: start\n    };\n  };\n  DocCommentHighlightRules.getEndRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // closing comment\n      regex: \"\\\\*\\\\/\",\n      next: start\n    };\n  };\n  exports.DocCommentHighlightRules = DocCommentHighlightRules;\n});\nace.define(\"ace/mode/perl_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var PerlHighlightRules = function () {\n    var keywords = \"base|constant|continue|else|elsif|for|foreach|format|goto|if|last|local|my|next|\" + \"no|package|parent|redo|require|scalar|sub|unless|until|while|use|vars\";\n    var buildinConstants = \"ARGV|ENV|INC|SIG\";\n    var builtinFunctions = \"getprotobynumber|getprotobyname|getservbyname|gethostbyaddr|\" + \"gethostbyname|getservbyport|getnetbyaddr|getnetbyname|getsockname|\" + \"getpeername|setpriority|getprotoent|setprotoent|getpriority|\" + \"endprotoent|getservent|setservent|endservent|sethostent|socketpair|\" + \"getsockopt|gethostent|endhostent|setsockopt|setnetent|quotemeta|\" + \"localtime|prototype|getnetent|endnetent|rewinddir|wantarray|getpwuid|\" + \"closedir|getlogin|readlink|endgrent|getgrgid|getgrnam|shmwrite|\" + \"shutdown|readline|endpwent|setgrent|readpipe|formline|truncate|\" + \"dbmclose|syswrite|setpwent|getpwnam|getgrent|getpwent|ucfirst|sysread|\" + \"setpgrp|shmread|sysseek|sysopen|telldir|defined|opendir|connect|\" + \"lcfirst|getppid|binmode|syscall|sprintf|getpgrp|readdir|seekdir|\" + \"waitpid|reverse|unshift|symlink|dbmopen|semget|msgrcv|rename|listen|\" + \"chroot|msgsnd|shmctl|accept|unpack|exists|fileno|shmget|system|\" + \"unlink|printf|gmtime|msgctl|semctl|values|rindex|substr|splice|\" + \"length|msgget|select|socket|return|caller|delete|alarm|ioctl|index|\" + \"undef|lstat|times|srand|chown|fcntl|close|write|umask|rmdir|study|\" + \"sleep|chomp|untie|print|utime|mkdir|atan2|split|crypt|flock|chmod|\" + \"BEGIN|bless|chdir|semop|shift|reset|link|stat|chop|grep|fork|dump|\" + \"join|open|tell|pipe|exit|glob|warn|each|bind|sort|pack|eval|push|\" + \"keys|getc|kill|seek|sqrt|send|wait|rand|tied|read|time|exec|recv|\" + \"eof|chr|int|ord|exp|pos|pop|sin|log|abs|oct|hex|tie|cos|vec|END|ref|\" + \"map|die|uc|lc|do\";\n    var keywordMapper = this.createKeywordMapper({\n      \"keyword\": keywords,\n      \"constant.language\": buildinConstants,\n      \"support.function\": builtinFunctions\n    }, \"identifier\");\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.doc\",\n        regex: \"^=(?:begin|item)\\\\b\",\n        next: \"block_comment\"\n      }, {\n        token: \"string.regexp\",\n        regex: \"[/](?:(?:\\\\[(?:\\\\\\\\]|[^\\\\]])+\\\\])|(?:\\\\\\\\/|[^\\\\]/]))*[/]\\\\w*\\\\s*(?=[).,;]|$)\"\n      }, {\n        token: \"string\",\n        // single line\n        regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n      }, {\n        token: \"string\",\n        // multi line string start\n        regex: '[\"].*\\\\\\\\$',\n        next: \"qqstring\"\n      }, {\n        token: \"string\",\n        // single line\n        regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n      }, {\n        token: \"string\",\n        // multi line string start\n        regex: \"['].*\\\\\\\\$\",\n        next: \"qstring\"\n      }, {\n        token: \"constant.numeric\",\n        // hex\n        regex: \"0x[0-9a-fA-F]+\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"%#|\\\\$#|\\\\.\\\\.\\\\.|\\\\|\\\\|=|>>=|<<=|<=>|&&=|=>|!~|\\\\^=|&=|\\\\|=|\\\\.=|x=|%=|\\\\/=|\\\\*=|\\\\-=|\\\\+=|=~|\\\\*\\\\*|\\\\-\\\\-|\\\\.\\\\.|\\\\|\\\\||&&|\\\\+\\\\+|\\\\->|!=|==|>=|<=|>>|<<|,|=|\\\\?\\\\:|\\\\^|\\\\||x|%|\\\\/|\\\\*|<|&|\\\\\\\\|~|!|>|\\\\.|\\\\-|\\\\+|\\\\-C|\\\\-b|\\\\-S|\\\\-u|\\\\-t|\\\\-p|\\\\-l|\\\\-d|\\\\-f|\\\\-g|\\\\-s|\\\\-z|\\\\-k|\\\\-e|\\\\-O|\\\\-T|\\\\-B|\\\\-M|\\\\-A|\\\\-X|\\\\-W|\\\\-c|\\\\-R|\\\\-o|\\\\-x|\\\\-w|\\\\-r|\\\\b(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|xor)\"\n      }, {\n        token: \"comment\",\n        regex: \"#.*$\"\n      }, {\n        token: \"lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      \"qqstring\": [{\n        token: \"string\",\n        regex: '(?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?\"',\n        next: \"start\"\n      }, {\n        token: \"string\",\n        regex: '.+'\n      }],\n      \"qstring\": [{\n        token: \"string\",\n        regex: \"(?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?'\",\n        next: \"start\"\n      }, {\n        token: \"string\",\n        regex: '.+'\n      }],\n      \"block_comment\": [{\n        token: \"comment.doc\",\n        regex: \"^=cut\\\\b\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment.doc\"\n      }]\n    };\n  };\n  oop.inherits(PerlHighlightRules, TextHighlightRules);\n  exports.PerlHighlightRules = PerlHighlightRules;\n});\nace.define(\"ace/mode/python_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  /*\n  * TODO: python delimiters\n  */\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var PythonHighlightRules = function () {\n    var keywords = \"and|as|assert|break|class|continue|def|del|elif|else|except|exec|\" + \"finally|for|from|global|if|import|in|is|lambda|not|or|pass|print|\" + \"raise|return|try|while|with|yield|async|await|nonlocal\";\n    var builtinConstants = \"True|False|None|NotImplemented|Ellipsis|__debug__\";\n    var builtinFunctions = \"abs|divmod|input|open|staticmethod|all|enumerate|int|ord|str|any|\" + \"eval|isinstance|pow|sum|basestring|execfile|issubclass|print|super|\" + \"binfile|bin|iter|property|tuple|bool|filter|len|range|type|bytearray|\" + \"float|list|raw_input|unichr|callable|format|locals|reduce|unicode|\" + \"chr|frozenset|long|reload|vars|classmethod|getattr|map|repr|xrange|\" + \"cmp|globals|max|reversed|zip|compile|hasattr|memoryview|round|\" + \"__import__|complex|hash|min|apply|delattr|help|next|setattr|set|\" + \"buffer|dict|hex|object|slice|coerce|dir|id|oct|sorted|intern|\" + \"ascii|breakpoint|bytes\";\n    var keywordMapper = this.createKeywordMapper({\n      \"invalid.deprecated\": \"debugger\",\n      \"support.function\": builtinFunctions,\n      \"variable.language\": \"self|cls\",\n      \"constant.language\": builtinConstants,\n      \"keyword\": keywords\n    }, \"identifier\");\n    var strPre = \"[uU]?\";\n    var strRawPre = \"[rR]\";\n    var strFormatPre = \"[fF]\";\n    var strRawFormatPre = \"(?:[rR][fF]|[fF][rR])\";\n    var decimalInteger = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\n    var octInteger = \"(?:0[oO]?[0-7]+)\";\n    var hexInteger = \"(?:0[xX][\\\\dA-Fa-f]+)\";\n    var binInteger = \"(?:0[bB][01]+)\";\n    var integer = \"(?:\" + decimalInteger + \"|\" + octInteger + \"|\" + hexInteger + \"|\" + binInteger + \")\";\n    var exponent = \"(?:[eE][+-]?\\\\d+)\";\n    var fraction = \"(?:\\\\.\\\\d+)\";\n    var intPart = \"(?:\\\\d+)\";\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\n    var exponentFloat = \"(?:(?:\" + pointFloat + \"|\" + intPart + \")\" + exponent + \")\";\n    var floatNumber = \"(?:\" + exponentFloat + \"|\" + pointFloat + \")\";\n    var stringEscape = \"\\\\\\\\(x[0-9A-Fa-f]{2}|[0-7]{3}|[\\\\\\\\abfnrtv'\\\"]|U[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})\";\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"#.*$\"\n      }, {\n        token: \"string\",\n        // multi line \"\"\" string start\n        regex: strPre + '\"{3}',\n        next: \"qqstring3\"\n      }, {\n        token: \"string\",\n        // \" string\n        regex: strPre + '\"(?=.)',\n        next: \"qqstring\"\n      }, {\n        token: \"string\",\n        // multi line ''' string start\n        regex: strPre + \"'{3}\",\n        next: \"qstring3\"\n      }, {\n        token: \"string\",\n        // ' string\n        regex: strPre + \"'(?=.)\",\n        next: \"qstring\"\n      }, {\n        token: \"string\",\n        regex: strRawPre + '\"{3}',\n        next: \"rawqqstring3\"\n      }, {\n        token: \"string\",\n        regex: strRawPre + '\"(?=.)',\n        next: \"rawqqstring\"\n      }, {\n        token: \"string\",\n        regex: strRawPre + \"'{3}\",\n        next: \"rawqstring3\"\n      }, {\n        token: \"string\",\n        regex: strRawPre + \"'(?=.)\",\n        next: \"rawqstring\"\n      }, {\n        token: \"string\",\n        regex: strFormatPre + '\"{3}',\n        next: \"fqqstring3\"\n      }, {\n        token: \"string\",\n        regex: strFormatPre + '\"(?=.)',\n        next: \"fqqstring\"\n      }, {\n        token: \"string\",\n        regex: strFormatPre + \"'{3}\",\n        next: \"fqstring3\"\n      }, {\n        token: \"string\",\n        regex: strFormatPre + \"'(?=.)\",\n        next: \"fqstring\"\n      }, {\n        token: \"string\",\n        regex: strRawFormatPre + '\"{3}',\n        next: \"rfqqstring3\"\n      }, {\n        token: \"string\",\n        regex: strRawFormatPre + '\"(?=.)',\n        next: \"rfqqstring\"\n      }, {\n        token: \"string\",\n        regex: strRawFormatPre + \"'{3}\",\n        next: \"rfqstring3\"\n      }, {\n        token: \"string\",\n        regex: strRawFormatPre + \"'(?=.)\",\n        next: \"rfqstring\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"\\\\+|\\\\-|\\\\*|\\\\*\\\\*|\\\\/|\\\\/\\\\/|%|@|<<|>>|&|\\\\||\\\\^|~|<|>|<=|=>|==|!=|<>|=\"\n      }, {\n        token: \"punctuation\",\n        regex: \",|:|;|\\\\->|\\\\+=|\\\\-=|\\\\*=|\\\\/=|\\\\/\\\\/=|%=|@=|&=|\\\\|=|^=|>>=|<<=|\\\\*\\\\*=\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[\\\\[\\\\(\\\\{]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\]\\\\)\\\\}]\"\n      }, {\n        token: [\"keyword\", \"text\", \"entity.name.function\"],\n        regex: \"(def|class)(\\\\s+)([\\\\u00BF-\\\\u1FFF\\\\u2C00-\\\\uD7FF\\\\w]+)\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }, {\n        include: \"constants\"\n      }],\n      \"qqstring3\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        // multi line \"\"\" string end\n        regex: '\"{3}',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"qstring3\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        // multi line ''' string end\n        regex: \"'{3}\",\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"qqstring\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"qqstring\"\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"qstring\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"qstring\"\n      }, {\n        token: \"string\",\n        regex: \"'|$\",\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rawqqstring3\": [{\n        token: \"string\",\n        // multi line \"\"\" string end\n        regex: '\"{3}',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rawqstring3\": [{\n        token: \"string\",\n        // multi line ''' string end\n        regex: \"'{3}\",\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rawqqstring\": [{\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"rawqqstring\"\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rawqstring\": [{\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"rawqstring\"\n      }, {\n        token: \"string\",\n        regex: \"'|$\",\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"fqqstring3\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        // multi line \"\"\" string end\n        regex: '\"{3}',\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"fqstring3\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        // multi line ''' string end\n        regex: \"'{3}\",\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"fqqstring\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"fqqstring\"\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"fqstring\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        regex: \"'|$\",\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rfqqstring3\": [{\n        token: \"string\",\n        // multi line \"\"\" string end\n        regex: '\"{3}',\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rfqstring3\": [{\n        token: \"string\",\n        // multi line ''' string end\n        regex: \"'{3}\",\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rfqqstring\": [{\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"rfqqstring\"\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"rfqstring\": [{\n        token: \"string\",\n        regex: \"'|$\",\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"fqstringParRules\": [{\n        token: \"paren.lparen\",\n        regex: \"[\\\\[\\\\(]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\]\\\\)]\"\n      }, {\n        token: \"string\",\n        regex: \"\\\\s+\"\n      }, {\n        token: \"string\",\n        regex: \"'[^']*'\"\n      }, {\n        token: \"string\",\n        regex: '\"[^\"]*\"'\n      }, {\n        token: \"function.support\",\n        regex: \"(!s|!r|!a)\"\n      }, {\n        include: \"constants\"\n      }, {\n        token: 'paren.rparen',\n        regex: \"}\",\n        next: 'pop'\n      }, {\n        token: 'paren.lparen',\n        regex: \"{\",\n        push: \"fqstringParRules\"\n      }],\n      \"constants\": [{\n        token: \"constant.numeric\",\n        // imaginary\n        regex: \"(?:\" + floatNumber + \"|\\\\d+)[jJ]\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: floatNumber\n      }, {\n        token: \"constant.numeric\",\n        // long integer\n        regex: integer + \"[lL]\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // integer\n        regex: integer + \"\\\\b\"\n      }, {\n        token: [\"punctuation\", \"function.support\"],\n        // method\n        regex: \"(\\\\.)([a-zA-Z_]+)\\\\b\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }]\n    };\n    this.normalizeRules();\n  };\n  oop.inherits(PythonHighlightRules, TextHighlightRules);\n  exports.PythonHighlightRules = PythonHighlightRules;\n});\nace.define(\"ace/mode/json_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var JsonHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        token: \"variable\",\n        // single line\n        regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]\\\\s*(?=:)'\n      }, {\n        token: \"string\",\n        // single line\n        regex: '\"',\n        next: \"string\"\n      }, {\n        token: \"constant.numeric\",\n        // hex\n        regex: \"0[xX][0-9a-fA-F]+\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n      }, {\n        token: \"constant.language.boolean\",\n        regex: \"(?:true|false)\\\\b\"\n      }, {\n        token: \"text\",\n        // single quoted strings are not allowed\n        regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n      }, {\n        token: \"comment\",\n        // comments are not allowed, but who cares?\n        regex: \"\\\\/\\\\/.*$\"\n      }, {\n        token: \"comment.start\",\n        // comments are not allowed, but who cares?\n        regex: \"\\\\/\\\\*\",\n        next: \"comment\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: /[,]/\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      \"string\": [{\n        token: \"constant.language.escape\",\n        regex: /\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|[\"\\\\\\/bfnrt])/\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"comment\": [{\n        token: \"comment.end\",\n        // comments are not allowed, but who cares?\n        regex: \"\\\\*\\\\/\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment\"\n      }]\n    };\n  };\n  oop.inherits(JsonHighlightRules, TextHighlightRules);\n  exports.JsonHighlightRules = JsonHighlightRules;\n});\nace.define(\"ace/mode/jsdoc_comment_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var JsDocCommentHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        token: [\"comment.doc.tag\", \"comment.doc.text\", \"lparen.doc\"],\n        regex: \"(@(?:param|member|typedef|property|namespace|var|const|callback))(\\\\s*)({)\",\n        push: [{\n          token: \"lparen.doc\",\n          regex: \"{\",\n          push: [{\n            include: \"doc-syntax\"\n          }, {\n            token: \"rparen.doc\",\n            regex: \"}|(?=$)\",\n            next: \"pop\"\n          }]\n        }, {\n          token: [\"rparen.doc\", \"text.doc\", \"variable.parameter.doc\", \"lparen.doc\", \"variable.parameter.doc\", \"rparen.doc\"],\n          regex: /(})(\\s*)(?:([\\w=:\\/\\.]+)|(?:(\\[)([\\w=:\\/\\.]+)(\\])))/,\n          next: \"pop\"\n        }, {\n          token: \"rparen.doc\",\n          regex: \"}|(?=$)\",\n          next: \"pop\"\n        }, {\n          include: \"doc-syntax\"\n        }, {\n          defaultToken: \"text.doc\"\n        }]\n      }, {\n        token: [\"comment.doc.tag\", \"text.doc\", \"lparen.doc\"],\n        regex: \"(@(?:returns?|yields|type|this|suppress|public|protected|private|package|modifies|\" + \"implements|external|exception|throws|enum|define|extends))(\\\\s*)({)\",\n        push: [{\n          token: \"lparen.doc\",\n          regex: \"{\",\n          push: [{\n            include: \"doc-syntax\"\n          }, {\n            token: \"rparen.doc\",\n            regex: \"}|(?=$)\",\n            next: \"pop\"\n          }]\n        }, {\n          token: \"rparen.doc\",\n          regex: \"}|(?=$)\",\n          next: \"pop\"\n        }, {\n          include: \"doc-syntax\"\n        }, {\n          defaultToken: \"text.doc\"\n        }]\n      }, {\n        token: [\"comment.doc.tag\", \"text.doc\", \"variable.parameter.doc\"],\n        regex: \"(@(?:alias|memberof|instance|module|name|lends|namespace|external|this|template|\" + \"requires|param|implements|function|extends|typedef|mixes|constructor|var|\" + \"memberof\\\\!|event|listens|exports|class|constructs|interface|emits|fires|\" + \"throws|const|callback|borrows|augments))(\\\\s+)(\\\\w[\\\\w#\\.:\\/~\\\"\\\\-]*)?\"\n      }, {\n        token: [\"comment.doc.tag\", \"text.doc\", \"variable.parameter.doc\"],\n        regex: \"(@method)(\\\\s+)(\\\\w[\\\\w\\.\\\\(\\\\)]*)\"\n      }, {\n        token: \"comment.doc.tag\",\n        regex: \"@access\\\\s+(?:private|public|protected)\"\n      }, {\n        token: \"comment.doc.tag\",\n        regex: \"@kind\\\\s+(?:class|constant|event|external|file|function|member|mixin|module|namespace|typedef)\"\n      }, {\n        token: \"comment.doc.tag\",\n        regex: \"@\\\\w+(?=\\\\s|$)\"\n      }, JsDocCommentHighlightRules.getTagRule(), {\n        defaultToken: \"comment.doc.body\",\n        caseInsensitive: true\n      }],\n      \"doc-syntax\": [{\n        token: \"operator.doc\",\n        regex: /[|:]/\n      }, {\n        token: \"paren.doc\",\n        regex: /[\\[\\]]/\n      }]\n    };\n    this.normalizeRules();\n  };\n  oop.inherits(JsDocCommentHighlightRules, TextHighlightRules);\n  JsDocCommentHighlightRules.getTagRule = function (start) {\n    return {\n      token: \"comment.doc.tag.storage.type\",\n      regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n  };\n  JsDocCommentHighlightRules.getStartRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // doc comment\n      regex: /\\/\\*\\*(?!\\/)/,\n      next: start\n    };\n  };\n  JsDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // closing comment\n      regex: \"\\\\*\\\\/\",\n      next: start\n    };\n  };\n  exports.JsDocCommentHighlightRules = JsDocCommentHighlightRules;\n});\nace.define(\"ace/mode/javascript_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/jsdoc_comment_highlight_rules\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var DocCommentHighlightRules = require(\"./jsdoc_comment_highlight_rules\").JsDocCommentHighlightRules;\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var identifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\";\n  var JavaScriptHighlightRules = function (options) {\n    var keywords = {\n      \"variable.language\": \"Array|Boolean|Date|Function|Iterator|Number|Object|RegExp|String|Proxy|Symbol|\" +\n      // Constructors\n      \"Namespace|QName|XML|XMLList|\" +\n      // E4X\n      \"ArrayBuffer|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|\" + \"Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray|\" + \"Error|EvalError|InternalError|RangeError|ReferenceError|StopIteration|\" +\n      // Errors\n      \"SyntaxError|TypeError|URIError|\" + \"decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|eval|isFinite|\" +\n      // Non-constructor functions\n      \"isNaN|parseFloat|parseInt|\" + \"JSON|Math|\" +\n      // Other\n      \"this|arguments|prototype|window|document\",\n      // Pseudo\n      \"keyword\": \"const|yield|import|get|set|async|await|\" + \"break|case|catch|continue|default|delete|do|else|finally|for|\" + \"if|in|of|instanceof|new|return|switch|throw|try|typeof|let|var|while|with|debugger|\" + \"__parent__|__count__|escape|unescape|with|__proto__|\" + \"class|enum|extends|super|export|implements|private|public|interface|package|protected|static|constructor\",\n      \"storage.type\": \"const|let|var|function\",\n      \"constant.language\": \"null|Infinity|NaN|undefined\",\n      \"support.function\": \"alert\",\n      \"constant.language.boolean\": \"true|false\"\n    };\n    var keywordMapper = this.createKeywordMapper(keywords, \"identifier\");\n    var kwBeforeRe = \"case|do|else|finally|in|instanceof|return|throw|try|typeof|yield|void\";\n    var escapedRe = \"\\\\\\\\(?:x[0-9a-fA-F]{2}|\" +\n    // hex\n    \"u[0-9a-fA-F]{4}|\" +\n    // unicode\n    \"u{[0-9a-fA-F]{1,6}}|\" +\n    // es6 unicode\n    \"[0-2][0-7]{0,2}|\" +\n    // oct\n    \"3[0-7][0-7]?|\" +\n    // oct\n    \"[4-7][0-7]?|\" +\n    //oct\n    \".)\";\n    var anonymousFunctionRe = \"(function)(\\\\s*)(\\\\*?)\";\n    var functionCallStartRule = {\n      token: [\"identifier\", \"text\", \"paren.lparen\"],\n      regex: \"(\\\\b(?!\" + Object.values(keywords).join(\"|\") + \"\\\\b)\" + identifierRe + \")(\\\\s*)(\\\\()\"\n    };\n    this.$rules = {\n      \"no_regex\": [DocCommentHighlightRules.getStartRule(\"doc-start\"), comments(\"no_regex\"), functionCallStartRule, {\n        token: \"string\",\n        regex: \"'(?=.)\",\n        next: \"qstring\"\n      }, {\n        token: \"string\",\n        regex: '\"(?=.)',\n        next: \"qqstring\"\n      }, {\n        token: \"constant.numeric\",\n        // hexadecimal, octal and binary\n        regex: /0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/\n      }, {\n        token: \"constant.numeric\",\n        // decimal integers and floats\n        regex: /(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n      }, {\n        token: [\"entity.name.function\", \"text\", \"keyword.operator\", \"text\", \"storage.type\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"],\n        regex: \"(\" + identifierRe + \")(\\\\s*)(=)(\\\\s*)\" + anonymousFunctionRe + \"(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"storage.type\", \"text\", \"storage.type\", \"text\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"],\n        regex: \"(function)(?:(?:(\\\\s*)(\\\\*)(\\\\s*))|(\\\\s+))(\" + identifierRe + \")(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"entity.name.function\", \"text\", \"punctuation.operator\", \"text\", \"storage.type\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"],\n        regex: \"(\" + identifierRe + \")(\\\\s*)(:)(\\\\s*)\" + anonymousFunctionRe + \"(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"text\", \"text\", \"storage.type\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"],\n        regex: \"(:)(\\\\s*)\" + anonymousFunctionRe + \"(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: \"keyword\",\n        regex: \"from(?=\\\\s*('|\\\"))\"\n      }, {\n        token: \"keyword\",\n        regex: \"(?:\" + kwBeforeRe + \")\\\\b\",\n        next: \"start\"\n      }, {\n        token: \"support.constant\",\n        regex: /that\\b/\n      }, {\n        token: [\"storage.type\", \"punctuation.operator\", \"support.function.firebug\"],\n        regex: /(console)(\\.)(warn|info|log|error|debug|time|trace|timeEnd|assert)\\b/\n      }, {\n        token: keywordMapper,\n        regex: identifierRe\n      }, {\n        token: \"punctuation.operator\",\n        regex: /[.](?![.])/,\n        next: \"property\"\n      }, {\n        token: \"storage.type\",\n        regex: /=>/,\n        next: \"start\"\n      }, {\n        token: \"keyword.operator\",\n        regex: /--|\\+\\+|\\.{3}|===|==|=|!=|!==|<+=?|>+=?|!|&&|\\|\\||\\?:|[!$%&*+\\-~\\/^]=?/,\n        next: \"start\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: /[?:,;.]/,\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: /[\\[({]/,\n        next: \"start\"\n      }, {\n        token: \"paren.rparen\",\n        regex: /[\\])}]/\n      }, {\n        token: \"comment\",\n        regex: /^#!.*$/\n      }],\n      property: [{\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }, {\n        token: \"keyword.operator\",\n        regex: /=/\n      }, {\n        token: [\"storage.type\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"],\n        regex: anonymousFunctionRe + \"(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"storage.type\", \"text\", \"storage.type\", \"text\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"],\n        regex: \"(function)(?:(?:(\\\\s*)(\\\\*)(\\\\s*))|(\\\\s+))(\\\\w+)(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: /[.](?![.])/\n      }, {\n        token: \"support.function\",\n        regex: \"prototype\"\n      }, {\n        token: \"support.function\",\n        regex: /(s(?:h(?:ift|ow(?:Mod(?:elessDialog|alDialog)|Help))|croll(?:X|By(?:Pages|Lines)?|Y|To)?|t(?:op|rike)|i(?:n|zeToContent|debar|gnText)|ort|u(?:p|b(?:str(?:ing)?)?)|pli(?:ce|t)|e(?:nd|t(?:Re(?:sizable|questHeader)|M(?:i(?:nutes|lliseconds)|onth)|Seconds|Ho(?:tKeys|urs)|Year|Cursor|Time(?:out)?|Interval|ZOptions|Date|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|h(?:ome|andleEvent)|navigate|c(?:har(?:CodeAt|At)|o(?:s|n(?:cat|textual|firm)|mpile)|eil|lear(?:Timeout|Interval)?|a(?:ptureEvents|ll)|reate(?:StyleSheet|Popup|EventObject))|t(?:o(?:GMTString|S(?:tring|ource)|U(?:TCString|pperCase)|Lo(?:caleString|werCase))|est|a(?:n|int(?:Enabled)?))|i(?:s(?:NaN|Finite)|ndexOf|talics)|d(?:isableExternalCapture|ump|etachEvent)|u(?:n(?:shift|taint|escape|watch)|pdateCommands)|j(?:oin|avaEnabled)|p(?:o(?:p|w)|ush|lugins.refresh|a(?:ddings|rse(?:Int|Float)?)|r(?:int|ompt|eference))|e(?:scape|nableExternalCapture|val|lementFromPoint|x(?:p|ec(?:Script|Command)?))|valueOf|UTC|queryCommand(?:State|Indeterm|Enabled|Value)|f(?:i(?:nd|lter|le(?:ModifiedDate|Size|CreatedDate|UpdatedDate)|xed)|o(?:nt(?:size|color)|rward|rEach)|loor|romCharCode)|watch|l(?:ink|o(?:ad|g)|astIndexOf)|a(?:sin|nchor|cos|t(?:tachEvent|ob|an(?:2)?)|pply|lert|b(?:s|ort))|r(?:ou(?:nd|teEvents)|e(?:size(?:By|To)|calc|turnValue|place|verse|l(?:oad|ease(?:Capture|Events)))|andom)|g(?:o|et(?:ResponseHeader|M(?:i(?:nutes|lliseconds)|onth)|Se(?:conds|lection)|Hours|Year|Time(?:zoneOffset)?|Da(?:y|te)|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Da(?:y|te)|FullYear)|FullYear|A(?:ttention|llResponseHeaders)))|m(?:in|ove(?:B(?:y|elow)|To(?:Absolute)?|Above)|ergeAttributes|a(?:tch|rgins|x))|b(?:toa|ig|o(?:ld|rderWidths)|link|ack))\\b(?=\\()/\n      }, {\n        token: \"support.function.dom\",\n        regex: /(s(?:ub(?:stringData|mit)|plitText|e(?:t(?:NamedItem|Attribute(?:Node)?)|lect))|has(?:ChildNodes|Feature)|namedItem|c(?:l(?:ick|o(?:se|neNode))|reate(?:C(?:omment|DATASection|aption)|T(?:Head|extNode|Foot)|DocumentFragment|ProcessingInstruction|E(?:ntityReference|lement)|Attribute))|tabIndex|i(?:nsert(?:Row|Before|Cell|Data)|tem)|open|delete(?:Row|C(?:ell|aption)|T(?:Head|Foot)|Data)|focus|write(?:ln)?|a(?:dd|ppend(?:Child|Data))|re(?:set|place(?:Child|Data)|move(?:NamedItem|Child|Attribute(?:Node)?)?)|get(?:NamedItem|Element(?:sBy(?:Name|TagName|ClassName)|ById)|Attribute(?:Node)?)|blur)\\b(?=\\()/\n      }, {\n        token: \"support.constant\",\n        regex: /(s(?:ystemLanguage|cr(?:ipts|ollbars|een(?:X|Y|Top|Left))|t(?:yle(?:Sheets)?|atus(?:Text|bar)?)|ibling(?:Below|Above)|ource|uffixes|e(?:curity(?:Policy)?|l(?:ection|f)))|h(?:istory|ost(?:name)?|as(?:h|Focus))|y|X(?:MLDocument|SLDocument)|n(?:ext|ame(?:space(?:s|URI)|Prop))|M(?:IN_VALUE|AX_VALUE)|c(?:haracterSet|o(?:n(?:structor|trollers)|okieEnabled|lorDepth|mp(?:onents|lete))|urrent|puClass|l(?:i(?:p(?:boardData)?|entInformation)|osed|asses)|alle(?:e|r)|rypto)|t(?:o(?:olbar|p)|ext(?:Transform|Indent|Decoration|Align)|ags)|SQRT(?:1_2|2)|i(?:n(?:ner(?:Height|Width)|put)|ds|gnoreCase)|zIndex|o(?:scpu|n(?:readystatechange|Line)|uter(?:Height|Width)|p(?:sProfile|ener)|ffscreenBuffering)|NEGATIVE_INFINITY|d(?:i(?:splay|alog(?:Height|Top|Width|Left|Arguments)|rectories)|e(?:scription|fault(?:Status|Ch(?:ecked|arset)|View)))|u(?:ser(?:Profile|Language|Agent)|n(?:iqueID|defined)|pdateInterval)|_content|p(?:ixelDepth|ort|ersonalbar|kcs11|l(?:ugins|atform)|a(?:thname|dding(?:Right|Bottom|Top|Left)|rent(?:Window|Layer)?|ge(?:X(?:Offset)?|Y(?:Offset)?))|r(?:o(?:to(?:col|type)|duct(?:Sub)?|mpter)|e(?:vious|fix)))|e(?:n(?:coding|abledPlugin)|x(?:ternal|pando)|mbeds)|v(?:isibility|endor(?:Sub)?|Linkcolor)|URLUnencoded|P(?:I|OSITIVE_INFINITY)|f(?:ilename|o(?:nt(?:Size|Family|Weight)|rmName)|rame(?:s|Element)|gColor)|E|whiteSpace|l(?:i(?:stStyleType|n(?:eHeight|kColor))|o(?:ca(?:tion(?:bar)?|lName)|wsrc)|e(?:ngth|ft(?:Context)?)|a(?:st(?:M(?:odified|atch)|Index|Paren)|yer(?:s|X)|nguage))|a(?:pp(?:MinorVersion|Name|Co(?:deName|re)|Version)|vail(?:Height|Top|Width|Left)|ll|r(?:ity|guments)|Linkcolor|bove)|r(?:ight(?:Context)?|e(?:sponse(?:XML|Text)|adyState))|global|x|m(?:imeTypes|ultiline|enubar|argin(?:Right|Bottom|Top|Left))|L(?:N(?:10|2)|OG(?:10E|2E))|b(?:o(?:ttom|rder(?:Width|RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth))|ufferDepth|elow|ackground(?:Color|Image)))\\b/\n      }, {\n        token: \"identifier\",\n        regex: identifierRe\n      }, {\n        regex: \"\",\n        token: \"empty\",\n        next: \"no_regex\"\n      }],\n      \"start\": [DocCommentHighlightRules.getStartRule(\"doc-start\"), comments(\"start\"), {\n        token: \"string.regexp\",\n        regex: \"\\\\/\",\n        next: \"regex\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+|^$\",\n        next: \"start\"\n      }, {\n        token: \"empty\",\n        regex: \"\",\n        next: \"no_regex\"\n      }],\n      \"regex\": [{\n        token: \"regexp.keyword.operator\",\n        regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n      }, {\n        token: \"string.regexp\",\n        regex: \"/[sxngimy]*\",\n        next: \"no_regex\"\n      }, {\n        token: \"invalid\",\n        regex: /\\{\\d+\\b,?\\d*\\}[+*]|[+*$^?][+*]|[$^][?]|\\?{3,}/\n      }, {\n        token: \"constant.language.escape\",\n        regex: /\\(\\?[:=!]|\\)|\\{\\d+\\b,?\\d*\\}|[+*]\\?|[()$^+*?.]/\n      }, {\n        token: \"constant.language.delimiter\",\n        regex: /\\|/\n      }, {\n        token: \"constant.language.escape\",\n        regex: /\\[\\^?/,\n        next: \"regex_character_class\"\n      }, {\n        token: \"empty\",\n        regex: \"$\",\n        next: \"no_regex\"\n      }, {\n        defaultToken: \"string.regexp\"\n      }],\n      \"regex_character_class\": [{\n        token: \"regexp.charclass.keyword.operator\",\n        regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n      }, {\n        token: \"constant.language.escape\",\n        regex: \"]\",\n        next: \"regex\"\n      }, {\n        token: \"constant.language.escape\",\n        regex: \"-\"\n      }, {\n        token: \"empty\",\n        regex: \"$\",\n        next: \"no_regex\"\n      }, {\n        defaultToken: \"string.regexp.charachterclass\"\n      }],\n      \"default_parameter\": [{\n        token: \"string\",\n        regex: \"'(?=.)\",\n        push: [{\n          token: \"string\",\n          regex: \"'|$\",\n          next: \"pop\"\n        }, {\n          include: \"qstring\"\n        }]\n      }, {\n        token: \"string\",\n        regex: '\"(?=.)',\n        push: [{\n          token: \"string\",\n          regex: '\"|$',\n          next: \"pop\"\n        }, {\n          include: \"qqstring\"\n        }]\n      }, {\n        token: \"constant.language\",\n        regex: \"null|Infinity|NaN|undefined\"\n      }, {\n        token: \"constant.numeric\",\n        // hexadecimal, octal and binary\n        regex: /0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/\n      }, {\n        token: \"constant.numeric\",\n        // decimal integers and floats\n        regex: /(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n      }, {\n        token: \"punctuation.operator\",\n        regex: \",\",\n        next: \"function_arguments\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: \"$\"\n      }, {\n        token: \"empty\",\n        regex: \"\",\n        next: \"no_regex\"\n      }],\n      \"function_arguments\": [comments(\"function_arguments\"), {\n        token: \"variable.parameter\",\n        regex: identifierRe\n      }, {\n        token: \"punctuation.operator\",\n        regex: \",\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: \"$\"\n      }, {\n        token: \"empty\",\n        regex: \"\",\n        next: \"no_regex\"\n      }],\n      \"qqstring\": [{\n        token: \"constant.language.escape\",\n        regex: escapedRe\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        consumeLineEnd: true\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"no_regex\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"qstring\": [{\n        token: \"constant.language.escape\",\n        regex: escapedRe\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        consumeLineEnd: true\n      }, {\n        token: \"string\",\n        regex: \"'|$\",\n        next: \"no_regex\"\n      }, {\n        defaultToken: \"string\"\n      }]\n    };\n    if (!options || !options.noES6) {\n      this.$rules.no_regex.unshift({\n        regex: \"[{}]\",\n        onMatch: function (val, state, stack) {\n          this.next = val == \"{\" ? this.nextState : \"\";\n          if (val == \"{\" && stack.length) {\n            stack.unshift(\"start\", state);\n          } else if (val == \"}\" && stack.length) {\n            stack.shift();\n            this.next = stack.shift();\n            if (this.next.indexOf(\"string\") != -1 || this.next.indexOf(\"jsx\") != -1) return \"paren.quasi.end\";\n          }\n          return val == \"{\" ? \"paren.lparen\" : \"paren.rparen\";\n        },\n        nextState: \"start\"\n      }, {\n        token: \"string.quasi.start\",\n        regex: /`/,\n        push: [{\n          token: \"constant.language.escape\",\n          regex: escapedRe\n        }, {\n          token: \"paren.quasi.start\",\n          regex: /\\${/,\n          push: \"start\"\n        }, {\n          token: \"string.quasi.end\",\n          regex: /`/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"string.quasi\"\n        }]\n      }, {\n        token: [\"variable.parameter\", \"text\"],\n        regex: \"(\" + identifierRe + \")(\\\\s*)(?=\\\\=>)\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"(\\\\()(?=[^\\\\(]+\\\\s*=>)\",\n        next: \"function_arguments\"\n      }, {\n        token: \"variable.language\",\n        regex: \"(?:(?:(?:Weak)?(?:Set|Map))|Promise)\\\\b\"\n      });\n      this.$rules[\"function_arguments\"].unshift({\n        token: \"keyword.operator\",\n        regex: \"=\",\n        next: \"default_parameter\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"\\\\.{3}\"\n      });\n      this.$rules[\"property\"].unshift({\n        token: \"support.function\",\n        regex: \"(findIndex|repeat|startsWith|endsWith|includes|isSafeInteger|trunc|cbrt|log2|log10|sign|then|catch|\" + \"finally|resolve|reject|race|any|all|allSettled|keys|entries|isInteger)\\\\b(?=\\\\()\"\n      }, {\n        token: \"constant.language\",\n        regex: \"(?:MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|EPSILON)\\\\b\"\n      });\n      if (!options || options.jsx != false) JSX.call(this);\n    }\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"no_regex\")]);\n    this.normalizeRules();\n  };\n  oop.inherits(JavaScriptHighlightRules, TextHighlightRules);\n  function JSX() {\n    var tagRegex = identifierRe.replace(\"\\\\d\", \"\\\\d\\\\-\");\n    var jsxTag = {\n      onMatch: function (val, state, stack) {\n        var offset = val.charAt(1) == \"/\" ? 2 : 1;\n        if (offset == 1) {\n          if (state != this.nextState) stack.unshift(this.next, this.nextState, 0);else stack.unshift(this.next);\n          stack[2]++;\n        } else if (offset == 2) {\n          if (state == this.nextState) {\n            stack[1]--;\n            if (!stack[1] || stack[1] < 0) {\n              stack.shift();\n              stack.shift();\n            }\n          }\n        }\n        return [{\n          type: \"meta.tag.punctuation.\" + (offset == 1 ? \"\" : \"end-\") + \"tag-open.xml\",\n          value: val.slice(0, offset)\n        }, {\n          type: \"meta.tag.tag-name.xml\",\n          value: val.substr(offset)\n        }];\n      },\n      regex: \"</?(?:\" + tagRegex + \"|(?=>))\",\n      next: \"jsxAttributes\",\n      nextState: \"jsx\"\n    };\n    this.$rules.start.unshift(jsxTag);\n    var jsxJsRule = {\n      regex: \"{\",\n      token: \"paren.quasi.start\",\n      push: \"start\"\n    };\n    this.$rules.jsx = [jsxJsRule, jsxTag, {\n      include: \"reference\"\n    }, {\n      defaultToken: \"string.xml\"\n    }];\n    this.$rules.jsxAttributes = [{\n      token: \"meta.tag.punctuation.tag-close.xml\",\n      regex: \"/?>\",\n      onMatch: function (value, currentState, stack) {\n        if (currentState == stack[0]) stack.shift();\n        if (value.length == 2) {\n          if (stack[0] == this.nextState) stack[1]--;\n          if (!stack[1] || stack[1] < 0) {\n            stack.splice(0, 2);\n          }\n        }\n        this.next = stack[0] || \"start\";\n        return [{\n          type: this.token,\n          value: value\n        }];\n      },\n      nextState: \"jsx\"\n    }, jsxJsRule, comments(\"jsxAttributes\"), {\n      token: \"entity.other.attribute-name.xml\",\n      regex: tagRegex\n    }, {\n      token: \"keyword.operator.attribute-equals.xml\",\n      regex: \"=\"\n    }, {\n      token: \"text.tag-whitespace.xml\",\n      regex: \"\\\\s+\"\n    }, {\n      token: \"string.attribute-value.xml\",\n      regex: \"'\",\n      stateName: \"jsx_attr_q\",\n      push: [{\n        token: \"string.attribute-value.xml\",\n        regex: \"'\",\n        next: \"pop\"\n      }, {\n        include: \"reference\"\n      }, {\n        defaultToken: \"string.attribute-value.xml\"\n      }]\n    }, {\n      token: \"string.attribute-value.xml\",\n      regex: '\"',\n      stateName: \"jsx_attr_qq\",\n      push: [{\n        token: \"string.attribute-value.xml\",\n        regex: '\"',\n        next: \"pop\"\n      }, {\n        include: \"reference\"\n      }, {\n        defaultToken: \"string.attribute-value.xml\"\n      }]\n    }, jsxTag];\n    this.$rules.reference = [{\n      token: \"constant.language.escape.reference.xml\",\n      regex: \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n    }];\n  }\n  function comments(next) {\n    return [{\n      token: \"comment\",\n      // multi line comment\n      regex: /\\/\\*/,\n      next: [DocCommentHighlightRules.getTagRule(), {\n        token: \"comment\",\n        regex: \"\\\\*\\\\/\",\n        next: next || \"pop\"\n      }, {\n        defaultToken: \"comment\",\n        caseInsensitive: true\n      }]\n    }, {\n      token: \"comment\",\n      regex: \"\\\\/\\\\/\",\n      next: [DocCommentHighlightRules.getTagRule(), {\n        token: \"comment\",\n        regex: \"$|^\",\n        next: next || \"pop\"\n      }, {\n        defaultToken: \"comment\",\n        caseInsensitive: true\n      }]\n    }];\n  }\n  exports.JavaScriptHighlightRules = JavaScriptHighlightRules;\n});\nace.define(\"ace/mode/pgsql_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/lib/lang\", \"ace/mode/doc_comment_highlight_rules\", \"ace/mode/text_highlight_rules\", \"ace/mode/perl_highlight_rules\", \"ace/mode/python_highlight_rules\", \"ace/mode/json_highlight_rules\", \"ace/mode/javascript_highlight_rules\"], function (require, exports, module) {\n  var oop = require(\"../lib/oop\");\n  var lang = require(\"../lib/lang\");\n  var DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var PerlHighlightRules = require(\"./perl_highlight_rules\").PerlHighlightRules;\n  var PythonHighlightRules = require(\"./python_highlight_rules\").PythonHighlightRules;\n  var JsonHighlightRules = require(\"./json_highlight_rules\").JsonHighlightRules;\n  var JavaScriptHighlightRules = require(\"./javascript_highlight_rules\").JavaScriptHighlightRules;\n  var PgsqlHighlightRules = function () {\n    var keywords = \"abort|absolute|abstime|access|aclitem|action|add|admin|after|aggregate|all|also|alter|always|\" + \"analyse|analyze|and|any|anyarray|anyelement|anyenum|anynonarray|anyrange|array|as|asc|\" + \"assertion|assignment|asymmetric|at|attribute|authorization|backward|before|begin|between|\" + \"bigint|binary|bit|bool|boolean|both|box|bpchar|by|bytea|cache|called|cascade|cascaded|case|cast|\" + \"catalog|chain|char|character|characteristics|check|checkpoint|cid|cidr|circle|class|close|\" + \"cluster|coalesce|collate|collation|column|comment|comments|commit|committed|concurrently|\" + \"configuration|connection|constraint|constraints|content|continue|conversion|copy|cost|\" + \"create|cross|cstring|csv|current|current_catalog|current_date|current_role|\" + \"current_schema|current_time|current_timestamp|current_user|cursor|cycle|data|database|\" + \"date|daterange|day|deallocate|dec|decimal|declare|default|defaults|deferrable|deferred|\" + \"definer|delete|delimiter|delimiters|desc|dictionary|disable|discard|distinct|do|document|\" + \"domain|double|drop|each|else|enable|encoding|encrypted|end|enum|escape|event|event_trigger|\" + \"except|exclude|excluding|exclusive|execute|exists|explain|extension|external|extract|false|\" + \"family|fdw_handler|fetch|first|float|float4|float8|following|for|force|foreign|forward|\" + \"freeze|from|full|function|functions|global|grant|granted|greatest|group|gtsvector|handler|\" + \"having|header|hold|hour|identity|if|ilike|immediate|immutable|implicit|in|including|\" + \"increment|index|indexes|inet|inherit|inherits|initially|inline|inner|inout|input|\" + \"insensitive|insert|instead|int|int2|int2vector|int4|int4range|int8|int8range|integer|\" + \"internal|intersect|interval|into|invoker|is|isnull|isolation|join|json|key|label|language|\" + \"language_handler|large|last|lateral|lc_collate|lc_ctype|leading|leakproof|least|left|level|\" + \"like|limit|line|listen|load|local|localtime|localtimestamp|location|lock|lseg|macaddr|\" + \"mapping|match|materialized|maxvalue|minute|minvalue|mode|money|month|move|name|names|\" + \"national|natural|nchar|next|no|none|not|nothing|notify|notnull|nowait|null|nullif|nulls|\" + \"numeric|numrange|object|of|off|offset|oid|oids|oidvector|on|only|opaque|operator|option|\" + \"options|or|order|out|outer|over|overlaps|overlay|owned|owner|parser|partial|partition|passing|\" + \"password|path|pg_attribute|pg_auth_members|pg_authid|pg_class|pg_database|pg_node_tree|\" + \"pg_proc|pg_type|placing|plans|point|polygon|position|preceding|precision|prepare|prepared|\" + \"preserve|primary|prior|privileges|procedural|procedure|program|quote|range|read|real|\" + \"reassign|recheck|record|recursive|ref|refcursor|references|refresh|regclass|regconfig|\" + \"regdictionary|regoper|regoperator|regproc|regprocedure|regtype|reindex|relative|release|\" + \"reltime|rename|repeatable|replace|replica|reset|restart|restrict|returning|returns|revoke|\" + \"right|role|rollback|row|rows|rule|savepoint|schema|scroll|search|second|security|select|\" + \"sequence|sequences|serializable|server|session|session_user|set|setof|share|show|similar|\" + \"simple|smallint|smgr|snapshot|some|stable|standalone|start|statement|statistics|stdin|\" + \"stdout|storage|strict|strip|substring|symmetric|sysid|system|table|tables|tablespace|temp|\" + \"template|temporary|text|then|tid|time|timestamp|timestamptz|timetz|tinterval|to|trailing|\" + \"transaction|treat|trigger|trim|true|truncate|trusted|tsquery|tsrange|tstzrange|tsvector|\" + \"txid_snapshot|type|types|unbounded|uncommitted|unencrypted|union|unique|unknown|unlisten|\" + \"unlogged|until|update|user|using|uuid|vacuum|valid|validate|validator|value|values|varbit|\" + \"varchar|variadic|varying|verbose|version|view|void|volatile|when|where|whitespace|window|\" + \"with|without|work|wrapper|write|xid|xml|xmlattributes|xmlconcat|xmlelement|xmlexists|\" + \"xmlforest|xmlparse|xmlpi|xmlroot|xmlserialize|year|yes|zone|ties\";\n    var builtinFunctions = \"RI_FKey_cascade_del|RI_FKey_cascade_upd|RI_FKey_check_ins|RI_FKey_check_upd|\" + \"RI_FKey_noaction_del|RI_FKey_noaction_upd|RI_FKey_restrict_del|RI_FKey_restrict_upd|\" + \"RI_FKey_setdefault_del|RI_FKey_setdefault_upd|RI_FKey_setnull_del|\" + \"RI_FKey_setnull_upd|abbrev|abs|abstime|abstimeeq|abstimege|abstimegt|abstimein|abstimele|\" + \"abstimelt|abstimene|abstimeout|abstimerecv|abstimesend|aclcontains|acldefault|\" + \"aclexplode|aclinsert|aclitemeq|aclitemin|aclitemout|aclremove|acos|age|any_in|any_out|\" + \"anyarray_in|anyarray_out|anyarray_recv|anyarray_send|anyelement_in|anyelement_out|\" + \"anyenum_in|anyenum_out|anynonarray_in|anynonarray_out|anyrange_in|anyrange_out|\" + \"anytextcat|area|areajoinsel|areasel|array_agg|array_agg_finalfn|array_agg_transfn|\" + \"array_append|array_cat|array_dims|array_eq|array_fill|array_ge|array_gt|array_in|\" + \"array_larger|array_le|array_length|array_lower|array_lt|array_ndims|array_ne|array_out|\" + \"array_prepend|array_recv|array_remove|array_replace|array_send|array_smaller|\" + \"array_to_json|array_to_string|array_typanalyze|array_upper|arraycontained|\" + \"arraycontains|arraycontjoinsel|arraycontsel|arrayoverlap|ascii|ascii_to_mic|\" + \"ascii_to_utf8|asin|atan|atan2|avg|big5_to_euc_tw|big5_to_mic|big5_to_utf8|bit_and|bit_in|\" + \"bit_length|bit_or|bit_out|bit_recv|bit_send|bitand|bitcat|bitcmp|biteq|bitge|bitgt|bitle|\" + \"bitlt|bitne|bitnot|bitor|bitshiftleft|bitshiftright|bittypmodin|bittypmodout|bitxor|bool|\" + \"bool_and|bool_or|booland_statefunc|booleq|boolge|boolgt|boolin|boolle|boollt|boolne|\" + \"boolor_statefunc|boolout|boolrecv|boolsend|box|box_above|box_above_eq|box_add|box_below|\" + \"box_below_eq|box_center|box_contain|box_contain_pt|box_contained|box_distance|box_div|\" + \"box_eq|box_ge|box_gt|box_in|box_intersect|box_le|box_left|box_lt|box_mul|box_out|\" + \"box_overabove|box_overbelow|box_overlap|box_overleft|box_overright|box_recv|box_right|\" + \"box_same|box_send|box_sub|bpchar_larger|bpchar_pattern_ge|bpchar_pattern_gt|\" + \"bpchar_pattern_le|bpchar_pattern_lt|bpchar_smaller|bpcharcmp|bpchareq|bpcharge|\" + \"bpchargt|bpchariclike|bpcharicnlike|bpcharicregexeq|bpcharicregexne|bpcharin|bpcharle|\" + \"bpcharlike|bpcharlt|bpcharne|bpcharnlike|bpcharout|bpcharrecv|bpcharregexeq|\" + \"bpcharregexne|bpcharsend|bpchartypmodin|bpchartypmodout|broadcast|btabstimecmp|\" + \"btarraycmp|btbeginscan|btboolcmp|btbpchar_pattern_cmp|btbuild|btbuildempty|\" + \"btbulkdelete|btcanreturn|btcharcmp|btcostestimate|btendscan|btfloat48cmp|btfloat4cmp|\" + \"btfloat4sortsupport|btfloat84cmp|btfloat8cmp|btfloat8sortsupport|btgetbitmap|\" + \"btgettuple|btinsert|btint24cmp|btint28cmp|btint2cmp|btint2sortsupport|btint42cmp|\" + \"btint48cmp|btint4cmp|btint4sortsupport|btint82cmp|btint84cmp|btint8cmp|\" + \"btint8sortsupport|btmarkpos|btnamecmp|btnamesortsupport|btoidcmp|btoidsortsupport|\" + \"btoidvectorcmp|btoptions|btrecordcmp|btreltimecmp|btrescan|btrestrpos|btrim|\" + \"bttext_pattern_cmp|bttextcmp|bttidcmp|bttintervalcmp|btvacuumcleanup|\" + \"bytea_string_agg_finalfn|bytea_string_agg_transfn|byteacat|byteacmp|byteaeq|byteage|\" + \"byteagt|byteain|byteale|bytealike|bytealt|byteane|byteanlike|byteaout|bytearecv|byteasend|\" + \"cash_cmp|cash_div_cash|cash_div_flt4|cash_div_flt8|cash_div_int2|cash_div_int4|cash_eq|\" + \"cash_ge|cash_gt|cash_in|cash_le|cash_lt|cash_mi|cash_mul_flt4|cash_mul_flt8|\" + \"cash_mul_int2|cash_mul_int4|cash_ne|cash_out|cash_pl|cash_recv|cash_send|cash_words|\" + \"cashlarger|cashsmaller|cbrt|ceil|ceiling|center|char|char_length|character_length|chareq|\" + \"charge|chargt|charin|charle|charlt|charne|charout|charrecv|charsend|chr|cideq|cidin|cidout|\" + \"cidr|cidr_in|cidr_out|cidr_recv|cidr_send|cidrecv|cidsend|circle|circle_above|\" + \"circle_add_pt|circle_below|circle_center|circle_contain|circle_contain_pt|\" + \"circle_contained|circle_distance|circle_div_pt|circle_eq|circle_ge|circle_gt|circle_in|\" + \"circle_le|circle_left|circle_lt|circle_mul_pt|circle_ne|circle_out|circle_overabove|\" + \"circle_overbelow|circle_overlap|circle_overleft|circle_overright|circle_recv|\" + \"circle_right|circle_same|circle_send|circle_sub_pt|clock_timestamp|close_lb|close_ls|\" + \"close_lseg|close_pb|close_pl|close_ps|close_sb|close_sl|col_description|concat|concat_ws|\" + \"contjoinsel|contsel|convert|convert_from|convert_to|corr|cos|cot|count|covar_pop|\" + \"covar_samp|cstring_in|cstring_out|cstring_recv|cstring_send|cume_dist|current_database|\" + \"current_query|current_schema|current_schemas|current_setting|current_user|currtid|\" + \"currtid2|currval|cursor_to_xml|cursor_to_xmlschema|database_to_xml|\" + \"database_to_xml_and_xmlschema|database_to_xmlschema|date|date_cmp|date_cmp_timestamp|\" + \"date_cmp_timestamptz|date_eq|date_eq_timestamp|date_eq_timestamptz|date_ge|\" + \"date_ge_timestamp|date_ge_timestamptz|date_gt|date_gt_timestamp|date_gt_timestamptz|\" + \"date_in|date_larger|date_le|date_le_timestamp|date_le_timestamptz|date_lt|\" + \"date_lt_timestamp|date_lt_timestamptz|date_mi|date_mi_interval|date_mii|date_ne|\" + \"date_ne_timestamp|date_ne_timestamptz|date_out|date_part|date_pl_interval|date_pli|\" + \"date_recv|date_send|date_smaller|date_sortsupport|date_trunc|daterange|\" + \"daterange_canonical|daterange_subdiff|datetime_pl|datetimetz_pl|dcbrt|decode|degrees|\" + \"dense_rank|dexp|diagonal|diameter|dispell_init|dispell_lexize|dist_cpoly|dist_lb|dist_pb|\" + \"dist_pc|dist_pl|dist_ppath|dist_ps|dist_sb|dist_sl|div|dlog1|dlog10|domain_in|domain_recv|\" + \"dpow|dround|dsimple_init|dsimple_lexize|dsnowball_init|dsnowball_lexize|dsqrt|\" + \"dsynonym_init|dsynonym_lexize|dtrunc|elem_contained_by_range|encode|enum_cmp|enum_eq|\" + \"enum_first|enum_ge|enum_gt|enum_in|enum_larger|enum_last|enum_le|enum_lt|enum_ne|enum_out|\" + \"enum_range|enum_recv|enum_send|enum_smaller|eqjoinsel|eqsel|euc_cn_to_mic|\" + \"euc_cn_to_utf8|euc_jis_2004_to_shift_jis_2004|euc_jis_2004_to_utf8|euc_jp_to_mic|\" + \"euc_jp_to_sjis|euc_jp_to_utf8|euc_kr_to_mic|euc_kr_to_utf8|euc_tw_to_big5|\" + \"euc_tw_to_mic|euc_tw_to_utf8|event_trigger_in|event_trigger_out|every|exp|factorial|\" + \"family|fdw_handler_in|fdw_handler_out|first_value|float4|float48div|float48eq|float48ge|\" + \"float48gt|float48le|float48lt|float48mi|float48mul|float48ne|float48pl|float4_accum|\" + \"float4abs|float4div|float4eq|float4ge|float4gt|float4in|float4larger|float4le|float4lt|\" + \"float4mi|float4mul|float4ne|float4out|float4pl|float4recv|float4send|float4smaller|\" + \"float4um|float4up|float8|float84div|float84eq|float84ge|float84gt|float84le|float84lt|\" + \"float84mi|float84mul|float84ne|float84pl|float8_accum|float8_avg|float8_corr|\" + \"float8_covar_pop|float8_covar_samp|float8_regr_accum|float8_regr_avgx|\" + \"float8_regr_avgy|float8_regr_intercept|float8_regr_r2|float8_regr_slope|\" + \"float8_regr_sxx|float8_regr_sxy|float8_regr_syy|float8_stddev_pop|float8_stddev_samp|\" + \"float8_var_pop|float8_var_samp|float8abs|float8div|float8eq|float8ge|float8gt|float8in|\" + \"float8larger|float8le|float8lt|float8mi|float8mul|float8ne|float8out|float8pl|float8recv|\" + \"float8send|float8smaller|float8um|float8up|floor|flt4_mul_cash|flt8_mul_cash|\" + \"fmgr_c_validator|fmgr_internal_validator|fmgr_sql_validator|format|format_type|\" + \"gb18030_to_utf8|gbk_to_utf8|generate_series|generate_subscripts|get_bit|get_byte|\" + \"get_current_ts_config|getdatabaseencoding|getpgusername|gin_cmp_prefix|\" + \"gin_cmp_tslexeme|gin_extract_tsquery|gin_extract_tsvector|gin_tsquery_consistent|\" + \"ginarrayconsistent|ginarrayextract|ginbeginscan|ginbuild|ginbuildempty|ginbulkdelete|\" + \"gincostestimate|ginendscan|gingetbitmap|gininsert|ginmarkpos|ginoptions|\" + \"ginqueryarrayextract|ginrescan|ginrestrpos|ginvacuumcleanup|gist_box_compress|\" + \"gist_box_consistent|gist_box_decompress|gist_box_penalty|gist_box_picksplit|\" + \"gist_box_same|gist_box_union|gist_circle_compress|gist_circle_consistent|\" + \"gist_point_compress|gist_point_consistent|gist_point_distance|gist_poly_compress|\" + \"gist_poly_consistent|gistbeginscan|gistbuild|gistbuildempty|gistbulkdelete|\" + \"gistcostestimate|gistendscan|gistgetbitmap|gistgettuple|gistinsert|gistmarkpos|\" + \"gistoptions|gistrescan|gistrestrpos|gistvacuumcleanup|gtsquery_compress|\" + \"gtsquery_consistent|gtsquery_decompress|gtsquery_penalty|gtsquery_picksplit|\" + \"gtsquery_same|gtsquery_union|gtsvector_compress|gtsvector_consistent|\" + \"gtsvector_decompress|gtsvector_penalty|gtsvector_picksplit|gtsvector_same|\" + \"gtsvector_union|gtsvectorin|gtsvectorout|has_any_column_privilege|\" + \"has_column_privilege|has_database_privilege|has_foreign_data_wrapper_privilege|\" + \"has_function_privilege|has_language_privilege|has_schema_privilege|\" + \"has_sequence_privilege|has_server_privilege|has_table_privilege|\" + \"has_tablespace_privilege|has_type_privilege|hash_aclitem|hash_array|hash_numeric|\" + \"hash_range|hashbeginscan|hashbpchar|hashbuild|hashbuildempty|hashbulkdelete|hashchar|\" + \"hashcostestimate|hashendscan|hashenum|hashfloat4|hashfloat8|hashgetbitmap|hashgettuple|\" + \"hashinet|hashinsert|hashint2|hashint2vector|hashint4|hashint8|hashmacaddr|hashmarkpos|\" + \"hashname|hashoid|hashoidvector|hashoptions|hashrescan|hashrestrpos|hashtext|\" + \"hashvacuumcleanup|hashvarlena|height|host|hostmask|iclikejoinsel|iclikesel|\" + \"icnlikejoinsel|icnlikesel|icregexeqjoinsel|icregexeqsel|icregexnejoinsel|icregexnesel|\" + \"inet_client_addr|inet_client_port|inet_in|inet_out|inet_recv|inet_send|\" + \"inet_server_addr|inet_server_port|inetand|inetmi|inetmi_int8|inetnot|inetor|inetpl|\" + \"initcap|int2|int24div|int24eq|int24ge|int24gt|int24le|int24lt|int24mi|int24mul|int24ne|\" + \"int24pl|int28div|int28eq|int28ge|int28gt|int28le|int28lt|int28mi|int28mul|int28ne|int28pl|\" + \"int2_accum|int2_avg_accum|int2_mul_cash|int2_sum|int2abs|int2and|int2div|int2eq|int2ge|\" + \"int2gt|int2in|int2larger|int2le|int2lt|int2mi|int2mod|int2mul|int2ne|int2not|int2or|int2out|\" + \"int2pl|int2recv|int2send|int2shl|int2shr|int2smaller|int2um|int2up|int2vectoreq|\" + \"int2vectorin|int2vectorout|int2vectorrecv|int2vectorsend|int2xor|int4|int42div|int42eq|\" + \"int42ge|int42gt|int42le|int42lt|int42mi|int42mul|int42ne|int42pl|int48div|int48eq|int48ge|\" + \"int48gt|int48le|int48lt|int48mi|int48mul|int48ne|int48pl|int4_accum|int4_avg_accum|\" + \"int4_mul_cash|int4_sum|int4abs|int4and|int4div|int4eq|int4ge|int4gt|int4in|int4inc|\" + \"int4larger|int4le|int4lt|int4mi|int4mod|int4mul|int4ne|int4not|int4or|int4out|int4pl|\" + \"int4range|int4range_canonical|int4range_subdiff|int4recv|int4send|int4shl|int4shr|\" + \"int4smaller|int4um|int4up|int4xor|int8|int82div|int82eq|int82ge|int82gt|int82le|int82lt|\" + \"int82mi|int82mul|int82ne|int82pl|int84div|int84eq|int84ge|int84gt|int84le|int84lt|int84mi|\" + \"int84mul|int84ne|int84pl|int8_accum|int8_avg|int8_avg_accum|int8_sum|int8abs|int8and|\" + \"int8div|int8eq|int8ge|int8gt|int8in|int8inc|int8inc_any|int8inc_float8_float8|int8larger|\" + \"int8le|int8lt|int8mi|int8mod|int8mul|int8ne|int8not|int8or|int8out|int8pl|int8pl_inet|\" + \"int8range|int8range_canonical|int8range_subdiff|int8recv|int8send|int8shl|int8shr|\" + \"int8smaller|int8um|int8up|int8xor|integer_pl_date|inter_lb|inter_sb|inter_sl|internal_in|\" + \"internal_out|interval_accum|interval_avg|interval_cmp|interval_div|interval_eq|\" + \"interval_ge|interval_gt|interval_hash|interval_in|interval_larger|interval_le|\" + \"interval_lt|interval_mi|interval_mul|interval_ne|interval_out|interval_pl|\" + \"interval_pl_date|interval_pl_time|interval_pl_timestamp|interval_pl_timestamptz|\" + \"interval_pl_timetz|interval_recv|interval_send|interval_smaller|interval_transform|\" + \"interval_um|intervaltypmodin|intervaltypmodout|intinterval|isclosed|isempty|isfinite|\" + \"ishorizontal|iso8859_1_to_utf8|iso8859_to_utf8|iso_to_koi8r|iso_to_mic|iso_to_win1251|\" + \"iso_to_win866|isopen|isparallel|isperp|isvertical|johab_to_utf8|json_agg|\" + \"json_agg_finalfn|json_agg_transfn|json_array_element|json_array_element_text|\" + \"json_array_elements|json_array_length|json_each|json_each_text|json_extract_path|\" + \"json_extract_path_op|json_extract_path_text|json_extract_path_text_op|json_in|\" + \"json_object_field|json_object_field_text|json_object_keys|json_out|\" + \"json_populate_record|json_populate_recordset|json_recv|json_send|justify_days|\" + \"justify_hours|justify_interval|koi8r_to_iso|koi8r_to_mic|koi8r_to_utf8|\" + \"koi8r_to_win1251|koi8r_to_win866|koi8u_to_utf8|lag|language_handler_in|\" + \"language_handler_out|last_value|lastval|latin1_to_mic|latin2_to_mic|latin2_to_win1250|\" + \"latin3_to_mic|latin4_to_mic|lead|left|length|like|like_escape|likejoinsel|likesel|line|\" + \"line_distance|line_eq|line_horizontal|line_in|line_interpt|line_intersect|line_out|\" + \"line_parallel|line_perp|line_recv|line_send|line_vertical|ln|lo_close|lo_creat|lo_create|\" + \"lo_export|lo_import|lo_lseek|lo_lseek64|lo_open|lo_tell|lo_tell64|lo_truncate|\" + \"lo_truncate64|lo_unlink|log|loread|lower|lower_inc|lower_inf|lowrite|lpad|lseg|lseg_center|\" + \"lseg_distance|lseg_eq|lseg_ge|lseg_gt|lseg_horizontal|lseg_in|lseg_interpt|\" + \"lseg_intersect|lseg_le|lseg_length|lseg_lt|lseg_ne|lseg_out|lseg_parallel|lseg_perp|\" + \"lseg_recv|lseg_send|lseg_vertical|ltrim|macaddr_and|macaddr_cmp|macaddr_eq|macaddr_ge|\" + \"macaddr_gt|macaddr_in|macaddr_le|macaddr_lt|macaddr_ne|macaddr_not|macaddr_or|\" + \"macaddr_out|macaddr_recv|macaddr_send|makeaclitem|masklen|max|md5|mic_to_ascii|\" + \"mic_to_big5|mic_to_euc_cn|mic_to_euc_jp|mic_to_euc_kr|mic_to_euc_tw|mic_to_iso|\" + \"mic_to_koi8r|mic_to_latin1|mic_to_latin2|mic_to_latin3|mic_to_latin4|mic_to_sjis|\" + \"mic_to_win1250|mic_to_win1251|mic_to_win866|min|mktinterval|mod|money|mul_d_interval|\" + \"name|nameeq|namege|namegt|nameiclike|nameicnlike|nameicregexeq|nameicregexne|namein|\" + \"namele|namelike|namelt|namene|namenlike|nameout|namerecv|nameregexeq|nameregexne|namesend|\" + \"neqjoinsel|neqsel|netmask|network|network_cmp|network_eq|network_ge|network_gt|\" + \"network_le|network_lt|network_ne|network_sub|network_subeq|network_sup|network_supeq|\" + \"nextval|nlikejoinsel|nlikesel|notlike|now|npoints|nth_value|ntile|numeric_abs|\" + \"numeric_accum|numeric_add|numeric_avg|numeric_avg_accum|numeric_cmp|numeric_div|\" + \"numeric_div_trunc|numeric_eq|numeric_exp|numeric_fac|numeric_ge|numeric_gt|numeric_in|\" + \"numeric_inc|numeric_larger|numeric_le|numeric_ln|numeric_log|numeric_lt|numeric_mod|\" + \"numeric_mul|numeric_ne|numeric_out|numeric_power|numeric_recv|numeric_send|\" + \"numeric_smaller|numeric_sqrt|numeric_stddev_pop|numeric_stddev_samp|numeric_sub|\" + \"numeric_transform|numeric_uminus|numeric_uplus|numeric_var_pop|numeric_var_samp|\" + \"numerictypmodin|numerictypmodout|numnode|numrange|numrange_subdiff|obj_description|\" + \"octet_length|oid|oideq|oidge|oidgt|oidin|oidlarger|oidle|oidlt|oidne|oidout|oidrecv|oidsend|\" + \"oidsmaller|oidvectoreq|oidvectorge|oidvectorgt|oidvectorin|oidvectorle|oidvectorlt|\" + \"oidvectorne|oidvectorout|oidvectorrecv|oidvectorsend|oidvectortypes|on_pb|on_pl|\" + \"on_ppath|on_ps|on_sb|on_sl|opaque_in|opaque_out|overlaps|overlay|path|path_add|path_add_pt|\" + \"path_center|path_contain_pt|path_distance|path_div_pt|path_in|path_inter|path_length|\" + \"path_mul_pt|path_n_eq|path_n_ge|path_n_gt|path_n_le|path_n_lt|path_npoints|path_out|\" + \"path_recv|path_send|path_sub_pt|pclose|percent_rank|pg_advisory_lock|\" + \"pg_advisory_lock_shared|pg_advisory_unlock|pg_advisory_unlock_all|\" + \"pg_advisory_unlock_shared|pg_advisory_xact_lock|pg_advisory_xact_lock_shared|\" + \"pg_available_extension_versions|pg_available_extensions|pg_backend_pid|\" + \"pg_backup_start_time|pg_cancel_backend|pg_char_to_encoding|pg_client_encoding|\" + \"pg_collation_for|pg_collation_is_visible|pg_column_is_updatable|pg_column_size|\" + \"pg_conf_load_time|pg_conversion_is_visible|pg_create_restore_point|\" + \"pg_current_xlog_insert_location|pg_current_xlog_location|pg_cursor|pg_database_size|\" + \"pg_describe_object|pg_encoding_max_length|pg_encoding_to_char|\" + \"pg_event_trigger_dropped_objects|pg_export_snapshot|pg_extension_config_dump|\" + \"pg_extension_update_paths|pg_function_is_visible|pg_get_constraintdef|pg_get_expr|\" + \"pg_get_function_arguments|pg_get_function_identity_arguments|\" + \"pg_get_function_result|pg_get_functiondef|pg_get_indexdef|pg_get_keywords|\" + \"pg_get_multixact_members|pg_get_ruledef|pg_get_serial_sequence|pg_get_triggerdef|\" + \"pg_get_userbyid|pg_get_viewdef|pg_has_role|pg_identify_object|pg_indexes_size|\" + \"pg_is_in_backup|pg_is_in_recovery|pg_is_other_temp_schema|pg_is_xlog_replay_paused|\" + \"pg_last_xact_replay_timestamp|pg_last_xlog_receive_location|\" + \"pg_last_xlog_replay_location|pg_listening_channels|pg_lock_status|pg_ls_dir|\" + \"pg_my_temp_schema|pg_node_tree_in|pg_node_tree_out|pg_node_tree_recv|\" + \"pg_node_tree_send|pg_notify|pg_opclass_is_visible|pg_operator_is_visible|\" + \"pg_opfamily_is_visible|pg_options_to_table|pg_postmaster_start_time|\" + \"pg_prepared_statement|pg_prepared_xact|pg_read_binary_file|pg_read_file|\" + \"pg_relation_filenode|pg_relation_filepath|pg_relation_is_updatable|pg_relation_size|\" + \"pg_reload_conf|pg_rotate_logfile|pg_sequence_parameters|pg_show_all_settings|\" + \"pg_size_pretty|pg_sleep|pg_start_backup|pg_stat_clear_snapshot|pg_stat_file|\" + \"pg_stat_get_activity|pg_stat_get_analyze_count|pg_stat_get_autoanalyze_count|\" + \"pg_stat_get_autovacuum_count|pg_stat_get_backend_activity|\" + \"pg_stat_get_backend_activity_start|pg_stat_get_backend_client_addr|\" + \"pg_stat_get_backend_client_port|pg_stat_get_backend_dbid|pg_stat_get_backend_idset|\" + \"pg_stat_get_backend_pid|pg_stat_get_backend_start|pg_stat_get_backend_userid|\" + \"pg_stat_get_backend_waiting|pg_stat_get_backend_xact_start|\" + \"pg_stat_get_bgwriter_buf_written_checkpoints|\" + \"pg_stat_get_bgwriter_buf_written_clean|pg_stat_get_bgwriter_maxwritten_clean|\" + \"pg_stat_get_bgwriter_requested_checkpoints|pg_stat_get_bgwriter_stat_reset_time|\" + \"pg_stat_get_bgwriter_timed_checkpoints|pg_stat_get_blocks_fetched|\" + \"pg_stat_get_blocks_hit|pg_stat_get_buf_alloc|pg_stat_get_buf_fsync_backend|\" + \"pg_stat_get_buf_written_backend|pg_stat_get_checkpoint_sync_time|\" + \"pg_stat_get_checkpoint_write_time|pg_stat_get_db_blk_read_time|\" + \"pg_stat_get_db_blk_write_time|pg_stat_get_db_blocks_fetched|\" + \"pg_stat_get_db_blocks_hit|pg_stat_get_db_conflict_all|\" + \"pg_stat_get_db_conflict_bufferpin|pg_stat_get_db_conflict_lock|\" + \"pg_stat_get_db_conflict_snapshot|pg_stat_get_db_conflict_startup_deadlock|\" + \"pg_stat_get_db_conflict_tablespace|pg_stat_get_db_deadlocks|\" + \"pg_stat_get_db_numbackends|pg_stat_get_db_stat_reset_time|\" + \"pg_stat_get_db_temp_bytes|pg_stat_get_db_temp_files|pg_stat_get_db_tuples_deleted|\" + \"pg_stat_get_db_tuples_fetched|pg_stat_get_db_tuples_inserted|\" + \"pg_stat_get_db_tuples_returned|pg_stat_get_db_tuples_updated|\" + \"pg_stat_get_db_xact_commit|pg_stat_get_db_xact_rollback|pg_stat_get_dead_tuples|\" + \"pg_stat_get_function_calls|pg_stat_get_function_self_time|\" + \"pg_stat_get_function_total_time|pg_stat_get_last_analyze_time|\" + \"pg_stat_get_last_autoanalyze_time|pg_stat_get_last_autovacuum_time|\" + \"pg_stat_get_last_vacuum_time|pg_stat_get_live_tuples|pg_stat_get_numscans|\" + \"pg_stat_get_tuples_deleted|pg_stat_get_tuples_fetched|\" + \"pg_stat_get_tuples_hot_updated|pg_stat_get_tuples_inserted|\" + \"pg_stat_get_tuples_returned|pg_stat_get_tuples_updated|pg_stat_get_vacuum_count|\" + \"pg_stat_get_wal_senders|pg_stat_get_xact_blocks_fetched|\" + \"pg_stat_get_xact_blocks_hit|pg_stat_get_xact_function_calls|\" + \"pg_stat_get_xact_function_self_time|pg_stat_get_xact_function_total_time|\" + \"pg_stat_get_xact_numscans|pg_stat_get_xact_tuples_deleted|\" + \"pg_stat_get_xact_tuples_fetched|pg_stat_get_xact_tuples_hot_updated|\" + \"pg_stat_get_xact_tuples_inserted|pg_stat_get_xact_tuples_returned|\" + \"pg_stat_get_xact_tuples_updated|pg_stat_reset|pg_stat_reset_shared|\" + \"pg_stat_reset_single_function_counters|pg_stat_reset_single_table_counters|\" + \"pg_stop_backup|pg_switch_xlog|pg_table_is_visible|pg_table_size|\" + \"pg_tablespace_databases|pg_tablespace_location|pg_tablespace_size|\" + \"pg_terminate_backend|pg_timezone_abbrevs|pg_timezone_names|pg_total_relation_size|\" + \"pg_trigger_depth|pg_try_advisory_lock|pg_try_advisory_lock_shared|\" + \"pg_try_advisory_xact_lock|pg_try_advisory_xact_lock_shared|pg_ts_config_is_visible|\" + \"pg_ts_dict_is_visible|pg_ts_parser_is_visible|pg_ts_template_is_visible|\" + \"pg_type_is_visible|pg_typeof|pg_xlog_location_diff|pg_xlog_replay_pause|\" + \"pg_xlog_replay_resume|pg_xlogfile_name|pg_xlogfile_name_offset|pi|plainto_tsquery|\" + \"plpgsql_call_handler|plpgsql_inline_handler|plpgsql_validator|point|point_above|\" + \"point_add|point_below|point_distance|point_div|point_eq|point_horiz|point_in|point_left|\" + \"point_mul|point_ne|point_out|point_recv|point_right|point_send|point_sub|point_vert|\" + \"poly_above|poly_below|poly_center|poly_contain|poly_contain_pt|poly_contained|\" + \"poly_distance|poly_in|poly_left|poly_npoints|poly_out|poly_overabove|poly_overbelow|\" + \"poly_overlap|poly_overleft|poly_overright|poly_recv|poly_right|poly_same|poly_send|\" + \"polygon|popen|position|positionjoinsel|positionsel|postgresql_fdw_validator|pow|power|\" + \"prsd_end|prsd_headline|prsd_lextype|prsd_nexttoken|prsd_start|pt_contained_circle|\" + \"pt_contained_poly|query_to_xml|query_to_xml_and_xmlschema|query_to_xmlschema|\" + \"querytree|quote_ident|quote_literal|quote_nullable|radians|radius|random|range_adjacent|\" + \"range_after|range_before|range_cmp|range_contained_by|range_contains|\" + \"range_contains_elem|range_eq|range_ge|range_gist_compress|range_gist_consistent|\" + \"range_gist_decompress|range_gist_penalty|range_gist_picksplit|range_gist_same|\" + \"range_gist_union|range_gt|range_in|range_intersect|range_le|range_lt|range_minus|\" + \"range_ne|range_out|range_overlaps|range_overleft|range_overright|range_recv|range_send|\" + \"range_typanalyze|range_union|rangesel|rank|record_eq|record_ge|record_gt|record_in|\" + \"record_le|record_lt|record_ne|record_out|record_recv|record_send|regclass|regclassin|\" + \"regclassout|regclassrecv|regclasssend|regconfigin|regconfigout|regconfigrecv|\" + \"regconfigsend|regdictionaryin|regdictionaryout|regdictionaryrecv|regdictionarysend|\" + \"regexeqjoinsel|regexeqsel|regexnejoinsel|regexnesel|regexp_matches|regexp_replace|\" + \"regexp_split_to_array|regexp_split_to_table|regoperatorin|regoperatorout|\" + \"regoperatorrecv|regoperatorsend|regoperin|regoperout|regoperrecv|regopersend|\" + \"regprocedurein|regprocedureout|regprocedurerecv|regproceduresend|regprocin|regprocout|\" + \"regprocrecv|regprocsend|regr_avgx|regr_avgy|regr_count|regr_intercept|regr_r2|\" + \"regr_slope|regr_sxx|regr_sxy|regr_syy|regtypein|regtypeout|regtyperecv|regtypesend|\" + \"reltime|reltimeeq|reltimege|reltimegt|reltimein|reltimele|reltimelt|reltimene|reltimeout|\" + \"reltimerecv|reltimesend|repeat|replace|reverse|right|round|row_number|row_to_json|rpad|\" + \"rtrim|scalargtjoinsel|scalargtsel|scalarltjoinsel|scalarltsel|schema_to_xml|\" + \"schema_to_xml_and_xmlschema|schema_to_xmlschema|session_user|set_bit|set_byte|\" + \"set_config|set_masklen|setseed|setval|setweight|shell_in|shell_out|\" + \"shift_jis_2004_to_euc_jis_2004|shift_jis_2004_to_utf8|shobj_description|sign|\" + \"similar_escape|sin|sjis_to_euc_jp|sjis_to_mic|sjis_to_utf8|slope|smgreq|smgrin|smgrne|\" + \"smgrout|spg_kd_choose|spg_kd_config|spg_kd_inner_consistent|spg_kd_picksplit|\" + \"spg_quad_choose|spg_quad_config|spg_quad_inner_consistent|spg_quad_leaf_consistent|\" + \"spg_quad_picksplit|spg_range_quad_choose|spg_range_quad_config|\" + \"spg_range_quad_inner_consistent|spg_range_quad_leaf_consistent|\" + \"spg_range_quad_picksplit|spg_text_choose|spg_text_config|spg_text_inner_consistent|\" + \"spg_text_leaf_consistent|spg_text_picksplit|spgbeginscan|spgbuild|spgbuildempty|\" + \"spgbulkdelete|spgcanreturn|spgcostestimate|spgendscan|spggetbitmap|spggettuple|\" + \"spginsert|spgmarkpos|spgoptions|spgrescan|spgrestrpos|spgvacuumcleanup|split_part|sqrt|\" + \"statement_timestamp|stddev|stddev_pop|stddev_samp|string_agg|string_agg_finalfn|\" + \"string_agg_transfn|string_to_array|strip|strpos|substr|substring|sum|\" + \"suppress_redundant_updates_trigger|table_to_xml|table_to_xml_and_xmlschema|\" + \"table_to_xmlschema|tan|text|text_ge|text_gt|text_larger|text_le|text_lt|text_pattern_ge|\" + \"text_pattern_gt|text_pattern_le|text_pattern_lt|text_smaller|textanycat|textcat|texteq|\" + \"texticlike|texticnlike|texticregexeq|texticregexne|textin|textlen|textlike|textne|\" + \"textnlike|textout|textrecv|textregexeq|textregexne|textsend|thesaurus_init|\" + \"thesaurus_lexize|tideq|tidge|tidgt|tidin|tidlarger|tidle|tidlt|tidne|tidout|tidrecv|tidsend|\" + \"tidsmaller|time_cmp|time_eq|time_ge|time_gt|time_hash|time_in|time_larger|time_le|time_lt|\" + \"time_mi_interval|time_mi_time|time_ne|time_out|time_pl_interval|time_recv|time_send|\" + \"time_smaller|time_transform|timedate_pl|timemi|timenow|timeofday|timepl|timestamp_cmp|\" + \"timestamp_cmp_date|timestamp_cmp_timestamptz|timestamp_eq|timestamp_eq_date|\" + \"timestamp_eq_timestamptz|timestamp_ge|timestamp_ge_date|timestamp_ge_timestamptz|\" + \"timestamp_gt|timestamp_gt_date|timestamp_gt_timestamptz|timestamp_hash|timestamp_in|\" + \"timestamp_larger|timestamp_le|timestamp_le_date|timestamp_le_timestamptz|\" + \"timestamp_lt|timestamp_lt_date|timestamp_lt_timestamptz|timestamp_mi|\" + \"timestamp_mi_interval|timestamp_ne|timestamp_ne_date|timestamp_ne_timestamptz|\" + \"timestamp_out|timestamp_pl_interval|timestamp_recv|timestamp_send|timestamp_smaller|\" + \"timestamp_sortsupport|timestamp_transform|timestamptypmodin|timestamptypmodout|\" + \"timestamptz_cmp|timestamptz_cmp_date|timestamptz_cmp_timestamp|timestamptz_eq|\" + \"timestamptz_eq_date|timestamptz_eq_timestamp|timestamptz_ge|timestamptz_ge_date|\" + \"timestamptz_ge_timestamp|timestamptz_gt|timestamptz_gt_date|\" + \"timestamptz_gt_timestamp|timestamptz_in|timestamptz_larger|timestamptz_le|\" + \"timestamptz_le_date|timestamptz_le_timestamp|timestamptz_lt|timestamptz_lt_date|\" + \"timestamptz_lt_timestamp|timestamptz_mi|timestamptz_mi_interval|timestamptz_ne|\" + \"timestamptz_ne_date|timestamptz_ne_timestamp|timestamptz_out|\" + \"timestamptz_pl_interval|timestamptz_recv|timestamptz_send|timestamptz_smaller|\" + \"timestamptztypmodin|timestamptztypmodout|timetypmodin|timetypmodout|timetz_cmp|\" + \"timetz_eq|timetz_ge|timetz_gt|timetz_hash|timetz_in|timetz_larger|timetz_le|timetz_lt|\" + \"timetz_mi_interval|timetz_ne|timetz_out|timetz_pl_interval|timetz_recv|timetz_send|\" + \"timetz_smaller|timetzdate_pl|timetztypmodin|timetztypmodout|timezone|tinterval|\" + \"tintervalct|tintervalend|tintervaleq|tintervalge|tintervalgt|tintervalin|tintervalle|\" + \"tintervalleneq|tintervallenge|tintervallengt|tintervallenle|tintervallenlt|\" + \"tintervallenne|tintervallt|tintervalne|tintervalout|tintervalov|tintervalrecv|\" + \"tintervalrel|tintervalsame|tintervalsend|tintervalstart|to_ascii|to_char|to_date|to_hex|\" + \"to_json|to_number|to_timestamp|to_tsquery|to_tsvector|transaction_timestamp|translate|\" + \"trigger_in|trigger_out|trunc|ts_debug|ts_headline|ts_lexize|ts_match_qv|ts_match_tq|\" + \"ts_match_tt|ts_match_vq|ts_parse|ts_rank|ts_rank_cd|ts_rewrite|ts_stat|ts_token_type|\" + \"ts_typanalyze|tsmatchjoinsel|tsmatchsel|tsq_mcontained|tsq_mcontains|tsquery_and|\" + \"tsquery_cmp|tsquery_eq|tsquery_ge|tsquery_gt|tsquery_le|tsquery_lt|tsquery_ne|\" + \"tsquery_not|tsquery_or|tsqueryin|tsqueryout|tsqueryrecv|tsquerysend|tsrange|\" + \"tsrange_subdiff|tstzrange|tstzrange_subdiff|tsvector_cmp|tsvector_concat|tsvector_eq|\" + \"tsvector_ge|tsvector_gt|tsvector_le|tsvector_lt|tsvector_ne|tsvector_update_trigger|\" + \"tsvector_update_trigger_column|tsvectorin|tsvectorout|tsvectorrecv|tsvectorsend|\" + \"txid_current|txid_current_snapshot|txid_snapshot_in|txid_snapshot_out|\" + \"txid_snapshot_recv|txid_snapshot_send|txid_snapshot_xip|txid_snapshot_xmax|\" + \"txid_snapshot_xmin|txid_visible_in_snapshot|uhc_to_utf8|unique_key_recheck|unknownin|\" + \"unknownout|unknownrecv|unknownsend|unnest|upper|upper_inc|upper_inf|utf8_to_ascii|\" + \"utf8_to_big5|utf8_to_euc_cn|utf8_to_euc_jis_2004|utf8_to_euc_jp|utf8_to_euc_kr|\" + \"utf8_to_euc_tw|utf8_to_gb18030|utf8_to_gbk|utf8_to_iso8859|utf8_to_iso8859_1|\" + \"utf8_to_johab|utf8_to_koi8r|utf8_to_koi8u|utf8_to_shift_jis_2004|utf8_to_sjis|\" + \"utf8_to_uhc|utf8_to_win|uuid_cmp|uuid_eq|uuid_ge|uuid_gt|uuid_hash|uuid_in|uuid_le|\" + \"uuid_lt|uuid_ne|uuid_out|uuid_recv|uuid_send|var_pop|var_samp|varbit_in|varbit_out|\" + \"varbit_recv|varbit_send|varbit_transform|varbitcmp|varbiteq|varbitge|varbitgt|varbitle|\" + \"varbitlt|varbitne|varbittypmodin|varbittypmodout|varchar_transform|varcharin|\" + \"varcharout|varcharrecv|varcharsend|varchartypmodin|varchartypmodout|variance|version|\" + \"void_in|void_out|void_recv|void_send|width|width_bucket|win1250_to_latin2|\" + \"win1250_to_mic|win1251_to_iso|win1251_to_koi8r|win1251_to_mic|win1251_to_win866|\" + \"win866_to_iso|win866_to_koi8r|win866_to_mic|win866_to_win1251|win_to_utf8|xideq|\" + \"xideqint4|xidin|xidout|xidrecv|xidsend|xml|xml_in|xml_is_well_formed|\" + \"xml_is_well_formed_content|xml_is_well_formed_document|xml_out|xml_recv|xml_send|\" + \"xmlagg|xmlcomment|xmlconcat2|xmlexists|xmlvalidate|xpath|xpath_exists\";\n    var keywordMapper = this.createKeywordMapper({\n      \"support.function\": builtinFunctions,\n      \"keyword\": keywords\n    }, \"identifier\", true);\n    var sqlRules = [{\n      token: \"string\",\n      // single line string -- assume dollar strings if multi-line for now\n      regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n    }, {\n      token: \"variable.language\",\n      // pg identifier\n      regex: '\".*?\"'\n    }, {\n      token: \"constant.numeric\",\n      // float\n      regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n    }, {\n      token: keywordMapper,\n      regex: \"[a-zA-Z_][a-zA-Z0-9_$]*\\\\b\" // TODO - Unicode in identifiers\n    }, {\n      token: \"keyword.operator\",\n      regex: \"!|!!|!~|!~\\\\*|!~~|!~~\\\\*|#|##|#<|#<=|#<>|#=|#>|#>=|%|\\\\&|\\\\&\\\\&|\\\\&<|\\\\&<\\\\||\\\\&>|\\\\*|\\\\+|\" + \"\\\\-|/|<|<#>|<\\\\->|<<|<<=|<<\\\\||<=|<>|<\\\\?>|<@|<\\\\^|=|>|>=|>>|>>=|>\\\\^|\\\\?#|\\\\?\\\\-|\\\\?\\\\-\\\\||\" + \"\\\\?\\\\||\\\\?\\\\|\\\\||@|@\\\\-@|@>|@@|@@@|\\\\^|\\\\||\\\\|\\\\&>|\\\\|/|\\\\|>>|\\\\|\\\\||\\\\|\\\\|/|~|~\\\\*|~<=~|~<~|\" + \"~=|~>=~|~>~|~~|~~\\\\*\"\n    }, {\n      token: \"paren.lparen\",\n      regex: \"[\\\\(]\"\n    }, {\n      token: \"paren.rparen\",\n      regex: \"[\\\\)]\"\n    }, {\n      token: \"text\",\n      regex: \"\\\\s+\"\n    }];\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"--.*$\"\n      }, DocCommentHighlightRules.getStartRule(\"doc-start\"), {\n        token: \"comment\",\n        // multi-line comment\n        regex: \"\\\\/\\\\*\",\n        next: \"comment\"\n      }, {\n        token: \"keyword.statementBegin\",\n        regex: \"[a-zA-Z]+\",\n        // Could enumerate starting keywords but this allows things to work when new statements are added.\n        next: \"statement\"\n      }, {\n        token: \"support.buildin\",\n        // psql directive\n        regex: \"^\\\\\\\\[\\\\S]+.*$\"\n      }],\n      \"statement\": [{\n        token: \"comment\",\n        regex: \"--.*$\"\n      }, {\n        token: \"comment\",\n        // multi-line comment\n        regex: \"\\\\/\\\\*\",\n        next: \"commentStatement\"\n      }, {\n        token: \"statementEnd\",\n        regex: \";\",\n        next: \"start\"\n      }, {\n        token: \"string\",\n        regex: \"\\\\$perl\\\\$\",\n        next: \"perl-start\"\n      }, {\n        token: \"string\",\n        regex: \"\\\\$python\\\\$\",\n        next: \"python-start\"\n      }, {\n        token: \"string\",\n        regex: \"\\\\$json\\\\$\",\n        next: \"json-start\"\n      }, {\n        token: \"string\",\n        regex: \"\\\\$(js|javascript)\\\\$\",\n        next: \"javascript-start\"\n      }, {\n        token: \"string\",\n        regex: \"\\\\$\\\\$$\",\n        next: \"dollarSql\"\n      }, {\n        token: \"string\",\n        regex: \"\\\\$[\\\\w_0-9]*\\\\$\",\n        next: \"dollarStatementString\"\n      }].concat(sqlRules),\n      \"dollarSql\": [{\n        token: \"comment\",\n        regex: \"--.*$\"\n      }, {\n        token: \"comment\",\n        // multi-line comment\n        regex: \"\\\\/\\\\*\",\n        next: \"commentDollarSql\"\n      }, {\n        token: [\"keyword\", \"statementEnd\", \"text\", \"string\"],\n        // end quoting with dollar at the start of a line\n        regex: \"(^|END)(;)?(\\\\s*)(\\\\$\\\\$)\",\n        next: \"statement\"\n      }, {\n        token: \"string\",\n        regex: \"\\\\$[\\\\w_0-9]*\\\\$\",\n        next: \"dollarSqlString\"\n      }].concat(sqlRules),\n      \"comment\": [{\n        token: \"comment\",\n        // closing comment\n        regex: \"\\\\*\\\\/\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment\"\n      }],\n      \"commentStatement\": [{\n        token: \"comment\",\n        // closing comment\n        regex: \"\\\\*\\\\/\",\n        next: \"statement\"\n      }, {\n        defaultToken: \"comment\"\n      }],\n      \"commentDollarSql\": [{\n        token: \"comment\",\n        // closing comment\n        regex: \"\\\\*\\\\/\",\n        next: \"dollarSql\"\n      }, {\n        defaultToken: \"comment\"\n      }],\n      \"dollarStatementString\": [{\n        token: \"string\",\n        // closing dollarstring\n        regex: \".*?\\\\$[\\\\w_0-9]*\\\\$\",\n        next: \"statement\"\n      }, {\n        token: \"string\",\n        // dollarstring spanning whole line\n        regex: \".+\"\n      }],\n      \"dollarSqlString\": [{\n        token: \"string\",\n        // closing dollarstring\n        regex: \".*?\\\\$[\\\\w_0-9]*\\\\$\",\n        next: \"dollarSql\"\n      }, {\n        token: \"string\",\n        // dollarstring spanning whole line\n        regex: \".+\"\n      }]\n    };\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"start\")]);\n    this.embedRules(PerlHighlightRules, \"perl-\", [{\n      token: \"string\",\n      regex: \"\\\\$perl\\\\$\",\n      next: \"statement\"\n    }]);\n    this.embedRules(PythonHighlightRules, \"python-\", [{\n      token: \"string\",\n      regex: \"\\\\$python\\\\$\",\n      next: \"statement\"\n    }]);\n    this.embedRules(JsonHighlightRules, \"json-\", [{\n      token: \"string\",\n      regex: \"\\\\$json\\\\$\",\n      next: \"statement\"\n    }]);\n    this.embedRules(JavaScriptHighlightRules, \"javascript-\", [{\n      token: \"string\",\n      regex: \"\\\\$(js|javascript)\\\\$\",\n      next: \"statement\"\n    }]);\n  };\n  oop.inherits(PgsqlHighlightRules, TextHighlightRules);\n  exports.PgsqlHighlightRules = PgsqlHighlightRules;\n});\nace.define(\"ace/mode/pgsql\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/pgsql_highlight_rules\"], function (require, exports, module) {\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"../mode/text\").Mode;\n  var PgsqlHighlightRules = require(\"./pgsql_highlight_rules\").PgsqlHighlightRules;\n  var Mode = function () {\n    this.HighlightRules = PgsqlHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"--\";\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\"\n    };\n    this.getNextLineIndent = function (state, line, tab) {\n      if (state == \"start\" || state == \"keyword.statementEnd\") {\n        return \"\";\n      } else {\n        return this.$getIndent(line); // Keep whatever indent the previous line has\n      }\n    };\n    this.$id = \"ace/mode/pgsql\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/pgsql\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","DocCommentHighlightRules","$rules","token","regex","getTagRule","defaultToken","caseInsensitive","inherits","start","getStartRule","next","getEndRule","PerlHighlightRules","keywords","buildinConstants","builtinFunctions","keywordMapper","createKeywordMapper","PythonHighlightRules","builtinConstants","strPre","strRawPre","strFormatPre","strRawFormatPre","decimalInteger","octInteger","hexInteger","binInteger","integer","exponent","fraction","intPart","pointFloat","exponentFloat","floatNumber","stringEscape","include","push","normalizeRules","JsonHighlightRules","JsDocCommentHighlightRules","identifierRe","JavaScriptHighlightRules","options","kwBeforeRe","escapedRe","anonymousFunctionRe","functionCallStartRule","Object","values","join","comments","property","consumeLineEnd","noES6","no_regex","unshift","onMatch","val","state","stack","nextState","length","shift","indexOf","jsx","JSX","call","embedRules","tagRegex","replace","jsxTag","offset","charAt","type","value","slice","substr","jsxJsRule","jsxAttributes","currentState","splice","stateName","reference","lang","PgsqlHighlightRules","sqlRules","concat","TextMode","Mode","HighlightRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","end","getNextLineIndent","line","tab","$getIndent","$id","prototype","m"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-pgsql.js"],"sourcesContent":["ace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar DocCommentHighlightRules = function () {\n    this.$rules = {\n        \"start\": [\n            {\n                token: \"comment.doc.tag\",\n                regex: \"@\\\\w+(?=\\\\s|$)\"\n            }, DocCommentHighlightRules.getTagRule(), {\n                defaultToken: \"comment.doc.body\",\n                caseInsensitive: true\n            }\n        ]\n    };\n};\noop.inherits(DocCommentHighlightRules, TextHighlightRules);\nDocCommentHighlightRules.getTagRule = function (start) {\n    return {\n        token: \"comment.doc.tag.storage.type\",\n        regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n};\nDocCommentHighlightRules.getStartRule = function (start) {\n    return {\n        token: \"comment.doc\", // doc comment\n        regex: /\\/\\*\\*(?!\\/)/,\n        next: start\n    };\n};\nDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token: \"comment.doc\", // closing comment\n        regex: \"\\\\*\\\\/\",\n        next: start\n    };\n};\nexports.DocCommentHighlightRules = DocCommentHighlightRules;\n\n});\n\nace.define(\"ace/mode/perl_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar PerlHighlightRules = function () {\n    var keywords = (\"base|constant|continue|else|elsif|for|foreach|format|goto|if|last|local|my|next|\" +\n        \"no|package|parent|redo|require|scalar|sub|unless|until|while|use|vars\");\n    var buildinConstants = (\"ARGV|ENV|INC|SIG\");\n    var builtinFunctions = (\"getprotobynumber|getprotobyname|getservbyname|gethostbyaddr|\" +\n        \"gethostbyname|getservbyport|getnetbyaddr|getnetbyname|getsockname|\" +\n        \"getpeername|setpriority|getprotoent|setprotoent|getpriority|\" +\n        \"endprotoent|getservent|setservent|endservent|sethostent|socketpair|\" +\n        \"getsockopt|gethostent|endhostent|setsockopt|setnetent|quotemeta|\" +\n        \"localtime|prototype|getnetent|endnetent|rewinddir|wantarray|getpwuid|\" +\n        \"closedir|getlogin|readlink|endgrent|getgrgid|getgrnam|shmwrite|\" +\n        \"shutdown|readline|endpwent|setgrent|readpipe|formline|truncate|\" +\n        \"dbmclose|syswrite|setpwent|getpwnam|getgrent|getpwent|ucfirst|sysread|\" +\n        \"setpgrp|shmread|sysseek|sysopen|telldir|defined|opendir|connect|\" +\n        \"lcfirst|getppid|binmode|syscall|sprintf|getpgrp|readdir|seekdir|\" +\n        \"waitpid|reverse|unshift|symlink|dbmopen|semget|msgrcv|rename|listen|\" +\n        \"chroot|msgsnd|shmctl|accept|unpack|exists|fileno|shmget|system|\" +\n        \"unlink|printf|gmtime|msgctl|semctl|values|rindex|substr|splice|\" +\n        \"length|msgget|select|socket|return|caller|delete|alarm|ioctl|index|\" +\n        \"undef|lstat|times|srand|chown|fcntl|close|write|umask|rmdir|study|\" +\n        \"sleep|chomp|untie|print|utime|mkdir|atan2|split|crypt|flock|chmod|\" +\n        \"BEGIN|bless|chdir|semop|shift|reset|link|stat|chop|grep|fork|dump|\" +\n        \"join|open|tell|pipe|exit|glob|warn|each|bind|sort|pack|eval|push|\" +\n        \"keys|getc|kill|seek|sqrt|send|wait|rand|tied|read|time|exec|recv|\" +\n        \"eof|chr|int|ord|exp|pos|pop|sin|log|abs|oct|hex|tie|cos|vec|END|ref|\" +\n        \"map|die|uc|lc|do\");\n    var keywordMapper = this.createKeywordMapper({\n        \"keyword\": keywords,\n        \"constant.language\": buildinConstants,\n        \"support.function\": builtinFunctions\n    }, \"identifier\");\n    this.$rules = {\n        \"start\": [\n            {\n                token: \"comment.doc\",\n                regex: \"^=(?:begin|item)\\\\b\",\n                next: \"block_comment\"\n            }, {\n                token: \"string.regexp\",\n                regex: \"[/](?:(?:\\\\[(?:\\\\\\\\]|[^\\\\]])+\\\\])|(?:\\\\\\\\/|[^\\\\]/]))*[/]\\\\w*\\\\s*(?=[).,;]|$)\"\n            }, {\n                token: \"string\", // single line\n                regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n            }, {\n                token: \"string\", // multi line string start\n                regex: '[\"].*\\\\\\\\$',\n                next: \"qqstring\"\n            }, {\n                token: \"string\", // single line\n                regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n            }, {\n                token: \"string\", // multi line string start\n                regex: \"['].*\\\\\\\\$\",\n                next: \"qstring\"\n            }, {\n                token: \"constant.numeric\", // hex\n                regex: \"0x[0-9a-fA-F]+\\\\b\"\n            }, {\n                token: \"constant.numeric\", // float\n                regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n            }, {\n                token: keywordMapper,\n                regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n            }, {\n                token: \"keyword.operator\",\n                regex: \"%#|\\\\$#|\\\\.\\\\.\\\\.|\\\\|\\\\|=|>>=|<<=|<=>|&&=|=>|!~|\\\\^=|&=|\\\\|=|\\\\.=|x=|%=|\\\\/=|\\\\*=|\\\\-=|\\\\+=|=~|\\\\*\\\\*|\\\\-\\\\-|\\\\.\\\\.|\\\\|\\\\||&&|\\\\+\\\\+|\\\\->|!=|==|>=|<=|>>|<<|,|=|\\\\?\\\\:|\\\\^|\\\\||x|%|\\\\/|\\\\*|<|&|\\\\\\\\|~|!|>|\\\\.|\\\\-|\\\\+|\\\\-C|\\\\-b|\\\\-S|\\\\-u|\\\\-t|\\\\-p|\\\\-l|\\\\-d|\\\\-f|\\\\-g|\\\\-s|\\\\-z|\\\\-k|\\\\-e|\\\\-O|\\\\-T|\\\\-B|\\\\-M|\\\\-A|\\\\-X|\\\\-W|\\\\-c|\\\\-R|\\\\-o|\\\\-x|\\\\-w|\\\\-r|\\\\b(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|xor)\"\n            }, {\n                token: \"comment\",\n                regex: \"#.*$\"\n            }, {\n                token: \"lparen\",\n                regex: \"[[({]\"\n            }, {\n                token: \"rparen\",\n                regex: \"[\\\\])}]\"\n            }, {\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }\n        ],\n        \"qqstring\": [\n            {\n                token: \"string\",\n                regex: '(?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?\"',\n                next: \"start\"\n            }, {\n                token: \"string\",\n                regex: '.+'\n            }\n        ],\n        \"qstring\": [\n            {\n                token: \"string\",\n                regex: \"(?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?'\",\n                next: \"start\"\n            }, {\n                token: \"string\",\n                regex: '.+'\n            }\n        ],\n        \"block_comment\": [\n            {\n                token: \"comment.doc\",\n                regex: \"^=cut\\\\b\",\n                next: \"start\"\n            },\n            {\n                defaultToken: \"comment.doc\"\n            }\n        ]\n    };\n};\noop.inherits(PerlHighlightRules, TextHighlightRules);\nexports.PerlHighlightRules = PerlHighlightRules;\n\n});\n\nace.define(\"ace/mode/python_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){/*\n * TODO: python delimiters\n */\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar PythonHighlightRules = function () {\n    var keywords = (\"and|as|assert|break|class|continue|def|del|elif|else|except|exec|\" +\n        \"finally|for|from|global|if|import|in|is|lambda|not|or|pass|print|\" +\n        \"raise|return|try|while|with|yield|async|await|nonlocal\");\n    var builtinConstants = (\"True|False|None|NotImplemented|Ellipsis|__debug__\");\n    var builtinFunctions = (\"abs|divmod|input|open|staticmethod|all|enumerate|int|ord|str|any|\" +\n        \"eval|isinstance|pow|sum|basestring|execfile|issubclass|print|super|\" +\n        \"binfile|bin|iter|property|tuple|bool|filter|len|range|type|bytearray|\" +\n        \"float|list|raw_input|unichr|callable|format|locals|reduce|unicode|\" +\n        \"chr|frozenset|long|reload|vars|classmethod|getattr|map|repr|xrange|\" +\n        \"cmp|globals|max|reversed|zip|compile|hasattr|memoryview|round|\" +\n        \"__import__|complex|hash|min|apply|delattr|help|next|setattr|set|\" +\n        \"buffer|dict|hex|object|slice|coerce|dir|id|oct|sorted|intern|\" +\n        \"ascii|breakpoint|bytes\");\n    var keywordMapper = this.createKeywordMapper({\n        \"invalid.deprecated\": \"debugger\",\n        \"support.function\": builtinFunctions,\n        \"variable.language\": \"self|cls\",\n        \"constant.language\": builtinConstants,\n        \"keyword\": keywords\n    }, \"identifier\");\n    var strPre = \"[uU]?\";\n    var strRawPre = \"[rR]\";\n    var strFormatPre = \"[fF]\";\n    var strRawFormatPre = \"(?:[rR][fF]|[fF][rR])\";\n    var decimalInteger = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\n    var octInteger = \"(?:0[oO]?[0-7]+)\";\n    var hexInteger = \"(?:0[xX][\\\\dA-Fa-f]+)\";\n    var binInteger = \"(?:0[bB][01]+)\";\n    var integer = \"(?:\" + decimalInteger + \"|\" + octInteger + \"|\" + hexInteger + \"|\" + binInteger + \")\";\n    var exponent = \"(?:[eE][+-]?\\\\d+)\";\n    var fraction = \"(?:\\\\.\\\\d+)\";\n    var intPart = \"(?:\\\\d+)\";\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\n    var exponentFloat = \"(?:(?:\" + pointFloat + \"|\" + intPart + \")\" + exponent + \")\";\n    var floatNumber = \"(?:\" + exponentFloat + \"|\" + pointFloat + \")\";\n    var stringEscape = \"\\\\\\\\(x[0-9A-Fa-f]{2}|[0-7]{3}|[\\\\\\\\abfnrtv'\\\"]|U[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})\";\n    this.$rules = {\n        \"start\": [{\n                token: \"comment\",\n                regex: \"#.*$\"\n            }, {\n                token: \"string\", // multi line \"\"\" string start\n                regex: strPre + '\"{3}',\n                next: \"qqstring3\"\n            }, {\n                token: \"string\", // \" string\n                regex: strPre + '\"(?=.)',\n                next: \"qqstring\"\n            }, {\n                token: \"string\", // multi line ''' string start\n                regex: strPre + \"'{3}\",\n                next: \"qstring3\"\n            }, {\n                token: \"string\", // ' string\n                regex: strPre + \"'(?=.)\",\n                next: \"qstring\"\n            }, {\n                token: \"string\",\n                regex: strRawPre + '\"{3}',\n                next: \"rawqqstring3\"\n            }, {\n                token: \"string\",\n                regex: strRawPre + '\"(?=.)',\n                next: \"rawqqstring\"\n            }, {\n                token: \"string\",\n                regex: strRawPre + \"'{3}\",\n                next: \"rawqstring3\"\n            }, {\n                token: \"string\",\n                regex: strRawPre + \"'(?=.)\",\n                next: \"rawqstring\"\n            }, {\n                token: \"string\",\n                regex: strFormatPre + '\"{3}',\n                next: \"fqqstring3\"\n            }, {\n                token: \"string\",\n                regex: strFormatPre + '\"(?=.)',\n                next: \"fqqstring\"\n            }, {\n                token: \"string\",\n                regex: strFormatPre + \"'{3}\",\n                next: \"fqstring3\"\n            }, {\n                token: \"string\",\n                regex: strFormatPre + \"'(?=.)\",\n                next: \"fqstring\"\n            }, {\n                token: \"string\",\n                regex: strRawFormatPre + '\"{3}',\n                next: \"rfqqstring3\"\n            }, {\n                token: \"string\",\n                regex: strRawFormatPre + '\"(?=.)',\n                next: \"rfqqstring\"\n            }, {\n                token: \"string\",\n                regex: strRawFormatPre + \"'{3}\",\n                next: \"rfqstring3\"\n            }, {\n                token: \"string\",\n                regex: strRawFormatPre + \"'(?=.)\",\n                next: \"rfqstring\"\n            }, {\n                token: \"keyword.operator\",\n                regex: \"\\\\+|\\\\-|\\\\*|\\\\*\\\\*|\\\\/|\\\\/\\\\/|%|@|<<|>>|&|\\\\||\\\\^|~|<|>|<=|=>|==|!=|<>|=\"\n            }, {\n                token: \"punctuation\",\n                regex: \",|:|;|\\\\->|\\\\+=|\\\\-=|\\\\*=|\\\\/=|\\\\/\\\\/=|%=|@=|&=|\\\\|=|^=|>>=|<<=|\\\\*\\\\*=\"\n            }, {\n                token: \"paren.lparen\",\n                regex: \"[\\\\[\\\\(\\\\{]\"\n            }, {\n                token: \"paren.rparen\",\n                regex: \"[\\\\]\\\\)\\\\}]\"\n            }, {\n                token: [\"keyword\", \"text\", \"entity.name.function\"],\n                regex: \"(def|class)(\\\\s+)([\\\\u00BF-\\\\u1FFF\\\\u2C00-\\\\uD7FF\\\\w]+)\"\n            }, {\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }, {\n                include: \"constants\"\n            }],\n        \"qqstring3\": [{\n                token: \"constant.language.escape\",\n                regex: stringEscape\n            }, {\n                token: \"string\", // multi line \"\"\" string end\n                regex: '\"{3}',\n                next: \"start\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"qstring3\": [{\n                token: \"constant.language.escape\",\n                regex: stringEscape\n            }, {\n                token: \"string\", // multi line ''' string end\n                regex: \"'{3}\",\n                next: \"start\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"qqstring\": [{\n                token: \"constant.language.escape\",\n                regex: stringEscape\n            }, {\n                token: \"string\",\n                regex: \"\\\\\\\\$\",\n                next: \"qqstring\"\n            }, {\n                token: \"string\",\n                regex: '\"|$',\n                next: \"start\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"qstring\": [{\n                token: \"constant.language.escape\",\n                regex: stringEscape\n            }, {\n                token: \"string\",\n                regex: \"\\\\\\\\$\",\n                next: \"qstring\"\n            }, {\n                token: \"string\",\n                regex: \"'|$\",\n                next: \"start\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"rawqqstring3\": [{\n                token: \"string\", // multi line \"\"\" string end\n                regex: '\"{3}',\n                next: \"start\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"rawqstring3\": [{\n                token: \"string\", // multi line ''' string end\n                regex: \"'{3}\",\n                next: \"start\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"rawqqstring\": [{\n                token: \"string\",\n                regex: \"\\\\\\\\$\",\n                next: \"rawqqstring\"\n            }, {\n                token: \"string\",\n                regex: '\"|$',\n                next: \"start\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"rawqstring\": [{\n                token: \"string\",\n                regex: \"\\\\\\\\$\",\n                next: \"rawqstring\"\n            }, {\n                token: \"string\",\n                regex: \"'|$\",\n                next: \"start\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"fqqstring3\": [{\n                token: \"constant.language.escape\",\n                regex: stringEscape\n            }, {\n                token: \"string\", // multi line \"\"\" string end\n                regex: '\"{3}',\n                next: \"start\"\n            }, {\n                token: \"paren.lparen\",\n                regex: \"{\",\n                push: \"fqstringParRules\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"fqstring3\": [{\n                token: \"constant.language.escape\",\n                regex: stringEscape\n            }, {\n                token: \"string\", // multi line ''' string end\n                regex: \"'{3}\",\n                next: \"start\"\n            }, {\n                token: \"paren.lparen\",\n                regex: \"{\",\n                push: \"fqstringParRules\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"fqqstring\": [{\n                token: \"constant.language.escape\",\n                regex: stringEscape\n            }, {\n                token: \"string\",\n                regex: \"\\\\\\\\$\",\n                next: \"fqqstring\"\n            }, {\n                token: \"string\",\n                regex: '\"|$',\n                next: \"start\"\n            }, {\n                token: \"paren.lparen\",\n                regex: \"{\",\n                push: \"fqstringParRules\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"fqstring\": [{\n                token: \"constant.language.escape\",\n                regex: stringEscape\n            }, {\n                token: \"string\",\n                regex: \"'|$\",\n                next: \"start\"\n            }, {\n                token: \"paren.lparen\",\n                regex: \"{\",\n                push: \"fqstringParRules\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"rfqqstring3\": [{\n                token: \"string\", // multi line \"\"\" string end\n                regex: '\"{3}',\n                next: \"start\"\n            }, {\n                token: \"paren.lparen\",\n                regex: \"{\",\n                push: \"fqstringParRules\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"rfqstring3\": [{\n                token: \"string\", // multi line ''' string end\n                regex: \"'{3}\",\n                next: \"start\"\n            }, {\n                token: \"paren.lparen\",\n                regex: \"{\",\n                push: \"fqstringParRules\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"rfqqstring\": [{\n                token: \"string\",\n                regex: \"\\\\\\\\$\",\n                next: \"rfqqstring\"\n            }, {\n                token: \"string\",\n                regex: '\"|$',\n                next: \"start\"\n            }, {\n                token: \"paren.lparen\",\n                regex: \"{\",\n                push: \"fqstringParRules\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"rfqstring\": [{\n                token: \"string\",\n                regex: \"'|$\",\n                next: \"start\"\n            }, {\n                token: \"paren.lparen\",\n                regex: \"{\",\n                push: \"fqstringParRules\"\n            }, {\n                defaultToken: \"string\"\n            }],\n        \"fqstringParRules\": [{\n                token: \"paren.lparen\",\n                regex: \"[\\\\[\\\\(]\"\n            }, {\n                token: \"paren.rparen\",\n                regex: \"[\\\\]\\\\)]\"\n            }, {\n                token: \"string\",\n                regex: \"\\\\s+\"\n            }, {\n                token: \"string\",\n                regex: \"'[^']*'\"\n            }, {\n                token: \"string\",\n                regex: '\"[^\"]*\"'\n            }, {\n                token: \"function.support\",\n                regex: \"(!s|!r|!a)\"\n            }, {\n                include: \"constants\"\n            }, {\n                token: 'paren.rparen',\n                regex: \"}\",\n                next: 'pop'\n            }, {\n                token: 'paren.lparen',\n                regex: \"{\",\n                push: \"fqstringParRules\"\n            }],\n        \"constants\": [{\n                token: \"constant.numeric\", // imaginary\n                regex: \"(?:\" + floatNumber + \"|\\\\d+)[jJ]\\\\b\"\n            }, {\n                token: \"constant.numeric\", // float\n                regex: floatNumber\n            }, {\n                token: \"constant.numeric\", // long integer\n                regex: integer + \"[lL]\\\\b\"\n            }, {\n                token: \"constant.numeric\", // integer\n                regex: integer + \"\\\\b\"\n            }, {\n                token: [\"punctuation\", \"function.support\"], // method\n                regex: \"(\\\\.)([a-zA-Z_]+)\\\\b\"\n            }, {\n                token: keywordMapper,\n                regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n            }]\n    };\n    this.normalizeRules();\n};\noop.inherits(PythonHighlightRules, TextHighlightRules);\nexports.PythonHighlightRules = PythonHighlightRules;\n\n});\n\nace.define(\"ace/mode/json_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar JsonHighlightRules = function () {\n    this.$rules = {\n        \"start\": [\n            {\n                token: \"variable\", // single line\n                regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]\\\\s*(?=:)'\n            }, {\n                token: \"string\", // single line\n                regex: '\"',\n                next: \"string\"\n            }, {\n                token: \"constant.numeric\", // hex\n                regex: \"0[xX][0-9a-fA-F]+\\\\b\"\n            }, {\n                token: \"constant.numeric\", // float\n                regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n            }, {\n                token: \"constant.language.boolean\",\n                regex: \"(?:true|false)\\\\b\"\n            }, {\n                token: \"text\", // single quoted strings are not allowed\n                regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n            }, {\n                token: \"comment\", // comments are not allowed, but who cares?\n                regex: \"\\\\/\\\\/.*$\"\n            }, {\n                token: \"comment.start\", // comments are not allowed, but who cares?\n                regex: \"\\\\/\\\\*\",\n                next: \"comment\"\n            }, {\n                token: \"paren.lparen\",\n                regex: \"[[({]\"\n            }, {\n                token: \"paren.rparen\",\n                regex: \"[\\\\])}]\"\n            }, {\n                token: \"punctuation.operator\",\n                regex: /[,]/\n            }, {\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }\n        ],\n        \"string\": [\n            {\n                token: \"constant.language.escape\",\n                regex: /\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|[\"\\\\\\/bfnrt])/\n            }, {\n                token: \"string\",\n                regex: '\"|$',\n                next: \"start\"\n            }, {\n                defaultToken: \"string\"\n            }\n        ],\n        \"comment\": [\n            {\n                token: \"comment.end\", // comments are not allowed, but who cares?\n                regex: \"\\\\*\\\\/\",\n                next: \"start\"\n            }, {\n                defaultToken: \"comment\"\n            }\n        ]\n    };\n};\noop.inherits(JsonHighlightRules, TextHighlightRules);\nexports.JsonHighlightRules = JsonHighlightRules;\n\n});\n\nace.define(\"ace/mode/jsdoc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar JsDocCommentHighlightRules = function () {\n    this.$rules = {\n        \"start\": [\n            {\n                token: [\"comment.doc.tag\", \"comment.doc.text\", \"lparen.doc\"],\n                regex: \"(@(?:param|member|typedef|property|namespace|var|const|callback))(\\\\s*)({)\",\n                push: [\n                    {\n                        token: \"lparen.doc\",\n                        regex: \"{\",\n                        push: [\n                            {\n                                include: \"doc-syntax\"\n                            }, {\n                                token: \"rparen.doc\",\n                                regex: \"}|(?=$)\",\n                                next: \"pop\"\n                            }\n                        ]\n                    }, {\n                        token: [\"rparen.doc\", \"text.doc\", \"variable.parameter.doc\", \"lparen.doc\", \"variable.parameter.doc\", \"rparen.doc\"],\n                        regex: /(})(\\s*)(?:([\\w=:\\/\\.]+)|(?:(\\[)([\\w=:\\/\\.]+)(\\])))/,\n                        next: \"pop\"\n                    }, {\n                        token: \"rparen.doc\",\n                        regex: \"}|(?=$)\",\n                        next: \"pop\"\n                    }, {\n                        include: \"doc-syntax\"\n                    }, {\n                        defaultToken: \"text.doc\"\n                    }\n                ]\n            }, {\n                token: [\"comment.doc.tag\", \"text.doc\", \"lparen.doc\"],\n                regex: \"(@(?:returns?|yields|type|this|suppress|public|protected|private|package|modifies|\"\n                    + \"implements|external|exception|throws|enum|define|extends))(\\\\s*)({)\",\n                push: [\n                    {\n                        token: \"lparen.doc\",\n                        regex: \"{\",\n                        push: [\n                            {\n                                include: \"doc-syntax\"\n                            }, {\n                                token: \"rparen.doc\",\n                                regex: \"}|(?=$)\",\n                                next: \"pop\"\n                            }\n                        ]\n                    }, {\n                        token: \"rparen.doc\",\n                        regex: \"}|(?=$)\",\n                        next: \"pop\"\n                    }, {\n                        include: \"doc-syntax\"\n                    }, {\n                        defaultToken: \"text.doc\"\n                    }\n                ]\n            }, {\n                token: [\"comment.doc.tag\", \"text.doc\", \"variable.parameter.doc\"],\n                regex: \"(@(?:alias|memberof|instance|module|name|lends|namespace|external|this|template|\"\n                    + \"requires|param|implements|function|extends|typedef|mixes|constructor|var|\"\n                    + \"memberof\\\\!|event|listens|exports|class|constructs|interface|emits|fires|\"\n                    + \"throws|const|callback|borrows|augments))(\\\\s+)(\\\\w[\\\\w#\\.:\\/~\\\"\\\\-]*)?\"\n            }, {\n                token: [\"comment.doc.tag\", \"text.doc\", \"variable.parameter.doc\"],\n                regex: \"(@method)(\\\\s+)(\\\\w[\\\\w\\.\\\\(\\\\)]*)\"\n            }, {\n                token: \"comment.doc.tag\",\n                regex: \"@access\\\\s+(?:private|public|protected)\"\n            }, {\n                token: \"comment.doc.tag\",\n                regex: \"@kind\\\\s+(?:class|constant|event|external|file|function|member|mixin|module|namespace|typedef)\"\n            }, {\n                token: \"comment.doc.tag\",\n                regex: \"@\\\\w+(?=\\\\s|$)\"\n            },\n            JsDocCommentHighlightRules.getTagRule(),\n            {\n                defaultToken: \"comment.doc.body\",\n                caseInsensitive: true\n            }\n        ],\n        \"doc-syntax\": [{\n                token: \"operator.doc\",\n                regex: /[|:]/\n            }, {\n                token: \"paren.doc\",\n                regex: /[\\[\\]]/\n            }]\n    };\n    this.normalizeRules();\n};\noop.inherits(JsDocCommentHighlightRules, TextHighlightRules);\nJsDocCommentHighlightRules.getTagRule = function (start) {\n    return {\n        token: \"comment.doc.tag.storage.type\",\n        regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n};\nJsDocCommentHighlightRules.getStartRule = function (start) {\n    return {\n        token: \"comment.doc\", // doc comment\n        regex: /\\/\\*\\*(?!\\/)/,\n        next: start\n    };\n};\nJsDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token: \"comment.doc\", // closing comment\n        regex: \"\\\\*\\\\/\",\n        next: start\n    };\n};\nexports.JsDocCommentHighlightRules = JsDocCommentHighlightRules;\n\n});\n\nace.define(\"ace/mode/javascript_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/jsdoc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar DocCommentHighlightRules = require(\"./jsdoc_comment_highlight_rules\").JsDocCommentHighlightRules;\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar identifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\";\nvar JavaScriptHighlightRules = function (options) {\n    var keywords = {\n        \"variable.language\": \"Array|Boolean|Date|Function|Iterator|Number|Object|RegExp|String|Proxy|Symbol|\" + // Constructors\n            \"Namespace|QName|XML|XMLList|\" + // E4X\n            \"ArrayBuffer|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|\" +\n            \"Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray|\" +\n            \"Error|EvalError|InternalError|RangeError|ReferenceError|StopIteration|\" + // Errors\n            \"SyntaxError|TypeError|URIError|\" +\n            \"decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|eval|isFinite|\" + // Non-constructor functions\n            \"isNaN|parseFloat|parseInt|\" +\n            \"JSON|Math|\" + // Other\n            \"this|arguments|prototype|window|document\", // Pseudo\n        \"keyword\": \"const|yield|import|get|set|async|await|\" +\n            \"break|case|catch|continue|default|delete|do|else|finally|for|\" +\n            \"if|in|of|instanceof|new|return|switch|throw|try|typeof|let|var|while|with|debugger|\" +\n            \"__parent__|__count__|escape|unescape|with|__proto__|\" +\n            \"class|enum|extends|super|export|implements|private|public|interface|package|protected|static|constructor\",\n        \"storage.type\": \"const|let|var|function\",\n        \"constant.language\": \"null|Infinity|NaN|undefined\",\n        \"support.function\": \"alert\",\n        \"constant.language.boolean\": \"true|false\"\n    };\n    var keywordMapper = this.createKeywordMapper(keywords, \"identifier\");\n    var kwBeforeRe = \"case|do|else|finally|in|instanceof|return|throw|try|typeof|yield|void\";\n    var escapedRe = \"\\\\\\\\(?:x[0-9a-fA-F]{2}|\" + // hex\n        \"u[0-9a-fA-F]{4}|\" + // unicode\n        \"u{[0-9a-fA-F]{1,6}}|\" + // es6 unicode\n        \"[0-2][0-7]{0,2}|\" + // oct\n        \"3[0-7][0-7]?|\" + // oct\n        \"[4-7][0-7]?|\" + //oct\n        \".)\";\n    var anonymousFunctionRe = \"(function)(\\\\s*)(\\\\*?)\";\n    var functionCallStartRule = {\n        token: [\"identifier\", \"text\", \"paren.lparen\"],\n        regex: \"(\\\\b(?!\" + Object.values(keywords).join(\"|\") + \"\\\\b)\" + identifierRe + \")(\\\\s*)(\\\\()\"\n    };\n    this.$rules = {\n        \"no_regex\": [\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            comments(\"no_regex\"),\n            functionCallStartRule,\n            {\n                token: \"string\",\n                regex: \"'(?=.)\",\n                next: \"qstring\"\n            }, {\n                token: \"string\",\n                regex: '\"(?=.)',\n                next: \"qqstring\"\n            }, {\n                token: \"constant.numeric\", // hexadecimal, octal and binary\n                regex: /0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/\n            }, {\n                token: \"constant.numeric\", // decimal integers and floats\n                regex: /(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n            }, {\n                token: [\n                    \"entity.name.function\", \"text\", \"keyword.operator\", \"text\", \"storage.type\",\n                    \"text\", \"storage.type\", \"text\", \"paren.lparen\"\n                ],\n                regex: \"(\" + identifierRe + \")(\\\\s*)(=)(\\\\s*)\" + anonymousFunctionRe + \"(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token: [\n                    \"storage.type\", \"text\", \"storage.type\", \"text\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"\n                ],\n                regex: \"(function)(?:(?:(\\\\s*)(\\\\*)(\\\\s*))|(\\\\s+))(\" + identifierRe + \")(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token: [\n                    \"entity.name.function\", \"text\", \"punctuation.operator\",\n                    \"text\", \"storage.type\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"\n                ],\n                regex: \"(\" + identifierRe + \")(\\\\s*)(:)(\\\\s*)\" + anonymousFunctionRe + \"(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token: [\n                    \"text\", \"text\", \"storage.type\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"\n                ],\n                regex: \"(:)(\\\\s*)\" + anonymousFunctionRe + \"(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token: \"keyword\",\n                regex: \"from(?=\\\\s*('|\\\"))\"\n            }, {\n                token: \"keyword\",\n                regex: \"(?:\" + kwBeforeRe + \")\\\\b\",\n                next: \"start\"\n            }, {\n                token: \"support.constant\",\n                regex: /that\\b/\n            }, {\n                token: [\"storage.type\", \"punctuation.operator\", \"support.function.firebug\"],\n                regex: /(console)(\\.)(warn|info|log|error|debug|time|trace|timeEnd|assert)\\b/\n            }, {\n                token: keywordMapper,\n                regex: identifierRe\n            }, {\n                token: \"punctuation.operator\",\n                regex: /[.](?![.])/,\n                next: \"property\"\n            }, {\n                token: \"storage.type\",\n                regex: /=>/,\n                next: \"start\"\n            }, {\n                token: \"keyword.operator\",\n                regex: /--|\\+\\+|\\.{3}|===|==|=|!=|!==|<+=?|>+=?|!|&&|\\|\\||\\?:|[!$%&*+\\-~\\/^]=?/,\n                next: \"start\"\n            }, {\n                token: \"punctuation.operator\",\n                regex: /[?:,;.]/,\n                next: \"start\"\n            }, {\n                token: \"paren.lparen\",\n                regex: /[\\[({]/,\n                next: \"start\"\n            }, {\n                token: \"paren.rparen\",\n                regex: /[\\])}]/\n            }, {\n                token: \"comment\",\n                regex: /^#!.*$/\n            }\n        ],\n        property: [{\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }, {\n                token: \"keyword.operator\",\n                regex: /=/\n            }, {\n                token: [\n                    \"storage.type\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"\n                ],\n                regex: anonymousFunctionRe + \"(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token: [\n                    \"storage.type\", \"text\", \"storage.type\", \"text\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"\n                ],\n                regex: \"(function)(?:(?:(\\\\s*)(\\\\*)(\\\\s*))|(\\\\s+))(\\\\w+)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token: \"punctuation.operator\",\n                regex: /[.](?![.])/\n            }, {\n                token: \"support.function\",\n                regex: \"prototype\"\n            }, {\n                token: \"support.function\",\n                regex: /(s(?:h(?:ift|ow(?:Mod(?:elessDialog|alDialog)|Help))|croll(?:X|By(?:Pages|Lines)?|Y|To)?|t(?:op|rike)|i(?:n|zeToContent|debar|gnText)|ort|u(?:p|b(?:str(?:ing)?)?)|pli(?:ce|t)|e(?:nd|t(?:Re(?:sizable|questHeader)|M(?:i(?:nutes|lliseconds)|onth)|Seconds|Ho(?:tKeys|urs)|Year|Cursor|Time(?:out)?|Interval|ZOptions|Date|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|h(?:ome|andleEvent)|navigate|c(?:har(?:CodeAt|At)|o(?:s|n(?:cat|textual|firm)|mpile)|eil|lear(?:Timeout|Interval)?|a(?:ptureEvents|ll)|reate(?:StyleSheet|Popup|EventObject))|t(?:o(?:GMTString|S(?:tring|ource)|U(?:TCString|pperCase)|Lo(?:caleString|werCase))|est|a(?:n|int(?:Enabled)?))|i(?:s(?:NaN|Finite)|ndexOf|talics)|d(?:isableExternalCapture|ump|etachEvent)|u(?:n(?:shift|taint|escape|watch)|pdateCommands)|j(?:oin|avaEnabled)|p(?:o(?:p|w)|ush|lugins.refresh|a(?:ddings|rse(?:Int|Float)?)|r(?:int|ompt|eference))|e(?:scape|nableExternalCapture|val|lementFromPoint|x(?:p|ec(?:Script|Command)?))|valueOf|UTC|queryCommand(?:State|Indeterm|Enabled|Value)|f(?:i(?:nd|lter|le(?:ModifiedDate|Size|CreatedDate|UpdatedDate)|xed)|o(?:nt(?:size|color)|rward|rEach)|loor|romCharCode)|watch|l(?:ink|o(?:ad|g)|astIndexOf)|a(?:sin|nchor|cos|t(?:tachEvent|ob|an(?:2)?)|pply|lert|b(?:s|ort))|r(?:ou(?:nd|teEvents)|e(?:size(?:By|To)|calc|turnValue|place|verse|l(?:oad|ease(?:Capture|Events)))|andom)|g(?:o|et(?:ResponseHeader|M(?:i(?:nutes|lliseconds)|onth)|Se(?:conds|lection)|Hours|Year|Time(?:zoneOffset)?|Da(?:y|te)|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Da(?:y|te)|FullYear)|FullYear|A(?:ttention|llResponseHeaders)))|m(?:in|ove(?:B(?:y|elow)|To(?:Absolute)?|Above)|ergeAttributes|a(?:tch|rgins|x))|b(?:toa|ig|o(?:ld|rderWidths)|link|ack))\\b(?=\\()/\n            }, {\n                token: \"support.function.dom\",\n                regex: /(s(?:ub(?:stringData|mit)|plitText|e(?:t(?:NamedItem|Attribute(?:Node)?)|lect))|has(?:ChildNodes|Feature)|namedItem|c(?:l(?:ick|o(?:se|neNode))|reate(?:C(?:omment|DATASection|aption)|T(?:Head|extNode|Foot)|DocumentFragment|ProcessingInstruction|E(?:ntityReference|lement)|Attribute))|tabIndex|i(?:nsert(?:Row|Before|Cell|Data)|tem)|open|delete(?:Row|C(?:ell|aption)|T(?:Head|Foot)|Data)|focus|write(?:ln)?|a(?:dd|ppend(?:Child|Data))|re(?:set|place(?:Child|Data)|move(?:NamedItem|Child|Attribute(?:Node)?)?)|get(?:NamedItem|Element(?:sBy(?:Name|TagName|ClassName)|ById)|Attribute(?:Node)?)|blur)\\b(?=\\()/\n            }, {\n                token: \"support.constant\",\n                regex: /(s(?:ystemLanguage|cr(?:ipts|ollbars|een(?:X|Y|Top|Left))|t(?:yle(?:Sheets)?|atus(?:Text|bar)?)|ibling(?:Below|Above)|ource|uffixes|e(?:curity(?:Policy)?|l(?:ection|f)))|h(?:istory|ost(?:name)?|as(?:h|Focus))|y|X(?:MLDocument|SLDocument)|n(?:ext|ame(?:space(?:s|URI)|Prop))|M(?:IN_VALUE|AX_VALUE)|c(?:haracterSet|o(?:n(?:structor|trollers)|okieEnabled|lorDepth|mp(?:onents|lete))|urrent|puClass|l(?:i(?:p(?:boardData)?|entInformation)|osed|asses)|alle(?:e|r)|rypto)|t(?:o(?:olbar|p)|ext(?:Transform|Indent|Decoration|Align)|ags)|SQRT(?:1_2|2)|i(?:n(?:ner(?:Height|Width)|put)|ds|gnoreCase)|zIndex|o(?:scpu|n(?:readystatechange|Line)|uter(?:Height|Width)|p(?:sProfile|ener)|ffscreenBuffering)|NEGATIVE_INFINITY|d(?:i(?:splay|alog(?:Height|Top|Width|Left|Arguments)|rectories)|e(?:scription|fault(?:Status|Ch(?:ecked|arset)|View)))|u(?:ser(?:Profile|Language|Agent)|n(?:iqueID|defined)|pdateInterval)|_content|p(?:ixelDepth|ort|ersonalbar|kcs11|l(?:ugins|atform)|a(?:thname|dding(?:Right|Bottom|Top|Left)|rent(?:Window|Layer)?|ge(?:X(?:Offset)?|Y(?:Offset)?))|r(?:o(?:to(?:col|type)|duct(?:Sub)?|mpter)|e(?:vious|fix)))|e(?:n(?:coding|abledPlugin)|x(?:ternal|pando)|mbeds)|v(?:isibility|endor(?:Sub)?|Linkcolor)|URLUnencoded|P(?:I|OSITIVE_INFINITY)|f(?:ilename|o(?:nt(?:Size|Family|Weight)|rmName)|rame(?:s|Element)|gColor)|E|whiteSpace|l(?:i(?:stStyleType|n(?:eHeight|kColor))|o(?:ca(?:tion(?:bar)?|lName)|wsrc)|e(?:ngth|ft(?:Context)?)|a(?:st(?:M(?:odified|atch)|Index|Paren)|yer(?:s|X)|nguage))|a(?:pp(?:MinorVersion|Name|Co(?:deName|re)|Version)|vail(?:Height|Top|Width|Left)|ll|r(?:ity|guments)|Linkcolor|bove)|r(?:ight(?:Context)?|e(?:sponse(?:XML|Text)|adyState))|global|x|m(?:imeTypes|ultiline|enubar|argin(?:Right|Bottom|Top|Left))|L(?:N(?:10|2)|OG(?:10E|2E))|b(?:o(?:ttom|rder(?:Width|RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth))|ufferDepth|elow|ackground(?:Color|Image)))\\b/\n            }, {\n                token: \"identifier\",\n                regex: identifierRe\n            }, {\n                regex: \"\",\n                token: \"empty\",\n                next: \"no_regex\"\n            }\n        ],\n        \"start\": [\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            comments(\"start\"),\n            {\n                token: \"string.regexp\",\n                regex: \"\\\\/\",\n                next: \"regex\"\n            }, {\n                token: \"text\",\n                regex: \"\\\\s+|^$\",\n                next: \"start\"\n            }, {\n                token: \"empty\",\n                regex: \"\",\n                next: \"no_regex\"\n            }\n        ],\n        \"regex\": [\n            {\n                token: \"regexp.keyword.operator\",\n                regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n            }, {\n                token: \"string.regexp\",\n                regex: \"/[sxngimy]*\",\n                next: \"no_regex\"\n            }, {\n                token: \"invalid\",\n                regex: /\\{\\d+\\b,?\\d*\\}[+*]|[+*$^?][+*]|[$^][?]|\\?{3,}/\n            }, {\n                token: \"constant.language.escape\",\n                regex: /\\(\\?[:=!]|\\)|\\{\\d+\\b,?\\d*\\}|[+*]\\?|[()$^+*?.]/\n            }, {\n                token: \"constant.language.delimiter\",\n                regex: /\\|/\n            }, {\n                token: \"constant.language.escape\",\n                regex: /\\[\\^?/,\n                next: \"regex_character_class\"\n            }, {\n                token: \"empty\",\n                regex: \"$\",\n                next: \"no_regex\"\n            }, {\n                defaultToken: \"string.regexp\"\n            }\n        ],\n        \"regex_character_class\": [\n            {\n                token: \"regexp.charclass.keyword.operator\",\n                regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n            }, {\n                token: \"constant.language.escape\",\n                regex: \"]\",\n                next: \"regex\"\n            }, {\n                token: \"constant.language.escape\",\n                regex: \"-\"\n            }, {\n                token: \"empty\",\n                regex: \"$\",\n                next: \"no_regex\"\n            }, {\n                defaultToken: \"string.regexp.charachterclass\"\n            }\n        ],\n        \"default_parameter\": [\n            {\n                token: \"string\",\n                regex: \"'(?=.)\",\n                push: [\n                    {\n                        token: \"string\",\n                        regex: \"'|$\",\n                        next: \"pop\"\n                    }, {\n                        include: \"qstring\"\n                    }\n                ]\n            }, {\n                token: \"string\",\n                regex: '\"(?=.)',\n                push: [\n                    {\n                        token: \"string\",\n                        regex: '\"|$',\n                        next: \"pop\"\n                    }, {\n                        include: \"qqstring\"\n                    }\n                ]\n            }, {\n                token: \"constant.language\",\n                regex: \"null|Infinity|NaN|undefined\"\n            }, {\n                token: \"constant.numeric\", // hexadecimal, octal and binary\n                regex: /0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/\n            }, {\n                token: \"constant.numeric\", // decimal integers and floats\n                regex: /(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n            }, {\n                token: \"punctuation.operator\",\n                regex: \",\",\n                next: \"function_arguments\"\n            }, {\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }, {\n                token: \"punctuation.operator\",\n                regex: \"$\"\n            }, {\n                token: \"empty\",\n                regex: \"\",\n                next: \"no_regex\"\n            }\n        ],\n        \"function_arguments\": [\n            comments(\"function_arguments\"),\n            {\n                token: \"variable.parameter\",\n                regex: identifierRe\n            }, {\n                token: \"punctuation.operator\",\n                regex: \",\"\n            }, {\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }, {\n                token: \"punctuation.operator\",\n                regex: \"$\"\n            }, {\n                token: \"empty\",\n                regex: \"\",\n                next: \"no_regex\"\n            }\n        ],\n        \"qqstring\": [\n            {\n                token: \"constant.language.escape\",\n                regex: escapedRe\n            }, {\n                token: \"string\",\n                regex: \"\\\\\\\\$\",\n                consumeLineEnd: true\n            }, {\n                token: \"string\",\n                regex: '\"|$',\n                next: \"no_regex\"\n            }, {\n                defaultToken: \"string\"\n            }\n        ],\n        \"qstring\": [\n            {\n                token: \"constant.language.escape\",\n                regex: escapedRe\n            }, {\n                token: \"string\",\n                regex: \"\\\\\\\\$\",\n                consumeLineEnd: true\n            }, {\n                token: \"string\",\n                regex: \"'|$\",\n                next: \"no_regex\"\n            }, {\n                defaultToken: \"string\"\n            }\n        ]\n    };\n    if (!options || !options.noES6) {\n        this.$rules.no_regex.unshift({\n            regex: \"[{}]\", onMatch: function (val, state, stack) {\n                this.next = val == \"{\" ? this.nextState : \"\";\n                if (val == \"{\" && stack.length) {\n                    stack.unshift(\"start\", state);\n                }\n                else if (val == \"}\" && stack.length) {\n                    stack.shift();\n                    this.next = stack.shift();\n                    if (this.next.indexOf(\"string\") != -1 || this.next.indexOf(\"jsx\") != -1)\n                        return \"paren.quasi.end\";\n                }\n                return val == \"{\" ? \"paren.lparen\" : \"paren.rparen\";\n            },\n            nextState: \"start\"\n        }, {\n            token: \"string.quasi.start\",\n            regex: /`/,\n            push: [{\n                    token: \"constant.language.escape\",\n                    regex: escapedRe\n                }, {\n                    token: \"paren.quasi.start\",\n                    regex: /\\${/,\n                    push: \"start\"\n                }, {\n                    token: \"string.quasi.end\",\n                    regex: /`/,\n                    next: \"pop\"\n                }, {\n                    defaultToken: \"string.quasi\"\n                }]\n        }, {\n            token: [\"variable.parameter\", \"text\"],\n            regex: \"(\" + identifierRe + \")(\\\\s*)(?=\\\\=>)\"\n        }, {\n            token: \"paren.lparen\",\n            regex: \"(\\\\()(?=[^\\\\(]+\\\\s*=>)\",\n            next: \"function_arguments\"\n        }, {\n            token: \"variable.language\",\n            regex: \"(?:(?:(?:Weak)?(?:Set|Map))|Promise)\\\\b\"\n        });\n        this.$rules[\"function_arguments\"].unshift({\n            token: \"keyword.operator\",\n            regex: \"=\",\n            next: \"default_parameter\"\n        }, {\n            token: \"keyword.operator\",\n            regex: \"\\\\.{3}\"\n        });\n        this.$rules[\"property\"].unshift({\n            token: \"support.function\",\n            regex: \"(findIndex|repeat|startsWith|endsWith|includes|isSafeInteger|trunc|cbrt|log2|log10|sign|then|catch|\"\n                + \"finally|resolve|reject|race|any|all|allSettled|keys|entries|isInteger)\\\\b(?=\\\\()\"\n        }, {\n            token: \"constant.language\",\n            regex: \"(?:MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|EPSILON)\\\\b\"\n        });\n        if (!options || options.jsx != false)\n            JSX.call(this);\n    }\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"no_regex\")]);\n    this.normalizeRules();\n};\noop.inherits(JavaScriptHighlightRules, TextHighlightRules);\nfunction JSX() {\n    var tagRegex = identifierRe.replace(\"\\\\d\", \"\\\\d\\\\-\");\n    var jsxTag = {\n        onMatch: function (val, state, stack) {\n            var offset = val.charAt(1) == \"/\" ? 2 : 1;\n            if (offset == 1) {\n                if (state != this.nextState)\n                    stack.unshift(this.next, this.nextState, 0);\n                else\n                    stack.unshift(this.next);\n                stack[2]++;\n            }\n            else if (offset == 2) {\n                if (state == this.nextState) {\n                    stack[1]--;\n                    if (!stack[1] || stack[1] < 0) {\n                        stack.shift();\n                        stack.shift();\n                    }\n                }\n            }\n            return [{\n                    type: \"meta.tag.punctuation.\" + (offset == 1 ? \"\" : \"end-\") + \"tag-open.xml\",\n                    value: val.slice(0, offset)\n                }, {\n                    type: \"meta.tag.tag-name.xml\",\n                    value: val.substr(offset)\n                }];\n        },\n        regex: \"</?(?:\" + tagRegex + \"|(?=>))\",\n        next: \"jsxAttributes\",\n        nextState: \"jsx\"\n    };\n    this.$rules.start.unshift(jsxTag);\n    var jsxJsRule = {\n        regex: \"{\",\n        token: \"paren.quasi.start\",\n        push: \"start\"\n    };\n    this.$rules.jsx = [\n        jsxJsRule,\n        jsxTag,\n        { include: \"reference\" }, { defaultToken: \"string.xml\" }\n    ];\n    this.$rules.jsxAttributes = [{\n            token: \"meta.tag.punctuation.tag-close.xml\",\n            regex: \"/?>\",\n            onMatch: function (value, currentState, stack) {\n                if (currentState == stack[0])\n                    stack.shift();\n                if (value.length == 2) {\n                    if (stack[0] == this.nextState)\n                        stack[1]--;\n                    if (!stack[1] || stack[1] < 0) {\n                        stack.splice(0, 2);\n                    }\n                }\n                this.next = stack[0] || \"start\";\n                return [{ type: this.token, value: value }];\n            },\n            nextState: \"jsx\"\n        },\n        jsxJsRule,\n        comments(\"jsxAttributes\"),\n        {\n            token: \"entity.other.attribute-name.xml\",\n            regex: tagRegex\n        }, {\n            token: \"keyword.operator.attribute-equals.xml\",\n            regex: \"=\"\n        }, {\n            token: \"text.tag-whitespace.xml\",\n            regex: \"\\\\s+\"\n        }, {\n            token: \"string.attribute-value.xml\",\n            regex: \"'\",\n            stateName: \"jsx_attr_q\",\n            push: [\n                { token: \"string.attribute-value.xml\", regex: \"'\", next: \"pop\" },\n                { include: \"reference\" },\n                { defaultToken: \"string.attribute-value.xml\" }\n            ]\n        }, {\n            token: \"string.attribute-value.xml\",\n            regex: '\"',\n            stateName: \"jsx_attr_qq\",\n            push: [\n                { token: \"string.attribute-value.xml\", regex: '\"', next: \"pop\" },\n                { include: \"reference\" },\n                { defaultToken: \"string.attribute-value.xml\" }\n            ]\n        },\n        jsxTag\n    ];\n    this.$rules.reference = [{\n            token: \"constant.language.escape.reference.xml\",\n            regex: \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n        }];\n}\nfunction comments(next) {\n    return [\n        {\n            token: \"comment\", // multi line comment\n            regex: /\\/\\*/,\n            next: [\n                DocCommentHighlightRules.getTagRule(),\n                { token: \"comment\", regex: \"\\\\*\\\\/\", next: next || \"pop\" },\n                { defaultToken: \"comment\", caseInsensitive: true }\n            ]\n        }, {\n            token: \"comment\",\n            regex: \"\\\\/\\\\/\",\n            next: [\n                DocCommentHighlightRules.getTagRule(),\n                { token: \"comment\", regex: \"$|^\", next: next || \"pop\" },\n                { defaultToken: \"comment\", caseInsensitive: true }\n            ]\n        }\n    ];\n}\nexports.JavaScriptHighlightRules = JavaScriptHighlightRules;\n\n});\n\nace.define(\"ace/mode/pgsql_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/doc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\",\"ace/mode/perl_highlight_rules\",\"ace/mode/python_highlight_rules\",\"ace/mode/json_highlight_rules\",\"ace/mode/javascript_highlight_rules\"], function(require, exports, module){var oop = require(\"../lib/oop\");\nvar lang = require(\"../lib/lang\");\nvar DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar PerlHighlightRules = require(\"./perl_highlight_rules\").PerlHighlightRules;\nvar PythonHighlightRules = require(\"./python_highlight_rules\").PythonHighlightRules;\nvar JsonHighlightRules = require(\"./json_highlight_rules\").JsonHighlightRules;\nvar JavaScriptHighlightRules = require(\"./javascript_highlight_rules\").JavaScriptHighlightRules;\nvar PgsqlHighlightRules = function () {\n    var keywords = (\"abort|absolute|abstime|access|aclitem|action|add|admin|after|aggregate|all|also|alter|always|\" +\n        \"analyse|analyze|and|any|anyarray|anyelement|anyenum|anynonarray|anyrange|array|as|asc|\" +\n        \"assertion|assignment|asymmetric|at|attribute|authorization|backward|before|begin|between|\" +\n        \"bigint|binary|bit|bool|boolean|both|box|bpchar|by|bytea|cache|called|cascade|cascaded|case|cast|\" +\n        \"catalog|chain|char|character|characteristics|check|checkpoint|cid|cidr|circle|class|close|\" +\n        \"cluster|coalesce|collate|collation|column|comment|comments|commit|committed|concurrently|\" +\n        \"configuration|connection|constraint|constraints|content|continue|conversion|copy|cost|\" +\n        \"create|cross|cstring|csv|current|current_catalog|current_date|current_role|\" +\n        \"current_schema|current_time|current_timestamp|current_user|cursor|cycle|data|database|\" +\n        \"date|daterange|day|deallocate|dec|decimal|declare|default|defaults|deferrable|deferred|\" +\n        \"definer|delete|delimiter|delimiters|desc|dictionary|disable|discard|distinct|do|document|\" +\n        \"domain|double|drop|each|else|enable|encoding|encrypted|end|enum|escape|event|event_trigger|\" +\n        \"except|exclude|excluding|exclusive|execute|exists|explain|extension|external|extract|false|\" +\n        \"family|fdw_handler|fetch|first|float|float4|float8|following|for|force|foreign|forward|\" +\n        \"freeze|from|full|function|functions|global|grant|granted|greatest|group|gtsvector|handler|\" +\n        \"having|header|hold|hour|identity|if|ilike|immediate|immutable|implicit|in|including|\" +\n        \"increment|index|indexes|inet|inherit|inherits|initially|inline|inner|inout|input|\" +\n        \"insensitive|insert|instead|int|int2|int2vector|int4|int4range|int8|int8range|integer|\" +\n        \"internal|intersect|interval|into|invoker|is|isnull|isolation|join|json|key|label|language|\" +\n        \"language_handler|large|last|lateral|lc_collate|lc_ctype|leading|leakproof|least|left|level|\" +\n        \"like|limit|line|listen|load|local|localtime|localtimestamp|location|lock|lseg|macaddr|\" +\n        \"mapping|match|materialized|maxvalue|minute|minvalue|mode|money|month|move|name|names|\" +\n        \"national|natural|nchar|next|no|none|not|nothing|notify|notnull|nowait|null|nullif|nulls|\" +\n        \"numeric|numrange|object|of|off|offset|oid|oids|oidvector|on|only|opaque|operator|option|\" +\n        \"options|or|order|out|outer|over|overlaps|overlay|owned|owner|parser|partial|partition|passing|\" +\n        \"password|path|pg_attribute|pg_auth_members|pg_authid|pg_class|pg_database|pg_node_tree|\" +\n        \"pg_proc|pg_type|placing|plans|point|polygon|position|preceding|precision|prepare|prepared|\" +\n        \"preserve|primary|prior|privileges|procedural|procedure|program|quote|range|read|real|\" +\n        \"reassign|recheck|record|recursive|ref|refcursor|references|refresh|regclass|regconfig|\" +\n        \"regdictionary|regoper|regoperator|regproc|regprocedure|regtype|reindex|relative|release|\" +\n        \"reltime|rename|repeatable|replace|replica|reset|restart|restrict|returning|returns|revoke|\" +\n        \"right|role|rollback|row|rows|rule|savepoint|schema|scroll|search|second|security|select|\" +\n        \"sequence|sequences|serializable|server|session|session_user|set|setof|share|show|similar|\" +\n        \"simple|smallint|smgr|snapshot|some|stable|standalone|start|statement|statistics|stdin|\" +\n        \"stdout|storage|strict|strip|substring|symmetric|sysid|system|table|tables|tablespace|temp|\" +\n        \"template|temporary|text|then|tid|time|timestamp|timestamptz|timetz|tinterval|to|trailing|\" +\n        \"transaction|treat|trigger|trim|true|truncate|trusted|tsquery|tsrange|tstzrange|tsvector|\" +\n        \"txid_snapshot|type|types|unbounded|uncommitted|unencrypted|union|unique|unknown|unlisten|\" +\n        \"unlogged|until|update|user|using|uuid|vacuum|valid|validate|validator|value|values|varbit|\" +\n        \"varchar|variadic|varying|verbose|version|view|void|volatile|when|where|whitespace|window|\" +\n        \"with|without|work|wrapper|write|xid|xml|xmlattributes|xmlconcat|xmlelement|xmlexists|\" +\n        \"xmlforest|xmlparse|xmlpi|xmlroot|xmlserialize|year|yes|zone|ties\");\n    var builtinFunctions = (\"RI_FKey_cascade_del|RI_FKey_cascade_upd|RI_FKey_check_ins|RI_FKey_check_upd|\" +\n        \"RI_FKey_noaction_del|RI_FKey_noaction_upd|RI_FKey_restrict_del|RI_FKey_restrict_upd|\" +\n        \"RI_FKey_setdefault_del|RI_FKey_setdefault_upd|RI_FKey_setnull_del|\" +\n        \"RI_FKey_setnull_upd|abbrev|abs|abstime|abstimeeq|abstimege|abstimegt|abstimein|abstimele|\" +\n        \"abstimelt|abstimene|abstimeout|abstimerecv|abstimesend|aclcontains|acldefault|\" +\n        \"aclexplode|aclinsert|aclitemeq|aclitemin|aclitemout|aclremove|acos|age|any_in|any_out|\" +\n        \"anyarray_in|anyarray_out|anyarray_recv|anyarray_send|anyelement_in|anyelement_out|\" +\n        \"anyenum_in|anyenum_out|anynonarray_in|anynonarray_out|anyrange_in|anyrange_out|\" +\n        \"anytextcat|area|areajoinsel|areasel|array_agg|array_agg_finalfn|array_agg_transfn|\" +\n        \"array_append|array_cat|array_dims|array_eq|array_fill|array_ge|array_gt|array_in|\" +\n        \"array_larger|array_le|array_length|array_lower|array_lt|array_ndims|array_ne|array_out|\" +\n        \"array_prepend|array_recv|array_remove|array_replace|array_send|array_smaller|\" +\n        \"array_to_json|array_to_string|array_typanalyze|array_upper|arraycontained|\" +\n        \"arraycontains|arraycontjoinsel|arraycontsel|arrayoverlap|ascii|ascii_to_mic|\" +\n        \"ascii_to_utf8|asin|atan|atan2|avg|big5_to_euc_tw|big5_to_mic|big5_to_utf8|bit_and|bit_in|\" +\n        \"bit_length|bit_or|bit_out|bit_recv|bit_send|bitand|bitcat|bitcmp|biteq|bitge|bitgt|bitle|\" +\n        \"bitlt|bitne|bitnot|bitor|bitshiftleft|bitshiftright|bittypmodin|bittypmodout|bitxor|bool|\" +\n        \"bool_and|bool_or|booland_statefunc|booleq|boolge|boolgt|boolin|boolle|boollt|boolne|\" +\n        \"boolor_statefunc|boolout|boolrecv|boolsend|box|box_above|box_above_eq|box_add|box_below|\" +\n        \"box_below_eq|box_center|box_contain|box_contain_pt|box_contained|box_distance|box_div|\" +\n        \"box_eq|box_ge|box_gt|box_in|box_intersect|box_le|box_left|box_lt|box_mul|box_out|\" +\n        \"box_overabove|box_overbelow|box_overlap|box_overleft|box_overright|box_recv|box_right|\" +\n        \"box_same|box_send|box_sub|bpchar_larger|bpchar_pattern_ge|bpchar_pattern_gt|\" +\n        \"bpchar_pattern_le|bpchar_pattern_lt|bpchar_smaller|bpcharcmp|bpchareq|bpcharge|\" +\n        \"bpchargt|bpchariclike|bpcharicnlike|bpcharicregexeq|bpcharicregexne|bpcharin|bpcharle|\" +\n        \"bpcharlike|bpcharlt|bpcharne|bpcharnlike|bpcharout|bpcharrecv|bpcharregexeq|\" +\n        \"bpcharregexne|bpcharsend|bpchartypmodin|bpchartypmodout|broadcast|btabstimecmp|\" +\n        \"btarraycmp|btbeginscan|btboolcmp|btbpchar_pattern_cmp|btbuild|btbuildempty|\" +\n        \"btbulkdelete|btcanreturn|btcharcmp|btcostestimate|btendscan|btfloat48cmp|btfloat4cmp|\" +\n        \"btfloat4sortsupport|btfloat84cmp|btfloat8cmp|btfloat8sortsupport|btgetbitmap|\" +\n        \"btgettuple|btinsert|btint24cmp|btint28cmp|btint2cmp|btint2sortsupport|btint42cmp|\" +\n        \"btint48cmp|btint4cmp|btint4sortsupport|btint82cmp|btint84cmp|btint8cmp|\" +\n        \"btint8sortsupport|btmarkpos|btnamecmp|btnamesortsupport|btoidcmp|btoidsortsupport|\" +\n        \"btoidvectorcmp|btoptions|btrecordcmp|btreltimecmp|btrescan|btrestrpos|btrim|\" +\n        \"bttext_pattern_cmp|bttextcmp|bttidcmp|bttintervalcmp|btvacuumcleanup|\" +\n        \"bytea_string_agg_finalfn|bytea_string_agg_transfn|byteacat|byteacmp|byteaeq|byteage|\" +\n        \"byteagt|byteain|byteale|bytealike|bytealt|byteane|byteanlike|byteaout|bytearecv|byteasend|\" +\n        \"cash_cmp|cash_div_cash|cash_div_flt4|cash_div_flt8|cash_div_int2|cash_div_int4|cash_eq|\" +\n        \"cash_ge|cash_gt|cash_in|cash_le|cash_lt|cash_mi|cash_mul_flt4|cash_mul_flt8|\" +\n        \"cash_mul_int2|cash_mul_int4|cash_ne|cash_out|cash_pl|cash_recv|cash_send|cash_words|\" +\n        \"cashlarger|cashsmaller|cbrt|ceil|ceiling|center|char|char_length|character_length|chareq|\" +\n        \"charge|chargt|charin|charle|charlt|charne|charout|charrecv|charsend|chr|cideq|cidin|cidout|\" +\n        \"cidr|cidr_in|cidr_out|cidr_recv|cidr_send|cidrecv|cidsend|circle|circle_above|\" +\n        \"circle_add_pt|circle_below|circle_center|circle_contain|circle_contain_pt|\" +\n        \"circle_contained|circle_distance|circle_div_pt|circle_eq|circle_ge|circle_gt|circle_in|\" +\n        \"circle_le|circle_left|circle_lt|circle_mul_pt|circle_ne|circle_out|circle_overabove|\" +\n        \"circle_overbelow|circle_overlap|circle_overleft|circle_overright|circle_recv|\" +\n        \"circle_right|circle_same|circle_send|circle_sub_pt|clock_timestamp|close_lb|close_ls|\" +\n        \"close_lseg|close_pb|close_pl|close_ps|close_sb|close_sl|col_description|concat|concat_ws|\" +\n        \"contjoinsel|contsel|convert|convert_from|convert_to|corr|cos|cot|count|covar_pop|\" +\n        \"covar_samp|cstring_in|cstring_out|cstring_recv|cstring_send|cume_dist|current_database|\" +\n        \"current_query|current_schema|current_schemas|current_setting|current_user|currtid|\" +\n        \"currtid2|currval|cursor_to_xml|cursor_to_xmlschema|database_to_xml|\" +\n        \"database_to_xml_and_xmlschema|database_to_xmlschema|date|date_cmp|date_cmp_timestamp|\" +\n        \"date_cmp_timestamptz|date_eq|date_eq_timestamp|date_eq_timestamptz|date_ge|\" +\n        \"date_ge_timestamp|date_ge_timestamptz|date_gt|date_gt_timestamp|date_gt_timestamptz|\" +\n        \"date_in|date_larger|date_le|date_le_timestamp|date_le_timestamptz|date_lt|\" +\n        \"date_lt_timestamp|date_lt_timestamptz|date_mi|date_mi_interval|date_mii|date_ne|\" +\n        \"date_ne_timestamp|date_ne_timestamptz|date_out|date_part|date_pl_interval|date_pli|\" +\n        \"date_recv|date_send|date_smaller|date_sortsupport|date_trunc|daterange|\" +\n        \"daterange_canonical|daterange_subdiff|datetime_pl|datetimetz_pl|dcbrt|decode|degrees|\" +\n        \"dense_rank|dexp|diagonal|diameter|dispell_init|dispell_lexize|dist_cpoly|dist_lb|dist_pb|\" +\n        \"dist_pc|dist_pl|dist_ppath|dist_ps|dist_sb|dist_sl|div|dlog1|dlog10|domain_in|domain_recv|\" +\n        \"dpow|dround|dsimple_init|dsimple_lexize|dsnowball_init|dsnowball_lexize|dsqrt|\" +\n        \"dsynonym_init|dsynonym_lexize|dtrunc|elem_contained_by_range|encode|enum_cmp|enum_eq|\" +\n        \"enum_first|enum_ge|enum_gt|enum_in|enum_larger|enum_last|enum_le|enum_lt|enum_ne|enum_out|\" +\n        \"enum_range|enum_recv|enum_send|enum_smaller|eqjoinsel|eqsel|euc_cn_to_mic|\" +\n        \"euc_cn_to_utf8|euc_jis_2004_to_shift_jis_2004|euc_jis_2004_to_utf8|euc_jp_to_mic|\" +\n        \"euc_jp_to_sjis|euc_jp_to_utf8|euc_kr_to_mic|euc_kr_to_utf8|euc_tw_to_big5|\" +\n        \"euc_tw_to_mic|euc_tw_to_utf8|event_trigger_in|event_trigger_out|every|exp|factorial|\" +\n        \"family|fdw_handler_in|fdw_handler_out|first_value|float4|float48div|float48eq|float48ge|\" +\n        \"float48gt|float48le|float48lt|float48mi|float48mul|float48ne|float48pl|float4_accum|\" +\n        \"float4abs|float4div|float4eq|float4ge|float4gt|float4in|float4larger|float4le|float4lt|\" +\n        \"float4mi|float4mul|float4ne|float4out|float4pl|float4recv|float4send|float4smaller|\" +\n        \"float4um|float4up|float8|float84div|float84eq|float84ge|float84gt|float84le|float84lt|\" +\n        \"float84mi|float84mul|float84ne|float84pl|float8_accum|float8_avg|float8_corr|\" +\n        \"float8_covar_pop|float8_covar_samp|float8_regr_accum|float8_regr_avgx|\" +\n        \"float8_regr_avgy|float8_regr_intercept|float8_regr_r2|float8_regr_slope|\" +\n        \"float8_regr_sxx|float8_regr_sxy|float8_regr_syy|float8_stddev_pop|float8_stddev_samp|\" +\n        \"float8_var_pop|float8_var_samp|float8abs|float8div|float8eq|float8ge|float8gt|float8in|\" +\n        \"float8larger|float8le|float8lt|float8mi|float8mul|float8ne|float8out|float8pl|float8recv|\" +\n        \"float8send|float8smaller|float8um|float8up|floor|flt4_mul_cash|flt8_mul_cash|\" +\n        \"fmgr_c_validator|fmgr_internal_validator|fmgr_sql_validator|format|format_type|\" +\n        \"gb18030_to_utf8|gbk_to_utf8|generate_series|generate_subscripts|get_bit|get_byte|\" +\n        \"get_current_ts_config|getdatabaseencoding|getpgusername|gin_cmp_prefix|\" +\n        \"gin_cmp_tslexeme|gin_extract_tsquery|gin_extract_tsvector|gin_tsquery_consistent|\" +\n        \"ginarrayconsistent|ginarrayextract|ginbeginscan|ginbuild|ginbuildempty|ginbulkdelete|\" +\n        \"gincostestimate|ginendscan|gingetbitmap|gininsert|ginmarkpos|ginoptions|\" +\n        \"ginqueryarrayextract|ginrescan|ginrestrpos|ginvacuumcleanup|gist_box_compress|\" +\n        \"gist_box_consistent|gist_box_decompress|gist_box_penalty|gist_box_picksplit|\" +\n        \"gist_box_same|gist_box_union|gist_circle_compress|gist_circle_consistent|\" +\n        \"gist_point_compress|gist_point_consistent|gist_point_distance|gist_poly_compress|\" +\n        \"gist_poly_consistent|gistbeginscan|gistbuild|gistbuildempty|gistbulkdelete|\" +\n        \"gistcostestimate|gistendscan|gistgetbitmap|gistgettuple|gistinsert|gistmarkpos|\" +\n        \"gistoptions|gistrescan|gistrestrpos|gistvacuumcleanup|gtsquery_compress|\" +\n        \"gtsquery_consistent|gtsquery_decompress|gtsquery_penalty|gtsquery_picksplit|\" +\n        \"gtsquery_same|gtsquery_union|gtsvector_compress|gtsvector_consistent|\" +\n        \"gtsvector_decompress|gtsvector_penalty|gtsvector_picksplit|gtsvector_same|\" +\n        \"gtsvector_union|gtsvectorin|gtsvectorout|has_any_column_privilege|\" +\n        \"has_column_privilege|has_database_privilege|has_foreign_data_wrapper_privilege|\" +\n        \"has_function_privilege|has_language_privilege|has_schema_privilege|\" +\n        \"has_sequence_privilege|has_server_privilege|has_table_privilege|\" +\n        \"has_tablespace_privilege|has_type_privilege|hash_aclitem|hash_array|hash_numeric|\" +\n        \"hash_range|hashbeginscan|hashbpchar|hashbuild|hashbuildempty|hashbulkdelete|hashchar|\" +\n        \"hashcostestimate|hashendscan|hashenum|hashfloat4|hashfloat8|hashgetbitmap|hashgettuple|\" +\n        \"hashinet|hashinsert|hashint2|hashint2vector|hashint4|hashint8|hashmacaddr|hashmarkpos|\" +\n        \"hashname|hashoid|hashoidvector|hashoptions|hashrescan|hashrestrpos|hashtext|\" +\n        \"hashvacuumcleanup|hashvarlena|height|host|hostmask|iclikejoinsel|iclikesel|\" +\n        \"icnlikejoinsel|icnlikesel|icregexeqjoinsel|icregexeqsel|icregexnejoinsel|icregexnesel|\" +\n        \"inet_client_addr|inet_client_port|inet_in|inet_out|inet_recv|inet_send|\" +\n        \"inet_server_addr|inet_server_port|inetand|inetmi|inetmi_int8|inetnot|inetor|inetpl|\" +\n        \"initcap|int2|int24div|int24eq|int24ge|int24gt|int24le|int24lt|int24mi|int24mul|int24ne|\" +\n        \"int24pl|int28div|int28eq|int28ge|int28gt|int28le|int28lt|int28mi|int28mul|int28ne|int28pl|\" +\n        \"int2_accum|int2_avg_accum|int2_mul_cash|int2_sum|int2abs|int2and|int2div|int2eq|int2ge|\" +\n        \"int2gt|int2in|int2larger|int2le|int2lt|int2mi|int2mod|int2mul|int2ne|int2not|int2or|int2out|\" +\n        \"int2pl|int2recv|int2send|int2shl|int2shr|int2smaller|int2um|int2up|int2vectoreq|\" +\n        \"int2vectorin|int2vectorout|int2vectorrecv|int2vectorsend|int2xor|int4|int42div|int42eq|\" +\n        \"int42ge|int42gt|int42le|int42lt|int42mi|int42mul|int42ne|int42pl|int48div|int48eq|int48ge|\" +\n        \"int48gt|int48le|int48lt|int48mi|int48mul|int48ne|int48pl|int4_accum|int4_avg_accum|\" +\n        \"int4_mul_cash|int4_sum|int4abs|int4and|int4div|int4eq|int4ge|int4gt|int4in|int4inc|\" +\n        \"int4larger|int4le|int4lt|int4mi|int4mod|int4mul|int4ne|int4not|int4or|int4out|int4pl|\" +\n        \"int4range|int4range_canonical|int4range_subdiff|int4recv|int4send|int4shl|int4shr|\" +\n        \"int4smaller|int4um|int4up|int4xor|int8|int82div|int82eq|int82ge|int82gt|int82le|int82lt|\" +\n        \"int82mi|int82mul|int82ne|int82pl|int84div|int84eq|int84ge|int84gt|int84le|int84lt|int84mi|\" +\n        \"int84mul|int84ne|int84pl|int8_accum|int8_avg|int8_avg_accum|int8_sum|int8abs|int8and|\" +\n        \"int8div|int8eq|int8ge|int8gt|int8in|int8inc|int8inc_any|int8inc_float8_float8|int8larger|\" +\n        \"int8le|int8lt|int8mi|int8mod|int8mul|int8ne|int8not|int8or|int8out|int8pl|int8pl_inet|\" +\n        \"int8range|int8range_canonical|int8range_subdiff|int8recv|int8send|int8shl|int8shr|\" +\n        \"int8smaller|int8um|int8up|int8xor|integer_pl_date|inter_lb|inter_sb|inter_sl|internal_in|\" +\n        \"internal_out|interval_accum|interval_avg|interval_cmp|interval_div|interval_eq|\" +\n        \"interval_ge|interval_gt|interval_hash|interval_in|interval_larger|interval_le|\" +\n        \"interval_lt|interval_mi|interval_mul|interval_ne|interval_out|interval_pl|\" +\n        \"interval_pl_date|interval_pl_time|interval_pl_timestamp|interval_pl_timestamptz|\" +\n        \"interval_pl_timetz|interval_recv|interval_send|interval_smaller|interval_transform|\" +\n        \"interval_um|intervaltypmodin|intervaltypmodout|intinterval|isclosed|isempty|isfinite|\" +\n        \"ishorizontal|iso8859_1_to_utf8|iso8859_to_utf8|iso_to_koi8r|iso_to_mic|iso_to_win1251|\" +\n        \"iso_to_win866|isopen|isparallel|isperp|isvertical|johab_to_utf8|json_agg|\" +\n        \"json_agg_finalfn|json_agg_transfn|json_array_element|json_array_element_text|\" +\n        \"json_array_elements|json_array_length|json_each|json_each_text|json_extract_path|\" +\n        \"json_extract_path_op|json_extract_path_text|json_extract_path_text_op|json_in|\" +\n        \"json_object_field|json_object_field_text|json_object_keys|json_out|\" +\n        \"json_populate_record|json_populate_recordset|json_recv|json_send|justify_days|\" +\n        \"justify_hours|justify_interval|koi8r_to_iso|koi8r_to_mic|koi8r_to_utf8|\" +\n        \"koi8r_to_win1251|koi8r_to_win866|koi8u_to_utf8|lag|language_handler_in|\" +\n        \"language_handler_out|last_value|lastval|latin1_to_mic|latin2_to_mic|latin2_to_win1250|\" +\n        \"latin3_to_mic|latin4_to_mic|lead|left|length|like|like_escape|likejoinsel|likesel|line|\" +\n        \"line_distance|line_eq|line_horizontal|line_in|line_interpt|line_intersect|line_out|\" +\n        \"line_parallel|line_perp|line_recv|line_send|line_vertical|ln|lo_close|lo_creat|lo_create|\" +\n        \"lo_export|lo_import|lo_lseek|lo_lseek64|lo_open|lo_tell|lo_tell64|lo_truncate|\" +\n        \"lo_truncate64|lo_unlink|log|loread|lower|lower_inc|lower_inf|lowrite|lpad|lseg|lseg_center|\" +\n        \"lseg_distance|lseg_eq|lseg_ge|lseg_gt|lseg_horizontal|lseg_in|lseg_interpt|\" +\n        \"lseg_intersect|lseg_le|lseg_length|lseg_lt|lseg_ne|lseg_out|lseg_parallel|lseg_perp|\" +\n        \"lseg_recv|lseg_send|lseg_vertical|ltrim|macaddr_and|macaddr_cmp|macaddr_eq|macaddr_ge|\" +\n        \"macaddr_gt|macaddr_in|macaddr_le|macaddr_lt|macaddr_ne|macaddr_not|macaddr_or|\" +\n        \"macaddr_out|macaddr_recv|macaddr_send|makeaclitem|masklen|max|md5|mic_to_ascii|\" +\n        \"mic_to_big5|mic_to_euc_cn|mic_to_euc_jp|mic_to_euc_kr|mic_to_euc_tw|mic_to_iso|\" +\n        \"mic_to_koi8r|mic_to_latin1|mic_to_latin2|mic_to_latin3|mic_to_latin4|mic_to_sjis|\" +\n        \"mic_to_win1250|mic_to_win1251|mic_to_win866|min|mktinterval|mod|money|mul_d_interval|\" +\n        \"name|nameeq|namege|namegt|nameiclike|nameicnlike|nameicregexeq|nameicregexne|namein|\" +\n        \"namele|namelike|namelt|namene|namenlike|nameout|namerecv|nameregexeq|nameregexne|namesend|\" +\n        \"neqjoinsel|neqsel|netmask|network|network_cmp|network_eq|network_ge|network_gt|\" +\n        \"network_le|network_lt|network_ne|network_sub|network_subeq|network_sup|network_supeq|\" +\n        \"nextval|nlikejoinsel|nlikesel|notlike|now|npoints|nth_value|ntile|numeric_abs|\" +\n        \"numeric_accum|numeric_add|numeric_avg|numeric_avg_accum|numeric_cmp|numeric_div|\" +\n        \"numeric_div_trunc|numeric_eq|numeric_exp|numeric_fac|numeric_ge|numeric_gt|numeric_in|\" +\n        \"numeric_inc|numeric_larger|numeric_le|numeric_ln|numeric_log|numeric_lt|numeric_mod|\" +\n        \"numeric_mul|numeric_ne|numeric_out|numeric_power|numeric_recv|numeric_send|\" +\n        \"numeric_smaller|numeric_sqrt|numeric_stddev_pop|numeric_stddev_samp|numeric_sub|\" +\n        \"numeric_transform|numeric_uminus|numeric_uplus|numeric_var_pop|numeric_var_samp|\" +\n        \"numerictypmodin|numerictypmodout|numnode|numrange|numrange_subdiff|obj_description|\" +\n        \"octet_length|oid|oideq|oidge|oidgt|oidin|oidlarger|oidle|oidlt|oidne|oidout|oidrecv|oidsend|\" +\n        \"oidsmaller|oidvectoreq|oidvectorge|oidvectorgt|oidvectorin|oidvectorle|oidvectorlt|\" +\n        \"oidvectorne|oidvectorout|oidvectorrecv|oidvectorsend|oidvectortypes|on_pb|on_pl|\" +\n        \"on_ppath|on_ps|on_sb|on_sl|opaque_in|opaque_out|overlaps|overlay|path|path_add|path_add_pt|\" +\n        \"path_center|path_contain_pt|path_distance|path_div_pt|path_in|path_inter|path_length|\" +\n        \"path_mul_pt|path_n_eq|path_n_ge|path_n_gt|path_n_le|path_n_lt|path_npoints|path_out|\" +\n        \"path_recv|path_send|path_sub_pt|pclose|percent_rank|pg_advisory_lock|\" +\n        \"pg_advisory_lock_shared|pg_advisory_unlock|pg_advisory_unlock_all|\" +\n        \"pg_advisory_unlock_shared|pg_advisory_xact_lock|pg_advisory_xact_lock_shared|\" +\n        \"pg_available_extension_versions|pg_available_extensions|pg_backend_pid|\" +\n        \"pg_backup_start_time|pg_cancel_backend|pg_char_to_encoding|pg_client_encoding|\" +\n        \"pg_collation_for|pg_collation_is_visible|pg_column_is_updatable|pg_column_size|\" +\n        \"pg_conf_load_time|pg_conversion_is_visible|pg_create_restore_point|\" +\n        \"pg_current_xlog_insert_location|pg_current_xlog_location|pg_cursor|pg_database_size|\" +\n        \"pg_describe_object|pg_encoding_max_length|pg_encoding_to_char|\" +\n        \"pg_event_trigger_dropped_objects|pg_export_snapshot|pg_extension_config_dump|\" +\n        \"pg_extension_update_paths|pg_function_is_visible|pg_get_constraintdef|pg_get_expr|\" +\n        \"pg_get_function_arguments|pg_get_function_identity_arguments|\" +\n        \"pg_get_function_result|pg_get_functiondef|pg_get_indexdef|pg_get_keywords|\" +\n        \"pg_get_multixact_members|pg_get_ruledef|pg_get_serial_sequence|pg_get_triggerdef|\" +\n        \"pg_get_userbyid|pg_get_viewdef|pg_has_role|pg_identify_object|pg_indexes_size|\" +\n        \"pg_is_in_backup|pg_is_in_recovery|pg_is_other_temp_schema|pg_is_xlog_replay_paused|\" +\n        \"pg_last_xact_replay_timestamp|pg_last_xlog_receive_location|\" +\n        \"pg_last_xlog_replay_location|pg_listening_channels|pg_lock_status|pg_ls_dir|\" +\n        \"pg_my_temp_schema|pg_node_tree_in|pg_node_tree_out|pg_node_tree_recv|\" +\n        \"pg_node_tree_send|pg_notify|pg_opclass_is_visible|pg_operator_is_visible|\" +\n        \"pg_opfamily_is_visible|pg_options_to_table|pg_postmaster_start_time|\" +\n        \"pg_prepared_statement|pg_prepared_xact|pg_read_binary_file|pg_read_file|\" +\n        \"pg_relation_filenode|pg_relation_filepath|pg_relation_is_updatable|pg_relation_size|\" +\n        \"pg_reload_conf|pg_rotate_logfile|pg_sequence_parameters|pg_show_all_settings|\" +\n        \"pg_size_pretty|pg_sleep|pg_start_backup|pg_stat_clear_snapshot|pg_stat_file|\" +\n        \"pg_stat_get_activity|pg_stat_get_analyze_count|pg_stat_get_autoanalyze_count|\" +\n        \"pg_stat_get_autovacuum_count|pg_stat_get_backend_activity|\" +\n        \"pg_stat_get_backend_activity_start|pg_stat_get_backend_client_addr|\" +\n        \"pg_stat_get_backend_client_port|pg_stat_get_backend_dbid|pg_stat_get_backend_idset|\" +\n        \"pg_stat_get_backend_pid|pg_stat_get_backend_start|pg_stat_get_backend_userid|\" +\n        \"pg_stat_get_backend_waiting|pg_stat_get_backend_xact_start|\" +\n        \"pg_stat_get_bgwriter_buf_written_checkpoints|\" +\n        \"pg_stat_get_bgwriter_buf_written_clean|pg_stat_get_bgwriter_maxwritten_clean|\" +\n        \"pg_stat_get_bgwriter_requested_checkpoints|pg_stat_get_bgwriter_stat_reset_time|\" +\n        \"pg_stat_get_bgwriter_timed_checkpoints|pg_stat_get_blocks_fetched|\" +\n        \"pg_stat_get_blocks_hit|pg_stat_get_buf_alloc|pg_stat_get_buf_fsync_backend|\" +\n        \"pg_stat_get_buf_written_backend|pg_stat_get_checkpoint_sync_time|\" +\n        \"pg_stat_get_checkpoint_write_time|pg_stat_get_db_blk_read_time|\" +\n        \"pg_stat_get_db_blk_write_time|pg_stat_get_db_blocks_fetched|\" +\n        \"pg_stat_get_db_blocks_hit|pg_stat_get_db_conflict_all|\" +\n        \"pg_stat_get_db_conflict_bufferpin|pg_stat_get_db_conflict_lock|\" +\n        \"pg_stat_get_db_conflict_snapshot|pg_stat_get_db_conflict_startup_deadlock|\" +\n        \"pg_stat_get_db_conflict_tablespace|pg_stat_get_db_deadlocks|\" +\n        \"pg_stat_get_db_numbackends|pg_stat_get_db_stat_reset_time|\" +\n        \"pg_stat_get_db_temp_bytes|pg_stat_get_db_temp_files|pg_stat_get_db_tuples_deleted|\" +\n        \"pg_stat_get_db_tuples_fetched|pg_stat_get_db_tuples_inserted|\" +\n        \"pg_stat_get_db_tuples_returned|pg_stat_get_db_tuples_updated|\" +\n        \"pg_stat_get_db_xact_commit|pg_stat_get_db_xact_rollback|pg_stat_get_dead_tuples|\" +\n        \"pg_stat_get_function_calls|pg_stat_get_function_self_time|\" +\n        \"pg_stat_get_function_total_time|pg_stat_get_last_analyze_time|\" +\n        \"pg_stat_get_last_autoanalyze_time|pg_stat_get_last_autovacuum_time|\" +\n        \"pg_stat_get_last_vacuum_time|pg_stat_get_live_tuples|pg_stat_get_numscans|\" +\n        \"pg_stat_get_tuples_deleted|pg_stat_get_tuples_fetched|\" +\n        \"pg_stat_get_tuples_hot_updated|pg_stat_get_tuples_inserted|\" +\n        \"pg_stat_get_tuples_returned|pg_stat_get_tuples_updated|pg_stat_get_vacuum_count|\" +\n        \"pg_stat_get_wal_senders|pg_stat_get_xact_blocks_fetched|\" +\n        \"pg_stat_get_xact_blocks_hit|pg_stat_get_xact_function_calls|\" +\n        \"pg_stat_get_xact_function_self_time|pg_stat_get_xact_function_total_time|\" +\n        \"pg_stat_get_xact_numscans|pg_stat_get_xact_tuples_deleted|\" +\n        \"pg_stat_get_xact_tuples_fetched|pg_stat_get_xact_tuples_hot_updated|\" +\n        \"pg_stat_get_xact_tuples_inserted|pg_stat_get_xact_tuples_returned|\" +\n        \"pg_stat_get_xact_tuples_updated|pg_stat_reset|pg_stat_reset_shared|\" +\n        \"pg_stat_reset_single_function_counters|pg_stat_reset_single_table_counters|\" +\n        \"pg_stop_backup|pg_switch_xlog|pg_table_is_visible|pg_table_size|\" +\n        \"pg_tablespace_databases|pg_tablespace_location|pg_tablespace_size|\" +\n        \"pg_terminate_backend|pg_timezone_abbrevs|pg_timezone_names|pg_total_relation_size|\" +\n        \"pg_trigger_depth|pg_try_advisory_lock|pg_try_advisory_lock_shared|\" +\n        \"pg_try_advisory_xact_lock|pg_try_advisory_xact_lock_shared|pg_ts_config_is_visible|\" +\n        \"pg_ts_dict_is_visible|pg_ts_parser_is_visible|pg_ts_template_is_visible|\" +\n        \"pg_type_is_visible|pg_typeof|pg_xlog_location_diff|pg_xlog_replay_pause|\" +\n        \"pg_xlog_replay_resume|pg_xlogfile_name|pg_xlogfile_name_offset|pi|plainto_tsquery|\" +\n        \"plpgsql_call_handler|plpgsql_inline_handler|plpgsql_validator|point|point_above|\" +\n        \"point_add|point_below|point_distance|point_div|point_eq|point_horiz|point_in|point_left|\" +\n        \"point_mul|point_ne|point_out|point_recv|point_right|point_send|point_sub|point_vert|\" +\n        \"poly_above|poly_below|poly_center|poly_contain|poly_contain_pt|poly_contained|\" +\n        \"poly_distance|poly_in|poly_left|poly_npoints|poly_out|poly_overabove|poly_overbelow|\" +\n        \"poly_overlap|poly_overleft|poly_overright|poly_recv|poly_right|poly_same|poly_send|\" +\n        \"polygon|popen|position|positionjoinsel|positionsel|postgresql_fdw_validator|pow|power|\" +\n        \"prsd_end|prsd_headline|prsd_lextype|prsd_nexttoken|prsd_start|pt_contained_circle|\" +\n        \"pt_contained_poly|query_to_xml|query_to_xml_and_xmlschema|query_to_xmlschema|\" +\n        \"querytree|quote_ident|quote_literal|quote_nullable|radians|radius|random|range_adjacent|\" +\n        \"range_after|range_before|range_cmp|range_contained_by|range_contains|\" +\n        \"range_contains_elem|range_eq|range_ge|range_gist_compress|range_gist_consistent|\" +\n        \"range_gist_decompress|range_gist_penalty|range_gist_picksplit|range_gist_same|\" +\n        \"range_gist_union|range_gt|range_in|range_intersect|range_le|range_lt|range_minus|\" +\n        \"range_ne|range_out|range_overlaps|range_overleft|range_overright|range_recv|range_send|\" +\n        \"range_typanalyze|range_union|rangesel|rank|record_eq|record_ge|record_gt|record_in|\" +\n        \"record_le|record_lt|record_ne|record_out|record_recv|record_send|regclass|regclassin|\" +\n        \"regclassout|regclassrecv|regclasssend|regconfigin|regconfigout|regconfigrecv|\" +\n        \"regconfigsend|regdictionaryin|regdictionaryout|regdictionaryrecv|regdictionarysend|\" +\n        \"regexeqjoinsel|regexeqsel|regexnejoinsel|regexnesel|regexp_matches|regexp_replace|\" +\n        \"regexp_split_to_array|regexp_split_to_table|regoperatorin|regoperatorout|\" +\n        \"regoperatorrecv|regoperatorsend|regoperin|regoperout|regoperrecv|regopersend|\" +\n        \"regprocedurein|regprocedureout|regprocedurerecv|regproceduresend|regprocin|regprocout|\" +\n        \"regprocrecv|regprocsend|regr_avgx|regr_avgy|regr_count|regr_intercept|regr_r2|\" +\n        \"regr_slope|regr_sxx|regr_sxy|regr_syy|regtypein|regtypeout|regtyperecv|regtypesend|\" +\n        \"reltime|reltimeeq|reltimege|reltimegt|reltimein|reltimele|reltimelt|reltimene|reltimeout|\" +\n        \"reltimerecv|reltimesend|repeat|replace|reverse|right|round|row_number|row_to_json|rpad|\" +\n        \"rtrim|scalargtjoinsel|scalargtsel|scalarltjoinsel|scalarltsel|schema_to_xml|\" +\n        \"schema_to_xml_and_xmlschema|schema_to_xmlschema|session_user|set_bit|set_byte|\" +\n        \"set_config|set_masklen|setseed|setval|setweight|shell_in|shell_out|\" +\n        \"shift_jis_2004_to_euc_jis_2004|shift_jis_2004_to_utf8|shobj_description|sign|\" +\n        \"similar_escape|sin|sjis_to_euc_jp|sjis_to_mic|sjis_to_utf8|slope|smgreq|smgrin|smgrne|\" +\n        \"smgrout|spg_kd_choose|spg_kd_config|spg_kd_inner_consistent|spg_kd_picksplit|\" +\n        \"spg_quad_choose|spg_quad_config|spg_quad_inner_consistent|spg_quad_leaf_consistent|\" +\n        \"spg_quad_picksplit|spg_range_quad_choose|spg_range_quad_config|\" +\n        \"spg_range_quad_inner_consistent|spg_range_quad_leaf_consistent|\" +\n        \"spg_range_quad_picksplit|spg_text_choose|spg_text_config|spg_text_inner_consistent|\" +\n        \"spg_text_leaf_consistent|spg_text_picksplit|spgbeginscan|spgbuild|spgbuildempty|\" +\n        \"spgbulkdelete|spgcanreturn|spgcostestimate|spgendscan|spggetbitmap|spggettuple|\" +\n        \"spginsert|spgmarkpos|spgoptions|spgrescan|spgrestrpos|spgvacuumcleanup|split_part|sqrt|\" +\n        \"statement_timestamp|stddev|stddev_pop|stddev_samp|string_agg|string_agg_finalfn|\" +\n        \"string_agg_transfn|string_to_array|strip|strpos|substr|substring|sum|\" +\n        \"suppress_redundant_updates_trigger|table_to_xml|table_to_xml_and_xmlschema|\" +\n        \"table_to_xmlschema|tan|text|text_ge|text_gt|text_larger|text_le|text_lt|text_pattern_ge|\" +\n        \"text_pattern_gt|text_pattern_le|text_pattern_lt|text_smaller|textanycat|textcat|texteq|\" +\n        \"texticlike|texticnlike|texticregexeq|texticregexne|textin|textlen|textlike|textne|\" +\n        \"textnlike|textout|textrecv|textregexeq|textregexne|textsend|thesaurus_init|\" +\n        \"thesaurus_lexize|tideq|tidge|tidgt|tidin|tidlarger|tidle|tidlt|tidne|tidout|tidrecv|tidsend|\" +\n        \"tidsmaller|time_cmp|time_eq|time_ge|time_gt|time_hash|time_in|time_larger|time_le|time_lt|\" +\n        \"time_mi_interval|time_mi_time|time_ne|time_out|time_pl_interval|time_recv|time_send|\" +\n        \"time_smaller|time_transform|timedate_pl|timemi|timenow|timeofday|timepl|timestamp_cmp|\" +\n        \"timestamp_cmp_date|timestamp_cmp_timestamptz|timestamp_eq|timestamp_eq_date|\" +\n        \"timestamp_eq_timestamptz|timestamp_ge|timestamp_ge_date|timestamp_ge_timestamptz|\" +\n        \"timestamp_gt|timestamp_gt_date|timestamp_gt_timestamptz|timestamp_hash|timestamp_in|\" +\n        \"timestamp_larger|timestamp_le|timestamp_le_date|timestamp_le_timestamptz|\" +\n        \"timestamp_lt|timestamp_lt_date|timestamp_lt_timestamptz|timestamp_mi|\" +\n        \"timestamp_mi_interval|timestamp_ne|timestamp_ne_date|timestamp_ne_timestamptz|\" +\n        \"timestamp_out|timestamp_pl_interval|timestamp_recv|timestamp_send|timestamp_smaller|\" +\n        \"timestamp_sortsupport|timestamp_transform|timestamptypmodin|timestamptypmodout|\" +\n        \"timestamptz_cmp|timestamptz_cmp_date|timestamptz_cmp_timestamp|timestamptz_eq|\" +\n        \"timestamptz_eq_date|timestamptz_eq_timestamp|timestamptz_ge|timestamptz_ge_date|\" +\n        \"timestamptz_ge_timestamp|timestamptz_gt|timestamptz_gt_date|\" +\n        \"timestamptz_gt_timestamp|timestamptz_in|timestamptz_larger|timestamptz_le|\" +\n        \"timestamptz_le_date|timestamptz_le_timestamp|timestamptz_lt|timestamptz_lt_date|\" +\n        \"timestamptz_lt_timestamp|timestamptz_mi|timestamptz_mi_interval|timestamptz_ne|\" +\n        \"timestamptz_ne_date|timestamptz_ne_timestamp|timestamptz_out|\" +\n        \"timestamptz_pl_interval|timestamptz_recv|timestamptz_send|timestamptz_smaller|\" +\n        \"timestamptztypmodin|timestamptztypmodout|timetypmodin|timetypmodout|timetz_cmp|\" +\n        \"timetz_eq|timetz_ge|timetz_gt|timetz_hash|timetz_in|timetz_larger|timetz_le|timetz_lt|\" +\n        \"timetz_mi_interval|timetz_ne|timetz_out|timetz_pl_interval|timetz_recv|timetz_send|\" +\n        \"timetz_smaller|timetzdate_pl|timetztypmodin|timetztypmodout|timezone|tinterval|\" +\n        \"tintervalct|tintervalend|tintervaleq|tintervalge|tintervalgt|tintervalin|tintervalle|\" +\n        \"tintervalleneq|tintervallenge|tintervallengt|tintervallenle|tintervallenlt|\" +\n        \"tintervallenne|tintervallt|tintervalne|tintervalout|tintervalov|tintervalrecv|\" +\n        \"tintervalrel|tintervalsame|tintervalsend|tintervalstart|to_ascii|to_char|to_date|to_hex|\" +\n        \"to_json|to_number|to_timestamp|to_tsquery|to_tsvector|transaction_timestamp|translate|\" +\n        \"trigger_in|trigger_out|trunc|ts_debug|ts_headline|ts_lexize|ts_match_qv|ts_match_tq|\" +\n        \"ts_match_tt|ts_match_vq|ts_parse|ts_rank|ts_rank_cd|ts_rewrite|ts_stat|ts_token_type|\" +\n        \"ts_typanalyze|tsmatchjoinsel|tsmatchsel|tsq_mcontained|tsq_mcontains|tsquery_and|\" +\n        \"tsquery_cmp|tsquery_eq|tsquery_ge|tsquery_gt|tsquery_le|tsquery_lt|tsquery_ne|\" +\n        \"tsquery_not|tsquery_or|tsqueryin|tsqueryout|tsqueryrecv|tsquerysend|tsrange|\" +\n        \"tsrange_subdiff|tstzrange|tstzrange_subdiff|tsvector_cmp|tsvector_concat|tsvector_eq|\" +\n        \"tsvector_ge|tsvector_gt|tsvector_le|tsvector_lt|tsvector_ne|tsvector_update_trigger|\" +\n        \"tsvector_update_trigger_column|tsvectorin|tsvectorout|tsvectorrecv|tsvectorsend|\" +\n        \"txid_current|txid_current_snapshot|txid_snapshot_in|txid_snapshot_out|\" +\n        \"txid_snapshot_recv|txid_snapshot_send|txid_snapshot_xip|txid_snapshot_xmax|\" +\n        \"txid_snapshot_xmin|txid_visible_in_snapshot|uhc_to_utf8|unique_key_recheck|unknownin|\" +\n        \"unknownout|unknownrecv|unknownsend|unnest|upper|upper_inc|upper_inf|utf8_to_ascii|\" +\n        \"utf8_to_big5|utf8_to_euc_cn|utf8_to_euc_jis_2004|utf8_to_euc_jp|utf8_to_euc_kr|\" +\n        \"utf8_to_euc_tw|utf8_to_gb18030|utf8_to_gbk|utf8_to_iso8859|utf8_to_iso8859_1|\" +\n        \"utf8_to_johab|utf8_to_koi8r|utf8_to_koi8u|utf8_to_shift_jis_2004|utf8_to_sjis|\" +\n        \"utf8_to_uhc|utf8_to_win|uuid_cmp|uuid_eq|uuid_ge|uuid_gt|uuid_hash|uuid_in|uuid_le|\" +\n        \"uuid_lt|uuid_ne|uuid_out|uuid_recv|uuid_send|var_pop|var_samp|varbit_in|varbit_out|\" +\n        \"varbit_recv|varbit_send|varbit_transform|varbitcmp|varbiteq|varbitge|varbitgt|varbitle|\" +\n        \"varbitlt|varbitne|varbittypmodin|varbittypmodout|varchar_transform|varcharin|\" +\n        \"varcharout|varcharrecv|varcharsend|varchartypmodin|varchartypmodout|variance|version|\" +\n        \"void_in|void_out|void_recv|void_send|width|width_bucket|win1250_to_latin2|\" +\n        \"win1250_to_mic|win1251_to_iso|win1251_to_koi8r|win1251_to_mic|win1251_to_win866|\" +\n        \"win866_to_iso|win866_to_koi8r|win866_to_mic|win866_to_win1251|win_to_utf8|xideq|\" +\n        \"xideqint4|xidin|xidout|xidrecv|xidsend|xml|xml_in|xml_is_well_formed|\" +\n        \"xml_is_well_formed_content|xml_is_well_formed_document|xml_out|xml_recv|xml_send|\" +\n        \"xmlagg|xmlcomment|xmlconcat2|xmlexists|xmlvalidate|xpath|xpath_exists\");\n    var keywordMapper = this.createKeywordMapper({\n        \"support.function\": builtinFunctions,\n        \"keyword\": keywords\n    }, \"identifier\", true);\n    var sqlRules = [{\n            token: \"string\", // single line string -- assume dollar strings if multi-line for now\n            regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n        }, {\n            token: \"variable.language\", // pg identifier\n            regex: '\".*?\"'\n        }, {\n            token: \"constant.numeric\", // float\n            regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n        }, {\n            token: keywordMapper,\n            regex: \"[a-zA-Z_][a-zA-Z0-9_$]*\\\\b\" // TODO - Unicode in identifiers\n        }, {\n            token: \"keyword.operator\",\n            regex: \"!|!!|!~|!~\\\\*|!~~|!~~\\\\*|#|##|#<|#<=|#<>|#=|#>|#>=|%|\\\\&|\\\\&\\\\&|\\\\&<|\\\\&<\\\\||\\\\&>|\\\\*|\\\\+|\" +\n                \"\\\\-|/|<|<#>|<\\\\->|<<|<<=|<<\\\\||<=|<>|<\\\\?>|<@|<\\\\^|=|>|>=|>>|>>=|>\\\\^|\\\\?#|\\\\?\\\\-|\\\\?\\\\-\\\\||\" +\n                \"\\\\?\\\\||\\\\?\\\\|\\\\||@|@\\\\-@|@>|@@|@@@|\\\\^|\\\\||\\\\|\\\\&>|\\\\|/|\\\\|>>|\\\\|\\\\||\\\\|\\\\|/|~|~\\\\*|~<=~|~<~|\" +\n                \"~=|~>=~|~>~|~~|~~\\\\*\"\n        }, {\n            token: \"paren.lparen\",\n            regex: \"[\\\\(]\"\n        }, {\n            token: \"paren.rparen\",\n            regex: \"[\\\\)]\"\n        }, {\n            token: \"text\",\n            regex: \"\\\\s+\"\n        }\n    ];\n    this.$rules = {\n        \"start\": [{\n                token: \"comment\",\n                regex: \"--.*$\"\n            },\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            {\n                token: \"comment\", // multi-line comment\n                regex: \"\\\\/\\\\*\",\n                next: \"comment\"\n            }, {\n                token: \"keyword.statementBegin\",\n                regex: \"[a-zA-Z]+\", // Could enumerate starting keywords but this allows things to work when new statements are added.\n                next: \"statement\"\n            }, {\n                token: \"support.buildin\", // psql directive\n                regex: \"^\\\\\\\\[\\\\S]+.*$\"\n            }\n        ],\n        \"statement\": [{\n                token: \"comment\",\n                regex: \"--.*$\"\n            }, {\n                token: \"comment\", // multi-line comment\n                regex: \"\\\\/\\\\*\",\n                next: \"commentStatement\"\n            }, {\n                token: \"statementEnd\",\n                regex: \";\",\n                next: \"start\"\n            }, {\n                token: \"string\",\n                regex: \"\\\\$perl\\\\$\",\n                next: \"perl-start\"\n            }, {\n                token: \"string\",\n                regex: \"\\\\$python\\\\$\",\n                next: \"python-start\"\n            }, {\n                token: \"string\",\n                regex: \"\\\\$json\\\\$\",\n                next: \"json-start\"\n            }, {\n                token: \"string\",\n                regex: \"\\\\$(js|javascript)\\\\$\",\n                next: \"javascript-start\"\n            }, {\n                token: \"string\",\n                regex: \"\\\\$\\\\$$\",\n                next: \"dollarSql\"\n            }, {\n                token: \"string\",\n                regex: \"\\\\$[\\\\w_0-9]*\\\\$\",\n                next: \"dollarStatementString\"\n            }\n        ].concat(sqlRules),\n        \"dollarSql\": [{\n                token: \"comment\",\n                regex: \"--.*$\"\n            }, {\n                token: \"comment\", // multi-line comment\n                regex: \"\\\\/\\\\*\",\n                next: \"commentDollarSql\"\n            }, {\n                token: [\"keyword\", \"statementEnd\", \"text\", \"string\"], // end quoting with dollar at the start of a line\n                regex: \"(^|END)(;)?(\\\\s*)(\\\\$\\\\$)\",\n                next: \"statement\"\n            }, {\n                token: \"string\",\n                regex: \"\\\\$[\\\\w_0-9]*\\\\$\",\n                next: \"dollarSqlString\"\n            }\n        ].concat(sqlRules),\n        \"comment\": [{\n                token: \"comment\", // closing comment\n                regex: \"\\\\*\\\\/\",\n                next: \"start\"\n            }, {\n                defaultToken: \"comment\"\n            }\n        ],\n        \"commentStatement\": [{\n                token: \"comment\", // closing comment\n                regex: \"\\\\*\\\\/\",\n                next: \"statement\"\n            }, {\n                defaultToken: \"comment\"\n            }\n        ],\n        \"commentDollarSql\": [{\n                token: \"comment\", // closing comment\n                regex: \"\\\\*\\\\/\",\n                next: \"dollarSql\"\n            }, {\n                defaultToken: \"comment\"\n            }\n        ],\n        \"dollarStatementString\": [{\n                token: \"string\", // closing dollarstring\n                regex: \".*?\\\\$[\\\\w_0-9]*\\\\$\",\n                next: \"statement\"\n            }, {\n                token: \"string\", // dollarstring spanning whole line\n                regex: \".+\"\n            }\n        ],\n        \"dollarSqlString\": [{\n                token: \"string\", // closing dollarstring\n                regex: \".*?\\\\$[\\\\w_0-9]*\\\\$\",\n                next: \"dollarSql\"\n            }, {\n                token: \"string\", // dollarstring spanning whole line\n                regex: \".+\"\n            }\n        ]\n    };\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"start\")]);\n    this.embedRules(PerlHighlightRules, \"perl-\", [{ token: \"string\", regex: \"\\\\$perl\\\\$\", next: \"statement\" }]);\n    this.embedRules(PythonHighlightRules, \"python-\", [{ token: \"string\", regex: \"\\\\$python\\\\$\", next: \"statement\" }]);\n    this.embedRules(JsonHighlightRules, \"json-\", [{ token: \"string\", regex: \"\\\\$json\\\\$\", next: \"statement\" }]);\n    this.embedRules(JavaScriptHighlightRules, \"javascript-\", [{ token: \"string\", regex: \"\\\\$(js|javascript)\\\\$\", next: \"statement\" }]);\n};\noop.inherits(PgsqlHighlightRules, TextHighlightRules);\nexports.PgsqlHighlightRules = PgsqlHighlightRules;\n\n});\n\nace.define(\"ace/mode/pgsql\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/pgsql_highlight_rules\"], function(require, exports, module){var oop = require(\"../lib/oop\");\nvar TextMode = require(\"../mode/text\").Mode;\nvar PgsqlHighlightRules = require(\"./pgsql_highlight_rules\").PgsqlHighlightRules;\nvar Mode = function () {\n    this.HighlightRules = PgsqlHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"--\";\n    this.blockComment = { start: \"/*\", end: \"*/\" };\n    this.getNextLineIndent = function (state, line, tab) {\n        if (state == \"start\" || state == \"keyword.statementEnd\") {\n            return \"\";\n        }\n        else {\n            return this.$getIndent(line); // Keep whatever indent the previous line has\n        }\n    };\n    this.$id = \"ace/mode/pgsql\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/pgsql\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}