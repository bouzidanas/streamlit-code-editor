{"ast":null,"code":"ace.define(\"ace/mode/vala_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  /* This file was autogenerated from https://raw.githubusercontent.com/technosophos/Vala-TMBundle/master/Syntaxes/Vala.tmLanguage (uuid: ) */\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var ValaHighlightRules = function () {\n    this.$rules = {\n      start: [{\n        token: ['meta.using.vala', 'keyword.other.using.vala', 'meta.using.vala', 'storage.modifier.using.vala', 'meta.using.vala', 'punctuation.terminator.vala'],\n        regex: '^(\\\\s*)(using)\\\\b(?:(\\\\s*)([^ ;$]+)(\\\\s*)((?:;)?))?'\n      }, {\n        include: '#code'\n      }],\n      '#all-types': [{\n        include: '#primitive-arrays'\n      }, {\n        include: '#primitive-types'\n      }, {\n        include: '#object-types'\n      }],\n      '#annotations': [{\n        token: ['storage.type.annotation.vala', 'punctuation.definition.annotation-arguments.begin.vala'],\n        regex: '(@[^ (]+)(\\\\()',\n        push: [{\n          token: 'punctuation.definition.annotation-arguments.end.vala',\n          regex: '\\\\)',\n          next: 'pop'\n        }, {\n          token: ['constant.other.key.vala', 'text', 'keyword.operator.assignment.vala'],\n          regex: '(\\\\w*)(\\\\s*)(=)'\n        }, {\n          include: '#code'\n        }, {\n          token: 'punctuation.seperator.property.vala',\n          regex: ','\n        }, {\n          defaultToken: 'meta.declaration.annotation.vala'\n        }]\n      }, {\n        token: 'storage.type.annotation.vala',\n        regex: '@\\\\w*'\n      }],\n      '#anonymous-classes-and-new': [{\n        token: 'keyword.control.new.vala',\n        regex: '\\\\bnew\\\\b',\n        push_disabled: [{\n          token: 'text',\n          regex: '(?<=\\\\)|\\\\])(?!\\\\s*{)|(?<=})|(?=;)',\n          TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n          originalRegex: '(?<=\\\\)|\\\\])(?!\\\\s*{)|(?<=})|(?=;)',\n          next: 'pop'\n        }, {\n          token: ['storage.type.vala', 'text'],\n          regex: '(\\\\w+)(\\\\s*)(?=\\\\[)',\n          push: [{\n            token: 'text',\n            regex: '}|(?=;|\\\\))',\n            next: 'pop'\n          }, {\n            token: 'text',\n            regex: '\\\\[',\n            push: [{\n              token: 'text',\n              regex: '\\\\]',\n              next: 'pop'\n            }, {\n              include: '#code'\n            }]\n          }, {\n            token: 'text',\n            regex: '{',\n            push: [{\n              token: 'text',\n              regex: '(?=})',\n              next: 'pop'\n            }, {\n              include: '#code'\n            }]\n          }]\n        }, {\n          token: 'text',\n          regex: '(?=\\\\w.*\\\\()',\n          push: [{\n            token: 'text',\n            regex: '(?<=\\\\))',\n            TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n            originalRegex: '(?<=\\\\))',\n            next: 'pop'\n          }, {\n            include: '#object-types'\n          }, {\n            token: 'text',\n            regex: '\\\\(',\n            push: [{\n              token: 'text',\n              regex: '\\\\)',\n              next: 'pop'\n            }, {\n              include: '#code'\n            }]\n          }]\n        }, {\n          token: 'meta.inner-class.vala',\n          regex: '{',\n          push: [{\n            token: 'meta.inner-class.vala',\n            regex: '}',\n            next: 'pop'\n          }, {\n            include: '#class-body'\n          }, {\n            defaultToken: 'meta.inner-class.vala'\n          }]\n        }]\n      }],\n      '#assertions': [{\n        token: ['keyword.control.assert.vala', 'meta.declaration.assertion.vala'],\n        regex: '\\\\b(assert|requires|ensures)(\\\\s)',\n        push: [{\n          token: 'meta.declaration.assertion.vala',\n          regex: '$',\n          next: 'pop'\n        }, {\n          token: 'keyword.operator.assert.expression-seperator.vala',\n          regex: ':'\n        }, {\n          include: '#code'\n        }, {\n          defaultToken: 'meta.declaration.assertion.vala'\n        }]\n      }],\n      '#class': [{\n        token: 'meta.class.vala',\n        regex: '(?=\\\\w?[\\\\w\\\\s]*(?:class|(?:@)?interface|enum|struct|namespace)\\\\s+\\\\w+)',\n        push: [{\n          token: 'paren.vala',\n          regex: '}',\n          next: 'pop'\n        }, {\n          include: '#storage-modifiers'\n        }, {\n          include: '#comments'\n        }, {\n          token: ['storage.modifier.vala', 'meta.class.identifier.vala', 'entity.name.type.class.vala'],\n          regex: '(class|(?:@)?interface|enum|struct|namespace)(\\\\s+)([\\\\w\\\\.]+)'\n        }, {\n          token: 'storage.modifier.extends.vala',\n          regex: ':',\n          push: [{\n            token: 'meta.definition.class.inherited.classes.vala',\n            regex: '(?={|,)',\n            next: 'pop'\n          }, {\n            include: '#object-types-inherited'\n          }, {\n            include: '#comments'\n          }, {\n            defaultToken: 'meta.definition.class.inherited.classes.vala'\n          }]\n        }, {\n          token: ['storage.modifier.implements.vala', 'meta.definition.class.implemented.interfaces.vala'],\n          regex: '(,)(\\\\s)',\n          push: [{\n            token: 'meta.definition.class.implemented.interfaces.vala',\n            regex: '(?=\\\\{)',\n            next: 'pop'\n          }, {\n            include: '#object-types-inherited'\n          }, {\n            include: '#comments'\n          }, {\n            defaultToken: 'meta.definition.class.implemented.interfaces.vala'\n          }]\n        }, {\n          token: 'paren.vala',\n          regex: '{',\n          push: [{\n            token: 'paren.vala',\n            regex: '(?=})',\n            next: 'pop'\n          }, {\n            include: '#class-body'\n          }, {\n            defaultToken: 'meta.class.body.vala'\n          }]\n        }, {\n          defaultToken: 'meta.class.vala'\n        }],\n        comment: 'attempting to put namespace in here.'\n      }],\n      '#class-body': [{\n        include: '#comments'\n      }, {\n        include: '#class'\n      }, {\n        include: '#enums'\n      }, {\n        include: '#methods'\n      }, {\n        include: '#annotations'\n      }, {\n        include: '#storage-modifiers'\n      }, {\n        include: '#code'\n      }],\n      '#code': [{\n        include: '#comments'\n      }, {\n        include: '#class'\n      }, {\n        token: 'text',\n        regex: '{',\n        push: [{\n          token: 'text',\n          regex: '}',\n          next: 'pop'\n        }, {\n          include: '#code'\n        }]\n      }, {\n        include: '#assertions'\n      }, {\n        include: '#parens'\n      }, {\n        include: '#constants-and-special-vars'\n      }, {\n        include: '#anonymous-classes-and-new'\n      }, {\n        include: '#keywords'\n      }, {\n        include: '#storage-modifiers'\n      }, {\n        include: '#strings'\n      }, {\n        include: '#all-types'\n      }],\n      '#comments': [{\n        token: 'punctuation.definition.comment.vala',\n        regex: '/\\\\*\\\\*/'\n      }, {\n        include: 'text.html.javadoc'\n      }, {\n        include: '#comments-inline'\n      }],\n      '#comments-inline': [{\n        token: 'punctuation.definition.comment.vala',\n        regex: '/\\\\*',\n        push: [{\n          token: 'punctuation.definition.comment.vala',\n          regex: '\\\\*/',\n          next: 'pop'\n        }, {\n          defaultToken: 'comment.block.vala'\n        }]\n      }, {\n        token: ['text', 'punctuation.definition.comment.vala', 'comment.line.double-slash.vala'],\n        regex: '(\\\\s*)(//)(.*$)'\n      }],\n      '#constants-and-special-vars': [{\n        token: 'constant.language.vala',\n        regex: '\\\\b(?:true|false|null)\\\\b'\n      }, {\n        token: 'variable.language.vala',\n        regex: '\\\\b(?:this|base)\\\\b'\n      }, {\n        token: 'constant.numeric.vala',\n        regex: '\\\\b(?:0(?:x|X)[0-9a-fA-F]*|(?:[0-9]+\\\\.?[0-9]*|\\\\.[0-9]+)(?:(?:e|E)(?:\\\\+|-)?[0-9]+)?)(?:[LlFfUuDd]|UL|ul)?\\\\b'\n      }, {\n        token: ['keyword.operator.dereference.vala', 'constant.other.vala'],\n        regex: '((?:\\\\.)?)\\\\b([A-Z][A-Z0-9_]+)(?!<|\\\\.class|\\\\s*\\\\w+\\\\s*=)\\\\b'\n      }],\n      '#enums': [{\n        token: 'text',\n        regex: '^(?=\\\\s*[A-Z0-9_]+\\\\s*(?:{|\\\\(|,))',\n        push: [{\n          token: 'text',\n          regex: '(?=;|})',\n          next: 'pop'\n        }, {\n          token: 'constant.other.enum.vala',\n          regex: '\\\\w+',\n          push: [{\n            token: 'meta.enum.vala',\n            regex: '(?=,|;|})',\n            next: 'pop'\n          }, {\n            include: '#parens'\n          }, {\n            token: 'text',\n            regex: '{',\n            push: [{\n              token: 'text',\n              regex: '}',\n              next: 'pop'\n            }, {\n              include: '#class-body'\n            }]\n          }, {\n            defaultToken: 'meta.enum.vala'\n          }]\n        }]\n      }],\n      '#keywords': [{\n        token: 'keyword.control.catch-exception.vala',\n        regex: '\\\\b(?:try|catch|finally|throw)\\\\b'\n      }, {\n        token: 'keyword.control.vala',\n        regex: '\\\\?|:|\\\\?\\\\?'\n      }, {\n        token: 'keyword.control.vala',\n        regex: '\\\\b(?:return|break|case|continue|default|do|while|for|foreach|switch|if|else|in|yield|get|set|value)\\\\b'\n      }, {\n        token: 'keyword.operator.vala',\n        regex: '\\\\b(?:typeof|is|as)\\\\b'\n      }, {\n        token: 'keyword.operator.comparison.vala',\n        regex: '==|!=|<=|>=|<>|<|>'\n      }, {\n        token: 'keyword.operator.assignment.vala',\n        regex: '='\n      }, {\n        token: 'keyword.operator.increment-decrement.vala',\n        regex: '\\\\-\\\\-|\\\\+\\\\+'\n      }, {\n        token: 'keyword.operator.arithmetic.vala',\n        regex: '\\\\-|\\\\+|\\\\*|\\\\/|%'\n      }, {\n        token: 'keyword.operator.logical.vala',\n        regex: '!|&&|\\\\|\\\\|'\n      }, {\n        token: 'keyword.operator.dereference.vala',\n        regex: '\\\\.(?=\\\\S)',\n        originalRegex: '(?<=\\\\S)\\\\.(?=\\\\S)'\n      }, {\n        token: 'punctuation.terminator.vala',\n        regex: ';'\n      }, {\n        token: 'keyword.operator.ownership',\n        regex: 'owned|unowned'\n      }],\n      '#methods': [{\n        token: 'meta.method.vala',\n        regex: '(?!new)(?=\\\\w.*\\\\s+)(?=[^=]+\\\\()',\n        push: [{\n          token: 'paren.vala',\n          regex: '}|(?=;)',\n          next: 'pop'\n        }, {\n          include: '#storage-modifiers'\n        }, {\n          token: ['entity.name.function.vala', 'meta.method.identifier.vala'],\n          regex: '([\\\\~\\\\w\\\\.]+)(\\\\s*\\\\()',\n          push: [{\n            token: 'meta.method.identifier.vala',\n            regex: '\\\\)',\n            next: 'pop'\n          }, {\n            include: '#parameters'\n          }, {\n            defaultToken: 'meta.method.identifier.vala'\n          }]\n        }, {\n          token: 'meta.method.return-type.vala',\n          regex: '(?=\\\\w.*\\\\s+\\\\w+\\\\s*\\\\()',\n          push: [{\n            token: 'meta.method.return-type.vala',\n            regex: '(?=\\\\w+\\\\s*\\\\()',\n            next: 'pop'\n          }, {\n            include: '#all-types'\n          }, {\n            defaultToken: 'meta.method.return-type.vala'\n          }]\n        }, {\n          include: '#throws'\n        }, {\n          token: 'paren.vala',\n          regex: '{',\n          push: [{\n            token: 'paren.vala',\n            regex: '(?=})',\n            next: 'pop'\n          }, {\n            include: '#code'\n          }, {\n            defaultToken: 'meta.method.body.vala'\n          }]\n        }, {\n          defaultToken: 'meta.method.vala'\n        }]\n      }],\n      '#namespace': [{\n        token: 'text',\n        regex: '^(?=\\\\s*[A-Z0-9_]+\\\\s*(?:{|\\\\(|,))',\n        push: [{\n          token: 'text',\n          regex: '(?=;|})',\n          next: 'pop'\n        }, {\n          token: 'constant.other.namespace.vala',\n          regex: '\\\\w+',\n          push: [{\n            token: 'meta.namespace.vala',\n            regex: '(?=,|;|})',\n            next: 'pop'\n          }, {\n            include: '#parens'\n          }, {\n            token: 'text',\n            regex: '{',\n            push: [{\n              token: 'text',\n              regex: '}',\n              next: 'pop'\n            }, {\n              include: '#code'\n            }]\n          }, {\n            defaultToken: 'meta.namespace.vala'\n          }]\n        }],\n        comment: 'This is not quite right. See the class grammar right now'\n      }],\n      '#object-types': [{\n        token: 'storage.type.generic.vala',\n        regex: '\\\\b(?:[a-z]\\\\w*\\\\.)*[A-Z]+\\\\w*<',\n        push: [{\n          token: 'storage.type.generic.vala',\n          regex: '>|[^\\\\w\\\\s,\\\\?<\\\\[()\\\\]]',\n          TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n          originalRegex: '>|[^\\\\w\\\\s,\\\\?<\\\\[(?:[,]+)\\\\]]',\n          next: 'pop'\n        }, {\n          include: '#object-types'\n        }, {\n          token: 'storage.type.generic.vala',\n          regex: '<',\n          push: [{\n            token: 'storage.type.generic.vala',\n            regex: '>|[^\\\\w\\\\s,\\\\[\\\\]<]',\n            next: 'pop'\n          }, {\n            defaultToken: 'storage.type.generic.vala'\n          }],\n          comment: 'This is just to support <>\\'s with no actual type prefix'\n        }, {\n          defaultToken: 'storage.type.generic.vala'\n        }]\n      }, {\n        token: 'storage.type.object.array.vala',\n        regex: '\\\\b(?:[a-z]\\\\w*\\\\.)*[A-Z]+\\\\w*(?=\\\\[)',\n        push: [{\n          token: 'storage.type.object.array.vala',\n          regex: '(?=[^\\\\]\\\\s])',\n          next: 'pop'\n        }, {\n          token: 'text',\n          regex: '\\\\[',\n          push: [{\n            token: 'text',\n            regex: '\\\\]',\n            next: 'pop'\n          }, {\n            include: '#code'\n          }]\n        }, {\n          defaultToken: 'storage.type.object.array.vala'\n        }]\n      }, {\n        token: ['storage.type.vala', 'keyword.operator.dereference.vala', 'storage.type.vala'],\n        regex: '\\\\b(?:([a-z]\\\\w*)(\\\\.))*([A-Z]+\\\\w*\\\\b)'\n      }],\n      '#object-types-inherited': [{\n        token: 'entity.other.inherited-class.vala',\n        regex: '\\\\b(?:[a-z]\\\\w*\\\\.)*[A-Z]+\\\\w*<',\n        push: [{\n          token: 'entity.other.inherited-class.vala',\n          regex: '>|[^\\\\w\\\\s,<]',\n          next: 'pop'\n        }, {\n          include: '#object-types'\n        }, {\n          token: 'storage.type.generic.vala',\n          regex: '<',\n          push: [{\n            token: 'storage.type.generic.vala',\n            regex: '>|[^\\\\w\\\\s,<]',\n            next: 'pop'\n          }, {\n            defaultToken: 'storage.type.generic.vala'\n          }],\n          comment: 'This is just to support <>\\'s with no actual type prefix'\n        }, {\n          defaultToken: 'entity.other.inherited-class.vala'\n        }]\n      }, {\n        token: ['entity.other.inherited-class.vala', 'keyword.operator.dereference.vala', 'entity.other.inherited-class.vala'],\n        regex: '\\\\b(?:([a-z]\\\\w*)(\\\\.))*([A-Z]+\\\\w*)'\n      }],\n      '#parameters': [{\n        token: 'storage.modifier.vala',\n        regex: 'final'\n      }, {\n        include: '#primitive-arrays'\n      }, {\n        include: '#primitive-types'\n      }, {\n        include: '#object-types'\n      }, {\n        token: 'variable.parameter.vala',\n        regex: '\\\\w+'\n      }],\n      '#parens': [{\n        token: 'text',\n        regex: '\\\\(',\n        push: [{\n          token: 'text',\n          regex: '\\\\)',\n          next: 'pop'\n        }, {\n          include: '#code'\n        }]\n      }],\n      '#primitive-arrays': [{\n        token: 'storage.type.primitive.array.vala',\n        regex: '\\\\b(?:bool|byte|sbyte|char|decimal|double|float|int|uint|long|ulong|object|short|ushort|string|void|int8|int16|int32|int64|uint8|uint16|uint32|uint64)(?:\\\\[\\\\])*\\\\b'\n      }],\n      '#primitive-types': [{\n        token: 'storage.type.primitive.vala',\n        regex: '\\\\b(?:var|bool|byte|sbyte|char|decimal|double|float|int|uint|long|ulong|object|short|ushort|string|void|signal|int8|int16|int32|int64|uint8|uint16|uint32|uint64)\\\\b',\n        comment: 'var is not really a primitive, but acts like one in most cases'\n      }],\n      '#storage-modifiers': [{\n        token: 'storage.modifier.vala',\n        regex: '\\\\b(?:public|private|protected|internal|static|final|sealed|virtual|override|abstract|readonly|volatile|dynamic|async|unsafe|out|ref|weak|owned|unowned|const)\\\\b',\n        comment: 'Not sure about unsafe and readonly'\n      }],\n      '#strings': [{\n        token: 'punctuation.definition.string.begin.vala',\n        regex: '@\"',\n        push: [{\n          token: 'punctuation.definition.string.end.vala',\n          regex: '\"',\n          next: 'pop'\n        }, {\n          token: 'constant.character.escape.vala',\n          regex: '\\\\\\\\.|%[\\\\w\\\\.\\\\-]+|\\\\$(?:\\\\w+|\\\\([\\\\w\\\\s\\\\+\\\\-\\\\*\\\\/]+\\\\))'\n        }, {\n          defaultToken: 'string.quoted.interpolated.vala'\n        }]\n      }, {\n        token: 'punctuation.definition.string.begin.vala',\n        regex: '\"',\n        push: [{\n          token: 'punctuation.definition.string.end.vala',\n          regex: '\"',\n          next: 'pop'\n        }, {\n          token: 'constant.character.escape.vala',\n          regex: '\\\\\\\\.'\n        }, {\n          token: 'constant.character.escape.vala',\n          regex: '%[\\\\w\\\\.\\\\-]+'\n        }, {\n          defaultToken: 'string.quoted.double.vala'\n        }]\n      }, {\n        token: 'punctuation.definition.string.begin.vala',\n        regex: '\\'',\n        push: [{\n          token: 'punctuation.definition.string.end.vala',\n          regex: '\\'',\n          next: 'pop'\n        }, {\n          token: 'constant.character.escape.vala',\n          regex: '\\\\\\\\.'\n        }, {\n          defaultToken: 'string.quoted.single.vala'\n        }]\n      }, {\n        token: 'punctuation.definition.string.begin.vala',\n        regex: '\"\"\"',\n        push: [{\n          token: 'punctuation.definition.string.end.vala',\n          regex: '\"\"\"',\n          next: 'pop'\n        }, {\n          token: 'constant.character.escape.vala',\n          regex: '%[\\\\w\\\\.\\\\-]+'\n        }, {\n          defaultToken: 'string.quoted.triple.vala'\n        }]\n      }],\n      '#throws': [{\n        token: 'storage.modifier.vala',\n        regex: 'throws',\n        push: [{\n          token: 'meta.throwables.vala',\n          regex: '(?={|;)',\n          next: 'pop'\n        }, {\n          include: '#object-types'\n        }, {\n          defaultToken: 'meta.throwables.vala'\n        }]\n      }],\n      '#values': [{\n        include: '#strings'\n      }, {\n        include: '#object-types'\n      }, {\n        include: '#constants-and-special-vars'\n      }]\n    };\n    this.normalizeRules();\n  };\n  ValaHighlightRules.metaData = {\n    comment: 'Based heavily on the Java bundle\\'s language syntax. TODO:\\n* Closures\\n* Delegates\\n* Properties: Better support for properties.\\n* Annotations\\n* Error domains\\n* Named arguments\\n* Array slicing, negative indexes, multidimensional\\n* construct blocks\\n* lock blocks?\\n* regex literals\\n* DocBlock syntax highlighting. (Currently importing javadoc)\\n* Folding rule for comments.\\n',\n    fileTypes: ['vala'],\n    foldingStartMarker: '(\\\\{\\\\s*(//.*)?$|^\\\\s*// \\\\{\\\\{\\\\{)',\n    foldingStopMarker: '^\\\\s*(\\\\}|// \\\\}\\\\}\\\\}$)',\n    name: 'Vala',\n    scopeName: 'source.vala'\n  };\n  oop.inherits(ValaHighlightRules, TextHighlightRules);\n  exports.ValaHighlightRules = ValaHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Range = require(\"../../range\").Range;\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n      return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n        return range;\n      }\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n        endRow = row;\n      }\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n      var endRow = row;\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n  var MatchingBraceOutdent = function () {};\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/vala\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/vala_highlight_rules\", \"ace/mode/folding/cstyle\", \"ace/mode/matching_brace_outdent\"], function (require, exports, module) {\n  /*\n  THIS FILE WAS AUTOGENERATED BY mode.tmpl.js\n  */\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var ValaHighlightRules = require(\"./vala_highlight_rules\").ValaHighlightRules;\n  var CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\n  var MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n  var Mode = function () {\n    this.HighlightRules = ValaHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = this.$defaultBehaviour;\n    this.foldingRules = new CStyleFoldMode();\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\"\n    };\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n      var endState = tokenizedLine.state;\n      if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n        return indent;\n      }\n      if (state == \"start\" || state == \"no_regex\") {\n        var match = line.match(/^.*(?:\\bcase\\b.*:|[\\{\\(\\[])\\s*$/);\n        if (match) {\n          indent += tab;\n        }\n      } else if (state == \"doc-start\") {\n        if (endState == \"start\" || endState == \"no_regex\") {\n          return \"\";\n        }\n        var match = line.match(/^\\s*(\\/?)\\*/);\n        if (match) {\n          if (match[1]) {\n            indent += \" \";\n          }\n          indent += \"* \";\n        }\n      }\n      return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n    this.$id = \"ace/mode/vala\";\n    this.snippetFileId = \"ace/snippets/vala\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/vala\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","ValaHighlightRules","$rules","start","token","regex","include","push","next","defaultToken","push_disabled","TODO","originalRegex","comment","normalizeRules","metaData","fileTypes","foldingStartMarker","foldingStopMarker","name","scopeName","inherits","Range","BaseFoldMode","FoldMode","commentRegex","RegExp","source","replace","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","MatchingBraceOutdent","checkOutdent","input","autoOutdent","doc","column","openBracePos","findMatchingBracket","$getIndent","TextMode","Mode","CStyleFoldMode","HighlightRules","$outdent","$behaviour","$defaultBehaviour","foldingRules","lineCommentStart","blockComment","getNextLineIndent","state","tab","tokenizedLine","getTokenizer","getLineTokens","tokens","endState","type","$id","snippetFileId"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-vala.js"],"sourcesContent":["ace.define(\"ace/mode/vala_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){/* This file was autogenerated from https://raw.githubusercontent.com/technosophos/Vala-TMBundle/master/Syntaxes/Vala.tmLanguage (uuid: ) */\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar ValaHighlightRules = function () {\n    this.$rules = { start: [{ token: ['meta.using.vala',\n                    'keyword.other.using.vala',\n                    'meta.using.vala',\n                    'storage.modifier.using.vala',\n                    'meta.using.vala',\n                    'punctuation.terminator.vala'],\n                regex: '^(\\\\s*)(using)\\\\b(?:(\\\\s*)([^ ;$]+)(\\\\s*)((?:;)?))?' },\n            { include: '#code' }],\n        '#all-types': [{ include: '#primitive-arrays' },\n            { include: '#primitive-types' },\n            { include: '#object-types' }],\n        '#annotations': [{ token: ['storage.type.annotation.vala',\n                    'punctuation.definition.annotation-arguments.begin.vala'],\n                regex: '(@[^ (]+)(\\\\()',\n                push: [{ token: 'punctuation.definition.annotation-arguments.end.vala',\n                        regex: '\\\\)',\n                        next: 'pop' },\n                    { token: ['constant.other.key.vala',\n                            'text',\n                            'keyword.operator.assignment.vala'],\n                        regex: '(\\\\w*)(\\\\s*)(=)' },\n                    { include: '#code' },\n                    { token: 'punctuation.seperator.property.vala', regex: ',' },\n                    { defaultToken: 'meta.declaration.annotation.vala' }] },\n            { token: 'storage.type.annotation.vala', regex: '@\\\\w*' }],\n        '#anonymous-classes-and-new': [{ token: 'keyword.control.new.vala',\n                regex: '\\\\bnew\\\\b',\n                push_disabled: [{ token: 'text',\n                        regex: '(?<=\\\\)|\\\\])(?!\\\\s*{)|(?<=})|(?=;)',\n                        TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n                        originalRegex: '(?<=\\\\)|\\\\])(?!\\\\s*{)|(?<=})|(?=;)',\n                        next: 'pop' },\n                    { token: ['storage.type.vala', 'text'],\n                        regex: '(\\\\w+)(\\\\s*)(?=\\\\[)',\n                        push: [{ token: 'text', regex: '}|(?=;|\\\\))', next: 'pop' },\n                            { token: 'text',\n                                regex: '\\\\[',\n                                push: [{ token: 'text', regex: '\\\\]', next: 'pop' },\n                                    { include: '#code' }] },\n                            { token: 'text',\n                                regex: '{',\n                                push: [{ token: 'text', regex: '(?=})', next: 'pop' },\n                                    { include: '#code' }] }] },\n                    { token: 'text',\n                        regex: '(?=\\\\w.*\\\\()',\n                        push: [{ token: 'text',\n                                regex: '(?<=\\\\))',\n                                TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n                                originalRegex: '(?<=\\\\))',\n                                next: 'pop' },\n                            { include: '#object-types' },\n                            { token: 'text',\n                                regex: '\\\\(',\n                                push: [{ token: 'text', regex: '\\\\)', next: 'pop' },\n                                    { include: '#code' }] }] },\n                    { token: 'meta.inner-class.vala',\n                        regex: '{',\n                        push: [{ token: 'meta.inner-class.vala', regex: '}', next: 'pop' },\n                            { include: '#class-body' },\n                            { defaultToken: 'meta.inner-class.vala' }] }] }],\n        '#assertions': [{ token: ['keyword.control.assert.vala',\n                    'meta.declaration.assertion.vala'],\n                regex: '\\\\b(assert|requires|ensures)(\\\\s)',\n                push: [{ token: 'meta.declaration.assertion.vala',\n                        regex: '$',\n                        next: 'pop' },\n                    { token: 'keyword.operator.assert.expression-seperator.vala',\n                        regex: ':' },\n                    { include: '#code' },\n                    { defaultToken: 'meta.declaration.assertion.vala' }] }],\n        '#class': [{ token: 'meta.class.vala',\n                regex: '(?=\\\\w?[\\\\w\\\\s]*(?:class|(?:@)?interface|enum|struct|namespace)\\\\s+\\\\w+)',\n                push: [{ token: 'paren.vala',\n                        regex: '}',\n                        next: 'pop' },\n                    { include: '#storage-modifiers' },\n                    { include: '#comments' },\n                    { token: ['storage.modifier.vala',\n                            'meta.class.identifier.vala',\n                            'entity.name.type.class.vala'],\n                        regex: '(class|(?:@)?interface|enum|struct|namespace)(\\\\s+)([\\\\w\\\\.]+)' },\n                    { token: 'storage.modifier.extends.vala',\n                        regex: ':',\n                        push: [{ token: 'meta.definition.class.inherited.classes.vala',\n                                regex: '(?={|,)',\n                                next: 'pop' },\n                            { include: '#object-types-inherited' },\n                            { include: '#comments' },\n                            { defaultToken: 'meta.definition.class.inherited.classes.vala' }] },\n                    { token: ['storage.modifier.implements.vala',\n                            'meta.definition.class.implemented.interfaces.vala'],\n                        regex: '(,)(\\\\s)',\n                        push: [{ token: 'meta.definition.class.implemented.interfaces.vala',\n                                regex: '(?=\\\\{)',\n                                next: 'pop' },\n                            { include: '#object-types-inherited' },\n                            { include: '#comments' },\n                            { defaultToken: 'meta.definition.class.implemented.interfaces.vala' }] },\n                    { token: 'paren.vala',\n                        regex: '{',\n                        push: [{ token: 'paren.vala', regex: '(?=})', next: 'pop' },\n                            { include: '#class-body' },\n                            { defaultToken: 'meta.class.body.vala' }] },\n                    { defaultToken: 'meta.class.vala' }],\n                comment: 'attempting to put namespace in here.' }],\n        '#class-body': [{ include: '#comments' },\n            { include: '#class' },\n            { include: '#enums' },\n            { include: '#methods' },\n            { include: '#annotations' },\n            { include: '#storage-modifiers' },\n            { include: '#code' }],\n        '#code': [{ include: '#comments' },\n            { include: '#class' },\n            { token: 'text',\n                regex: '{',\n                push: [{ token: 'text', regex: '}', next: 'pop' },\n                    { include: '#code' }] },\n            { include: '#assertions' },\n            { include: '#parens' },\n            { include: '#constants-and-special-vars' },\n            { include: '#anonymous-classes-and-new' },\n            { include: '#keywords' },\n            { include: '#storage-modifiers' },\n            { include: '#strings' },\n            { include: '#all-types' }],\n        '#comments': [{ token: 'punctuation.definition.comment.vala',\n                regex: '/\\\\*\\\\*/' },\n            { include: 'text.html.javadoc' },\n            { include: '#comments-inline' }],\n        '#comments-inline': [{ token: 'punctuation.definition.comment.vala',\n                regex: '/\\\\*',\n                push: [{ token: 'punctuation.definition.comment.vala',\n                        regex: '\\\\*/',\n                        next: 'pop' },\n                    { defaultToken: 'comment.block.vala' }] },\n            { token: ['text',\n                    'punctuation.definition.comment.vala',\n                    'comment.line.double-slash.vala'],\n                regex: '(\\\\s*)(//)(.*$)' }],\n        '#constants-and-special-vars': [{ token: 'constant.language.vala',\n                regex: '\\\\b(?:true|false|null)\\\\b' },\n            { token: 'variable.language.vala',\n                regex: '\\\\b(?:this|base)\\\\b' },\n            { token: 'constant.numeric.vala',\n                regex: '\\\\b(?:0(?:x|X)[0-9a-fA-F]*|(?:[0-9]+\\\\.?[0-9]*|\\\\.[0-9]+)(?:(?:e|E)(?:\\\\+|-)?[0-9]+)?)(?:[LlFfUuDd]|UL|ul)?\\\\b' },\n            { token: ['keyword.operator.dereference.vala', 'constant.other.vala'],\n                regex: '((?:\\\\.)?)\\\\b([A-Z][A-Z0-9_]+)(?!<|\\\\.class|\\\\s*\\\\w+\\\\s*=)\\\\b' }],\n        '#enums': [{ token: 'text',\n                regex: '^(?=\\\\s*[A-Z0-9_]+\\\\s*(?:{|\\\\(|,))',\n                push: [{ token: 'text', regex: '(?=;|})', next: 'pop' },\n                    { token: 'constant.other.enum.vala',\n                        regex: '\\\\w+',\n                        push: [{ token: 'meta.enum.vala', regex: '(?=,|;|})', next: 'pop' },\n                            { include: '#parens' },\n                            { token: 'text',\n                                regex: '{',\n                                push: [{ token: 'text', regex: '}', next: 'pop' },\n                                    { include: '#class-body' }] },\n                            { defaultToken: 'meta.enum.vala' }] }] }],\n        '#keywords': [{ token: 'keyword.control.catch-exception.vala',\n                regex: '\\\\b(?:try|catch|finally|throw)\\\\b' },\n            { token: 'keyword.control.vala', regex: '\\\\?|:|\\\\?\\\\?' },\n            { token: 'keyword.control.vala',\n                regex: '\\\\b(?:return|break|case|continue|default|do|while|for|foreach|switch|if|else|in|yield|get|set|value)\\\\b' },\n            { token: 'keyword.operator.vala',\n                regex: '\\\\b(?:typeof|is|as)\\\\b' },\n            { token: 'keyword.operator.comparison.vala',\n                regex: '==|!=|<=|>=|<>|<|>' },\n            { token: 'keyword.operator.assignment.vala', regex: '=' },\n            { token: 'keyword.operator.increment-decrement.vala',\n                regex: '\\\\-\\\\-|\\\\+\\\\+' },\n            { token: 'keyword.operator.arithmetic.vala',\n                regex: '\\\\-|\\\\+|\\\\*|\\\\/|%' },\n            { token: 'keyword.operator.logical.vala', regex: '!|&&|\\\\|\\\\|' },\n            { token: 'keyword.operator.dereference.vala',\n                regex: '\\\\.(?=\\\\S)',\n                originalRegex: '(?<=\\\\S)\\\\.(?=\\\\S)' },\n            { token: 'punctuation.terminator.vala', regex: ';' },\n            { token: 'keyword.operator.ownership', regex: 'owned|unowned' }],\n        '#methods': [{ token: 'meta.method.vala',\n                regex: '(?!new)(?=\\\\w.*\\\\s+)(?=[^=]+\\\\()',\n                push: [{ token: 'paren.vala', regex: '}|(?=;)', next: 'pop' },\n                    { include: '#storage-modifiers' },\n                    { token: ['entity.name.function.vala', 'meta.method.identifier.vala'],\n                        regex: '([\\\\~\\\\w\\\\.]+)(\\\\s*\\\\()',\n                        push: [{ token: 'meta.method.identifier.vala',\n                                regex: '\\\\)',\n                                next: 'pop' },\n                            { include: '#parameters' },\n                            { defaultToken: 'meta.method.identifier.vala' }] },\n                    { token: 'meta.method.return-type.vala',\n                        regex: '(?=\\\\w.*\\\\s+\\\\w+\\\\s*\\\\()',\n                        push: [{ token: 'meta.method.return-type.vala',\n                                regex: '(?=\\\\w+\\\\s*\\\\()',\n                                next: 'pop' },\n                            { include: '#all-types' },\n                            { defaultToken: 'meta.method.return-type.vala' }] },\n                    { include: '#throws' },\n                    { token: 'paren.vala',\n                        regex: '{',\n                        push: [{ token: 'paren.vala', regex: '(?=})', next: 'pop' },\n                            { include: '#code' },\n                            { defaultToken: 'meta.method.body.vala' }] },\n                    { defaultToken: 'meta.method.vala' }] }],\n        '#namespace': [{ token: 'text',\n                regex: '^(?=\\\\s*[A-Z0-9_]+\\\\s*(?:{|\\\\(|,))',\n                push: [{ token: 'text', regex: '(?=;|})', next: 'pop' },\n                    { token: 'constant.other.namespace.vala',\n                        regex: '\\\\w+',\n                        push: [{ token: 'meta.namespace.vala', regex: '(?=,|;|})', next: 'pop' },\n                            { include: '#parens' },\n                            { token: 'text',\n                                regex: '{',\n                                push: [{ token: 'text', regex: '}', next: 'pop' },\n                                    { include: '#code' }] },\n                            { defaultToken: 'meta.namespace.vala' }] }],\n                comment: 'This is not quite right. See the class grammar right now' }],\n        '#object-types': [{ token: 'storage.type.generic.vala',\n                regex: '\\\\b(?:[a-z]\\\\w*\\\\.)*[A-Z]+\\\\w*<',\n                push: [{ token: 'storage.type.generic.vala',\n                        regex: '>|[^\\\\w\\\\s,\\\\?<\\\\[()\\\\]]',\n                        TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n                        originalRegex: '>|[^\\\\w\\\\s,\\\\?<\\\\[(?:[,]+)\\\\]]',\n                        next: 'pop' },\n                    { include: '#object-types' },\n                    { token: 'storage.type.generic.vala',\n                        regex: '<',\n                        push: [{ token: 'storage.type.generic.vala',\n                                regex: '>|[^\\\\w\\\\s,\\\\[\\\\]<]',\n                                next: 'pop' },\n                            { defaultToken: 'storage.type.generic.vala' }],\n                        comment: 'This is just to support <>\\'s with no actual type prefix' },\n                    { defaultToken: 'storage.type.generic.vala' }] },\n            { token: 'storage.type.object.array.vala',\n                regex: '\\\\b(?:[a-z]\\\\w*\\\\.)*[A-Z]+\\\\w*(?=\\\\[)',\n                push: [{ token: 'storage.type.object.array.vala',\n                        regex: '(?=[^\\\\]\\\\s])',\n                        next: 'pop' },\n                    { token: 'text',\n                        regex: '\\\\[',\n                        push: [{ token: 'text', regex: '\\\\]', next: 'pop' },\n                            { include: '#code' }] },\n                    { defaultToken: 'storage.type.object.array.vala' }] },\n            { token: ['storage.type.vala',\n                    'keyword.operator.dereference.vala',\n                    'storage.type.vala'],\n                regex: '\\\\b(?:([a-z]\\\\w*)(\\\\.))*([A-Z]+\\\\w*\\\\b)' }],\n        '#object-types-inherited': [{ token: 'entity.other.inherited-class.vala',\n                regex: '\\\\b(?:[a-z]\\\\w*\\\\.)*[A-Z]+\\\\w*<',\n                push: [{ token: 'entity.other.inherited-class.vala',\n                        regex: '>|[^\\\\w\\\\s,<]',\n                        next: 'pop' },\n                    { include: '#object-types' },\n                    { token: 'storage.type.generic.vala',\n                        regex: '<',\n                        push: [{ token: 'storage.type.generic.vala',\n                                regex: '>|[^\\\\w\\\\s,<]',\n                                next: 'pop' },\n                            { defaultToken: 'storage.type.generic.vala' }],\n                        comment: 'This is just to support <>\\'s with no actual type prefix' },\n                    { defaultToken: 'entity.other.inherited-class.vala' }] },\n            { token: ['entity.other.inherited-class.vala',\n                    'keyword.operator.dereference.vala',\n                    'entity.other.inherited-class.vala'],\n                regex: '\\\\b(?:([a-z]\\\\w*)(\\\\.))*([A-Z]+\\\\w*)' }],\n        '#parameters': [{ token: 'storage.modifier.vala', regex: 'final' },\n            { include: '#primitive-arrays' },\n            { include: '#primitive-types' },\n            { include: '#object-types' },\n            { token: 'variable.parameter.vala', regex: '\\\\w+' }],\n        '#parens': [{ token: 'text',\n                regex: '\\\\(',\n                push: [{ token: 'text', regex: '\\\\)', next: 'pop' },\n                    { include: '#code' }] }],\n        '#primitive-arrays': [{ token: 'storage.type.primitive.array.vala',\n                regex: '\\\\b(?:bool|byte|sbyte|char|decimal|double|float|int|uint|long|ulong|object|short|ushort|string|void|int8|int16|int32|int64|uint8|uint16|uint32|uint64)(?:\\\\[\\\\])*\\\\b' }],\n        '#primitive-types': [{ token: 'storage.type.primitive.vala',\n                regex: '\\\\b(?:var|bool|byte|sbyte|char|decimal|double|float|int|uint|long|ulong|object|short|ushort|string|void|signal|int8|int16|int32|int64|uint8|uint16|uint32|uint64)\\\\b',\n                comment: 'var is not really a primitive, but acts like one in most cases' }],\n        '#storage-modifiers': [{ token: 'storage.modifier.vala',\n                regex: '\\\\b(?:public|private|protected|internal|static|final|sealed|virtual|override|abstract|readonly|volatile|dynamic|async|unsafe|out|ref|weak|owned|unowned|const)\\\\b',\n                comment: 'Not sure about unsafe and readonly' }],\n        '#strings': [{ token: 'punctuation.definition.string.begin.vala',\n                regex: '@\"',\n                push: [{ token: 'punctuation.definition.string.end.vala',\n                        regex: '\"',\n                        next: 'pop' },\n                    { token: 'constant.character.escape.vala',\n                        regex: '\\\\\\\\.|%[\\\\w\\\\.\\\\-]+|\\\\$(?:\\\\w+|\\\\([\\\\w\\\\s\\\\+\\\\-\\\\*\\\\/]+\\\\))' },\n                    { defaultToken: 'string.quoted.interpolated.vala' }] },\n            { token: 'punctuation.definition.string.begin.vala',\n                regex: '\"',\n                push: [{ token: 'punctuation.definition.string.end.vala',\n                        regex: '\"',\n                        next: 'pop' },\n                    { token: 'constant.character.escape.vala', regex: '\\\\\\\\.' },\n                    { token: 'constant.character.escape.vala',\n                        regex: '%[\\\\w\\\\.\\\\-]+' },\n                    { defaultToken: 'string.quoted.double.vala' }] },\n            { token: 'punctuation.definition.string.begin.vala',\n                regex: '\\'',\n                push: [{ token: 'punctuation.definition.string.end.vala',\n                        regex: '\\'',\n                        next: 'pop' },\n                    { token: 'constant.character.escape.vala', regex: '\\\\\\\\.' },\n                    { defaultToken: 'string.quoted.single.vala' }] },\n            { token: 'punctuation.definition.string.begin.vala',\n                regex: '\"\"\"',\n                push: [{ token: 'punctuation.definition.string.end.vala',\n                        regex: '\"\"\"',\n                        next: 'pop' },\n                    { token: 'constant.character.escape.vala',\n                        regex: '%[\\\\w\\\\.\\\\-]+' },\n                    { defaultToken: 'string.quoted.triple.vala' }] }],\n        '#throws': [{ token: 'storage.modifier.vala',\n                regex: 'throws',\n                push: [{ token: 'meta.throwables.vala', regex: '(?={|;)', next: 'pop' },\n                    { include: '#object-types' },\n                    { defaultToken: 'meta.throwables.vala' }] }],\n        '#values': [{ include: '#strings' },\n            { include: '#object-types' },\n            { include: '#constants-and-special-vars' }] };\n    this.normalizeRules();\n};\nValaHighlightRules.metaData = {\n    comment: 'Based heavily on the Java bundle\\'s language syntax. TODO:\\n* Closures\\n* Delegates\\n* Properties: Better support for properties.\\n* Annotations\\n* Error domains\\n* Named arguments\\n* Array slicing, negative indexes, multidimensional\\n* construct blocks\\n* lock blocks?\\n* regex literals\\n* DocBlock syntax highlighting. (Currently importing javadoc)\\n* Folding rule for comments.\\n',\n    fileTypes: ['vala'],\n    foldingStartMarker: '(\\\\{\\\\s*(//.*)?$|^\\\\s*// \\\\{\\\\{\\\\{)',\n    foldingStopMarker: '^\\\\s*(\\\\}|// \\\\}\\\\}\\\\}$)',\n    name: 'Vala',\n    scopeName: 'source.vala'\n};\noop.inherits(ValaHighlightRules, TextHighlightRules);\nexports.ValaHighlightRules = ValaHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n        this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n        return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                }\n                else if (foldStyle != \"all\")\n                    range = null;\n            }\n            return range;\n        }\n        if (foldStyle === \"markbegin\")\n            return;\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    this.getSectionRange = function (session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                }\n                else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                }\n                else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m)\n                continue;\n            if (m[1])\n                depth--;\n            else\n                depth++;\n            if (!depth)\n                break;\n        }\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module){\"use strict\";\nvar Range = require(\"../range\").Range;\nvar MatchingBraceOutdent = function () { };\n(function () {\n    this.checkOutdent = function (line, input) {\n        if (!/^\\s+$/.test(line))\n            return false;\n        return /^\\s*\\}/.test(input);\n    };\n    this.autoOutdent = function (doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n        if (!match)\n            return 0;\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({ row: row, column: column });\n        if (!openBracePos || openBracePos.row == row)\n            return 0;\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n    this.$getIndent = function (line) {\n        return line.match(/^\\s*/)[0];\n    };\n}).call(MatchingBraceOutdent.prototype);\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n\n});\n\nace.define(\"ace/mode/vala\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/vala_highlight_rules\",\"ace/mode/folding/cstyle\",\"ace/mode/matching_brace_outdent\"], function(require, exports, module){/*\n  THIS FILE WAS AUTOGENERATED BY mode.tmpl.js\n*/\n\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar ValaHighlightRules = require(\"./vala_highlight_rules\").ValaHighlightRules;\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar Mode = function () {\n    this.HighlightRules = ValaHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = this.$defaultBehaviour;\n    this.foldingRules = new CStyleFoldMode();\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = { start: \"/*\", end: \"*/\" };\n    this.getNextLineIndent = function (state, line, tab) {\n        var indent = this.$getIndent(line);\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        var endState = tokenizedLine.state;\n        if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n            return indent;\n        }\n        if (state == \"start\" || state == \"no_regex\") {\n            var match = line.match(/^.*(?:\\bcase\\b.*:|[\\{\\(\\[])\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n        else if (state == \"doc-start\") {\n            if (endState == \"start\" || endState == \"no_regex\") {\n                return \"\";\n            }\n            var match = line.match(/^\\s*(\\/?)\\*/);\n            if (match) {\n                if (match[1]) {\n                    indent += \" \";\n                }\n                indent += \"* \";\n            }\n        }\n        return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n    this.autoOutdent = function (state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n    this.$id = \"ace/mode/vala\";\n    this.snippetFileId = \"ace/snippets/vala\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/vala\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}