{"ast":null,"code":"ace.define(\"ace/snippets/io\", [\"require\", \"exports\", \"module\"], function (require, exports, module) {\n  \"use strict\";\n\n  exports.snippets = [{\n    \"content\": \"assertEquals(${1:expected}, ${2:expr})\",\n    \"name\": \"assertEquals\",\n    \"scope\": \"io\",\n    \"tabTrigger\": \"ae\"\n  }, {\n    \"content\": \"${1:${2:newValue} := ${3:Object} }clone do(\\n\\t$0\\n)\",\n    \"name\": \"clone do\",\n    \"scope\": \"io\",\n    \"tabTrigger\": \"cdo\"\n  }, {\n    \"content\": \"docSlot(\\\"${1:slotName}\\\", \\\"${2:documentation}\\\")\",\n    \"name\": \"docSlot\",\n    \"scope\": \"io\",\n    \"tabTrigger\": \"ds\"\n  }, {\n    \"content\": \"(${1:header,}\\n\\t${2:body}\\n)$0\",\n    \"keyEquivalent\": \"@(\",\n    \"name\": \"Indented Bracketed Line\",\n    \"scope\": \"io\",\n    \"tabTrigger\": \"(\"\n  }, {\n    \"content\": \"\\n\\t$0\\n\",\n    \"keyEquivalent\": \"\\r\",\n    \"name\": \"Special: Return Inside Empty Parenthesis\",\n    \"scope\": \"io meta.empty-parenthesis.io, io meta.comma-parenthesis.io\"\n  }, {\n    \"content\": \"${1:methodName} := method(${2:args,}\\n\\t$0\\n)\",\n    \"name\": \"method\",\n    \"scope\": \"io\",\n    \"tabTrigger\": \"m\"\n  }, {\n    \"content\": \"newSlot(\\\"${1:slotName}\\\", ${2:defaultValue}, \\\"${3:docString}\\\")$0\",\n    \"name\": \"newSlot\",\n    \"scope\": \"io\",\n    \"tabTrigger\": \"ns\"\n  }, {\n    \"content\": \"${1:name} := Object clone do(\\n\\t$0\\n)\",\n    \"name\": \"Object clone do\",\n    \"scope\": \"io\",\n    \"tabTrigger\": \"ocdo\"\n  }, {\n    \"content\": \"test${1:SomeFeature} := method(\\n\\t$0\\n)\",\n    \"name\": \"testMethod\",\n    \"scope\": \"io\",\n    \"tabTrigger\": \"ts\"\n  }, {\n    \"content\": \"${1:Something}Test := ${2:UnitTest} clone do(\\n\\t$0\\n)\",\n    \"name\": \"UnitTest\",\n    \"scope\": \"io\",\n    \"tabTrigger\": \"ut\"\n  }];\n  exports.scope = \"io\";\n});\n(function () {\n  ace.require([\"ace/snippets/io\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","snippets","scope","m"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/snippets/io.js"],"sourcesContent":["ace.define(\"ace/snippets/io\",[\"require\",\"exports\",\"module\"], function(require, exports, module){\"use strict\";\nexports.snippets = [\n    {\n        \"content\": \"assertEquals(${1:expected}, ${2:expr})\",\n        \"name\": \"assertEquals\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"ae\"\n    },\n    {\n        \"content\": \"${1:${2:newValue} := ${3:Object} }clone do(\\n\\t$0\\n)\",\n        \"name\": \"clone do\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"cdo\"\n    },\n    {\n        \"content\": \"docSlot(\\\"${1:slotName}\\\", \\\"${2:documentation}\\\")\",\n        \"name\": \"docSlot\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"ds\"\n    },\n    {\n        \"content\": \"(${1:header,}\\n\\t${2:body}\\n)$0\",\n        \"keyEquivalent\": \"@(\",\n        \"name\": \"Indented Bracketed Line\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"(\"\n    },\n    {\n        \"content\": \"\\n\\t$0\\n\",\n        \"keyEquivalent\": \"\\r\",\n        \"name\": \"Special: Return Inside Empty Parenthesis\",\n        \"scope\": \"io meta.empty-parenthesis.io, io meta.comma-parenthesis.io\"\n    },\n    {\n        \"content\": \"${1:methodName} := method(${2:args,}\\n\\t$0\\n)\",\n        \"name\": \"method\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"m\"\n    },\n    {\n        \"content\": \"newSlot(\\\"${1:slotName}\\\", ${2:defaultValue}, \\\"${3:docString}\\\")$0\",\n        \"name\": \"newSlot\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"ns\"\n    },\n    {\n        \"content\": \"${1:name} := Object clone do(\\n\\t$0\\n)\",\n        \"name\": \"Object clone do\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"ocdo\"\n    },\n    {\n        \"content\": \"test${1:SomeFeature} := method(\\n\\t$0\\n)\",\n        \"name\": \"testMethod\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"ts\"\n    },\n    {\n        \"content\": \"${1:Something}Test := ${2:UnitTest} clone do(\\n\\t$0\\n)\",\n        \"name\": \"UnitTest\",\n        \"scope\": \"io\",\n        \"tabTrigger\": \"ut\"\n    }\n];\nexports.scope = \"io\";\n\n});                (function() {\n                    ace.require([\"ace/snippets/io\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"AAAAA,GAAG,CAACC,MAAM,CAAC,iBAAiB,EAAC,CAAC,SAAS,EAAC,SAAS,EAAC,QAAQ,CAAC,EAAE,UAASC,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAC;EAAC,YAAY;;EAC5GD,OAAO,CAACE,QAAQ,GAAG,CACf;IACI,SAAS,EAAE,wCAAwC;IACnD,MAAM,EAAE,cAAc;IACtB,OAAO,EAAE,IAAI;IACb,YAAY,EAAE;EAClB,CAAC,EACD;IACI,SAAS,EAAE,sDAAsD;IACjE,MAAM,EAAE,UAAU;IAClB,OAAO,EAAE,IAAI;IACb,YAAY,EAAE;EAClB,CAAC,EACD;IACI,SAAS,EAAE,oDAAoD;IAC/D,MAAM,EAAE,SAAS;IACjB,OAAO,EAAE,IAAI;IACb,YAAY,EAAE;EAClB,CAAC,EACD;IACI,SAAS,EAAE,iCAAiC;IAC5C,eAAe,EAAE,IAAI;IACrB,MAAM,EAAE,yBAAyB;IACjC,OAAO,EAAE,IAAI;IACb,YAAY,EAAE;EAClB,CAAC,EACD;IACI,SAAS,EAAE,UAAU;IACrB,eAAe,EAAE,IAAI;IACrB,MAAM,EAAE,0CAA0C;IAClD,OAAO,EAAE;EACb,CAAC,EACD;IACI,SAAS,EAAE,+CAA+C;IAC1D,MAAM,EAAE,QAAQ;IAChB,OAAO,EAAE,IAAI;IACb,YAAY,EAAE;EAClB,CAAC,EACD;IACI,SAAS,EAAE,qEAAqE;IAChF,MAAM,EAAE,SAAS;IACjB,OAAO,EAAE,IAAI;IACb,YAAY,EAAE;EAClB,CAAC,EACD;IACI,SAAS,EAAE,wCAAwC;IACnD,MAAM,EAAE,iBAAiB;IACzB,OAAO,EAAE,IAAI;IACb,YAAY,EAAE;EAClB,CAAC,EACD;IACI,SAAS,EAAE,0CAA0C;IACrD,MAAM,EAAE,YAAY;IACpB,OAAO,EAAE,IAAI;IACb,YAAY,EAAE;EAClB,CAAC,EACD;IACI,SAAS,EAAE,wDAAwD;IACnE,MAAM,EAAE,UAAU;IAClB,OAAO,EAAE,IAAI;IACb,YAAY,EAAE;EAClB,CAAC,CACJ;EACDF,OAAO,CAACG,KAAK,GAAG,IAAI;AAEpB,CAAC,CAAC;AAAiB,CAAC,YAAW;EACXN,GAAG,CAACE,OAAO,CAAC,CAAC,iBAAiB,CAAC,EAAE,UAASK,CAAC,EAAE;IACzC,IAAI,OAAOH,MAAM,IAAI,QAAQ,IAAI,OAAOD,OAAO,IAAI,QAAQ,IAAIC,MAAM,EAAE;MACnEA,MAAM,CAACD,OAAO,GAAGI,CAAC;IACtB;EACJ,CAAC,CAAC;AACN,CAAC,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}