{"ast":null,"code":"ace.define(\"ace/mode/yaml_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var YamlHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"#.*$\"\n      }, {\n        token: \"list.markup\",\n        regex: /^(?:-{3}|\\.{3})\\s*(?=#|$)/\n      }, {\n        token: \"list.markup\",\n        regex: /^\\s*[\\-?](?:$|\\s)/\n      }, {\n        token: \"constant\",\n        regex: \"!![\\\\w//]+\"\n      }, {\n        token: \"constant.language\",\n        regex: \"[&\\\\*][a-zA-Z0-9-_]+\"\n      }, {\n        token: [\"meta.tag\", \"keyword\"],\n        regex: /^(\\s*\\w[^\\s:]*?)(:(?=\\s|$))/\n      }, {\n        token: [\"meta.tag\", \"keyword\"],\n        regex: /(\\w[^\\s:]*?)(\\s*:(?=\\s|$))/\n      }, {\n        token: \"keyword.operator\",\n        regex: \"<<\\\\w*:\\\\w*\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"-\\\\s*(?=[{])\"\n      }, {\n        token: \"string\",\n        // single line\n        regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n      }, {\n        token: \"string\",\n        // multi line string start\n        regex: /[|>][-+\\d]*(?:$|\\s+(?:$|#))/,\n        onMatch: function (val, state, stack, line) {\n          line = line.replace(/ #.*/, \"\");\n          var indent = /^ *((:\\s*)?-(\\s*[^|>])?)?/.exec(line)[0].replace(/\\S\\s*$/, \"\").length;\n          var indentationIndicator = parseInt(/\\d+[\\s+-]*$/.exec(line));\n          if (indentationIndicator) {\n            indent += indentationIndicator - 1;\n            this.next = \"mlString\";\n          } else {\n            this.next = \"mlStringPre\";\n          }\n          if (!stack.length) {\n            stack.push(this.next);\n            stack.push(indent);\n          } else {\n            stack[0] = this.next;\n            stack[1] = indent;\n          }\n          return this.token;\n        },\n        next: \"mlString\"\n      }, {\n        token: \"string\",\n        // single quoted string\n        regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: /(\\b|[+\\-\\.])[\\d_]+(?:(?:\\.[\\d_]*)?(?:[eE][+\\-]?[\\d_]+)?)(?=[^\\d-\\w]|$)$/\n      }, {\n        token: \"constant.numeric\",\n        // other number\n        regex: /[+\\-]?\\.inf\\b|NaN\\b|0x[\\dA-Fa-f_]+|0b[10_]+/\n      }, {\n        token: \"constant.language.boolean\",\n        regex: \"\\\\b(?:true|false|TRUE|FALSE|True|False|yes|no)\\\\b\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: /[^\\s,:\\[\\]\\{\\}]+/\n      }],\n      \"mlStringPre\": [{\n        token: \"indent\",\n        regex: /^ *$/\n      }, {\n        token: \"indent\",\n        regex: /^ */,\n        onMatch: function (val, state, stack) {\n          var curIndent = stack[1];\n          if (curIndent >= val.length) {\n            this.next = \"start\";\n            stack.shift();\n            stack.shift();\n          } else {\n            stack[1] = val.length - 1;\n            this.next = stack[0] = \"mlString\";\n          }\n          return this.token;\n        },\n        next: \"mlString\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"mlString\": [{\n        token: \"indent\",\n        regex: /^ *$/\n      }, {\n        token: \"indent\",\n        regex: /^ */,\n        onMatch: function (val, state, stack) {\n          var curIndent = stack[1];\n          if (curIndent >= val.length) {\n            this.next = \"start\";\n            stack.splice(0);\n          } else {\n            this.next = \"mlString\";\n          }\n          return this.token;\n        },\n        next: \"mlString\"\n      }, {\n        token: \"string\",\n        regex: '.+'\n      }]\n    };\n    this.normalizeRules();\n  };\n  oop.inherits(YamlHighlightRules, TextHighlightRules);\n  exports.YamlHighlightRules = YamlHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n  var MatchingBraceOutdent = function () {};\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/folding/coffee\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var Range = require(\"../../range\").Range;\n  var FoldMode = exports.FoldMode = function () {};\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.commentBlock = function (session, row) {\n      var re = /\\S/;\n      var line = session.getLine(row);\n      var startLevel = line.search(re);\n      if (startLevel == -1 || line[startLevel] != \"#\") return;\n      var startColumn = line.length;\n      var maxRow = session.getLength();\n      var startRow = row;\n      var endRow = row;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var level = line.search(re);\n        if (level == -1) continue;\n        if (line[level] != \"#\") break;\n        endRow = row;\n      }\n      if (endRow > startRow) {\n        var endColumn = session.getLine(endRow).length;\n        return new Range(startRow, startColumn, endRow, endColumn);\n      }\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var range = this.indentationBlock(session, row);\n      if (range) return range;\n      range = this.commentBlock(session, row);\n      if (range) return range;\n    };\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var indent = line.search(/\\S/);\n      var next = session.getLine(row + 1);\n      var prev = session.getLine(row - 1);\n      var prevIndent = prev.search(/\\S/);\n      var nextIndent = next.search(/\\S/);\n      if (indent == -1) {\n        session.foldWidgets[row - 1] = prevIndent != -1 && prevIndent < nextIndent ? \"start\" : \"\";\n        return \"\";\n      }\n      if (prevIndent == -1) {\n        if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n          session.foldWidgets[row - 1] = \"\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"start\";\n        }\n      } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n        if (session.getLine(row - 2).search(/\\S/) == -1) {\n          session.foldWidgets[row - 1] = \"start\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"\";\n        }\n      }\n      if (prevIndent != -1 && prevIndent < indent) session.foldWidgets[row - 1] = \"start\";else session.foldWidgets[row - 1] = \"\";\n      if (indent < nextIndent) return \"start\";else return \"\";\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/folding/yaml\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/coffee\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var CoffeeFoldMode = require(\"./coffee\").FoldMode;\n  var Range = require(\"../../range\").Range;\n  var FoldMode = exports.FoldMode = function () {};\n  oop.inherits(FoldMode, CoffeeFoldMode);\n  (function () {\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var re = /\\S/;\n      var line = session.getLine(row);\n      var startLevel = line.search(re);\n      var isCommentFold = line[startLevel] === \"#\";\n      var isDashFold = line[startLevel] === \"-\";\n      if (startLevel == -1) return;\n      var startColumn = line.length;\n      var maxRow = session.getLength();\n      var startRow = row;\n      var endRow = row;\n      if (isCommentFold) {\n        var range = this.commentBlock(session, row);\n        if (range) return range;\n      } else if (isDashFold) {\n        var range = this.indentationBlock(session, row);\n        if (range) return range;\n      } else {\n        while (++row < maxRow) {\n          var line = session.getLine(row);\n          var level = line.search(re);\n          if (level == -1) continue;\n          if (level <= startLevel && line[startLevel] !== '-') {\n            var token = session.getTokenAt(row, 0);\n            if (!token || token.type !== \"string\") break;\n          }\n          endRow = row;\n        }\n      }\n      if (endRow > startRow) {\n        var endColumn = session.getLine(endRow).length;\n        return new Range(startRow, startColumn, endRow, endColumn);\n      }\n    };\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var indent = line.search(/\\S/);\n      var next = session.getLine(row + 1);\n      var prev = session.getLine(row - 1);\n      var prevIndent = prev.search(/\\S/);\n      var nextIndent = next.search(/\\S/);\n      var lineStartsWithDash = line[indent] === '-';\n      if (indent == -1) {\n        session.foldWidgets[row - 1] = prevIndent != -1 && prevIndent < nextIndent ? \"start\" : \"\";\n        return \"\";\n      }\n      if (prevIndent == -1) {\n        if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n          session.foldWidgets[row - 1] = \"\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"start\";\n        }\n      } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n        if (session.getLine(row - 2).search(/\\S/) == -1) {\n          session.foldWidgets[row - 1] = \"start\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"\";\n        }\n      }\n      if (prevIndent != -1 && prevIndent < indent) {\n        session.foldWidgets[row - 1] = \"start\";\n      } else if (prevIndent != -1 && prevIndent == indent && lineStartsWithDash) {\n        session.foldWidgets[row - 1] = \"start\";\n      } else {\n        session.foldWidgets[row - 1] = \"\";\n      }\n      if (indent < nextIndent) return \"start\";else return \"\";\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/yaml\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/yaml_highlight_rules\", \"ace/mode/matching_brace_outdent\", \"ace/mode/folding/yaml\", \"ace/worker/worker_client\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var YamlHighlightRules = require(\"./yaml_highlight_rules\").YamlHighlightRules;\n  var MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n  var FoldMode = require(\"./folding/yaml\").FoldMode;\n  var WorkerClient = require(\"../worker/worker_client\").WorkerClient;\n  var Mode = function () {\n    this.HighlightRules = YamlHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = [\"#\"];\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      if (state == \"start\") {\n        var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n        if (match) {\n          indent += tab;\n        }\n      }\n      return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n    this.createWorker = function (session) {\n      var worker = new WorkerClient([\"ace\"], \"ace/mode/yaml_worker\", \"YamlWorker\");\n      worker.attachToDocument(session.getDocument());\n      worker.on(\"annotate\", function (results) {\n        session.setAnnotations(results.data);\n      });\n      worker.on(\"terminate\", function () {\n        session.clearAnnotations();\n      });\n      return worker;\n    };\n    this.$id = \"ace/mode/yaml\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/yaml\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","YamlHighlightRules","$rules","token","regex","onMatch","val","state","stack","line","replace","indent","exec","length","indentationIndicator","parseInt","next","push","curIndent","shift","defaultToken","splice","normalizeRules","inherits","Range","MatchingBraceOutdent","checkOutdent","input","test","autoOutdent","doc","row","getLine","match","column","openBracePos","findMatchingBracket","$getIndent","call","prototype","BaseFoldMode","FoldMode","commentBlock","session","re","startLevel","search","startColumn","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidgetRange","foldStyle","range","indentationBlock","getFoldWidget","prev","prevIndent","nextIndent","foldWidgets","CoffeeFoldMode","isCommentFold","isDashFold","getTokenAt","type","lineStartsWithDash","TextMode","Mode","WorkerClient","HighlightRules","$outdent","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","getNextLineIndent","tab","createWorker","worker","attachToDocument","getDocument","on","results","setAnnotations","data","clearAnnotations","$id","m"],"sources":["/home/anasb/code-projects/streamlit/streamlit-code-editor/code_editor/frontend/node_modules/ace-builds/src-noconflict/mode-yaml.js"],"sourcesContent":["ace.define(\"ace/mode/yaml_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar YamlHighlightRules = function () {\n    this.$rules = {\n        \"start\": [\n            {\n                token: \"comment\",\n                regex: \"#.*$\"\n            }, {\n                token: \"list.markup\",\n                regex: /^(?:-{3}|\\.{3})\\s*(?=#|$)/\n            }, {\n                token: \"list.markup\",\n                regex: /^\\s*[\\-?](?:$|\\s)/\n            }, {\n                token: \"constant\",\n                regex: \"!![\\\\w//]+\"\n            }, {\n                token: \"constant.language\",\n                regex: \"[&\\\\*][a-zA-Z0-9-_]+\"\n            }, {\n                token: [\"meta.tag\", \"keyword\"],\n                regex: /^(\\s*\\w[^\\s:]*?)(:(?=\\s|$))/\n            }, {\n                token: [\"meta.tag\", \"keyword\"],\n                regex: /(\\w[^\\s:]*?)(\\s*:(?=\\s|$))/\n            }, {\n                token: \"keyword.operator\",\n                regex: \"<<\\\\w*:\\\\w*\"\n            }, {\n                token: \"keyword.operator\",\n                regex: \"-\\\\s*(?=[{])\"\n            }, {\n                token: \"string\", // single line\n                regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n            }, {\n                token: \"string\", // multi line string start\n                regex: /[|>][-+\\d]*(?:$|\\s+(?:$|#))/,\n                onMatch: function (val, state, stack, line) {\n                    line = line.replace(/ #.*/, \"\");\n                    var indent = /^ *((:\\s*)?-(\\s*[^|>])?)?/.exec(line)[0]\n                        .replace(/\\S\\s*$/, \"\").length;\n                    var indentationIndicator = parseInt(/\\d+[\\s+-]*$/.exec(line));\n                    if (indentationIndicator) {\n                        indent += indentationIndicator - 1;\n                        this.next = \"mlString\";\n                    }\n                    else {\n                        this.next = \"mlStringPre\";\n                    }\n                    if (!stack.length) {\n                        stack.push(this.next);\n                        stack.push(indent);\n                    }\n                    else {\n                        stack[0] = this.next;\n                        stack[1] = indent;\n                    }\n                    return this.token;\n                },\n                next: \"mlString\"\n            }, {\n                token: \"string\", // single quoted string\n                regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n            }, {\n                token: \"constant.numeric\", // float\n                regex: /(\\b|[+\\-\\.])[\\d_]+(?:(?:\\.[\\d_]*)?(?:[eE][+\\-]?[\\d_]+)?)(?=[^\\d-\\w]|$)$/\n            }, {\n                token: \"constant.numeric\", // other number\n                regex: /[+\\-]?\\.inf\\b|NaN\\b|0x[\\dA-Fa-f_]+|0b[10_]+/\n            }, {\n                token: \"constant.language.boolean\",\n                regex: \"\\\\b(?:true|false|TRUE|FALSE|True|False|yes|no)\\\\b\"\n            }, {\n                token: \"paren.lparen\",\n                regex: \"[[({]\"\n            }, {\n                token: \"paren.rparen\",\n                regex: \"[\\\\])}]\"\n            }, {\n                token: \"text\",\n                regex: /[^\\s,:\\[\\]\\{\\}]+/\n            }\n        ],\n        \"mlStringPre\": [\n            {\n                token: \"indent\",\n                regex: /^ *$/\n            }, {\n                token: \"indent\",\n                regex: /^ */,\n                onMatch: function (val, state, stack) {\n                    var curIndent = stack[1];\n                    if (curIndent >= val.length) {\n                        this.next = \"start\";\n                        stack.shift();\n                        stack.shift();\n                    }\n                    else {\n                        stack[1] = val.length - 1;\n                        this.next = stack[0] = \"mlString\";\n                    }\n                    return this.token;\n                },\n                next: \"mlString\"\n            }, {\n                defaultToken: \"string\"\n            }\n        ],\n        \"mlString\": [\n            {\n                token: \"indent\",\n                regex: /^ *$/\n            }, {\n                token: \"indent\",\n                regex: /^ */,\n                onMatch: function (val, state, stack) {\n                    var curIndent = stack[1];\n                    if (curIndent >= val.length) {\n                        this.next = \"start\";\n                        stack.splice(0);\n                    }\n                    else {\n                        this.next = \"mlString\";\n                    }\n                    return this.token;\n                },\n                next: \"mlString\"\n            }, {\n                token: \"string\",\n                regex: '.+'\n            }\n        ]\n    };\n    this.normalizeRules();\n};\noop.inherits(YamlHighlightRules, TextHighlightRules);\nexports.YamlHighlightRules = YamlHighlightRules;\n\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module){\"use strict\";\nvar Range = require(\"../range\").Range;\nvar MatchingBraceOutdent = function () { };\n(function () {\n    this.checkOutdent = function (line, input) {\n        if (!/^\\s+$/.test(line))\n            return false;\n        return /^\\s*\\}/.test(input);\n    };\n    this.autoOutdent = function (doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n        if (!match)\n            return 0;\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({ row: row, column: column });\n        if (!openBracePos || openBracePos.row == row)\n            return 0;\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n    this.$getIndent = function (line) {\n        return line.match(/^\\s*/)[0];\n    };\n}).call(MatchingBraceOutdent.prototype);\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n\n});\n\nace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\nvar Range = require(\"../../range\").Range;\nvar FoldMode = exports.FoldMode = function () { };\noop.inherits(FoldMode, BaseFoldMode);\n(function () {\n    this.commentBlock = function (session, row) {\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        if (startLevel == -1 || line[startLevel] != \"#\")\n            return;\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var level = line.search(re);\n            if (level == -1)\n                continue;\n            if (line[level] != \"#\")\n                break;\n            endRow = row;\n        }\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n        var range = this.indentationBlock(session, row);\n        if (range)\n            return range;\n        range = this.commentBlock(session, row);\n        if (range)\n            return range;\n    };\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent != -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        }\n        else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n        if (prevIndent != -1 && prevIndent < indent)\n            session.foldWidgets[row - 1] = \"start\";\n        else\n            session.foldWidgets[row - 1] = \"\";\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/folding/yaml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/coffee\",\"ace/range\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../../lib/oop\");\nvar CoffeeFoldMode = require(\"./coffee\").FoldMode;\nvar Range = require(\"../../range\").Range;\nvar FoldMode = exports.FoldMode = function () { };\noop.inherits(FoldMode, CoffeeFoldMode);\n(function () {\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        var isCommentFold = line[startLevel] === \"#\";\n        var isDashFold = line[startLevel] === \"-\";\n        if (startLevel == -1)\n            return;\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n        if (isCommentFold) {\n            var range = this.commentBlock(session, row);\n            if (range)\n                return range;\n        }\n        else if (isDashFold) {\n            var range = this.indentationBlock(session, row);\n            if (range)\n                return range;\n        }\n        else {\n            while (++row < maxRow) {\n                var line = session.getLine(row);\n                var level = line.search(re);\n                if (level == -1)\n                    continue;\n                if (level <= startLevel && line[startLevel] !== '-') {\n                    var token = session.getTokenAt(row, 0);\n                    if (!token || token.type !== \"string\")\n                        break;\n                }\n                endRow = row;\n            }\n        }\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n    this.getFoldWidget = function (session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n        var lineStartsWithDash = line[indent] === '-';\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent != -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        }\n        else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n        if (prevIndent != -1 && prevIndent < indent) {\n            session.foldWidgets[row - 1] = \"start\";\n        }\n        else if (prevIndent != -1 && (prevIndent == indent && lineStartsWithDash)) {\n            session.foldWidgets[row - 1] = \"start\";\n        }\n        else {\n            session.foldWidgets[row - 1] = \"\";\n        }\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/yaml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/yaml_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/folding/yaml\",\"ace/worker/worker_client\"], function(require, exports, module){\"use strict\";\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar YamlHighlightRules = require(\"./yaml_highlight_rules\").YamlHighlightRules;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar FoldMode = require(\"./folding/yaml\").FoldMode;\nvar WorkerClient = require(\"../worker/worker_client\").WorkerClient;\nvar Mode = function () {\n    this.HighlightRules = YamlHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n(function () {\n    this.lineCommentStart = [\"#\"];\n    this.getNextLineIndent = function (state, line, tab) {\n        var indent = this.$getIndent(line);\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n        return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n    this.autoOutdent = function (state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n    this.createWorker = function (session) {\n        var worker = new WorkerClient([\"ace\"], \"ace/mode/yaml_worker\", \"YamlWorker\");\n        worker.attachToDocument(session.getDocument());\n        worker.on(\"annotate\", function (results) {\n            session.setAnnotations(results.data);\n        });\n        worker.on(\"terminate\", function () {\n            session.clearAnnotations();\n        });\n        return worker;\n    };\n    this.$id = \"ace/mode/yaml\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n});                (function() {\n                    ace.require([\"ace/mode/yaml\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}