{"code":"ace.define(\"ace/mode/diff_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],(function(e,i,t){\"use strict\";var o=e(\"../lib/oop\"),n=e(\"./text_highlight_rules\").TextHighlightRules,r=function(){this.$rules={start:[{regex:\"^(?:\\\\*{15}|={67}|-{3}|\\\\+{3})$\",token:\"punctuation.definition.separator.diff\",name:\"keyword\"},{regex:\"^(@@)(\\\\s*.+?\\\\s*)(@@)(.*)$\",token:[\"constant\",\"constant.numeric\",\"constant\",\"comment.doc.tag\"]},{regex:\"^(\\\\d+)([,\\\\d]+)(a|d|c)(\\\\d+)([,\\\\d]+)(.*)$\",token:[\"constant.numeric\",\"punctuation.definition.range.diff\",\"constant.function\",\"constant.numeric\",\"punctuation.definition.range.diff\",\"invalid\"],name:\"meta.\"},{regex:\"^(\\\\-{3}|\\\\+{3}|\\\\*{3})( .+)$\",token:[\"constant.numeric\",\"meta.tag\"]},{regex:\"^([!+>])(.*?)(\\\\s*)$\",token:[\"support.constant\",\"text\",\"invalid\"]},{regex:\"^([<\\\\-])(.*?)(\\\\s*)$\",token:[\"support.function\",\"string\",\"invalid\"]},{regex:\"^(diff)(\\\\s+--\\\\w+)?(.+?)( .+)?$\",token:[\"variable\",\"variable\",\"keyword\",\"variable\"]},{regex:\"^Index.+$\",token:\"variable\"},{regex:\"^\\\\s+$\",token:\"text\"},{regex:\"\\\\s*$\",token:\"invalid\"},{defaultToken:\"invisible\",caseInsensitive:!0}]}};o.inherits(r,n),i.DiffHighlightRules=r})),ace.define(\"ace/mode/folding/diff\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"],(function(e,i,t){\"use strict\";var o=e(\"../../lib/oop\"),n=e(\"./fold_mode\").FoldMode,r=e(\"../../range\").Range,a=i.FoldMode=function(e,i){this.regExpList=e,this.flag=i,this.foldingStartMarker=RegExp(\"^(\"+e.join(\"|\")+\")\",this.flag)};o.inherits(a,n),function(){this.getFoldWidgetRange=function(e,i,t){for(var o=e.getLine(t),n={row:t,column:o.length},a=this.regExpList,d=1;d<=a.length;d++){var f=RegExp(\"^(\"+a.slice(0,d).join(\"|\")+\")\",this.flag);if(f.test(o))break}for(var s=e.getLength();++t<s&&(o=e.getLine(t),!f.test(o)););if(t!=n.row+1)return new r(n.row,n.column,t-1,o.length)}}.call(a.prototype)})),ace.define(\"ace/mode/diff\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/diff_highlight_rules\",\"ace/mode/folding/diff\"],(function(e,i,t){\"use strict\";var o=e(\"../lib/oop\"),n=e(\"./text\").Mode,r=e(\"./diff_highlight_rules\").DiffHighlightRules,a=e(\"./folding/diff\").FoldMode,d=function(){this.HighlightRules=r,this.foldingRules=new a([\"diff\",\"@@|\\\\*{5}\"],\"i\")};o.inherits(d,n),function(){this.$id=\"ace/mode/diff\",this.snippetFileId=\"ace/snippets/diff\"}.call(d.prototype),i.Mode=d})),ace.require([\"ace/mode/diff\"],(function(e){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=e)}));","name":"97ed2886a09e0e75299f65b5217990cf.js","input":"ace.define(\"ace/mode/diff_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var DiffHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        regex: \"^(?:\\\\*{15}|={67}|-{3}|\\\\+{3})$\",\n        token: \"punctuation.definition.separator.diff\",\n        \"name\": \"keyword\"\n      }, {\n        regex: \"^(@@)(\\\\s*.+?\\\\s*)(@@)(.*)$\",\n        token: [\"constant\", \"constant.numeric\", \"constant\", \"comment.doc.tag\"]\n      }, {\n        regex: \"^(\\\\d+)([,\\\\d]+)(a|d|c)(\\\\d+)([,\\\\d]+)(.*)$\",\n        token: [\"constant.numeric\", \"punctuation.definition.range.diff\", \"constant.function\", \"constant.numeric\", \"punctuation.definition.range.diff\", \"invalid\"],\n        \"name\": \"meta.\"\n      }, {\n        regex: \"^(\\\\-{3}|\\\\+{3}|\\\\*{3})( .+)$\",\n        token: [\"constant.numeric\", \"meta.tag\"]\n      }, {\n        regex: \"^([!+>])(.*?)(\\\\s*)$\",\n        token: [\"support.constant\", \"text\", \"invalid\"]\n      }, {\n        regex: \"^([<\\\\-])(.*?)(\\\\s*)$\",\n        token: [\"support.function\", \"string\", \"invalid\"]\n      }, {\n        regex: \"^(diff)(\\\\s+--\\\\w+)?(.+?)( .+)?$\",\n        token: [\"variable\", \"variable\", \"keyword\", \"variable\"]\n      }, {\n        regex: \"^Index.+$\",\n        token: \"variable\"\n      }, {\n        regex: \"^\\\\s+$\",\n        token: \"text\"\n      }, {\n        regex: \"\\\\s*$\",\n        token: \"invalid\"\n      }, {\n        defaultToken: \"invisible\",\n        caseInsensitive: true\n      }]\n    };\n  };\n  oop.inherits(DiffHighlightRules, TextHighlightRules);\n  exports.DiffHighlightRules = DiffHighlightRules;\n});\nace.define(\"ace/mode/folding/diff\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var Range = require(\"../../range\").Range;\n  var FoldMode = exports.FoldMode = function (levels, flag) {\n    this.regExpList = levels;\n    this.flag = flag;\n    this.foldingStartMarker = RegExp(\"^(\" + levels.join(\"|\") + \")\", this.flag);\n  };\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var start = {\n        row: row,\n        column: line.length\n      };\n      var regList = this.regExpList;\n      for (var i = 1; i <= regList.length; i++) {\n        var re = RegExp(\"^(\" + regList.slice(0, i).join(\"|\") + \")\", this.flag);\n        if (re.test(line)) break;\n      }\n      for (var l = session.getLength(); ++row < l;) {\n        line = session.getLine(row);\n        if (re.test(line)) break;\n      }\n      if (row == start.row + 1) return;\n      return new Range(start.row, start.column, row - 1, line.length);\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/diff\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/diff_highlight_rules\", \"ace/mode/folding/diff\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var HighlightRules = require(\"./diff_highlight_rules\").DiffHighlightRules;\n  var FoldMode = require(\"./folding/diff\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = HighlightRules;\n    this.foldingRules = new FoldMode([\"diff\", \"@@|\\\\*{5}\"], \"i\");\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.$id = \"ace/mode/diff\";\n    this.snippetFileId = \"ace/snippets/diff\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/diff\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}