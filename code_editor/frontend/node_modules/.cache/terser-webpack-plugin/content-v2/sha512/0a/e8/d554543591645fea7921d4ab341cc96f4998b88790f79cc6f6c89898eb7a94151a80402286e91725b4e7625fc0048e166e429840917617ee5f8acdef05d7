{"code":"ace.define(\"ace/mode/cuttlefish_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],(function(e,t,i){\"use strict\";var o=e(\"../lib/oop\"),l=e(\"./text_highlight_rules\").TextHighlightRules,s=function(){this.$rules={start:[{token:[\"text\",\"comment\"],regex:/^([ \\t]*)(#.*)$/},{token:[\"text\",\"keyword\",\"text\",\"string\",\"text\",\"comment\"],regex:/^([ \\t]*)(include)([ \\t]*)([A-Za-z0-9-\\_\\.\\*\\/]+)([ \\t]*)(#.*)?$/},{token:[\"text\",\"keyword\",\"text\",\"operator\",\"text\",\"string\",\"text\",\"comment\"],regex:/^([ \\t]*)([A-Za-z0-9-_]+(?:\\.[A-Za-z0-9-_]+)*)([ \\t]*)(=)([ \\t]*)([^ \\t#][^#]*?)([ \\t]*)(#.*)?$/},{defaultToken:\"invalid\"}]},this.normalizeRules()};s.metaData={fileTypes:[\"conf\"],keyEquivalent:\"^~C\",name:\"Cuttlefish\",scopeName:\"source.conf\"},o.inherits(s,l),t.CuttlefishHighlightRules=s})),ace.define(\"ace/mode/cuttlefish\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/cuttlefish_highlight_rules\"],(function(e,t,i){\"use strict\";var o=e(\"../lib/oop\"),l=e(\"./text\").Mode,s=e(\"./cuttlefish_highlight_rules\").CuttlefishHighlightRules,u=function(){this.HighlightRules=s,this.foldingRules=null,this.$behaviour=this.$defaultBehaviour};o.inherits(u,l),function(){this.lineCommentStart=\"#\",this.blockComment=null,this.$id=\"ace/mode/cuttlefish\"}.call(u.prototype),t.Mode=u})),ace.require([\"ace/mode/cuttlefish\"],(function(e){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=e)}));","name":"34b1709bb0d90bbcd7b3ca372c6ec9cb.js","input":"ace.define(\"ace/mode/cuttlefish_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var CuttlefishHighlightRules = function () {\n    this.$rules = {\n      start: [{\n        token: ['text', 'comment'],\n        regex: /^([ \\t]*)(#.*)$/\n      }, {\n        token: ['text', 'keyword', 'text', 'string', 'text', 'comment'],\n        regex: /^([ \\t]*)(include)([ \\t]*)([A-Za-z0-9-\\_\\.\\*\\/]+)([ \\t]*)(#.*)?$/\n      }, {\n        token: ['text', 'keyword', 'text', 'operator', 'text', 'string', 'text', 'comment'],\n        regex: /^([ \\t]*)([A-Za-z0-9-_]+(?:\\.[A-Za-z0-9-_]+)*)([ \\t]*)(=)([ \\t]*)([^ \\t#][^#]*?)([ \\t]*)(#.*)?$/\n      }, {\n        defaultToken: 'invalid'\n      }]\n    };\n    this.normalizeRules();\n  };\n  CuttlefishHighlightRules.metaData = {\n    fileTypes: ['conf'],\n    keyEquivalent: '^~C',\n    name: 'Cuttlefish',\n    scopeName: 'source.conf'\n  };\n  oop.inherits(CuttlefishHighlightRules, TextHighlightRules);\n  exports.CuttlefishHighlightRules = CuttlefishHighlightRules;\n});\nace.define(\"ace/mode/cuttlefish\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/cuttlefish_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var CuttlefishHighlightRules = require(\"./cuttlefish_highlight_rules\").CuttlefishHighlightRules;\n  var Mode = function () {\n    this.HighlightRules = CuttlefishHighlightRules;\n    this.foldingRules = null;\n    this.$behaviour = this.$defaultBehaviour;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"#\";\n    this.blockComment = null;\n    this.$id = \"ace/mode/cuttlefish\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/cuttlefish\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}