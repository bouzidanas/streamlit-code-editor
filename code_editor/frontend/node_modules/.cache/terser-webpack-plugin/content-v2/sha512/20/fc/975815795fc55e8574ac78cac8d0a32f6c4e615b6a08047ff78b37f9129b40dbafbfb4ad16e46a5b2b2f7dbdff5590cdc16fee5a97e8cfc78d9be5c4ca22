{"code":"ace.define(\"ace/mode/robot_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],(function(e,t,o){\"use strict\";var n=e(\"../lib/oop\"),s=e(\"./text_highlight_rules\").TextHighlightRules,i=function(){var e=new RegExp(/\\$\\{CURDIR\\}|\\$\\{TEMPDIR\\}|\\$\\{EXECDIR\\}|\\$\\{\\/\\}|\\$\\{\\:\\}|\\$\\{\\\\n\\}|\\$\\{true\\}|\\$\\{false\\}|\\$\\{none\\}|\\$\\{null\\}|\\$\\{space(?:\\s*\\*\\s+[0-9]+)?\\}|\\$\\{empty\\}|&\\{empty\\}|@\\{empty\\}|\\$\\{TEST NAME\\}|@\\{TEST[\\s_]TAGS\\}|\\$\\{TEST[\\s_]DOCUMENTATION\\}|\\$\\{TEST[\\s_]STATUS\\}|\\$\\{TEST[\\s_]MESSAGE\\}|\\$\\{PREV[\\s_]TEST[\\s_]NAME\\}|\\$\\{PREV[\\s_]TEST[\\s_]STATUS\\}|\\$\\{PREV[\\s_]TEST[\\s_]MESSAGE\\}|\\$\\{SUITE[\\s_]NAME\\}|\\$\\{SUITE[\\s_]SOURCE\\}|\\$\\{SUITE[\\s_]DOCUMENTATION\\}|&\\{SUITE[\\s_]METADATA\\}|\\$\\{SUITE[\\s_]STATUS\\}|\\$\\{SUITE[\\s_]MESSAGE\\}|\\$\\{KEYWORD[\\s_]STATUS\\}|\\$\\{KEYWORD[\\s_]MESSAGE\\}|\\$\\{LOG[\\s_]LEVEL\\}|\\$\\{OUTPUT[\\s_]FILE\\}|\\$\\{LOG[\\s_]FILE\\}|\\$\\{REPORT[\\s_]FILE\\}|\\$\\{DEBUG[\\s_]FILE\\}|\\$\\{OUTPUT[\\s_]DIR\\}/);this.$rules={start:[{token:\"string.robot.header\",regex:/^\\*{3}\\s+(?:settings?|metadata|(?:user )?keywords?|test ?cases?|tasks?|variables?)/,caseInsensitive:!0,push:[{token:\"string.robot.header\",regex:/$/,next:\"pop\"},{defaultToken:\"string.robot.header\"}],comment:\"start of a table\"},{token:\"comment.robot\",regex:/(?:^|\\s{2,}|\\t|\\|\\s{1,})(?=[^\\\\])#/,push:[{token:\"comment.robot\",regex:/$/,next:\"pop\"},{defaultToken:\"comment.robot\"}]},{token:\"comment\",regex:/^\\s*\\[?Documentation\\]?/,caseInsensitive:!0,push:[{token:\"comment\",regex:/^(?!\\s*\\.\\.\\.)/,next:\"pop\"},{defaultToken:\"comment\"}]},{token:\"storage.type.method.robot\",regex:/\\[(?:Arguments|Setup|Teardown|Precondition|Postcondition|Template|Return|Timeout)\\]/,caseInsensitive:!0,comment:\"testcase settings\"},{token:\"storage.type.method.robot\",regex:/\\[Tags\\]/,caseInsensitive:!0,push:[{token:\"storage.type.method.robot\",regex:/^(?!\\s*\\.\\.\\.)/,next:\"pop\"},{token:\"comment\",regex:/^\\s*\\.\\.\\./},{defaultToken:\"storage.type.method.robot\"}],comment:\"test tags\"},{token:\"constant.language\",regex:e,caseInsensitive:!0},{token:\"entity.name.variable.wrapper\",regex:/[$@&%]\\{\\{?/,push:[{token:\"entity.name.variable.wrapper\",regex:/\\}\\}?(\\s?=)?/,next:\"pop\"},{include:\"$self\"},{token:\"entity.name.variable\",regex:/./},{defaultToken:\"entity.name.variable\"}]},{token:\"keyword.control.robot\",regex:/^[^\\s\\t*$|]+|(?=^\\|)\\s+[^\\s\\t*$|]+/,push:[{token:\"keyword.control.robot\",regex:/(?=\\s{2})|\\t|$|\\s+(?=\\|)/,next:\"pop\"},{defaultToken:\"keyword.control.robot\"}]},{token:\"constant.numeric.robot\",regex:/\\b[0-9]+(?:\\.[0-9]+)?\\b/},{token:\"keyword\",regex:/\\s{2,}(for|in range|in|end|else if|if|else|with name)(\\s{2,}|$)/,caseInsensitive:!0},{token:\"storage.type.function\",regex:/^(?:\\s{2,}\\s+)[^ \\t*$@&%[.|]+/,push:[{token:\"storage.type.function\",regex:/(?=\\s{2})|\\t|$|\\s+(?=\\|)/,next:\"pop\"},{defaultToken:\"storage.type.function\"}]}]},this.normalizeRules()};i.metadata={fileTypes:[\"robot\"],name:\"Robot\",scopeName:\"source.robot\"},n.inherits(i,s),t.RobotHighlightRules=i})),ace.define(\"ace/mode/folding/pythonic\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\"],(function(e,t,o){\"use strict\";var n=e(\"../../lib/oop\"),s=e(\"./fold_mode\").FoldMode,i=t.FoldMode=function(e){this.foldingStartMarker=new RegExp(\"([\\\\[{])(?:\\\\s*)$|(\"+e+\")(?:\\\\s*)(?:#.*)?$\")};n.inherits(i,s),function(){this.getFoldWidgetRange=function(e,t,o){var n=e.getLine(o).match(this.foldingStartMarker);if(n)return n[1]?this.openingBracketBlock(e,n[1],o,n.index):n[2]?this.indentationBlock(e,o,n.index+n[2].length):this.indentationBlock(e,o)}}.call(i.prototype)})),ace.define(\"ace/mode/robot\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/robot_highlight_rules\",\"ace/mode/folding/pythonic\"],(function(e,t,o){\"use strict\";var n=e(\"../lib/oop\"),s=e(\"./text\").Mode,i=e(\"./robot_highlight_rules\").RobotHighlightRules,r=e(\"./folding/pythonic\").FoldMode,a=function(){this.HighlightRules=i,this.foldingRules=new r,this.$behaviour=this.$defaultBehaviour};n.inherits(a,s),function(){this.lineCommentStart=\"#\",this.$id=\"ace/mode/robot\",this.snippetFileId=\"ace/snippets/robot\"}.call(a.prototype),t.Mode=a})),ace.require([\"ace/mode/robot\"],(function(e){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=e)}));","name":"903dcba2ce80785b01bc7eb5da211d00.js","input":"ace.define(\"ace/mode/robot_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  'use strict';\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var RobotHighlightRules = function () {\n    var builtinConstantsRegex = new RegExp(/\\$\\{CURDIR\\}|\\$\\{TEMPDIR\\}|\\$\\{EXECDIR\\}|\\$\\{\\/\\}|\\$\\{\\:\\}|\\$\\{\\\\n\\}|\\$\\{true\\}|\\$\\{false\\}|\\$\\{none\\}|\\$\\{null\\}|\\$\\{space(?:\\s*\\*\\s+[0-9]+)?\\}|\\$\\{empty\\}|&\\{empty\\}|@\\{empty\\}|\\$\\{TEST NAME\\}|@\\{TEST[\\s_]TAGS\\}|\\$\\{TEST[\\s_]DOCUMENTATION\\}|\\$\\{TEST[\\s_]STATUS\\}|\\$\\{TEST[\\s_]MESSAGE\\}|\\$\\{PREV[\\s_]TEST[\\s_]NAME\\}|\\$\\{PREV[\\s_]TEST[\\s_]STATUS\\}|\\$\\{PREV[\\s_]TEST[\\s_]MESSAGE\\}|\\$\\{SUITE[\\s_]NAME\\}|\\$\\{SUITE[\\s_]SOURCE\\}|\\$\\{SUITE[\\s_]DOCUMENTATION\\}|&\\{SUITE[\\s_]METADATA\\}|\\$\\{SUITE[\\s_]STATUS\\}|\\$\\{SUITE[\\s_]MESSAGE\\}|\\$\\{KEYWORD[\\s_]STATUS\\}|\\$\\{KEYWORD[\\s_]MESSAGE\\}|\\$\\{LOG[\\s_]LEVEL\\}|\\$\\{OUTPUT[\\s_]FILE\\}|\\$\\{LOG[\\s_]FILE\\}|\\$\\{REPORT[\\s_]FILE\\}|\\$\\{DEBUG[\\s_]FILE\\}|\\$\\{OUTPUT[\\s_]DIR\\}/);\n    this.$rules = {\n      \"start\": [{\n        token: \"string.robot.header\",\n        regex: /^\\*{3}\\s+(?:settings?|metadata|(?:user )?keywords?|test ?cases?|tasks?|variables?)/,\n        caseInsensitive: true,\n        push: [{\n          token: \"string.robot.header\",\n          regex: /$/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"string.robot.header\"\n        }],\n        comment: \"start of a table\"\n      }, {\n        token: \"comment.robot\",\n        regex: /(?:^|\\s{2,}|\\t|\\|\\s{1,})(?=[^\\\\])#/,\n        push: [{\n          token: \"comment.robot\",\n          regex: /$/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"comment.robot\"\n        }]\n      }, {\n        token: \"comment\",\n        regex: /^\\s*\\[?Documentation\\]?/,\n        caseInsensitive: true,\n        push: [{\n          token: \"comment\",\n          regex: /^(?!\\s*\\.\\.\\.)/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"comment\"\n        }]\n      }, {\n        token: \"storage.type.method.robot\",\n        regex: /\\[(?:Arguments|Setup|Teardown|Precondition|Postcondition|Template|Return|Timeout)\\]/,\n        caseInsensitive: true,\n        comment: \"testcase settings\"\n      }, {\n        token: \"storage.type.method.robot\",\n        regex: /\\[Tags\\]/,\n        caseInsensitive: true,\n        push: [{\n          token: \"storage.type.method.robot\",\n          regex: /^(?!\\s*\\.\\.\\.)/,\n          next: \"pop\"\n        }, {\n          token: \"comment\",\n          regex: /^\\s*\\.\\.\\./\n        }, {\n          defaultToken: \"storage.type.method.robot\"\n        }],\n        comment: \"test tags\"\n      }, {\n        token: \"constant.language\",\n        regex: builtinConstantsRegex,\n        caseInsensitive: true\n      }, {\n        token: \"entity.name.variable.wrapper\",\n        regex: /[$@&%]\\{\\{?/,\n        push: [{\n          token: \"entity.name.variable.wrapper\",\n          regex: /\\}\\}?(\\s?=)?/,\n          next: \"pop\"\n        }, {\n          include: \"$self\"\n        }, {\n          token: \"entity.name.variable\",\n          regex: /./\n        }, {\n          defaultToken: \"entity.name.variable\"\n        }]\n      }, {\n        token: \"keyword.control.robot\",\n        regex: /^[^\\s\\t*$|]+|(?=^\\|)\\s+[^\\s\\t*$|]+/,\n        push: [{\n          token: \"keyword.control.robot\",\n          regex: /(?=\\s{2})|\\t|$|\\s+(?=\\|)/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"keyword.control.robot\"\n        }]\n      }, {\n        token: \"constant.numeric.robot\",\n        regex: /\\b[0-9]+(?:\\.[0-9]+)?\\b/\n      }, {\n        token: \"keyword\",\n        regex: /\\s{2,}(for|in range|in|end|else if|if|else|with name)(\\s{2,}|$)/,\n        caseInsensitive: true\n      }, {\n        token: \"storage.type.function\",\n        regex: /^(?:\\s{2,}\\s+)[^ \\t*$@&%[.|]+/,\n        push: [{\n          token: \"storage.type.function\",\n          regex: /(?=\\s{2})|\\t|$|\\s+(?=\\|)/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"storage.type.function\"\n        }]\n      }]\n    };\n    this.normalizeRules();\n  };\n  RobotHighlightRules.metadata = {\n    fileTypes: ['robot'],\n    name: 'Robot',\n    scopeName: 'source.robot'\n  };\n  oop.inherits(RobotHighlightRules, TextHighlightRules);\n  exports.RobotHighlightRules = RobotHighlightRules;\n});\nace.define(\"ace/mode/folding/pythonic\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function (markers) {\n    this.foldingStartMarker = new RegExp(\"([\\\\[{])(?:\\\\s*)$|(\" + markers + \")(?:\\\\s*)(?:#.*)?$\");\n  };\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var match = line.match(this.foldingStartMarker);\n      if (match) {\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, match.index);\n        if (match[2]) return this.indentationBlock(session, row, match.index + match[2].length);\n        return this.indentationBlock(session, row);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/robot\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/robot_highlight_rules\", \"ace/mode/folding/pythonic\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var RobotHighlightRules = require(\"./robot_highlight_rules\").RobotHighlightRules;\n  var FoldMode = require(\"./folding/pythonic\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = RobotHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/robot\";\n    this.snippetFileId = \"ace/snippets/robot\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/robot\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}