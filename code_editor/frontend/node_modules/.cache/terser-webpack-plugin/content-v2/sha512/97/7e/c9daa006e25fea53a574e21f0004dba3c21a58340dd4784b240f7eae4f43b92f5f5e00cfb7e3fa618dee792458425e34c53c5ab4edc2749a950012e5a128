{"code":"ace.define(\"ace/ext/menu_tools/settings_menu.css\",[\"require\",\"exports\",\"module\"],(function(e,t,a){a.exports=\"#ace_settingsmenu, #kbshortcutmenu {\\n    background-color: #F7F7F7;\\n    color: black;\\n    box-shadow: -5px 4px 5px rgba(126, 126, 126, 0.55);\\n    padding: 1em 0.5em 2em 1em;\\n    overflow: auto;\\n    position: absolute;\\n    margin: 0;\\n    bottom: 0;\\n    right: 0;\\n    top: 0;\\n    z-index: 9991;\\n    cursor: default;\\n}\\n\\n.ace_dark #ace_settingsmenu, .ace_dark #kbshortcutmenu {\\n    box-shadow: -20px 10px 25px rgba(126, 126, 126, 0.25);\\n    background-color: rgba(255, 255, 255, 0.6);\\n    color: black;\\n}\\n\\n.ace_optionsMenuEntry:hover {\\n    background-color: rgba(100, 100, 100, 0.1);\\n    transition: all 0.3s\\n}\\n\\n.ace_closeButton {\\n    background: rgba(245, 146, 146, 0.5);\\n    border: 1px solid #F48A8A;\\n    border-radius: 50%;\\n    padding: 7px;\\n    position: absolute;\\n    right: -8px;\\n    top: -8px;\\n    z-index: 100000;\\n}\\n.ace_closeButton{\\n    background: rgba(245, 146, 146, 0.9);\\n}\\n.ace_optionsMenuKey {\\n    color: darkslateblue;\\n    font-weight: bold;\\n}\\n.ace_optionsMenuCommand {\\n    color: darkcyan;\\n    font-weight: normal;\\n}\\n.ace_optionsMenuEntry input, .ace_optionsMenuEntry button {\\n    vertical-align: middle;\\n}\\n\\n.ace_optionsMenuEntry button[ace_selected_button=true] {\\n    background: #e7e7e7;\\n    box-shadow: 1px 0px 2px 0px #adadad inset;\\n    border-color: #adadad;\\n}\\n.ace_optionsMenuEntry button {\\n    background: white;\\n    border: 1px solid lightgray;\\n    margin: 0px;\\n}\\n.ace_optionsMenuEntry button:hover{\\n    background: #f0f0f0;\\n}\"})),ace.define(\"ace/ext/menu_tools/overlay_page\",[\"require\",\"exports\",\"module\",\"ace/lib/dom\",\"ace/ext/menu_tools/settings_menu.css\"],(function(e,t,a){\"use strict\";var o=e(\"../../lib/dom\"),n=e(\"./settings_menu.css\");o.importCssString(n,\"settings_menu.css\",!1),a.exports.overlayPage=function(e,t,a){var o=document.createElement(\"div\"),n=!1;function r(e){27===e.keyCode&&i()}function i(){o&&(document.removeEventListener(\"keydown\",r),o.parentNode.removeChild(o),e&&e.focus(),o=null,a&&a())}return o.style.cssText=\"margin: 0; padding: 0; position: fixed; top:0; bottom:0; left:0; right:0;z-index: 9990; \"+(e?\"background-color: rgba(0, 0, 0, 0.3);\":\"\"),o.addEventListener(\"click\",(function(e){n||i()})),document.addEventListener(\"keydown\",r),t.addEventListener(\"click\",(function(e){e.stopPropagation()})),o.appendChild(t),document.body.appendChild(o),e&&e.blur(),{close:i,setIgnoreFocusOut:function(e){n=e,e&&(o.style.pointerEvents=\"none\",t.style.pointerEvents=\"auto\")}}}})),ace.define(\"ace/ext/modelist\",[\"require\",\"exports\",\"module\"],(function(e,t,a){\"use strict\";var o=[];var n=function(){function e(e,t,a){var o;this.name=e,this.caption=t,this.mode=\"ace/mode/\"+e,this.extensions=a,o=/\\^/.test(a)?a.replace(/\\|(\\^)?/g,(function(e,t){return\"$|\"+(t?\"^\":\"^.*\\\\.\")}))+\"$\":\"^.*\\\\.(\"+a+\")$\",this.extRe=new RegExp(o,\"gi\")}return e.prototype.supportsFile=function(e){return e.match(this.extRe)},e}(),r={ABAP:[\"abap\"],ABC:[\"abc\"],ActionScript:[\"as\"],ADA:[\"ada|adb\"],Alda:[\"alda\"],Apache_Conf:[\"^htaccess|^htgroups|^htpasswd|^conf|htaccess|htgroups|htpasswd\"],Apex:[\"apex|cls|trigger|tgr\"],AQL:[\"aql\"],AsciiDoc:[\"asciidoc|adoc\"],ASL:[\"dsl|asl|asl.json\"],Assembly_ARM32:[\"s\"],Assembly_x86:[\"asm|a\"],Astro:[\"astro\"],AutoHotKey:[\"ahk\"],BatchFile:[\"bat|cmd\"],BibTeX:[\"bib\"],C_Cpp:[\"cpp|c|cc|cxx|h|hh|hpp|ino\"],C9Search:[\"c9search_results\"],Cirru:[\"cirru|cr\"],Clojure:[\"clj|cljs\"],Cobol:[\"CBL|COB\"],coffee:[\"coffee|cf|cson|^Cakefile\"],ColdFusion:[\"cfm|cfc\"],Crystal:[\"cr\"],CSharp:[\"cs\"],Csound_Document:[\"csd\"],Csound_Orchestra:[\"orc\"],Csound_Score:[\"sco\"],CSS:[\"css\"],Curly:[\"curly\"],Cuttlefish:[\"conf\"],D:[\"d|di\"],Dart:[\"dart\"],Diff:[\"diff|patch\"],Django:[\"djt|html.djt|dj.html|djhtml\"],Dockerfile:[\"^Dockerfile\"],Dot:[\"dot\"],Drools:[\"drl\"],Edifact:[\"edi\"],Eiffel:[\"e|ge\"],EJS:[\"ejs\"],Elixir:[\"ex|exs\"],Elm:[\"elm\"],Erlang:[\"erl|hrl\"],Flix:[\"flix\"],Forth:[\"frt|fs|ldr|fth|4th\"],Fortran:[\"f|f90\"],FSharp:[\"fsi|fs|ml|mli|fsx|fsscript\"],FSL:[\"fsl\"],FTL:[\"ftl\"],Gcode:[\"gcode\"],Gherkin:[\"feature\"],Gitignore:[\"^.gitignore\"],Glsl:[\"glsl|frag|vert\"],Gobstones:[\"gbs\"],golang:[\"go\"],GraphQLSchema:[\"gql\"],Groovy:[\"groovy\"],HAML:[\"haml\"],Handlebars:[\"hbs|handlebars|tpl|mustache\"],Haskell:[\"hs\"],Haskell_Cabal:[\"cabal\"],haXe:[\"hx\"],Hjson:[\"hjson\"],HTML:[\"html|htm|xhtml|we|wpy\"],HTML_Elixir:[\"eex|html.eex\"],HTML_Ruby:[\"erb|rhtml|html.erb\"],INI:[\"ini|conf|cfg|prefs\"],Io:[\"io\"],Ion:[\"ion\"],Jack:[\"jack\"],Jade:[\"jade|pug\"],Java:[\"java\"],JavaScript:[\"js|jsm|cjs|mjs\"],JEXL:[\"jexl\"],JSON:[\"json\"],JSON5:[\"json5\"],JSONiq:[\"jq\"],JSP:[\"jsp\"],JSSM:[\"jssm|jssm_state\"],JSX:[\"jsx\"],Julia:[\"jl\"],Kotlin:[\"kt|kts\"],LaTeX:[\"tex|latex|ltx|bib\"],Latte:[\"latte\"],LESS:[\"less\"],Liquid:[\"liquid\"],Lisp:[\"lisp\"],LiveScript:[\"ls\"],Log:[\"log\"],LogiQL:[\"logic|lql\"],Logtalk:[\"lgt\"],LSL:[\"lsl\"],Lua:[\"lua\"],LuaPage:[\"lp\"],Lucene:[\"lucene\"],Makefile:[\"^Makefile|^GNUmakefile|^makefile|^OCamlMakefile|make\"],Markdown:[\"md|markdown\"],Mask:[\"mask\"],MATLAB:[\"matlab\"],Maze:[\"mz\"],MediaWiki:[\"wiki|mediawiki\"],MEL:[\"mel\"],MIPS:[\"s|asm\"],MIXAL:[\"mixal\"],MUSHCode:[\"mc|mush\"],MySQL:[\"mysql\"],Nasal:[\"nas\"],Nginx:[\"nginx|conf\"],Nim:[\"nim\"],Nix:[\"nix\"],NSIS:[\"nsi|nsh\"],Nunjucks:[\"nunjucks|nunjs|nj|njk\"],ObjectiveC:[\"m|mm\"],OCaml:[\"ml|mli\"],Odin:[\"odin\"],PartiQL:[\"partiql|pql\"],Pascal:[\"pas|p\"],Perl:[\"pl|pm\"],pgSQL:[\"pgsql\"],PHP:[\"php|inc|phtml|shtml|php3|php4|php5|phps|phpt|aw|ctp|module\"],PHP_Laravel_blade:[\"blade.php\"],Pig:[\"pig\"],PLSQL:[\"plsql\"],Powershell:[\"ps1\"],Praat:[\"praat|praatscript|psc|proc\"],Prisma:[\"prisma\"],Prolog:[\"plg|prolog\"],Properties:[\"properties\"],Protobuf:[\"proto\"],PRQL:[\"prql\"],Puppet:[\"epp|pp\"],Python:[\"py\"],QML:[\"qml\"],R:[\"r\"],Raku:[\"raku|rakumod|rakutest|p6|pl6|pm6\"],Razor:[\"cshtml|asp\"],RDoc:[\"Rd\"],Red:[\"red|reds\"],RHTML:[\"Rhtml\"],Robot:[\"robot|resource\"],RST:[\"rst\"],Ruby:[\"rb|ru|gemspec|rake|^Guardfile|^Rakefile|^Gemfile\"],Rust:[\"rs\"],SaC:[\"sac\"],SASS:[\"sass\"],SCAD:[\"scad\"],Scala:[\"scala|sbt\"],Scheme:[\"scm|sm|rkt|oak|scheme\"],Scrypt:[\"scrypt\"],SCSS:[\"scss\"],SH:[\"sh|bash|^.bashrc\"],SJS:[\"sjs\"],Slim:[\"slim|skim\"],Smarty:[\"smarty|tpl\"],Smithy:[\"smithy\"],snippets:[\"snippets\"],Soy_Template:[\"soy\"],Space:[\"space\"],SPARQL:[\"rq\"],SQL:[\"sql\"],SQLServer:[\"sqlserver\"],Stylus:[\"styl|stylus\"],SVG:[\"svg\"],Swift:[\"swift\"],Tcl:[\"tcl\"],Terraform:[\"tf\",\"tfvars\",\"terragrunt\"],Tex:[\"tex\"],Text:[\"txt\"],Textile:[\"textile\"],Toml:[\"toml\"],TSX:[\"tsx\"],Turtle:[\"ttl\"],Twig:[\"twig|swig\"],Typescript:[\"ts|mts|cts|typescript|str\"],Vala:[\"vala\"],VBScript:[\"vbs|vb\"],Velocity:[\"vm\"],Verilog:[\"v|vh|sv|svh\"],VHDL:[\"vhd|vhdl\"],Visualforce:[\"vfp|component|page\"],Vue:[\"vue\"],Wollok:[\"wlk|wpgm|wtest\"],XML:[\"xml|rdf|rss|wsdl|xslt|atom|mathml|mml|xul|xbl|xaml\"],XQuery:[\"xq\"],YAML:[\"yaml|yml\"],Zeek:[\"zeek|bro\"],Zig:[\"zig\"]},i={ObjectiveC:\"Objective-C\",CSharp:\"C#\",golang:\"Go\",C_Cpp:\"C and C++\",Csound_Document:\"Csound Document\",Csound_Orchestra:\"Csound\",Csound_Score:\"Csound Score\",coffee:\"CoffeeScript\",HTML_Ruby:\"HTML (Ruby)\",HTML_Elixir:\"HTML (Elixir)\",FTL:\"FreeMarker\",PHP_Laravel_blade:\"PHP (Blade Template)\",Perl6:\"Perl 6\",AutoHotKey:\"AutoHotkey / AutoIt\"},s={};for(var l in r){var c=r[l],p=(i[l]||l).replace(/_/g,\" \"),u=l.toLowerCase(),d=new n(u,p,c[0]);s[u]=d,o.push(d)}a.exports={getModeForPath:function(e){for(var t=s.text,a=e.split(/[\\/\\\\]/).pop(),n=0;n<o.length;n++)if(o[n].supportsFile(a)){t=o[n];break}return t},modes:o,modesByName:s}})),ace.define(\"ace/ext/themelist\",[\"require\",\"exports\",\"module\"],(function(e,t,a){\"use strict\";t.themesByName={},t.themes=[[\"Chrome\"],[\"Clouds\"],[\"Crimson Editor\"],[\"Dawn\"],[\"Dreamweaver\"],[\"Eclipse\"],[\"GitHub\"],[\"IPlastic\"],[\"Solarized Light\"],[\"TextMate\"],[\"Tomorrow\"],[\"XCode\"],[\"Kuroir\"],[\"KatzenMilch\"],[\"SQL Server\",\"sqlserver\",\"light\"],[\"CloudEditor\",\"cloud_editor\",\"light\"],[\"Ambiance\",\"ambiance\",\"dark\"],[\"Chaos\",\"chaos\",\"dark\"],[\"Clouds Midnight\",\"clouds_midnight\",\"dark\"],[\"Dracula\",\"\",\"dark\"],[\"Cobalt\",\"cobalt\",\"dark\"],[\"Gruvbox\",\"gruvbox\",\"dark\"],[\"Green on Black\",\"gob\",\"dark\"],[\"idle Fingers\",\"idle_fingers\",\"dark\"],[\"krTheme\",\"kr_theme\",\"dark\"],[\"Merbivore\",\"merbivore\",\"dark\"],[\"Merbivore Soft\",\"merbivore_soft\",\"dark\"],[\"Mono Industrial\",\"mono_industrial\",\"dark\"],[\"Monokai\",\"monokai\",\"dark\"],[\"Nord Dark\",\"nord_dark\",\"dark\"],[\"One Dark\",\"one_dark\",\"dark\"],[\"Pastel on dark\",\"pastel_on_dark\",\"dark\"],[\"Solarized Dark\",\"solarized_dark\",\"dark\"],[\"Terminal\",\"terminal\",\"dark\"],[\"Tomorrow Night\",\"tomorrow_night\",\"dark\"],[\"Tomorrow Night Blue\",\"tomorrow_night_blue\",\"dark\"],[\"Tomorrow Night Bright\",\"tomorrow_night_bright\",\"dark\"],[\"Tomorrow Night 80s\",\"tomorrow_night_eighties\",\"dark\"],[\"Twilight\",\"twilight\",\"dark\"],[\"Vibrant Ink\",\"vibrant_ink\",\"dark\"],[\"GitHub Dark\",\"github_dark\",\"dark\"],[\"CloudEditor Dark\",\"cloud_editor_dark\",\"dark\"]].map((function(e){var a=e[1]||e[0].replace(/ /g,\"_\").toLowerCase(),o={caption:e[0],theme:\"ace/theme/\"+a,isDark:\"dark\"==e[2],name:a};return t.themesByName[a]=o,o}))})),ace.define(\"ace/ext/options\",[\"require\",\"exports\",\"module\",\"ace/ext/menu_tools/overlay_page\",\"ace/lib/dom\",\"ace/lib/oop\",\"ace/config\",\"ace/lib/event_emitter\",\"ace/ext/modelist\",\"ace/ext/themelist\"],(function(e,t,a){\"use strict\";e(\"./menu_tools/overlay_page\");var o=e(\"../lib/dom\"),n=e(\"../lib/oop\"),r=e(\"../config\"),i=e(\"../lib/event_emitter\").EventEmitter,s=o.buildDom,l=e(\"./modelist\"),c=e(\"./themelist\"),p={Bright:[],Dark:[]};c.themes.forEach((function(e){p[e.isDark?\"Dark\":\"Bright\"].push({caption:e.caption,value:e.theme})}));var u={Main:{Mode:{path:\"mode\",type:\"select\",items:l.modes.map((function(e){return{caption:e.caption,value:e.mode}}))},Theme:{path:\"theme\",type:\"select\",items:p},Keybinding:{type:\"buttonBar\",path:\"keyboardHandler\",items:[{caption:\"Ace\",value:null},{caption:\"Vim\",value:\"ace/keyboard/vim\"},{caption:\"Emacs\",value:\"ace/keyboard/emacs\"},{caption:\"Sublime\",value:\"ace/keyboard/sublime\"},{caption:\"VSCode\",value:\"ace/keyboard/vscode\"}]},\"Font Size\":{path:\"fontSize\",type:\"number\",defaultValue:12,defaults:[{caption:\"12px\",value:12},{caption:\"24px\",value:24}]},\"Soft Wrap\":{type:\"buttonBar\",path:\"wrap\",items:[{caption:\"Off\",value:\"off\"},{caption:\"View\",value:\"free\"},{caption:\"margin\",value:\"printMargin\"},{caption:\"40\",value:\"40\"}]},\"Cursor Style\":{path:\"cursorStyle\",items:[{caption:\"Ace\",value:\"ace\"},{caption:\"Slim\",value:\"slim\"},{caption:\"Smooth\",value:\"smooth\"},{caption:\"Smooth And Slim\",value:\"smooth slim\"},{caption:\"Wide\",value:\"wide\"}]},Folding:{path:\"foldStyle\",items:[{caption:\"Manual\",value:\"manual\"},{caption:\"Mark begin\",value:\"markbegin\"},{caption:\"Mark begin and end\",value:\"markbeginend\"}]},\"Soft Tabs\":[{path:\"useSoftTabs\"},{ariaLabel:\"Tab Size\",path:\"tabSize\",type:\"number\",values:[2,3,4,8,16]}],Overscroll:{type:\"buttonBar\",path:\"scrollPastEnd\",items:[{caption:\"None\",value:0},{caption:\"Half\",value:.5},{caption:\"Full\",value:1}]}},More:{\"Atomic soft tabs\":{path:\"navigateWithinSoftTabs\"},\"Enable Behaviours\":{path:\"behavioursEnabled\"},\"Wrap with quotes\":{path:\"wrapBehavioursEnabled\"},\"Enable Auto Indent\":{path:\"enableAutoIndent\"},\"Full Line Selection\":{type:\"checkbox\",values:\"text|line\",path:\"selectionStyle\"},\"Highlight Active Line\":{path:\"highlightActiveLine\"},\"Show Invisibles\":{path:\"showInvisibles\"},\"Show Indent Guides\":{path:\"displayIndentGuides\"},\"Highlight Indent Guides\":{path:\"highlightIndentGuides\"},\"Persistent HScrollbar\":{path:\"hScrollBarAlwaysVisible\"},\"Persistent VScrollbar\":{path:\"vScrollBarAlwaysVisible\"},\"Animate scrolling\":{path:\"animatedScroll\"},\"Show Gutter\":{path:\"showGutter\"},\"Show Line Numbers\":{path:\"showLineNumbers\"},\"Relative Line Numbers\":{path:\"relativeLineNumbers\"},\"Fixed Gutter Width\":{path:\"fixedWidthGutter\"},\"Show Print Margin\":[{path:\"showPrintMargin\"},{ariaLabel:\"Print Margin\",type:\"number\",path:\"printMarginColumn\"}],\"Indented Soft Wrap\":{path:\"indentedSoftWrap\"},\"Highlight selected word\":{path:\"highlightSelectedWord\"},\"Fade Fold Widgets\":{path:\"fadeFoldWidgets\"},\"Use textarea for IME\":{path:\"useTextareaForIME\"},\"Merge Undo Deltas\":{path:\"mergeUndoDeltas\",items:[{caption:\"Always\",value:\"always\"},{caption:\"Never\",value:\"false\"},{caption:\"Timed\",value:\"true\"}]},\"Elastic Tabstops\":{path:\"useElasticTabstops\"},\"Incremental Search\":{path:\"useIncrementalSearch\"},\"Read-only\":{path:\"readOnly\"},\"Copy without selection\":{path:\"copyWithEmptySelection\"},\"Live Autocompletion\":{path:\"enableLiveAutocompletion\"},\"Custom scrollbar\":{path:\"customScrollbar\"},\"Use SVG gutter icons\":{path:\"useSvgGutterIcons\"},\"Annotations for folded lines\":{path:\"showFoldedAnnotations\"},\"Keyboard Accessibility Mode\":{path:\"enableKeyboardAccessibility\"},\"Gutter tooltip follows mouse\":{path:\"tooltipFollowsMouse\",defaultValue:!0}}},d=function(){function e(e,t){this.editor=e,this.container=t||document.createElement(\"div\"),this.groups=[],this.options={}}return e.prototype.add=function(e){e.Main&&n.mixin(u.Main,e.Main),e.More&&n.mixin(u.More,e.More)},e.prototype.render=function(){this.container.innerHTML=\"\",s([\"table\",{role:\"presentation\",id:\"controls\"},this.renderOptionGroup(u.Main),[\"tr\",null,[\"td\",{colspan:2},[\"table\",{role:\"presentation\",id:\"more-controls\"},this.renderOptionGroup(u.More)]]],[\"tr\",null,[\"td\",{colspan:2},\"version \"+r.version]]],this.container)},e.prototype.renderOptionGroup=function(e){return Object.keys(e).map((function(t,a){var o=e[t];return o.position||(o.position=a/1e4),o.label||(o.label=t),o})).sort((function(e,t){return e.position-t.position})).map((function(e){return this.renderOption(e.label,e)}),this)},e.prototype.renderOptionControl=function(e,t){var a,o=this;if(Array.isArray(t))return t.map((function(t){return o.renderOptionControl(e,t)}));var n=o.getOption(t);if(t.values&&\"checkbox\"!=t.type&&(\"string\"==typeof t.values&&(t.values=t.values.split(\"|\")),t.items=t.values.map((function(e){return{value:e,name:e}}))),\"buttonBar\"==t.type)a=[\"div\",{role:\"group\",\"aria-labelledby\":t.path+\"-label\"},t.items.map((function(e){return[\"button\",{value:e.value,ace_selected_button:n==e.value,\"aria-pressed\":n==e.value,onclick:function(){o.setOption(t,e.value);for(var a=this.parentNode.querySelectorAll(\"[ace_selected_button]\"),n=0;n<a.length;n++)a[n].removeAttribute(\"ace_selected_button\"),a[n].setAttribute(\"aria-pressed\",!1);this.setAttribute(\"ace_selected_button\",!0),this.setAttribute(\"aria-pressed\",!0)}},e.desc||e.caption||e.name]}))];else if(\"number\"==t.type)a=[\"input\",{type:\"number\",value:n||t.defaultValue,style:\"width:3em\",oninput:function(){o.setOption(t,parseInt(this.value))}}],t.ariaLabel?a[1][\"aria-label\"]=t.ariaLabel:a[1].id=e,t.defaults&&(a=[a,t.defaults.map((function(e){return[\"button\",{onclick:function(){var t=this.parentNode.firstChild;t.value=e.value,t.oninput()}},e.caption]}))]);else if(t.items){var r=function(e){return e.map((function(e){return[\"option\",{value:e.value||e.name},e.desc||e.caption||e.name]}))},i=Array.isArray(t.items)?r(t.items):Object.keys(t.items).map((function(e){return[\"optgroup\",{label:e},r(t.items[e])]}));a=[\"select\",{id:e,value:n,onchange:function(){o.setOption(t,this.value)}},i]}else\"string\"==typeof t.values&&(t.values=t.values.split(\"|\")),t.values&&(n=n==t.values[1]),a=[\"input\",{type:\"checkbox\",id:e,checked:n||null,onchange:function(){var e=this.checked;t.values&&(e=t.values[e?1:0]),o.setOption(t,e)}}],\"checkedNumber\"==t.type&&(a=[a,[]]);return a},e.prototype.renderOption=function(e,t){if(!t.path||t.onchange||this.editor.$options[t.path]){var a=Array.isArray(t)?t[0].path:t.path;this.options[a]=t;var o=\"-\"+a;return[\"tr\",{class:\"ace_optionsMenuEntry\"},[\"td\",[\"label\",{for:o,id:a+\"-label\"},e]],[\"td\",this.renderOptionControl(o,t)]]}},e.prototype.setOption=function(e,t){\"string\"==typeof e&&(e=this.options[e]),\"false\"==t&&(t=!1),\"true\"==t&&(t=!0),\"null\"==t&&(t=null),\"undefined\"==t&&(t=void 0),\"string\"==typeof t&&parseFloat(t).toString()==t&&(t=parseFloat(t)),e.onchange?e.onchange(t):e.path&&this.editor.setOption(e.path,t),this._signal(\"setOption\",{name:e.path,value:t})},e.prototype.getOption=function(e){return e.getValue?e.getValue():this.editor.getOption(e.path)},e}();n.implement(d.prototype,i),t.OptionPanel=d})),ace.require([\"ace/ext/options\"],(function(e){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=e)}));","name":"c25d5584f87d8bf2a5461f30703cf589.js","input":"ace.define(\"ace/ext/menu_tools/settings_menu.css\", [\"require\", \"exports\", \"module\"], function (require, exports, module) {\n  module.exports = \"#ace_settingsmenu, #kbshortcutmenu {\\n    background-color: #F7F7F7;\\n    color: black;\\n    box-shadow: -5px 4px 5px rgba(126, 126, 126, 0.55);\\n    padding: 1em 0.5em 2em 1em;\\n    overflow: auto;\\n    position: absolute;\\n    margin: 0;\\n    bottom: 0;\\n    right: 0;\\n    top: 0;\\n    z-index: 9991;\\n    cursor: default;\\n}\\n\\n.ace_dark #ace_settingsmenu, .ace_dark #kbshortcutmenu {\\n    box-shadow: -20px 10px 25px rgba(126, 126, 126, 0.25);\\n    background-color: rgba(255, 255, 255, 0.6);\\n    color: black;\\n}\\n\\n.ace_optionsMenuEntry:hover {\\n    background-color: rgba(100, 100, 100, 0.1);\\n    transition: all 0.3s\\n}\\n\\n.ace_closeButton {\\n    background: rgba(245, 146, 146, 0.5);\\n    border: 1px solid #F48A8A;\\n    border-radius: 50%;\\n    padding: 7px;\\n    position: absolute;\\n    right: -8px;\\n    top: -8px;\\n    z-index: 100000;\\n}\\n.ace_closeButton{\\n    background: rgba(245, 146, 146, 0.9);\\n}\\n.ace_optionsMenuKey {\\n    color: darkslateblue;\\n    font-weight: bold;\\n}\\n.ace_optionsMenuCommand {\\n    color: darkcyan;\\n    font-weight: normal;\\n}\\n.ace_optionsMenuEntry input, .ace_optionsMenuEntry button {\\n    vertical-align: middle;\\n}\\n\\n.ace_optionsMenuEntry button[ace_selected_button=true] {\\n    background: #e7e7e7;\\n    box-shadow: 1px 0px 2px 0px #adadad inset;\\n    border-color: #adadad;\\n}\\n.ace_optionsMenuEntry button {\\n    background: white;\\n    border: 1px solid lightgray;\\n    margin: 0px;\\n}\\n.ace_optionsMenuEntry button:hover{\\n    background: #f0f0f0;\\n}\";\n});\nace.define(\"ace/ext/menu_tools/overlay_page\", [\"require\", \"exports\", \"module\", \"ace/lib/dom\", \"ace/ext/menu_tools/settings_menu.css\"], function (require, exports, module) {\n  /*jslint indent: 4, maxerr: 50, white: true, browser: true, vars: true*/\n  'use strict';\n\n  var dom = require(\"../../lib/dom\");\n  var cssText = require(\"./settings_menu.css\");\n  dom.importCssString(cssText, \"settings_menu.css\", false);\n  module.exports.overlayPage = function overlayPage(editor, contentElement, callback) {\n    var closer = document.createElement('div');\n    var ignoreFocusOut = false;\n    function documentEscListener(e) {\n      if (e.keyCode === 27) {\n        close();\n      }\n    }\n    function close() {\n      if (!closer) return;\n      document.removeEventListener('keydown', documentEscListener);\n      closer.parentNode.removeChild(closer);\n      if (editor) {\n        editor.focus();\n      }\n      closer = null;\n      callback && callback();\n    }\n    function setIgnoreFocusOut(ignore) {\n      ignoreFocusOut = ignore;\n      if (ignore) {\n        closer.style.pointerEvents = \"none\";\n        contentElement.style.pointerEvents = \"auto\";\n      }\n    }\n    closer.style.cssText = 'margin: 0; padding: 0; ' + 'position: fixed; top:0; bottom:0; left:0; right:0;' + 'z-index: 9990; ' + (editor ? 'background-color: rgba(0, 0, 0, 0.3);' : '');\n    closer.addEventListener('click', function (e) {\n      if (!ignoreFocusOut) {\n        close();\n      }\n    });\n    document.addEventListener('keydown', documentEscListener);\n    contentElement.addEventListener('click', function (e) {\n      e.stopPropagation();\n    });\n    closer.appendChild(contentElement);\n    document.body.appendChild(closer);\n    if (editor) {\n      editor.blur();\n    }\n    return {\n      close: close,\n      setIgnoreFocusOut: setIgnoreFocusOut\n    };\n  };\n});\nace.define(\"ace/ext/modelist\", [\"require\", \"exports\", \"module\"], function (require, exports, module) {\n  \"use strict\";\n\n  var modes = [];\n  function getModeForPath(path) {\n    var mode = modesByName.text;\n    var fileName = path.split(/[\\/\\\\]/).pop();\n    for (var i = 0; i < modes.length; i++) {\n      if (modes[i].supportsFile(fileName)) {\n        mode = modes[i];\n        break;\n      }\n    }\n    return mode;\n  }\n  var Mode = /** @class */function () {\n    function Mode(name, caption, extensions) {\n      this.name = name;\n      this.caption = caption;\n      this.mode = \"ace/mode/\" + name;\n      this.extensions = extensions;\n      var re;\n      if (/\\^/.test(extensions)) {\n        re = extensions.replace(/\\|(\\^)?/g, function (a, b) {\n          return \"$|\" + (b ? \"^\" : \"^.*\\\\.\");\n        }) + \"$\";\n      } else {\n        re = \"^.*\\\\.(\" + extensions + \")$\";\n      }\n      this.extRe = new RegExp(re, \"gi\");\n    }\n    Mode.prototype.supportsFile = function (filename) {\n      return filename.match(this.extRe);\n    };\n    return Mode;\n  }();\n  var supportedModes = {\n    ABAP: [\"abap\"],\n    ABC: [\"abc\"],\n    ActionScript: [\"as\"],\n    ADA: [\"ada|adb\"],\n    Alda: [\"alda\"],\n    Apache_Conf: [\"^htaccess|^htgroups|^htpasswd|^conf|htaccess|htgroups|htpasswd\"],\n    Apex: [\"apex|cls|trigger|tgr\"],\n    AQL: [\"aql\"],\n    AsciiDoc: [\"asciidoc|adoc\"],\n    ASL: [\"dsl|asl|asl.json\"],\n    Assembly_ARM32: [\"s\"],\n    Assembly_x86: [\"asm|a\"],\n    Astro: [\"astro\"],\n    AutoHotKey: [\"ahk\"],\n    BatchFile: [\"bat|cmd\"],\n    BibTeX: [\"bib\"],\n    C_Cpp: [\"cpp|c|cc|cxx|h|hh|hpp|ino\"],\n    C9Search: [\"c9search_results\"],\n    Cirru: [\"cirru|cr\"],\n    Clojure: [\"clj|cljs\"],\n    Cobol: [\"CBL|COB\"],\n    coffee: [\"coffee|cf|cson|^Cakefile\"],\n    ColdFusion: [\"cfm|cfc\"],\n    Crystal: [\"cr\"],\n    CSharp: [\"cs\"],\n    Csound_Document: [\"csd\"],\n    Csound_Orchestra: [\"orc\"],\n    Csound_Score: [\"sco\"],\n    CSS: [\"css\"],\n    Curly: [\"curly\"],\n    Cuttlefish: [\"conf\"],\n    D: [\"d|di\"],\n    Dart: [\"dart\"],\n    Diff: [\"diff|patch\"],\n    Django: [\"djt|html.djt|dj.html|djhtml\"],\n    Dockerfile: [\"^Dockerfile\"],\n    Dot: [\"dot\"],\n    Drools: [\"drl\"],\n    Edifact: [\"edi\"],\n    Eiffel: [\"e|ge\"],\n    EJS: [\"ejs\"],\n    Elixir: [\"ex|exs\"],\n    Elm: [\"elm\"],\n    Erlang: [\"erl|hrl\"],\n    Flix: [\"flix\"],\n    Forth: [\"frt|fs|ldr|fth|4th\"],\n    Fortran: [\"f|f90\"],\n    FSharp: [\"fsi|fs|ml|mli|fsx|fsscript\"],\n    FSL: [\"fsl\"],\n    FTL: [\"ftl\"],\n    Gcode: [\"gcode\"],\n    Gherkin: [\"feature\"],\n    Gitignore: [\"^.gitignore\"],\n    Glsl: [\"glsl|frag|vert\"],\n    Gobstones: [\"gbs\"],\n    golang: [\"go\"],\n    GraphQLSchema: [\"gql\"],\n    Groovy: [\"groovy\"],\n    HAML: [\"haml\"],\n    Handlebars: [\"hbs|handlebars|tpl|mustache\"],\n    Haskell: [\"hs\"],\n    Haskell_Cabal: [\"cabal\"],\n    haXe: [\"hx\"],\n    Hjson: [\"hjson\"],\n    HTML: [\"html|htm|xhtml|we|wpy\"],\n    HTML_Elixir: [\"eex|html.eex\"],\n    HTML_Ruby: [\"erb|rhtml|html.erb\"],\n    INI: [\"ini|conf|cfg|prefs\"],\n    Io: [\"io\"],\n    Ion: [\"ion\"],\n    Jack: [\"jack\"],\n    Jade: [\"jade|pug\"],\n    Java: [\"java\"],\n    JavaScript: [\"js|jsm|cjs|mjs\"],\n    JEXL: [\"jexl\"],\n    JSON: [\"json\"],\n    JSON5: [\"json5\"],\n    JSONiq: [\"jq\"],\n    JSP: [\"jsp\"],\n    JSSM: [\"jssm|jssm_state\"],\n    JSX: [\"jsx\"],\n    Julia: [\"jl\"],\n    Kotlin: [\"kt|kts\"],\n    LaTeX: [\"tex|latex|ltx|bib\"],\n    Latte: [\"latte\"],\n    LESS: [\"less\"],\n    Liquid: [\"liquid\"],\n    Lisp: [\"lisp\"],\n    LiveScript: [\"ls\"],\n    Log: [\"log\"],\n    LogiQL: [\"logic|lql\"],\n    Logtalk: [\"lgt\"],\n    LSL: [\"lsl\"],\n    Lua: [\"lua\"],\n    LuaPage: [\"lp\"],\n    Lucene: [\"lucene\"],\n    Makefile: [\"^Makefile|^GNUmakefile|^makefile|^OCamlMakefile|make\"],\n    Markdown: [\"md|markdown\"],\n    Mask: [\"mask\"],\n    MATLAB: [\"matlab\"],\n    Maze: [\"mz\"],\n    MediaWiki: [\"wiki|mediawiki\"],\n    MEL: [\"mel\"],\n    MIPS: [\"s|asm\"],\n    MIXAL: [\"mixal\"],\n    MUSHCode: [\"mc|mush\"],\n    MySQL: [\"mysql\"],\n    Nasal: [\"nas\"],\n    Nginx: [\"nginx|conf\"],\n    Nim: [\"nim\"],\n    Nix: [\"nix\"],\n    NSIS: [\"nsi|nsh\"],\n    Nunjucks: [\"nunjucks|nunjs|nj|njk\"],\n    ObjectiveC: [\"m|mm\"],\n    OCaml: [\"ml|mli\"],\n    Odin: [\"odin\"],\n    PartiQL: [\"partiql|pql\"],\n    Pascal: [\"pas|p\"],\n    Perl: [\"pl|pm\"],\n    pgSQL: [\"pgsql\"],\n    PHP: [\"php|inc|phtml|shtml|php3|php4|php5|phps|phpt|aw|ctp|module\"],\n    PHP_Laravel_blade: [\"blade.php\"],\n    Pig: [\"pig\"],\n    PLSQL: [\"plsql\"],\n    Powershell: [\"ps1\"],\n    Praat: [\"praat|praatscript|psc|proc\"],\n    Prisma: [\"prisma\"],\n    Prolog: [\"plg|prolog\"],\n    Properties: [\"properties\"],\n    Protobuf: [\"proto\"],\n    PRQL: [\"prql\"],\n    Puppet: [\"epp|pp\"],\n    Python: [\"py\"],\n    QML: [\"qml\"],\n    R: [\"r\"],\n    Raku: [\"raku|rakumod|rakutest|p6|pl6|pm6\"],\n    Razor: [\"cshtml|asp\"],\n    RDoc: [\"Rd\"],\n    Red: [\"red|reds\"],\n    RHTML: [\"Rhtml\"],\n    Robot: [\"robot|resource\"],\n    RST: [\"rst\"],\n    Ruby: [\"rb|ru|gemspec|rake|^Guardfile|^Rakefile|^Gemfile\"],\n    Rust: [\"rs\"],\n    SaC: [\"sac\"],\n    SASS: [\"sass\"],\n    SCAD: [\"scad\"],\n    Scala: [\"scala|sbt\"],\n    Scheme: [\"scm|sm|rkt|oak|scheme\"],\n    Scrypt: [\"scrypt\"],\n    SCSS: [\"scss\"],\n    SH: [\"sh|bash|^.bashrc\"],\n    SJS: [\"sjs\"],\n    Slim: [\"slim|skim\"],\n    Smarty: [\"smarty|tpl\"],\n    Smithy: [\"smithy\"],\n    snippets: [\"snippets\"],\n    Soy_Template: [\"soy\"],\n    Space: [\"space\"],\n    SPARQL: [\"rq\"],\n    SQL: [\"sql\"],\n    SQLServer: [\"sqlserver\"],\n    Stylus: [\"styl|stylus\"],\n    SVG: [\"svg\"],\n    Swift: [\"swift\"],\n    Tcl: [\"tcl\"],\n    Terraform: [\"tf\", \"tfvars\", \"terragrunt\"],\n    Tex: [\"tex\"],\n    Text: [\"txt\"],\n    Textile: [\"textile\"],\n    Toml: [\"toml\"],\n    TSX: [\"tsx\"],\n    Turtle: [\"ttl\"],\n    Twig: [\"twig|swig\"],\n    Typescript: [\"ts|mts|cts|typescript|str\"],\n    Vala: [\"vala\"],\n    VBScript: [\"vbs|vb\"],\n    Velocity: [\"vm\"],\n    Verilog: [\"v|vh|sv|svh\"],\n    VHDL: [\"vhd|vhdl\"],\n    Visualforce: [\"vfp|component|page\"],\n    Vue: [\"vue\"],\n    Wollok: [\"wlk|wpgm|wtest\"],\n    XML: [\"xml|rdf|rss|wsdl|xslt|atom|mathml|mml|xul|xbl|xaml\"],\n    XQuery: [\"xq\"],\n    YAML: [\"yaml|yml\"],\n    Zeek: [\"zeek|bro\"],\n    Zig: [\"zig\"]\n  };\n  var nameOverrides = {\n    ObjectiveC: \"Objective-C\",\n    CSharp: \"C#\",\n    golang: \"Go\",\n    C_Cpp: \"C and C++\",\n    Csound_Document: \"Csound Document\",\n    Csound_Orchestra: \"Csound\",\n    Csound_Score: \"Csound Score\",\n    coffee: \"CoffeeScript\",\n    HTML_Ruby: \"HTML (Ruby)\",\n    HTML_Elixir: \"HTML (Elixir)\",\n    FTL: \"FreeMarker\",\n    PHP_Laravel_blade: \"PHP (Blade Template)\",\n    Perl6: \"Perl 6\",\n    AutoHotKey: \"AutoHotkey / AutoIt\"\n  };\n  var modesByName = {};\n  for (var name in supportedModes) {\n    var data = supportedModes[name];\n    var displayName = (nameOverrides[name] || name).replace(/_/g, \" \");\n    var filename = name.toLowerCase();\n    var mode = new Mode(filename, displayName, data[0]);\n    modesByName[filename] = mode;\n    modes.push(mode);\n  }\n  module.exports = {\n    getModeForPath: getModeForPath,\n    modes: modes,\n    modesByName: modesByName\n  };\n});\nace.define(\"ace/ext/themelist\", [\"require\", \"exports\", \"module\"], function (require, exports, module) {\n  /**\n  * Generates a list of themes available when ace was built.\n  * @fileOverview Generates a list of themes available when ace was built.\n  * @author <a href=\"mailto:matthewkastor@gmail.com\">\n  *  Matthew Christopher Kastor-Inare III </a><br />\n  *  ☭ Hial Atropa!! ☭\n  */\n  \"use strict\";\n\n  var themeData = [[\"Chrome\"], [\"Clouds\"], [\"Crimson Editor\"], [\"Dawn\"], [\"Dreamweaver\"], [\"Eclipse\"], [\"GitHub\"], [\"IPlastic\"], [\"Solarized Light\"], [\"TextMate\"], [\"Tomorrow\"], [\"XCode\"], [\"Kuroir\"], [\"KatzenMilch\"], [\"SQL Server\", \"sqlserver\", \"light\"], [\"CloudEditor\", \"cloud_editor\", \"light\"], [\"Ambiance\", \"ambiance\", \"dark\"], [\"Chaos\", \"chaos\", \"dark\"], [\"Clouds Midnight\", \"clouds_midnight\", \"dark\"], [\"Dracula\", \"\", \"dark\"], [\"Cobalt\", \"cobalt\", \"dark\"], [\"Gruvbox\", \"gruvbox\", \"dark\"], [\"Green on Black\", \"gob\", \"dark\"], [\"idle Fingers\", \"idle_fingers\", \"dark\"], [\"krTheme\", \"kr_theme\", \"dark\"], [\"Merbivore\", \"merbivore\", \"dark\"], [\"Merbivore Soft\", \"merbivore_soft\", \"dark\"], [\"Mono Industrial\", \"mono_industrial\", \"dark\"], [\"Monokai\", \"monokai\", \"dark\"], [\"Nord Dark\", \"nord_dark\", \"dark\"], [\"One Dark\", \"one_dark\", \"dark\"], [\"Pastel on dark\", \"pastel_on_dark\", \"dark\"], [\"Solarized Dark\", \"solarized_dark\", \"dark\"], [\"Terminal\", \"terminal\", \"dark\"], [\"Tomorrow Night\", \"tomorrow_night\", \"dark\"], [\"Tomorrow Night Blue\", \"tomorrow_night_blue\", \"dark\"], [\"Tomorrow Night Bright\", \"tomorrow_night_bright\", \"dark\"], [\"Tomorrow Night 80s\", \"tomorrow_night_eighties\", \"dark\"], [\"Twilight\", \"twilight\", \"dark\"], [\"Vibrant Ink\", \"vibrant_ink\", \"dark\"], [\"GitHub Dark\", \"github_dark\", \"dark\"], [\"CloudEditor Dark\", \"cloud_editor_dark\", \"dark\"]];\n  exports.themesByName = {};\n  exports.themes = themeData.map(function (data) {\n    var name = data[1] || data[0].replace(/ /g, \"_\").toLowerCase();\n    var theme = {\n      caption: data[0],\n      theme: \"ace/theme/\" + name,\n      isDark: data[2] == \"dark\",\n      name: name\n    };\n    exports.themesByName[name] = theme;\n    return theme;\n  });\n});\nace.define(\"ace/ext/options\", [\"require\", \"exports\", \"module\", \"ace/ext/menu_tools/overlay_page\", \"ace/lib/dom\", \"ace/lib/oop\", \"ace/config\", \"ace/lib/event_emitter\", \"ace/ext/modelist\", \"ace/ext/themelist\"], function (require, exports, module) {\n  \"use strict\";\n\n  require(\"./menu_tools/overlay_page\");\n  var dom = require(\"../lib/dom\");\n  var oop = require(\"../lib/oop\");\n  var config = require(\"../config\");\n  var EventEmitter = require(\"../lib/event_emitter\").EventEmitter;\n  var buildDom = dom.buildDom;\n  var modelist = require(\"./modelist\");\n  var themelist = require(\"./themelist\");\n  var themes = {\n    Bright: [],\n    Dark: []\n  };\n  themelist.themes.forEach(function (x) {\n    themes[x.isDark ? \"Dark\" : \"Bright\"].push({\n      caption: x.caption,\n      value: x.theme\n    });\n  });\n  var modes = modelist.modes.map(function (x) {\n    return {\n      caption: x.caption,\n      value: x.mode\n    };\n  });\n  var optionGroups = {\n    Main: {\n      Mode: {\n        path: \"mode\",\n        type: \"select\",\n        items: modes\n      },\n      Theme: {\n        path: \"theme\",\n        type: \"select\",\n        items: themes\n      },\n      \"Keybinding\": {\n        type: \"buttonBar\",\n        path: \"keyboardHandler\",\n        items: [{\n          caption: \"Ace\",\n          value: null\n        }, {\n          caption: \"Vim\",\n          value: \"ace/keyboard/vim\"\n        }, {\n          caption: \"Emacs\",\n          value: \"ace/keyboard/emacs\"\n        }, {\n          caption: \"Sublime\",\n          value: \"ace/keyboard/sublime\"\n        }, {\n          caption: \"VSCode\",\n          value: \"ace/keyboard/vscode\"\n        }]\n      },\n      \"Font Size\": {\n        path: \"fontSize\",\n        type: \"number\",\n        defaultValue: 12,\n        defaults: [{\n          caption: \"12px\",\n          value: 12\n        }, {\n          caption: \"24px\",\n          value: 24\n        }]\n      },\n      \"Soft Wrap\": {\n        type: \"buttonBar\",\n        path: \"wrap\",\n        items: [{\n          caption: \"Off\",\n          value: \"off\"\n        }, {\n          caption: \"View\",\n          value: \"free\"\n        }, {\n          caption: \"margin\",\n          value: \"printMargin\"\n        }, {\n          caption: \"40\",\n          value: \"40\"\n        }]\n      },\n      \"Cursor Style\": {\n        path: \"cursorStyle\",\n        items: [{\n          caption: \"Ace\",\n          value: \"ace\"\n        }, {\n          caption: \"Slim\",\n          value: \"slim\"\n        }, {\n          caption: \"Smooth\",\n          value: \"smooth\"\n        }, {\n          caption: \"Smooth And Slim\",\n          value: \"smooth slim\"\n        }, {\n          caption: \"Wide\",\n          value: \"wide\"\n        }]\n      },\n      \"Folding\": {\n        path: \"foldStyle\",\n        items: [{\n          caption: \"Manual\",\n          value: \"manual\"\n        }, {\n          caption: \"Mark begin\",\n          value: \"markbegin\"\n        }, {\n          caption: \"Mark begin and end\",\n          value: \"markbeginend\"\n        }]\n      },\n      \"Soft Tabs\": [{\n        path: \"useSoftTabs\"\n      }, {\n        ariaLabel: \"Tab Size\",\n        path: \"tabSize\",\n        type: \"number\",\n        values: [2, 3, 4, 8, 16]\n      }],\n      \"Overscroll\": {\n        type: \"buttonBar\",\n        path: \"scrollPastEnd\",\n        items: [{\n          caption: \"None\",\n          value: 0\n        }, {\n          caption: \"Half\",\n          value: 0.5\n        }, {\n          caption: \"Full\",\n          value: 1\n        }]\n      }\n    },\n    More: {\n      \"Atomic soft tabs\": {\n        path: \"navigateWithinSoftTabs\"\n      },\n      \"Enable Behaviours\": {\n        path: \"behavioursEnabled\"\n      },\n      \"Wrap with quotes\": {\n        path: \"wrapBehavioursEnabled\"\n      },\n      \"Enable Auto Indent\": {\n        path: \"enableAutoIndent\"\n      },\n      \"Full Line Selection\": {\n        type: \"checkbox\",\n        values: \"text|line\",\n        path: \"selectionStyle\"\n      },\n      \"Highlight Active Line\": {\n        path: \"highlightActiveLine\"\n      },\n      \"Show Invisibles\": {\n        path: \"showInvisibles\"\n      },\n      \"Show Indent Guides\": {\n        path: \"displayIndentGuides\"\n      },\n      \"Highlight Indent Guides\": {\n        path: \"highlightIndentGuides\"\n      },\n      \"Persistent HScrollbar\": {\n        path: \"hScrollBarAlwaysVisible\"\n      },\n      \"Persistent VScrollbar\": {\n        path: \"vScrollBarAlwaysVisible\"\n      },\n      \"Animate scrolling\": {\n        path: \"animatedScroll\"\n      },\n      \"Show Gutter\": {\n        path: \"showGutter\"\n      },\n      \"Show Line Numbers\": {\n        path: \"showLineNumbers\"\n      },\n      \"Relative Line Numbers\": {\n        path: \"relativeLineNumbers\"\n      },\n      \"Fixed Gutter Width\": {\n        path: \"fixedWidthGutter\"\n      },\n      \"Show Print Margin\": [{\n        path: \"showPrintMargin\"\n      }, {\n        ariaLabel: \"Print Margin\",\n        type: \"number\",\n        path: \"printMarginColumn\"\n      }],\n      \"Indented Soft Wrap\": {\n        path: \"indentedSoftWrap\"\n      },\n      \"Highlight selected word\": {\n        path: \"highlightSelectedWord\"\n      },\n      \"Fade Fold Widgets\": {\n        path: \"fadeFoldWidgets\"\n      },\n      \"Use textarea for IME\": {\n        path: \"useTextareaForIME\"\n      },\n      \"Merge Undo Deltas\": {\n        path: \"mergeUndoDeltas\",\n        items: [{\n          caption: \"Always\",\n          value: \"always\"\n        }, {\n          caption: \"Never\",\n          value: \"false\"\n        }, {\n          caption: \"Timed\",\n          value: \"true\"\n        }]\n      },\n      \"Elastic Tabstops\": {\n        path: \"useElasticTabstops\"\n      },\n      \"Incremental Search\": {\n        path: \"useIncrementalSearch\"\n      },\n      \"Read-only\": {\n        path: \"readOnly\"\n      },\n      \"Copy without selection\": {\n        path: \"copyWithEmptySelection\"\n      },\n      \"Live Autocompletion\": {\n        path: \"enableLiveAutocompletion\"\n      },\n      \"Custom scrollbar\": {\n        path: \"customScrollbar\"\n      },\n      \"Use SVG gutter icons\": {\n        path: \"useSvgGutterIcons\"\n      },\n      \"Annotations for folded lines\": {\n        path: \"showFoldedAnnotations\"\n      },\n      \"Keyboard Accessibility Mode\": {\n        path: \"enableKeyboardAccessibility\"\n      },\n      \"Gutter tooltip follows mouse\": {\n        path: \"tooltipFollowsMouse\",\n        defaultValue: true\n      }\n    }\n  };\n  var OptionPanel = /** @class */function () {\n    function OptionPanel(editor, element) {\n      this.editor = editor;\n      this.container = element || document.createElement(\"div\");\n      this.groups = [];\n      this.options = {};\n    }\n    OptionPanel.prototype.add = function (config) {\n      if (config.Main) oop.mixin(optionGroups.Main, config.Main);\n      if (config.More) oop.mixin(optionGroups.More, config.More);\n    };\n    OptionPanel.prototype.render = function () {\n      this.container.innerHTML = \"\";\n      buildDom([\"table\", {\n        role: \"presentation\",\n        id: \"controls\"\n      }, this.renderOptionGroup(optionGroups.Main), [\"tr\", null, [\"td\", {\n        colspan: 2\n      }, [\"table\", {\n        role: \"presentation\",\n        id: \"more-controls\"\n      }, this.renderOptionGroup(optionGroups.More)]]], [\"tr\", null, [\"td\", {\n        colspan: 2\n      }, \"version \" + config.version]]], this.container);\n    };\n    OptionPanel.prototype.renderOptionGroup = function (group) {\n      return Object.keys(group).map(function (key, i) {\n        var item = group[key];\n        if (!item.position) item.position = i / 10000;\n        if (!item.label) item.label = key;\n        return item;\n      }).sort(function (a, b) {\n        return a.position - b.position;\n      }).map(function (item) {\n        return this.renderOption(item.label, item);\n      }, this);\n    };\n    OptionPanel.prototype.renderOptionControl = function (key, option) {\n      var self = this;\n      if (Array.isArray(option)) {\n        return option.map(function (x) {\n          return self.renderOptionControl(key, x);\n        });\n      }\n      var control;\n      var value = self.getOption(option);\n      if (option.values && option.type != \"checkbox\") {\n        if (typeof option.values == \"string\") option.values = option.values.split(\"|\");\n        option.items = option.values.map(function (v) {\n          return {\n            value: v,\n            name: v\n          };\n        });\n      }\n      if (option.type == \"buttonBar\") {\n        control = [\"div\", {\n          role: \"group\",\n          \"aria-labelledby\": option.path + \"-label\"\n        }, option.items.map(function (item) {\n          return [\"button\", {\n            value: item.value,\n            ace_selected_button: value == item.value,\n            'aria-pressed': value == item.value,\n            onclick: function () {\n              self.setOption(option, item.value);\n              var nodes = this.parentNode.querySelectorAll(\"[ace_selected_button]\");\n              for (var i = 0; i < nodes.length; i++) {\n                nodes[i].removeAttribute(\"ace_selected_button\");\n                nodes[i].setAttribute(\"aria-pressed\", false);\n              }\n              this.setAttribute(\"ace_selected_button\", true);\n              this.setAttribute(\"aria-pressed\", true);\n            }\n          }, item.desc || item.caption || item.name];\n        })];\n      } else if (option.type == \"number\") {\n        control = [\"input\", {\n          type: \"number\",\n          value: value || option.defaultValue,\n          style: \"width:3em\",\n          oninput: function () {\n            self.setOption(option, parseInt(this.value));\n          }\n        }];\n        if (option.ariaLabel) {\n          control[1][\"aria-label\"] = option.ariaLabel;\n        } else {\n          control[1].id = key;\n        }\n        if (option.defaults) {\n          control = [control, option.defaults.map(function (item) {\n            return [\"button\", {\n              onclick: function () {\n                var input = this.parentNode.firstChild;\n                input.value = item.value;\n                input.oninput();\n              }\n            }, item.caption];\n          })];\n        }\n      } else if (option.items) {\n        var buildItems = function (items) {\n          return items.map(function (item) {\n            return [\"option\", {\n              value: item.value || item.name\n            }, item.desc || item.caption || item.name];\n          });\n        };\n        var items = Array.isArray(option.items) ? buildItems(option.items) : Object.keys(option.items).map(function (key) {\n          return [\"optgroup\", {\n            \"label\": key\n          }, buildItems(option.items[key])];\n        });\n        control = [\"select\", {\n          id: key,\n          value: value,\n          onchange: function () {\n            self.setOption(option, this.value);\n          }\n        }, items];\n      } else {\n        if (typeof option.values == \"string\") option.values = option.values.split(\"|\");\n        if (option.values) value = value == option.values[1];\n        control = [\"input\", {\n          type: \"checkbox\",\n          id: key,\n          checked: value || null,\n          onchange: function () {\n            var value = this.checked;\n            if (option.values) value = option.values[value ? 1 : 0];\n            self.setOption(option, value);\n          }\n        }];\n        if (option.type == \"checkedNumber\") {\n          control = [control, []];\n        }\n      }\n      return control;\n    };\n    OptionPanel.prototype.renderOption = function (key, option) {\n      if (option.path && !option.onchange && !this.editor.$options[option.path]) return;\n      var path = Array.isArray(option) ? option[0].path : option.path;\n      this.options[path] = option;\n      var safeKey = \"-\" + path;\n      var safeId = path + \"-label\";\n      var control = this.renderOptionControl(safeKey, option);\n      return [\"tr\", {\n        class: \"ace_optionsMenuEntry\"\n      }, [\"td\", [\"label\", {\n        for: safeKey,\n        id: safeId\n      }, key]], [\"td\", control]];\n    };\n    OptionPanel.prototype.setOption = function (option, value) {\n      if (typeof option == \"string\") option = this.options[option];\n      if (value == \"false\") value = false;\n      if (value == \"true\") value = true;\n      if (value == \"null\") value = null;\n      if (value == \"undefined\") value = undefined;\n      if (typeof value == \"string\" && parseFloat(value).toString() == value) value = parseFloat(value);\n      if (option.onchange) option.onchange(value);else if (option.path) this.editor.setOption(option.path, value);\n      this._signal(\"setOption\", {\n        name: option.path,\n        value: value\n      });\n    };\n    OptionPanel.prototype.getOption = function (option) {\n      if (option.getValue) return option.getValue();\n      return this.editor.getOption(option.path);\n    };\n    return OptionPanel;\n  }();\n  oop.implement(OptionPanel.prototype, EventEmitter);\n  exports.OptionPanel = OptionPanel;\n});\n(function () {\n  ace.require([\"ace/ext/options\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}