{"code":"ace.define(\"ace/mode/css_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text_highlight_rules\"],(function(e,t,o){\"use strict\";var r=e(\"../lib/oop\"),n=(e(\"../lib/lang\"),e(\"./text_highlight_rules\").TextHighlightRules),i=t.supportType=\"align-content|align-items|align-self|all|animation|animation-delay|animation-direction|animation-duration|animation-fill-mode|animation-iteration-count|animation-name|animation-play-state|animation-timing-function|backface-visibility|background|background-attachment|background-blend-mode|background-clip|background-color|background-image|background-origin|background-position|background-repeat|background-size|border|border-bottom|border-bottom-color|border-bottom-left-radius|border-bottom-right-radius|border-bottom-style|border-bottom-width|border-collapse|border-color|border-image|border-image-outset|border-image-repeat|border-image-slice|border-image-source|border-image-width|border-left|border-left-color|border-left-style|border-left-width|border-radius|border-right|border-right-color|border-right-style|border-right-width|border-spacing|border-style|border-top|border-top-color|border-top-left-radius|border-top-right-radius|border-top-style|border-top-width|border-width|bottom|box-shadow|box-sizing|caption-side|clear|clip|color|column-count|column-fill|column-gap|column-rule|column-rule-color|column-rule-style|column-rule-width|column-span|column-width|columns|content|counter-increment|counter-reset|cursor|direction|display|empty-cells|filter|flex|flex-basis|flex-direction|flex-flow|flex-grow|flex-shrink|flex-wrap|float|font|font-family|font-size|font-size-adjust|font-stretch|font-style|font-variant|font-weight|hanging-punctuation|height|justify-content|left|letter-spacing|line-height|list-style|list-style-image|list-style-position|list-style-type|margin|margin-bottom|margin-left|margin-right|margin-top|max-height|max-width|max-zoom|min-height|min-width|min-zoom|nav-down|nav-index|nav-left|nav-right|nav-up|opacity|order|outline|outline-color|outline-offset|outline-style|outline-width|overflow|overflow-x|overflow-y|padding|padding-bottom|padding-left|padding-right|padding-top|page-break-after|page-break-before|page-break-inside|perspective|perspective-origin|position|quotes|resize|right|tab-size|table-layout|text-align|text-align-last|text-decoration|text-decoration-color|text-decoration-line|text-decoration-style|text-indent|text-justify|text-overflow|text-shadow|text-transform|top|transform|transform-origin|transform-style|transition|transition-delay|transition-duration|transition-property|transition-timing-function|unicode-bidi|user-select|user-zoom|vertical-align|visibility|white-space|width|word-break|word-spacing|word-wrap|z-index\",a=t.supportFunction=\"rgb|rgba|url|attr|counter|counters\",s=t.supportConstant=\"absolute|after-edge|after|all-scroll|all|alphabetic|always|antialiased|armenian|auto|avoid-column|avoid-page|avoid|balance|baseline|before-edge|before|below|bidi-override|block-line-height|block|bold|bolder|border-box|both|bottom|box|break-all|break-word|capitalize|caps-height|caption|center|central|char|circle|cjk-ideographic|clone|close-quote|col-resize|collapse|column|consider-shifts|contain|content-box|cover|crosshair|cubic-bezier|dashed|decimal-leading-zero|decimal|default|disabled|disc|disregard-shifts|distribute-all-lines|distribute-letter|distribute-space|distribute|dotted|double|e-resize|ease-in|ease-in-out|ease-out|ease|ellipsis|end|exclude-ruby|flex-end|flex-start|fill|fixed|georgian|glyphs|grid-height|groove|hand|hanging|hebrew|help|hidden|hiragana-iroha|hiragana|horizontal|icon|ideograph-alpha|ideograph-numeric|ideograph-parenthesis|ideograph-space|ideographic|inactive|include-ruby|inherit|initial|inline-block|inline-box|inline-line-height|inline-table|inline|inset|inside|inter-ideograph|inter-word|invert|italic|justify|katakana-iroha|katakana|keep-all|last|left|lighter|line-edge|line-through|line|linear|list-item|local|loose|lower-alpha|lower-greek|lower-latin|lower-roman|lowercase|lr-tb|ltr|mathematical|max-height|max-size|medium|menu|message-box|middle|move|n-resize|ne-resize|newspaper|no-change|no-close-quote|no-drop|no-open-quote|no-repeat|none|normal|not-allowed|nowrap|nw-resize|oblique|open-quote|outset|outside|overline|padding-box|page|pointer|pre-line|pre-wrap|pre|preserve-3d|progress|relative|repeat-x|repeat-y|repeat|replaced|reset-size|ridge|right|round|row-resize|rtl|s-resize|scroll|se-resize|separate|slice|small-caps|small-caption|solid|space|square|start|static|status-bar|step-end|step-start|steps|stretch|strict|sub|super|sw-resize|table-caption|table-cell|table-column-group|table-column|table-footer-group|table-header-group|table-row-group|table-row|table|tb-rl|text-after-edge|text-before-edge|text-bottom|text-size|text-top|text|thick|thin|transparent|underline|upper-alpha|upper-latin|upper-roman|uppercase|use-script|vertical-ideographic|vertical-text|visible|w-resize|wait|whitespace|z-index|zero|zoom\",l=t.supportConstantColor=\"aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|green|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|lime|limegreen|linen|magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|rebeccapurple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen\",d=t.supportConstantFonts=\"arial|century|comic|courier|cursive|fantasy|garamond|georgia|helvetica|impact|lucida|symbol|system|tahoma|times|trebuchet|utopia|verdana|webdings|sans-serif|serif|monospace\",c=t.numRe=\"\\\\-?(?:(?:[0-9]+(?:\\\\.[0-9]+)?)|(?:\\\\.[0-9]+))\",u=t.pseudoElements=\"(\\\\:+)\\\\b(after|before|first-letter|first-line|moz-selection|selection)\\\\b\",g=t.pseudoClasses=\"(:)\\\\b(active|checked|disabled|empty|enabled|first-child|first-of-type|focus|hover|indeterminate|invalid|last-child|last-of-type|link|not|nth-child|nth-last-child|nth-last-of-type|nth-of-type|only-child|only-of-type|required|root|target|valid|visited)\\\\b\",p=function(){var e=this.createKeywordMapper({\"support.function\":a,\"support.constant\":s,\"support.type\":i,\"support.constant.color\":l,\"support.constant.fonts\":d},\"text\",!0);this.$rules={start:[{include:[\"strings\",\"url\",\"comments\"]},{token:\"paren.lparen\",regex:\"\\\\{\",next:\"ruleset\"},{token:\"paren.rparen\",regex:\"\\\\}\"},{token:\"string\",regex:\"@(?!viewport)\",next:\"media\"},{token:\"keyword\",regex:\"#[a-z0-9-_]+\"},{token:\"keyword\",regex:\"%\"},{token:\"variable\",regex:\"\\\\.[a-z0-9-_]+\"},{token:\"string\",regex:\":[a-z0-9-_]+\"},{token:\"constant.numeric\",regex:c},{token:\"constant\",regex:\"[a-z0-9-_]+\"},{caseInsensitive:!0}],media:[{include:[\"strings\",\"url\",\"comments\"]},{token:\"paren.lparen\",regex:\"\\\\{\",next:\"start\"},{token:\"paren.rparen\",regex:\"\\\\}\",next:\"start\"},{token:\"string\",regex:\";\",next:\"start\"},{token:\"keyword\",regex:\"(?:media|supports|document|charset|import|namespace|media|supports|document|page|font|keyframes|viewport|counter-style|font-feature-values|swash|ornaments|annotation|stylistic|styleset|character-variant)\"}],comments:[{token:\"comment\",regex:\"\\\\/\\\\*\",push:[{token:\"comment\",regex:\"\\\\*\\\\/\",next:\"pop\"},{defaultToken:\"comment\"}]}],ruleset:[{regex:\"-(webkit|ms|moz|o)-\",token:\"text\"},{token:\"punctuation.operator\",regex:\"[:;]\"},{token:\"paren.rparen\",regex:\"\\\\}\",next:\"start\"},{include:[\"strings\",\"url\",\"comments\"]},{token:[\"constant.numeric\",\"keyword\"],regex:\"(\"+c+\")(ch|cm|deg|em|ex|fr|gd|grad|Hz|in|kHz|mm|ms|pc|pt|px|rad|rem|s|turn|vh|vmax|vmin|vm|vw|%)\"},{token:\"constant.numeric\",regex:c},{token:\"constant.numeric\",regex:\"#[a-f0-9]{6}\"},{token:\"constant.numeric\",regex:\"#[a-f0-9]{3}\"},{token:[\"punctuation\",\"entity.other.attribute-name.pseudo-element.css\"],regex:u},{token:[\"punctuation\",\"entity.other.attribute-name.pseudo-class.css\"],regex:g},{include:\"url\"},{token:e,regex:\"\\\\-?[a-zA-Z_][a-zA-Z0-9_\\\\-]*\"},{token:\"paren.lparen\",regex:\"\\\\{\"},{caseInsensitive:!0}],url:[{token:\"support.function\",regex:\"(?:url(:?-prefix)?|domain|regexp)\\\\(\",push:[{token:\"support.function\",regex:\"\\\\)\",next:\"pop\"},{defaultToken:\"string\"}]}],strings:[{token:\"string.start\",regex:\"'\",push:[{token:\"string.end\",regex:\"'|$\",next:\"pop\"},{include:\"escapes\"},{token:\"constant.language.escape\",regex:/\\\\$/,consumeLineEnd:!0},{defaultToken:\"string\"}]},{token:\"string.start\",regex:'\"',push:[{token:\"string.end\",regex:'\"|$',next:\"pop\"},{include:\"escapes\"},{token:\"constant.language.escape\",regex:/\\\\$/,consumeLineEnd:!0},{defaultToken:\"string\"}]}],escapes:[{token:\"constant.language.escape\",regex:/\\\\([a-fA-F\\d]{1,6}|[^a-fA-F\\d])/}]},this.normalizeRules()};r.inherits(p,n),t.CssHighlightRules=p})),ace.define(\"ace/mode/less_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\",\"ace/mode/css_highlight_rules\"],(function(e,t,o){\"use strict\";var r=e(\"../lib/oop\"),n=e(\"./text_highlight_rules\").TextHighlightRules,i=e(\"./css_highlight_rules\"),a=function(){var e=\"@import|@media|@font-face|@keyframes|@-webkit-keyframes|@supports|@charset|@plugin|@namespace|@document|@page|@viewport|@-ms-viewport|or|and|when|not\",t=e.split(\"|\"),o=i.supportType.split(\"|\"),r=this.createKeywordMapper({\"support.constant\":i.supportConstant,keyword:e,\"support.constant.color\":i.supportConstantColor,\"support.constant.fonts\":i.supportConstantFonts},\"identifier\",!0),n=\"\\\\-?(?:(?:[0-9]+)|(?:[0-9]*\\\\.[0-9]+))\";this.$rules={start:[{token:\"comment\",regex:\"\\\\/\\\\/.*$\"},{token:\"comment\",regex:\"\\\\/\\\\*\",next:\"comment\"},{token:\"string\",regex:'[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'},{token:\"string\",regex:\"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"},{token:[\"constant.numeric\",\"keyword\"],regex:\"(\"+n+\")(ch|cm|deg|em|ex|fr|gd|grad|Hz|in|kHz|mm|ms|pc|pt|px|rad|rem|s|turn|vh|vm|vw|%)\"},{token:\"constant.numeric\",regex:\"#[a-f0-9]{6}\"},{token:\"constant.numeric\",regex:\"#[a-f0-9]{3}\"},{token:\"constant.numeric\",regex:n},{token:[\"support.function\",\"paren.lparen\",\"string\",\"paren.rparen\"],regex:\"(url)(\\\\()(.*)(\\\\))\"},{token:[\"support.function\",\"paren.lparen\"],regex:\"(:extend|[a-z0-9_\\\\-]+)(\\\\()\"},{token:function(e){return t.indexOf(e.toLowerCase())>-1?\"keyword\":\"variable\"},regex:\"[@\\\\$][a-z0-9_\\\\-@\\\\$]*\\\\b\"},{token:\"variable\",regex:\"[@\\\\$]\\\\{[a-z0-9_\\\\-@\\\\$]*\\\\}\"},{token:function(e,t){return o.indexOf(e.toLowerCase())>-1?[\"support.type.property\",\"text\"]:[\"support.type.unknownProperty\",\"text\"]},regex:\"([a-z0-9-_]+)(\\\\s*:)\"},{token:\"keyword\",regex:\"&\"},{token:r,regex:\"\\\\-?[@a-z_][@a-z0-9_\\\\-]*\"},{token:\"variable.language\",regex:\"#[a-z0-9-_]+\"},{token:\"variable.language\",regex:\"\\\\.[a-z0-9-_]+\"},{token:\"variable.language\",regex:\":[a-z_][a-z0-9-_]*\"},{token:\"constant\",regex:\"[a-z0-9-_]+\"},{token:\"keyword.operator\",regex:\"<|>|<=|>=|=|!=|-|%|\\\\+|\\\\*\"},{token:\"paren.lparen\",regex:\"[[({]\"},{token:\"paren.rparen\",regex:\"[\\\\])}]\"},{token:\"text\",regex:\"\\\\s+\"},{caseInsensitive:!0}],comment:[{token:\"comment\",regex:\"\\\\*\\\\/\",next:\"start\"},{defaultToken:\"comment\"}]},this.normalizeRules()};r.inherits(a,n),t.LessHighlightRules=a})),ace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"],(function(e,t,o){\"use strict\";var r=e(\"../range\").Range,n=function(){};(function(){this.checkOutdent=function(e,t){return!!/^\\s+$/.test(e)&&/^\\s*\\}/.test(t)},this.autoOutdent=function(e,t){var o=e.getLine(t).match(/^(\\s*\\})/);if(!o)return 0;var n=o[1].length,i=e.findMatchingBracket({row:t,column:n});if(!i||i.row==t)return 0;var a=this.$getIndent(e.getLine(i.row));e.replace(new r(t,0,t,n-1),a)},this.$getIndent=function(e){return e.match(/^\\s*/)[0]}}).call(n.prototype),t.MatchingBraceOutdent=n})),ace.define(\"ace/mode/behaviour/css\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/behaviour\",\"ace/mode/behaviour/cstyle\",\"ace/token_iterator\"],(function(e,t,o){\"use strict\";var r=e(\"../../lib/oop\"),n=(e(\"../behaviour\").Behaviour,e(\"./cstyle\").CstyleBehaviour),i=e(\"../../token_iterator\").TokenIterator,a=function(){this.inherit(n),this.add(\"colon\",\"insertion\",(function(e,t,o,r,n){if(\":\"===n&&o.selection.isEmpty()){var a=o.getCursorPosition(),s=new i(r,a.row,a.column),l=s.getCurrentToken();if(l&&l.value.match(/\\s+/)&&(l=s.stepBackward()),l&&\"support.type\"===l.type){var d=r.doc.getLine(a.row);if(\":\"===d.substring(a.column,a.column+1))return{text:\"\",selection:[1,1]};if(/^(\\s+[^;]|\\s*$)/.test(d.substring(a.column)))return{text:\":;\",selection:[1,1]}}}})),this.add(\"colon\",\"deletion\",(function(e,t,o,r,n){var a=r.doc.getTextRange(n);if(!n.isMultiLine()&&\":\"===a){var s=o.getCursorPosition(),l=new i(r,s.row,s.column),d=l.getCurrentToken();if(d&&d.value.match(/\\s+/)&&(d=l.stepBackward()),d&&\"support.type\"===d.type)if(\";\"===r.doc.getLine(n.start.row).substring(n.end.column,n.end.column+1))return n.end.column++,n}})),this.add(\"semicolon\",\"insertion\",(function(e,t,o,r,n){if(\";\"===n&&o.selection.isEmpty()){var i=o.getCursorPosition();if(\";\"===r.doc.getLine(i.row).substring(i.column,i.column+1))return{text:\"\",selection:[1,1]}}})),this.add(\"!important\",\"insertion\",(function(e,t,o,r,n){if(\"!\"===n&&o.selection.isEmpty()){var i=o.getCursorPosition(),a=r.doc.getLine(i.row);if(/^\\s*(;|}|$)/.test(a.substring(i.column)))return{text:\"!important\",selection:[10,10]}}}))};r.inherits(a,n),t.CssBehaviour=a})),ace.define(\"ace/mode/css_completions\",[\"require\",\"exports\",\"module\"],(function(e,t,o){\"use strict\";var r={background:{\"#$0\":1},\"background-color\":{\"#$0\":1,transparent:1,fixed:1},\"background-image\":{\"url('/$0')\":1},\"background-repeat\":{repeat:1,\"repeat-x\":1,\"repeat-y\":1,\"no-repeat\":1,inherit:1},\"background-position\":{bottom:2,center:2,left:2,right:2,top:2,inherit:2},\"background-attachment\":{scroll:1,fixed:1},\"background-size\":{cover:1,contain:1},\"background-clip\":{\"border-box\":1,\"padding-box\":1,\"content-box\":1},\"background-origin\":{\"border-box\":1,\"padding-box\":1,\"content-box\":1},border:{\"solid $0\":1,\"dashed $0\":1,\"dotted $0\":1,\"#$0\":1},\"border-color\":{\"#$0\":1},\"border-style\":{solid:2,dashed:2,dotted:2,double:2,groove:2,hidden:2,inherit:2,inset:2,none:2,outset:2,ridged:2},\"border-collapse\":{collapse:1,separate:1},bottom:{px:1,em:1,\"%\":1},clear:{left:1,right:1,both:1,none:1},color:{\"#$0\":1,\"rgb(#$00,0,0)\":1},cursor:{default:1,pointer:1,move:1,text:1,wait:1,help:1,progress:1,\"n-resize\":1,\"ne-resize\":1,\"e-resize\":1,\"se-resize\":1,\"s-resize\":1,\"sw-resize\":1,\"w-resize\":1,\"nw-resize\":1},display:{none:1,block:1,inline:1,\"inline-block\":1,\"table-cell\":1},\"empty-cells\":{show:1,hide:1},float:{left:1,right:1,none:1},\"font-family\":{Arial:2,\"Comic Sans MS\":2,Consolas:2,\"Courier New\":2,Courier:2,Georgia:2,Monospace:2,\"Sans-Serif\":2,\"Segoe UI\":2,Tahoma:2,\"Times New Roman\":2,\"Trebuchet MS\":2,Verdana:1},\"font-size\":{px:1,em:1,\"%\":1},\"font-weight\":{bold:1,normal:1},\"font-style\":{italic:1,normal:1},\"font-variant\":{normal:1,\"small-caps\":1},height:{px:1,em:1,\"%\":1},left:{px:1,em:1,\"%\":1},\"letter-spacing\":{normal:1},\"line-height\":{normal:1},\"list-style-type\":{none:1,disc:1,circle:1,square:1,decimal:1,\"decimal-leading-zero\":1,\"lower-roman\":1,\"upper-roman\":1,\"lower-greek\":1,\"lower-latin\":1,\"upper-latin\":1,georgian:1,\"lower-alpha\":1,\"upper-alpha\":1},margin:{px:1,em:1,\"%\":1},\"margin-right\":{px:1,em:1,\"%\":1},\"margin-left\":{px:1,em:1,\"%\":1},\"margin-top\":{px:1,em:1,\"%\":1},\"margin-bottom\":{px:1,em:1,\"%\":1},\"max-height\":{px:1,em:1,\"%\":1},\"max-width\":{px:1,em:1,\"%\":1},\"min-height\":{px:1,em:1,\"%\":1},\"min-width\":{px:1,em:1,\"%\":1},overflow:{hidden:1,visible:1,auto:1,scroll:1},\"overflow-x\":{hidden:1,visible:1,auto:1,scroll:1},\"overflow-y\":{hidden:1,visible:1,auto:1,scroll:1},padding:{px:1,em:1,\"%\":1},\"padding-top\":{px:1,em:1,\"%\":1},\"padding-right\":{px:1,em:1,\"%\":1},\"padding-bottom\":{px:1,em:1,\"%\":1},\"padding-left\":{px:1,em:1,\"%\":1},\"page-break-after\":{auto:1,always:1,avoid:1,left:1,right:1},\"page-break-before\":{auto:1,always:1,avoid:1,left:1,right:1},position:{absolute:1,relative:1,fixed:1,static:1},right:{px:1,em:1,\"%\":1},\"table-layout\":{fixed:1,auto:1},\"text-decoration\":{none:1,underline:1,\"line-through\":1,blink:1},\"text-align\":{left:1,right:1,center:1,justify:1},\"text-transform\":{capitalize:1,uppercase:1,lowercase:1,none:1},top:{px:1,em:1,\"%\":1},\"vertical-align\":{top:1,bottom:1},visibility:{hidden:1,visible:1},\"white-space\":{nowrap:1,normal:1,pre:1,\"pre-line\":1,\"pre-wrap\":1},width:{px:1,em:1,\"%\":1},\"word-spacing\":{normal:1},filter:{\"alpha(opacity=$0100)\":1},\"text-shadow\":{\"$02px 2px 2px #777\":1},\"text-overflow\":{\"ellipsis-word\":1,clip:1,ellipsis:1},\"-moz-border-radius\":1,\"-moz-border-radius-topright\":1,\"-moz-border-radius-bottomright\":1,\"-moz-border-radius-topleft\":1,\"-moz-border-radius-bottomleft\":1,\"-webkit-border-radius\":1,\"-webkit-border-top-right-radius\":1,\"-webkit-border-top-left-radius\":1,\"-webkit-border-bottom-right-radius\":1,\"-webkit-border-bottom-left-radius\":1,\"-moz-box-shadow\":1,\"-webkit-box-shadow\":1,transform:{\"rotate($00deg)\":1,\"skew($00deg)\":1},\"-moz-transform\":{\"rotate($00deg)\":1,\"skew($00deg)\":1},\"-webkit-transform\":{\"rotate($00deg)\":1,\"skew($00deg)\":1}},n=function(){};(function(){this.completionsDefined=!1,this.defineCompletions=function(){if(document){var e=document.createElement(\"c\").style;for(var t in e)if(\"string\"===typeof e[t]){var o=t.replace(/[A-Z]/g,(function(e){return\"-\"+e.toLowerCase()}));r.hasOwnProperty(o)||(r[o]=1)}}this.completionsDefined=!0},this.getCompletions=function(e,t,o,r){if(this.completionsDefined||this.defineCompletions(),\"ruleset\"===e||\"ace/mode/scss\"==t.$mode.$id){var n=t.getLine(o.row).substr(0,o.column),i=/\\([^)]*$/.test(n);return i&&(n=n.substr(n.lastIndexOf(\"(\")+1)),/:[^;]+$/.test(n)?(/([\\w\\-]+):[^:]*$/.test(n),this.getPropertyValueCompletions(e,t,o,r)):this.getPropertyCompletions(e,t,o,r,i)}return[]},this.getPropertyCompletions=function(e,t,o,n,i){return i=i||!1,Object.keys(r).map((function(e){return{caption:e,snippet:e+\": $0\"+(i?\"\":\";\"),meta:\"property\",score:1e6}}))},this.getPropertyValueCompletions=function(e,t,o,n){var i=t.getLine(o.row).substr(0,o.column),a=(/([\\w\\-]+):[^:]*$/.exec(i)||{})[1];if(!a)return[];var s=[];return a in r&&\"object\"===typeof r[a]&&(s=Object.keys(r[a])),s.map((function(e){return{caption:e,snippet:e,meta:\"property value\",score:1e6}}))}}).call(n.prototype),t.CssCompletions=n})),ace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"],(function(e,t,o){\"use strict\";var r=e(\"../../lib/oop\"),n=e(\"../../range\").Range,i=e(\"./fold_mode\").FoldMode,a=t.FoldMode=function(e){e&&(this.foldingStartMarker=new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/,\"|\"+e.start)),this.foldingStopMarker=new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/,\"|\"+e.end)))};r.inherits(a,i),function(){this.foldingStartMarker=/([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/,this.foldingStopMarker=/^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/,this.singleLineBlockCommentRe=/^\\s*(\\/\\*).*\\*\\/\\s*$/,this.tripleStarBlockCommentRe=/^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/,this.startRegionRe=/^\\s*(\\/\\*|\\/\\/)#?region\\b/,this._getFoldWidgetBase=this.getFoldWidget,this.getFoldWidget=function(e,t,o){var r=e.getLine(o);if(this.singleLineBlockCommentRe.test(r)&&!this.startRegionRe.test(r)&&!this.tripleStarBlockCommentRe.test(r))return\"\";var n=this._getFoldWidgetBase(e,t,o);return!n&&this.startRegionRe.test(r)?\"start\":n},this.getFoldWidgetRange=function(e,t,o,r){var n,i=e.getLine(o);if(this.startRegionRe.test(i))return this.getCommentRegionBlock(e,i,o);if(n=i.match(this.foldingStartMarker)){var a=n.index;if(n[1])return this.openingBracketBlock(e,n[1],o,a);var s=e.getCommentFoldRange(o,a+n[0].length,1);return s&&!s.isMultiLine()&&(r?s=this.getSectionRange(e,o):\"all\"!=t&&(s=null)),s}if(\"markbegin\"!==t&&(n=i.match(this.foldingStopMarker))){a=n.index+n[0].length;return n[1]?this.closingBracketBlock(e,n[1],o,a):e.getCommentFoldRange(o,a,-1)}},this.getSectionRange=function(e,t){for(var o=e.getLine(t),r=o.search(/\\S/),i=t,a=o.length,s=t+=1,l=e.getLength();++t<l;){var d=(o=e.getLine(t)).search(/\\S/);if(-1!==d){if(r>d)break;var c=this.getFoldWidgetRange(e,\"all\",t);if(c){if(c.start.row<=i)break;if(c.isMultiLine())t=c.end.row;else if(r==d)break}s=t}}return new n(i,a,s,e.getLine(s).length)},this.getCommentRegionBlock=function(e,t,o){for(var r=t.search(/\\s*$/),i=e.getLength(),a=o,s=/^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/,l=1;++o<i;){t=e.getLine(o);var d=s.exec(t);if(d&&(d[1]?l--:l++,!l))break}if(o>a)return new n(a,r,o,t.length)}}.call(a.prototype)})),ace.define(\"ace/mode/less\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/less_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/behaviour/css\",\"ace/mode/css_completions\",\"ace/mode/folding/cstyle\"],(function(e,t,o){\"use strict\";var r=e(\"../lib/oop\"),n=e(\"./text\").Mode,i=e(\"./less_highlight_rules\").LessHighlightRules,a=e(\"./matching_brace_outdent\").MatchingBraceOutdent,s=e(\"./behaviour/css\").CssBehaviour,l=e(\"./css_completions\").CssCompletions,d=e(\"./folding/cstyle\").FoldMode,c=function(){this.HighlightRules=i,this.$outdent=new a,this.$behaviour=new s,this.$completer=new l,this.foldingRules=new d};r.inherits(c,n),function(){this.lineCommentStart=\"//\",this.blockComment={start:\"/*\",end:\"*/\"},this.getNextLineIndent=function(e,t,o){var r=this.$getIndent(t),n=this.getTokenizer().getLineTokens(t,e).tokens;return n.length&&\"comment\"==n[n.length-1].type||t.match(/^.*\\{\\s*$/)&&(r+=o),r},this.checkOutdent=function(e,t,o){return this.$outdent.checkOutdent(t,o)},this.autoOutdent=function(e,t,o){this.$outdent.autoOutdent(t,o)},this.getCompletions=function(e,t,o,r){return this.$completer.getCompletions(\"ruleset\",t,o,r)},this.$id=\"ace/mode/less\"}.call(c.prototype),t.Mode=c})),ace.require([\"ace/mode/less\"],(function(e){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=e)}));","name":"90b10f62bee6aad217c0f27b4e214b20.js","input":"ace.define(\"ace/mode/css_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/lib/lang\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var lang = require(\"../lib/lang\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var supportType = exports.supportType = \"align-content|align-items|align-self|all|animation|animation-delay|animation-direction|animation-duration|animation-fill-mode|animation-iteration-count|animation-name|animation-play-state|animation-timing-function|backface-visibility|background|background-attachment|background-blend-mode|background-clip|background-color|background-image|background-origin|background-position|background-repeat|background-size|border|border-bottom|border-bottom-color|border-bottom-left-radius|border-bottom-right-radius|border-bottom-style|border-bottom-width|border-collapse|border-color|border-image|border-image-outset|border-image-repeat|border-image-slice|border-image-source|border-image-width|border-left|border-left-color|border-left-style|border-left-width|border-radius|border-right|border-right-color|border-right-style|border-right-width|border-spacing|border-style|border-top|border-top-color|border-top-left-radius|border-top-right-radius|border-top-style|border-top-width|border-width|bottom|box-shadow|box-sizing|caption-side|clear|clip|color|column-count|column-fill|column-gap|column-rule|column-rule-color|column-rule-style|column-rule-width|column-span|column-width|columns|content|counter-increment|counter-reset|cursor|direction|display|empty-cells|filter|flex|flex-basis|flex-direction|flex-flow|flex-grow|flex-shrink|flex-wrap|float|font|font-family|font-size|font-size-adjust|font-stretch|font-style|font-variant|font-weight|hanging-punctuation|height|justify-content|left|letter-spacing|line-height|list-style|list-style-image|list-style-position|list-style-type|margin|margin-bottom|margin-left|margin-right|margin-top|max-height|max-width|max-zoom|min-height|min-width|min-zoom|nav-down|nav-index|nav-left|nav-right|nav-up|opacity|order|outline|outline-color|outline-offset|outline-style|outline-width|overflow|overflow-x|overflow-y|padding|padding-bottom|padding-left|padding-right|padding-top|page-break-after|page-break-before|page-break-inside|perspective|perspective-origin|position|quotes|resize|right|tab-size|table-layout|text-align|text-align-last|text-decoration|text-decoration-color|text-decoration-line|text-decoration-style|text-indent|text-justify|text-overflow|text-shadow|text-transform|top|transform|transform-origin|transform-style|transition|transition-delay|transition-duration|transition-property|transition-timing-function|unicode-bidi|user-select|user-zoom|vertical-align|visibility|white-space|width|word-break|word-spacing|word-wrap|z-index\";\n  var supportFunction = exports.supportFunction = \"rgb|rgba|url|attr|counter|counters\";\n  var supportConstant = exports.supportConstant = \"absolute|after-edge|after|all-scroll|all|alphabetic|always|antialiased|armenian|auto|avoid-column|avoid-page|avoid|balance|baseline|before-edge|before|below|bidi-override|block-line-height|block|bold|bolder|border-box|both|bottom|box|break-all|break-word|capitalize|caps-height|caption|center|central|char|circle|cjk-ideographic|clone|close-quote|col-resize|collapse|column|consider-shifts|contain|content-box|cover|crosshair|cubic-bezier|dashed|decimal-leading-zero|decimal|default|disabled|disc|disregard-shifts|distribute-all-lines|distribute-letter|distribute-space|distribute|dotted|double|e-resize|ease-in|ease-in-out|ease-out|ease|ellipsis|end|exclude-ruby|flex-end|flex-start|fill|fixed|georgian|glyphs|grid-height|groove|hand|hanging|hebrew|help|hidden|hiragana-iroha|hiragana|horizontal|icon|ideograph-alpha|ideograph-numeric|ideograph-parenthesis|ideograph-space|ideographic|inactive|include-ruby|inherit|initial|inline-block|inline-box|inline-line-height|inline-table|inline|inset|inside|inter-ideograph|inter-word|invert|italic|justify|katakana-iroha|katakana|keep-all|last|left|lighter|line-edge|line-through|line|linear|list-item|local|loose|lower-alpha|lower-greek|lower-latin|lower-roman|lowercase|lr-tb|ltr|mathematical|max-height|max-size|medium|menu|message-box|middle|move|n-resize|ne-resize|newspaper|no-change|no-close-quote|no-drop|no-open-quote|no-repeat|none|normal|not-allowed|nowrap|nw-resize|oblique|open-quote|outset|outside|overline|padding-box|page|pointer|pre-line|pre-wrap|pre|preserve-3d|progress|relative|repeat-x|repeat-y|repeat|replaced|reset-size|ridge|right|round|row-resize|rtl|s-resize|scroll|se-resize|separate|slice|small-caps|small-caption|solid|space|square|start|static|status-bar|step-end|step-start|steps|stretch|strict|sub|super|sw-resize|table-caption|table-cell|table-column-group|table-column|table-footer-group|table-header-group|table-row-group|table-row|table|tb-rl|text-after-edge|text-before-edge|text-bottom|text-size|text-top|text|thick|thin|transparent|underline|upper-alpha|upper-latin|upper-roman|uppercase|use-script|vertical-ideographic|vertical-text|visible|w-resize|wait|whitespace|z-index|zero|zoom\";\n  var supportConstantColor = exports.supportConstantColor = \"aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|green|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|lime|limegreen|linen|magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|rebeccapurple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen\";\n  var supportConstantFonts = exports.supportConstantFonts = \"arial|century|comic|courier|cursive|fantasy|garamond|georgia|helvetica|impact|lucida|symbol|system|tahoma|times|trebuchet|utopia|verdana|webdings|sans-serif|serif|monospace\";\n  var numRe = exports.numRe = \"\\\\-?(?:(?:[0-9]+(?:\\\\.[0-9]+)?)|(?:\\\\.[0-9]+))\";\n  var pseudoElements = exports.pseudoElements = \"(\\\\:+)\\\\b(after|before|first-letter|first-line|moz-selection|selection)\\\\b\";\n  var pseudoClasses = exports.pseudoClasses = \"(:)\\\\b(active|checked|disabled|empty|enabled|first-child|first-of-type|focus|hover|indeterminate|invalid|last-child|last-of-type|link|not|nth-child|nth-last-child|nth-last-of-type|nth-of-type|only-child|only-of-type|required|root|target|valid|visited)\\\\b\";\n  var CssHighlightRules = function () {\n    var keywordMapper = this.createKeywordMapper({\n      \"support.function\": supportFunction,\n      \"support.constant\": supportConstant,\n      \"support.type\": supportType,\n      \"support.constant.color\": supportConstantColor,\n      \"support.constant.fonts\": supportConstantFonts\n    }, \"text\", true);\n    this.$rules = {\n      \"start\": [{\n        include: [\"strings\", \"url\", \"comments\"]\n      }, {\n        token: \"paren.lparen\",\n        regex: \"\\\\{\",\n        next: \"ruleset\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"\\\\}\"\n      }, {\n        token: \"string\",\n        regex: \"@(?!viewport)\",\n        next: \"media\"\n      }, {\n        token: \"keyword\",\n        regex: \"#[a-z0-9-_]+\"\n      }, {\n        token: \"keyword\",\n        regex: \"%\"\n      }, {\n        token: \"variable\",\n        regex: \"\\\\.[a-z0-9-_]+\"\n      }, {\n        token: \"string\",\n        regex: \":[a-z0-9-_]+\"\n      }, {\n        token: \"constant.numeric\",\n        regex: numRe\n      }, {\n        token: \"constant\",\n        regex: \"[a-z0-9-_]+\"\n      }, {\n        caseInsensitive: true\n      }],\n      \"media\": [{\n        include: [\"strings\", \"url\", \"comments\"]\n      }, {\n        token: \"paren.lparen\",\n        regex: \"\\\\{\",\n        next: \"start\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"\\\\}\",\n        next: \"start\"\n      }, {\n        token: \"string\",\n        regex: \";\",\n        next: \"start\"\n      }, {\n        token: \"keyword\",\n        regex: \"(?:media|supports|document|charset|import|namespace|media|supports|document\" + \"|page|font|keyframes|viewport|counter-style|font-feature-values\" + \"|swash|ornaments|annotation|stylistic|styleset|character-variant)\"\n      }],\n      \"comments\": [{\n        token: \"comment\",\n        // multi line comment\n        regex: \"\\\\/\\\\*\",\n        push: [{\n          token: \"comment\",\n          regex: \"\\\\*\\\\/\",\n          next: \"pop\"\n        }, {\n          defaultToken: \"comment\"\n        }]\n      }],\n      \"ruleset\": [{\n        regex: \"-(webkit|ms|moz|o)-\",\n        token: \"text\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: \"[:;]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"\\\\}\",\n        next: \"start\"\n      }, {\n        include: [\"strings\", \"url\", \"comments\"]\n      }, {\n        token: [\"constant.numeric\", \"keyword\"],\n        regex: \"(\" + numRe + \")(ch|cm|deg|em|ex|fr|gd|grad|Hz|in|kHz|mm|ms|pc|pt|px|rad|rem|s|turn|vh|vmax|vmin|vm|vw|%)\"\n      }, {\n        token: \"constant.numeric\",\n        regex: numRe\n      }, {\n        token: \"constant.numeric\",\n        // hex6 color\n        regex: \"#[a-f0-9]{6}\"\n      }, {\n        token: \"constant.numeric\",\n        // hex3 color\n        regex: \"#[a-f0-9]{3}\"\n      }, {\n        token: [\"punctuation\", \"entity.other.attribute-name.pseudo-element.css\"],\n        regex: pseudoElements\n      }, {\n        token: [\"punctuation\", \"entity.other.attribute-name.pseudo-class.css\"],\n        regex: pseudoClasses\n      }, {\n        include: \"url\"\n      }, {\n        token: keywordMapper,\n        regex: \"\\\\-?[a-zA-Z_][a-zA-Z0-9_\\\\-]*\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"\\\\{\"\n      }, {\n        caseInsensitive: true\n      }],\n      url: [{\n        token: \"support.function\",\n        regex: \"(?:url(:?-prefix)?|domain|regexp)\\\\(\",\n        push: [{\n          token: \"support.function\",\n          regex: \"\\\\)\",\n          next: \"pop\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      }],\n      strings: [{\n        token: \"string.start\",\n        regex: \"'\",\n        push: [{\n          token: \"string.end\",\n          regex: \"'|$\",\n          next: \"pop\"\n        }, {\n          include: \"escapes\"\n        }, {\n          token: \"constant.language.escape\",\n          regex: /\\\\$/,\n          consumeLineEnd: true\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        token: \"string.start\",\n        regex: '\"',\n        push: [{\n          token: \"string.end\",\n          regex: '\"|$',\n          next: \"pop\"\n        }, {\n          include: \"escapes\"\n        }, {\n          token: \"constant.language.escape\",\n          regex: /\\\\$/,\n          consumeLineEnd: true\n        }, {\n          defaultToken: \"string\"\n        }]\n      }],\n      escapes: [{\n        token: \"constant.language.escape\",\n        regex: /\\\\([a-fA-F\\d]{1,6}|[^a-fA-F\\d])/\n      }]\n    };\n    this.normalizeRules();\n  };\n  oop.inherits(CssHighlightRules, TextHighlightRules);\n  exports.CssHighlightRules = CssHighlightRules;\n});\nace.define(\"ace/mode/less_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\", \"ace/mode/css_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var CssHighlightRules = require('./css_highlight_rules');\n  var LessHighlightRules = function () {\n    var keywordList = \"@import|@media|@font-face|@keyframes|@-webkit-keyframes|@supports|\" + \"@charset|@plugin|@namespace|@document|@page|@viewport|@-ms-viewport|\" + \"or|and|when|not\";\n    var keywords = keywordList.split('|');\n    var properties = CssHighlightRules.supportType.split('|');\n    var keywordMapper = this.createKeywordMapper({\n      \"support.constant\": CssHighlightRules.supportConstant,\n      \"keyword\": keywordList,\n      \"support.constant.color\": CssHighlightRules.supportConstantColor,\n      \"support.constant.fonts\": CssHighlightRules.supportConstantFonts\n    }, \"identifier\", true);\n    var numRe = \"\\\\-?(?:(?:[0-9]+)|(?:[0-9]*\\\\.[0-9]+))\";\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"\\\\/\\\\/.*$\"\n      }, {\n        token: \"comment\",\n        // multi line comment\n        regex: \"\\\\/\\\\*\",\n        next: \"comment\"\n      }, {\n        token: \"string\",\n        // single line\n        regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n      }, {\n        token: \"string\",\n        // single line\n        regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n      }, {\n        token: [\"constant.numeric\", \"keyword\"],\n        regex: \"(\" + numRe + \")(ch|cm|deg|em|ex|fr|gd|grad|Hz|in|kHz|mm|ms|pc|pt|px|rad|rem|s|turn|vh|vm|vw|%)\"\n      }, {\n        token: \"constant.numeric\",\n        // hex6 color\n        regex: \"#[a-f0-9]{6}\"\n      }, {\n        token: \"constant.numeric\",\n        // hex3 color\n        regex: \"#[a-f0-9]{3}\"\n      }, {\n        token: \"constant.numeric\",\n        regex: numRe\n      }, {\n        token: [\"support.function\", \"paren.lparen\", \"string\", \"paren.rparen\"],\n        regex: \"(url)(\\\\()(.*)(\\\\))\"\n      }, {\n        token: [\"support.function\", \"paren.lparen\"],\n        regex: \"(:extend|[a-z0-9_\\\\-]+)(\\\\()\"\n      }, {\n        token: function (value) {\n          if (keywords.indexOf(value.toLowerCase()) > -1) return \"keyword\";else return \"variable\";\n        },\n        regex: \"[@\\\\$][a-z0-9_\\\\-@\\\\$]*\\\\b\"\n      }, {\n        token: \"variable\",\n        regex: \"[@\\\\$]\\\\{[a-z0-9_\\\\-@\\\\$]*\\\\}\"\n      }, {\n        token: function (first, second) {\n          if (properties.indexOf(first.toLowerCase()) > -1) {\n            return [\"support.type.property\", \"text\"];\n          } else {\n            return [\"support.type.unknownProperty\", \"text\"];\n          }\n        },\n        regex: \"([a-z0-9-_]+)(\\\\s*:)\"\n      }, {\n        token: \"keyword\",\n        regex: \"&\" // special case - always treat as keyword\n      }, {\n        token: keywordMapper,\n        regex: \"\\\\-?[@a-z_][@a-z0-9_\\\\-]*\"\n      }, {\n        token: \"variable.language\",\n        regex: \"#[a-z0-9-_]+\"\n      }, {\n        token: \"variable.language\",\n        regex: \"\\\\.[a-z0-9-_]+\"\n      }, {\n        token: \"variable.language\",\n        regex: \":[a-z_][a-z0-9-_]*\"\n      }, {\n        token: \"constant\",\n        regex: \"[a-z0-9-_]+\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"<|>|<=|>=|=|!=|-|%|\\\\+|\\\\*\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }, {\n        caseInsensitive: true\n      }],\n      \"comment\": [{\n        token: \"comment\",\n        // closing comment\n        regex: \"\\\\*\\\\/\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment\"\n      }]\n    };\n    this.normalizeRules();\n  };\n  oop.inherits(LessHighlightRules, TextHighlightRules);\n  exports.LessHighlightRules = LessHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n  var MatchingBraceOutdent = function () {};\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/behaviour/css\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/behaviour\", \"ace/mode/behaviour/cstyle\", \"ace/token_iterator\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Behaviour = require(\"../behaviour\").Behaviour;\n  var CstyleBehaviour = require(\"./cstyle\").CstyleBehaviour;\n  var TokenIterator = require(\"../../token_iterator\").TokenIterator;\n  var CssBehaviour = function () {\n    this.inherit(CstyleBehaviour);\n    this.add(\"colon\", \"insertion\", function (state, action, editor, session, text) {\n      if (text === ':' && editor.selection.isEmpty()) {\n        var cursor = editor.getCursorPosition();\n        var iterator = new TokenIterator(session, cursor.row, cursor.column);\n        var token = iterator.getCurrentToken();\n        if (token && token.value.match(/\\s+/)) {\n          token = iterator.stepBackward();\n        }\n        if (token && token.type === 'support.type') {\n          var line = session.doc.getLine(cursor.row);\n          var rightChar = line.substring(cursor.column, cursor.column + 1);\n          if (rightChar === ':') {\n            return {\n              text: '',\n              selection: [1, 1]\n            };\n          }\n          if (/^(\\s+[^;]|\\s*$)/.test(line.substring(cursor.column))) {\n            return {\n              text: ':;',\n              selection: [1, 1]\n            };\n          }\n        }\n      }\n    });\n    this.add(\"colon\", \"deletion\", function (state, action, editor, session, range) {\n      var selected = session.doc.getTextRange(range);\n      if (!range.isMultiLine() && selected === ':') {\n        var cursor = editor.getCursorPosition();\n        var iterator = new TokenIterator(session, cursor.row, cursor.column);\n        var token = iterator.getCurrentToken();\n        if (token && token.value.match(/\\s+/)) {\n          token = iterator.stepBackward();\n        }\n        if (token && token.type === 'support.type') {\n          var line = session.doc.getLine(range.start.row);\n          var rightChar = line.substring(range.end.column, range.end.column + 1);\n          if (rightChar === ';') {\n            range.end.column++;\n            return range;\n          }\n        }\n      }\n    });\n    this.add(\"semicolon\", \"insertion\", function (state, action, editor, session, text) {\n      if (text === ';' && editor.selection.isEmpty()) {\n        var cursor = editor.getCursorPosition();\n        var line = session.doc.getLine(cursor.row);\n        var rightChar = line.substring(cursor.column, cursor.column + 1);\n        if (rightChar === ';') {\n          return {\n            text: '',\n            selection: [1, 1]\n          };\n        }\n      }\n    });\n    this.add(\"!important\", \"insertion\", function (state, action, editor, session, text) {\n      if (text === '!' && editor.selection.isEmpty()) {\n        var cursor = editor.getCursorPosition();\n        var line = session.doc.getLine(cursor.row);\n        if (/^\\s*(;|}|$)/.test(line.substring(cursor.column))) {\n          return {\n            text: '!important',\n            selection: [10, 10]\n          };\n        }\n      }\n    });\n  };\n  oop.inherits(CssBehaviour, CstyleBehaviour);\n  exports.CssBehaviour = CssBehaviour;\n});\nace.define(\"ace/mode/css_completions\", [\"require\", \"exports\", \"module\"], function (require, exports, module) {\n  \"use strict\";\n\n  var propertyMap = {\n    \"background\": {\n      \"#$0\": 1\n    },\n    \"background-color\": {\n      \"#$0\": 1,\n      \"transparent\": 1,\n      \"fixed\": 1\n    },\n    \"background-image\": {\n      \"url('/$0')\": 1\n    },\n    \"background-repeat\": {\n      \"repeat\": 1,\n      \"repeat-x\": 1,\n      \"repeat-y\": 1,\n      \"no-repeat\": 1,\n      \"inherit\": 1\n    },\n    \"background-position\": {\n      \"bottom\": 2,\n      \"center\": 2,\n      \"left\": 2,\n      \"right\": 2,\n      \"top\": 2,\n      \"inherit\": 2\n    },\n    \"background-attachment\": {\n      \"scroll\": 1,\n      \"fixed\": 1\n    },\n    \"background-size\": {\n      \"cover\": 1,\n      \"contain\": 1\n    },\n    \"background-clip\": {\n      \"border-box\": 1,\n      \"padding-box\": 1,\n      \"content-box\": 1\n    },\n    \"background-origin\": {\n      \"border-box\": 1,\n      \"padding-box\": 1,\n      \"content-box\": 1\n    },\n    \"border\": {\n      \"solid $0\": 1,\n      \"dashed $0\": 1,\n      \"dotted $0\": 1,\n      \"#$0\": 1\n    },\n    \"border-color\": {\n      \"#$0\": 1\n    },\n    \"border-style\": {\n      \"solid\": 2,\n      \"dashed\": 2,\n      \"dotted\": 2,\n      \"double\": 2,\n      \"groove\": 2,\n      \"hidden\": 2,\n      \"inherit\": 2,\n      \"inset\": 2,\n      \"none\": 2,\n      \"outset\": 2,\n      \"ridged\": 2\n    },\n    \"border-collapse\": {\n      \"collapse\": 1,\n      \"separate\": 1\n    },\n    \"bottom\": {\n      \"px\": 1,\n      \"em\": 1,\n      \"%\": 1\n    },\n    \"clear\": {\n      \"left\": 1,\n      \"right\": 1,\n      \"both\": 1,\n      \"none\": 1\n    },\n    \"color\": {\n      \"#$0\": 1,\n      \"rgb(#$00,0,0)\": 1\n    },\n    \"cursor\": {\n      \"default\": 1,\n      \"pointer\": 1,\n      \"move\": 1,\n      \"text\": 1,\n      \"wait\": 1,\n      \"help\": 1,\n      \"progress\": 1,\n      \"n-resize\": 1,\n      \"ne-resize\": 1,\n      \"e-resize\": 1,\n      \"se-resize\": 1,\n      \"s-resize\": 1,\n      \"sw-resize\": 1,\n      \"w-resize\": 1,\n      \"nw-resize\": 1\n    },\n    \"display\": {\n      \"none\": 1,\n      \"block\": 1,\n      \"inline\": 1,\n      \"inline-block\": 1,\n      \"table-cell\": 1\n    },\n    \"empty-cells\": {\n      \"show\": 1,\n      \"hide\": 1\n    },\n    \"float\": {\n      \"left\": 1,\n      \"right\": 1,\n      \"none\": 1\n    },\n    \"font-family\": {\n      \"Arial\": 2,\n      \"Comic Sans MS\": 2,\n      \"Consolas\": 2,\n      \"Courier New\": 2,\n      \"Courier\": 2,\n      \"Georgia\": 2,\n      \"Monospace\": 2,\n      \"Sans-Serif\": 2,\n      \"Segoe UI\": 2,\n      \"Tahoma\": 2,\n      \"Times New Roman\": 2,\n      \"Trebuchet MS\": 2,\n      \"Verdana\": 1\n    },\n    \"font-size\": {\n      \"px\": 1,\n      \"em\": 1,\n      \"%\": 1\n    },\n    \"font-weight\": {\n      \"bold\": 1,\n      \"normal\": 1\n    },\n    \"font-style\": {\n      \"italic\": 1,\n      \"normal\": 1\n    },\n    \"font-variant\": {\n      \"normal\": 1,\n      \"small-caps\": 1\n    },\n    \"height\": {\n      \"px\": 1,\n      \"em\": 1,\n      \"%\": 1\n    },\n    \"left\": {\n      \"px\": 1,\n      \"em\": 1,\n      \"%\": 1\n    },\n    \"letter-spacing\": {\n      \"normal\": 1\n    },\n    \"line-height\": {\n      \"normal\": 1\n    },\n    \"list-style-type\": {\n      \"none\": 1,\n      \"disc\": 1,\n      \"circle\": 1,\n      \"square\": 1,\n      \"decimal\": 1,\n      \"decimal-leading-zero\": 1,\n      \"lower-roman\": 1,\n      \"upper-roman\": 1,\n      \"lower-greek\": 1,\n      \"lower-latin\": 1,\n      \"upper-latin\": 1,\n      \"georgian\": 1,\n      \"lower-alpha\": 1,\n      \"upper-alpha\": 1\n    },\n    \"margin\": {\n      \"px\": 1,\n      \"em\": 1,\n      \"%\": 1\n    },\n    \"margin-right\": {\n      \"px\": 1,\n      \"em\": 1,\n      \"%\": 1\n    },\n    \"margin-left\": {\n      \"px\": 1,\n      \"em\": 1,\n      \"%\": 1\n    },\n    \"margin-top\": {\n      \"px\": 1,\n      \"em\": 1,\n      \"%\": 1\n    },\n    \"margin-bottom\": {\n      \"px\": 1,\n      \"em\": 1,\n      \"%\": 1\n    },\n    \"max-height\": {\n      \"px\": 1,\n      \"em\": 1,\n      \"%\": 1\n    },\n    \"max-width\": {\n      \"px\": 1,\n      \"em\": 1,\n      \"%\": 1\n    },\n    \"min-height\": {\n      \"px\": 1,\n      \"em\": 1,\n      \"%\": 1\n    },\n    \"min-width\": {\n      \"px\": 1,\n      \"em\": 1,\n      \"%\": 1\n    },\n    \"overflow\": {\n      \"hidden\": 1,\n      \"visible\": 1,\n      \"auto\": 1,\n      \"scroll\": 1\n    },\n    \"overflow-x\": {\n      \"hidden\": 1,\n      \"visible\": 1,\n      \"auto\": 1,\n      \"scroll\": 1\n    },\n    \"overflow-y\": {\n      \"hidden\": 1,\n      \"visible\": 1,\n      \"auto\": 1,\n      \"scroll\": 1\n    },\n    \"padding\": {\n      \"px\": 1,\n      \"em\": 1,\n      \"%\": 1\n    },\n    \"padding-top\": {\n      \"px\": 1,\n      \"em\": 1,\n      \"%\": 1\n    },\n    \"padding-right\": {\n      \"px\": 1,\n      \"em\": 1,\n      \"%\": 1\n    },\n    \"padding-bottom\": {\n      \"px\": 1,\n      \"em\": 1,\n      \"%\": 1\n    },\n    \"padding-left\": {\n      \"px\": 1,\n      \"em\": 1,\n      \"%\": 1\n    },\n    \"page-break-after\": {\n      \"auto\": 1,\n      \"always\": 1,\n      \"avoid\": 1,\n      \"left\": 1,\n      \"right\": 1\n    },\n    \"page-break-before\": {\n      \"auto\": 1,\n      \"always\": 1,\n      \"avoid\": 1,\n      \"left\": 1,\n      \"right\": 1\n    },\n    \"position\": {\n      \"absolute\": 1,\n      \"relative\": 1,\n      \"fixed\": 1,\n      \"static\": 1\n    },\n    \"right\": {\n      \"px\": 1,\n      \"em\": 1,\n      \"%\": 1\n    },\n    \"table-layout\": {\n      \"fixed\": 1,\n      \"auto\": 1\n    },\n    \"text-decoration\": {\n      \"none\": 1,\n      \"underline\": 1,\n      \"line-through\": 1,\n      \"blink\": 1\n    },\n    \"text-align\": {\n      \"left\": 1,\n      \"right\": 1,\n      \"center\": 1,\n      \"justify\": 1\n    },\n    \"text-transform\": {\n      \"capitalize\": 1,\n      \"uppercase\": 1,\n      \"lowercase\": 1,\n      \"none\": 1\n    },\n    \"top\": {\n      \"px\": 1,\n      \"em\": 1,\n      \"%\": 1\n    },\n    \"vertical-align\": {\n      \"top\": 1,\n      \"bottom\": 1\n    },\n    \"visibility\": {\n      \"hidden\": 1,\n      \"visible\": 1\n    },\n    \"white-space\": {\n      \"nowrap\": 1,\n      \"normal\": 1,\n      \"pre\": 1,\n      \"pre-line\": 1,\n      \"pre-wrap\": 1\n    },\n    \"width\": {\n      \"px\": 1,\n      \"em\": 1,\n      \"%\": 1\n    },\n    \"word-spacing\": {\n      \"normal\": 1\n    },\n    \"filter\": {\n      \"alpha(opacity=$0100)\": 1\n    },\n    \"text-shadow\": {\n      \"$02px 2px 2px #777\": 1\n    },\n    \"text-overflow\": {\n      \"ellipsis-word\": 1,\n      \"clip\": 1,\n      \"ellipsis\": 1\n    },\n    \"-moz-border-radius\": 1,\n    \"-moz-border-radius-topright\": 1,\n    \"-moz-border-radius-bottomright\": 1,\n    \"-moz-border-radius-topleft\": 1,\n    \"-moz-border-radius-bottomleft\": 1,\n    \"-webkit-border-radius\": 1,\n    \"-webkit-border-top-right-radius\": 1,\n    \"-webkit-border-top-left-radius\": 1,\n    \"-webkit-border-bottom-right-radius\": 1,\n    \"-webkit-border-bottom-left-radius\": 1,\n    \"-moz-box-shadow\": 1,\n    \"-webkit-box-shadow\": 1,\n    \"transform\": {\n      \"rotate($00deg)\": 1,\n      \"skew($00deg)\": 1\n    },\n    \"-moz-transform\": {\n      \"rotate($00deg)\": 1,\n      \"skew($00deg)\": 1\n    },\n    \"-webkit-transform\": {\n      \"rotate($00deg)\": 1,\n      \"skew($00deg)\": 1\n    }\n  };\n  var CssCompletions = function () {};\n  (function () {\n    this.completionsDefined = false;\n    this.defineCompletions = function () {\n      if (document) {\n        var style = document.createElement('c').style;\n        for (var i in style) {\n          if (typeof style[i] !== 'string') continue;\n          var name = i.replace(/[A-Z]/g, function (x) {\n            return '-' + x.toLowerCase();\n          });\n          if (!propertyMap.hasOwnProperty(name)) propertyMap[name] = 1;\n        }\n      }\n      this.completionsDefined = true;\n    };\n    this.getCompletions = function (state, session, pos, prefix) {\n      if (!this.completionsDefined) {\n        this.defineCompletions();\n      }\n      if (state === 'ruleset' || session.$mode.$id == \"ace/mode/scss\") {\n        var line = session.getLine(pos.row).substr(0, pos.column);\n        var inParens = /\\([^)]*$/.test(line);\n        if (inParens) {\n          line = line.substr(line.lastIndexOf('(') + 1);\n        }\n        if (/:[^;]+$/.test(line)) {\n          /([\\w\\-]+):[^:]*$/.test(line);\n          return this.getPropertyValueCompletions(state, session, pos, prefix);\n        } else {\n          return this.getPropertyCompletions(state, session, pos, prefix, inParens);\n        }\n      }\n      return [];\n    };\n    this.getPropertyCompletions = function (state, session, pos, prefix, skipSemicolon) {\n      skipSemicolon = skipSemicolon || false;\n      var properties = Object.keys(propertyMap);\n      return properties.map(function (property) {\n        return {\n          caption: property,\n          snippet: property + ': $0' + (skipSemicolon ? '' : ';'),\n          meta: \"property\",\n          score: 1000000\n        };\n      });\n    };\n    this.getPropertyValueCompletions = function (state, session, pos, prefix) {\n      var line = session.getLine(pos.row).substr(0, pos.column);\n      var property = (/([\\w\\-]+):[^:]*$/.exec(line) || {})[1];\n      if (!property) return [];\n      var values = [];\n      if (property in propertyMap && typeof propertyMap[property] === \"object\") {\n        values = Object.keys(propertyMap[property]);\n      }\n      return values.map(function (value) {\n        return {\n          caption: value,\n          snippet: value,\n          meta: \"property value\",\n          score: 1000000\n        };\n      });\n    };\n  }).call(CssCompletions.prototype);\n  exports.CssCompletions = CssCompletions;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Range = require(\"../../range\").Range;\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n      return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n        return range;\n      }\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n        endRow = row;\n      }\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n      var endRow = row;\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/less\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/less_highlight_rules\", \"ace/mode/matching_brace_outdent\", \"ace/mode/behaviour/css\", \"ace/mode/css_completions\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var LessHighlightRules = require(\"./less_highlight_rules\").LessHighlightRules;\n  var MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n  var CssBehaviour = require(\"./behaviour/css\").CssBehaviour;\n  var CssCompletions = require(\"./css_completions\").CssCompletions;\n  var CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = LessHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CssBehaviour();\n    this.$completer = new CssCompletions();\n    this.foldingRules = new CStyleFoldMode();\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\"\n    };\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var tokens = this.getTokenizer().getLineTokens(line, state).tokens;\n      if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n        return indent;\n      }\n      var match = line.match(/^.*\\{\\s*$/);\n      if (match) {\n        indent += tab;\n      }\n      return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n    this.getCompletions = function (state, session, pos, prefix) {\n      return this.$completer.getCompletions(\"ruleset\", session, pos, prefix);\n    };\n    this.$id = \"ace/mode/less\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/less\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}