{"code":"ace.define(\"ace/mode/jsdoc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],(function(e,t,n){\"use strict\";var o=e(\"../lib/oop\"),r=e(\"./text_highlight_rules\").TextHighlightRules,_=function(){this.$rules={start:[{token:[\"comment.doc.tag\",\"comment.doc.text\",\"lparen.doc\"],regex:\"(@(?:param|member|typedef|property|namespace|var|const|callback))(\\\\s*)({)\",push:[{token:\"lparen.doc\",regex:\"{\",push:[{include:\"doc-syntax\"},{token:\"rparen.doc\",regex:\"}|(?=$)\",next:\"pop\"}]},{token:[\"rparen.doc\",\"text.doc\",\"variable.parameter.doc\",\"lparen.doc\",\"variable.parameter.doc\",\"rparen.doc\"],regex:/(})(\\s*)(?:([\\w=:\\/\\.]+)|(?:(\\[)([\\w=:\\/\\.]+)(\\])))/,next:\"pop\"},{token:\"rparen.doc\",regex:\"}|(?=$)\",next:\"pop\"},{include:\"doc-syntax\"},{defaultToken:\"text.doc\"}]},{token:[\"comment.doc.tag\",\"text.doc\",\"lparen.doc\"],regex:\"(@(?:returns?|yields|type|this|suppress|public|protected|private|package|modifies|implements|external|exception|throws|enum|define|extends))(\\\\s*)({)\",push:[{token:\"lparen.doc\",regex:\"{\",push:[{include:\"doc-syntax\"},{token:\"rparen.doc\",regex:\"}|(?=$)\",next:\"pop\"}]},{token:\"rparen.doc\",regex:\"}|(?=$)\",next:\"pop\"},{include:\"doc-syntax\"},{defaultToken:\"text.doc\"}]},{token:[\"comment.doc.tag\",\"text.doc\",\"variable.parameter.doc\"],regex:'(@(?:alias|memberof|instance|module|name|lends|namespace|external|this|template|requires|param|implements|function|extends|typedef|mixes|constructor|var|memberof\\\\!|event|listens|exports|class|constructs|interface|emits|fires|throws|const|callback|borrows|augments))(\\\\s+)(\\\\w[\\\\w#.:/~\"\\\\-]*)?'},{token:[\"comment.doc.tag\",\"text.doc\",\"variable.parameter.doc\"],regex:\"(@method)(\\\\s+)(\\\\w[\\\\w.\\\\(\\\\)]*)\"},{token:\"comment.doc.tag\",regex:\"@access\\\\s+(?:private|public|protected)\"},{token:\"comment.doc.tag\",regex:\"@kind\\\\s+(?:class|constant|event|external|file|function|member|mixin|module|namespace|typedef)\"},{token:\"comment.doc.tag\",regex:\"@\\\\w+(?=\\\\s|$)\"},_.getTagRule(),{defaultToken:\"comment.doc.body\",caseInsensitive:!0}],\"doc-syntax\":[{token:\"operator.doc\",regex:/[|:]/},{token:\"paren.doc\",regex:/[\\[\\]]/}]},this.normalizeRules()};o.inherits(_,r),_.getTagRule=function(e){return{token:\"comment.doc.tag.storage.type\",regex:\"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"}},_.getStartRule=function(e){return{token:\"comment.doc\",regex:/\\/\\*\\*(?!\\/)/,next:e}},_.getEndRule=function(e){return{token:\"comment.doc\",regex:\"\\\\*\\\\/\",next:e}},t.JsDocCommentHighlightRules=_})),ace.define(\"ace/mode/javascript_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/jsdoc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"],(function(e,t,n){\"use strict\";var o=e(\"../lib/oop\"),r=e(\"./jsdoc_comment_highlight_rules\").JsDocCommentHighlightRules,_=e(\"./text_highlight_rules\").TextHighlightRules,a=\"[a-zA-Z\\\\$_\\xa1-\\uffff][a-zA-Z\\\\d\\\\$_\\xa1-\\uffff]*\",i=function(e){var t={\"variable.language\":\"Array|Boolean|Date|Function|Iterator|Number|Object|RegExp|String|Proxy|Symbol|Namespace|QName|XML|XMLList|ArrayBuffer|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray|Error|EvalError|InternalError|RangeError|ReferenceError|StopIteration|SyntaxError|TypeError|URIError|decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|eval|isFinite|isNaN|parseFloat|parseInt|JSON|Math|this|arguments|prototype|window|document\",keyword:\"const|yield|import|get|set|async|await|break|case|catch|continue|default|delete|do|else|finally|for|if|in|of|instanceof|new|return|switch|throw|try|typeof|let|var|while|with|debugger|__parent__|__count__|escape|unescape|with|__proto__|class|enum|extends|super|export|implements|private|public|interface|package|protected|static|constructor\",\"storage.type\":\"const|let|var|function\",\"constant.language\":\"null|Infinity|NaN|undefined\",\"support.function\":\"alert\",\"constant.language.boolean\":\"true|false\"},n=this.createKeywordMapper(t,\"identifier\"),o=\"\\\\\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|u{[0-9a-fA-F]{1,6}}|[0-2][0-7]{0,2}|3[0-7][0-7]?|[4-7][0-7]?|.)\",_=\"(function)(\\\\s*)(\\\\*?)\",i={token:[\"identifier\",\"text\",\"paren.lparen\"],regex:\"(\\\\b(?!\"+Object.values(t).join(\"|\")+\"\\\\b)\"+a+\")(\\\\s*)(\\\\()\"};this.$rules={no_regex:[r.getStartRule(\"doc-start\"),T(\"no_regex\"),i,{token:\"string\",regex:\"'(?=.)\",next:\"qstring\"},{token:\"string\",regex:'\"(?=.)',next:\"qqstring\"},{token:\"constant.numeric\",regex:/0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/},{token:\"constant.numeric\",regex:/(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/},{token:[\"entity.name.function\",\"text\",\"keyword.operator\",\"text\",\"storage.type\",\"text\",\"storage.type\",\"text\",\"paren.lparen\"],regex:\"(\"+a+\")(\\\\s*)(=)(\\\\s*)\"+_+\"(\\\\s*)(\\\\()\",next:\"function_arguments\"},{token:[\"storage.type\",\"text\",\"storage.type\",\"text\",\"text\",\"entity.name.function\",\"text\",\"paren.lparen\"],regex:\"(function)(?:(?:(\\\\s*)(\\\\*)(\\\\s*))|(\\\\s+))(\"+a+\")(\\\\s*)(\\\\()\",next:\"function_arguments\"},{token:[\"entity.name.function\",\"text\",\"punctuation.operator\",\"text\",\"storage.type\",\"text\",\"storage.type\",\"text\",\"paren.lparen\"],regex:\"(\"+a+\")(\\\\s*)(:)(\\\\s*)\"+_+\"(\\\\s*)(\\\\()\",next:\"function_arguments\"},{token:[\"text\",\"text\",\"storage.type\",\"text\",\"storage.type\",\"text\",\"paren.lparen\"],regex:\"(:)(\\\\s*)\"+_+\"(\\\\s*)(\\\\()\",next:\"function_arguments\"},{token:\"keyword\",regex:\"from(?=\\\\s*('|\\\"))\"},{token:\"keyword\",regex:\"(?:case|do|else|finally|in|instanceof|return|throw|try|typeof|yield|void)\\\\b\",next:\"start\"},{token:\"support.constant\",regex:/that\\b/},{token:[\"storage.type\",\"punctuation.operator\",\"support.function.firebug\"],regex:/(console)(\\.)(warn|info|log|error|debug|time|trace|timeEnd|assert)\\b/},{token:n,regex:a},{token:\"punctuation.operator\",regex:/[.](?![.])/,next:\"property\"},{token:\"storage.type\",regex:/=>/,next:\"start\"},{token:\"keyword.operator\",regex:/--|\\+\\+|\\.{3}|===|==|=|!=|!==|<+=?|>+=?|!|&&|\\|\\||\\?:|[!$%&*+\\-~\\/^]=?/,next:\"start\"},{token:\"punctuation.operator\",regex:/[?:,;.]/,next:\"start\"},{token:\"paren.lparen\",regex:/[\\[({]/,next:\"start\"},{token:\"paren.rparen\",regex:/[\\])}]/},{token:\"comment\",regex:/^#!.*$/}],property:[{token:\"text\",regex:\"\\\\s+\"},{token:\"keyword.operator\",regex:/=/},{token:[\"storage.type\",\"text\",\"storage.type\",\"text\",\"paren.lparen\"],regex:_+\"(\\\\s*)(\\\\()\",next:\"function_arguments\"},{token:[\"storage.type\",\"text\",\"storage.type\",\"text\",\"text\",\"entity.name.function\",\"text\",\"paren.lparen\"],regex:\"(function)(?:(?:(\\\\s*)(\\\\*)(\\\\s*))|(\\\\s+))(\\\\w+)(\\\\s*)(\\\\()\",next:\"function_arguments\"},{token:\"punctuation.operator\",regex:/[.](?![.])/},{token:\"support.function\",regex:\"prototype\"},{token:\"support.function\",regex:/(s(?:h(?:ift|ow(?:Mod(?:elessDialog|alDialog)|Help))|croll(?:X|By(?:Pages|Lines)?|Y|To)?|t(?:op|rike)|i(?:n|zeToContent|debar|gnText)|ort|u(?:p|b(?:str(?:ing)?)?)|pli(?:ce|t)|e(?:nd|t(?:Re(?:sizable|questHeader)|M(?:i(?:nutes|lliseconds)|onth)|Seconds|Ho(?:tKeys|urs)|Year|Cursor|Time(?:out)?|Interval|ZOptions|Date|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|h(?:ome|andleEvent)|navigate|c(?:har(?:CodeAt|At)|o(?:s|n(?:cat|textual|firm)|mpile)|eil|lear(?:Timeout|Interval)?|a(?:ptureEvents|ll)|reate(?:StyleSheet|Popup|EventObject))|t(?:o(?:GMTString|S(?:tring|ource)|U(?:TCString|pperCase)|Lo(?:caleString|werCase))|est|a(?:n|int(?:Enabled)?))|i(?:s(?:NaN|Finite)|ndexOf|talics)|d(?:isableExternalCapture|ump|etachEvent)|u(?:n(?:shift|taint|escape|watch)|pdateCommands)|j(?:oin|avaEnabled)|p(?:o(?:p|w)|ush|lugins.refresh|a(?:ddings|rse(?:Int|Float)?)|r(?:int|ompt|eference))|e(?:scape|nableExternalCapture|val|lementFromPoint|x(?:p|ec(?:Script|Command)?))|valueOf|UTC|queryCommand(?:State|Indeterm|Enabled|Value)|f(?:i(?:nd|lter|le(?:ModifiedDate|Size|CreatedDate|UpdatedDate)|xed)|o(?:nt(?:size|color)|rward|rEach)|loor|romCharCode)|watch|l(?:ink|o(?:ad|g)|astIndexOf)|a(?:sin|nchor|cos|t(?:tachEvent|ob|an(?:2)?)|pply|lert|b(?:s|ort))|r(?:ou(?:nd|teEvents)|e(?:size(?:By|To)|calc|turnValue|place|verse|l(?:oad|ease(?:Capture|Events)))|andom)|g(?:o|et(?:ResponseHeader|M(?:i(?:nutes|lliseconds)|onth)|Se(?:conds|lection)|Hours|Year|Time(?:zoneOffset)?|Da(?:y|te)|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Da(?:y|te)|FullYear)|FullYear|A(?:ttention|llResponseHeaders)))|m(?:in|ove(?:B(?:y|elow)|To(?:Absolute)?|Above)|ergeAttributes|a(?:tch|rgins|x))|b(?:toa|ig|o(?:ld|rderWidths)|link|ack))\\b(?=\\()/},{token:\"support.function.dom\",regex:/(s(?:ub(?:stringData|mit)|plitText|e(?:t(?:NamedItem|Attribute(?:Node)?)|lect))|has(?:ChildNodes|Feature)|namedItem|c(?:l(?:ick|o(?:se|neNode))|reate(?:C(?:omment|DATASection|aption)|T(?:Head|extNode|Foot)|DocumentFragment|ProcessingInstruction|E(?:ntityReference|lement)|Attribute))|tabIndex|i(?:nsert(?:Row|Before|Cell|Data)|tem)|open|delete(?:Row|C(?:ell|aption)|T(?:Head|Foot)|Data)|focus|write(?:ln)?|a(?:dd|ppend(?:Child|Data))|re(?:set|place(?:Child|Data)|move(?:NamedItem|Child|Attribute(?:Node)?)?)|get(?:NamedItem|Element(?:sBy(?:Name|TagName|ClassName)|ById)|Attribute(?:Node)?)|blur)\\b(?=\\()/},{token:\"support.constant\",regex:/(s(?:ystemLanguage|cr(?:ipts|ollbars|een(?:X|Y|Top|Left))|t(?:yle(?:Sheets)?|atus(?:Text|bar)?)|ibling(?:Below|Above)|ource|uffixes|e(?:curity(?:Policy)?|l(?:ection|f)))|h(?:istory|ost(?:name)?|as(?:h|Focus))|y|X(?:MLDocument|SLDocument)|n(?:ext|ame(?:space(?:s|URI)|Prop))|M(?:IN_VALUE|AX_VALUE)|c(?:haracterSet|o(?:n(?:structor|trollers)|okieEnabled|lorDepth|mp(?:onents|lete))|urrent|puClass|l(?:i(?:p(?:boardData)?|entInformation)|osed|asses)|alle(?:e|r)|rypto)|t(?:o(?:olbar|p)|ext(?:Transform|Indent|Decoration|Align)|ags)|SQRT(?:1_2|2)|i(?:n(?:ner(?:Height|Width)|put)|ds|gnoreCase)|zIndex|o(?:scpu|n(?:readystatechange|Line)|uter(?:Height|Width)|p(?:sProfile|ener)|ffscreenBuffering)|NEGATIVE_INFINITY|d(?:i(?:splay|alog(?:Height|Top|Width|Left|Arguments)|rectories)|e(?:scription|fault(?:Status|Ch(?:ecked|arset)|View)))|u(?:ser(?:Profile|Language|Agent)|n(?:iqueID|defined)|pdateInterval)|_content|p(?:ixelDepth|ort|ersonalbar|kcs11|l(?:ugins|atform)|a(?:thname|dding(?:Right|Bottom|Top|Left)|rent(?:Window|Layer)?|ge(?:X(?:Offset)?|Y(?:Offset)?))|r(?:o(?:to(?:col|type)|duct(?:Sub)?|mpter)|e(?:vious|fix)))|e(?:n(?:coding|abledPlugin)|x(?:ternal|pando)|mbeds)|v(?:isibility|endor(?:Sub)?|Linkcolor)|URLUnencoded|P(?:I|OSITIVE_INFINITY)|f(?:ilename|o(?:nt(?:Size|Family|Weight)|rmName)|rame(?:s|Element)|gColor)|E|whiteSpace|l(?:i(?:stStyleType|n(?:eHeight|kColor))|o(?:ca(?:tion(?:bar)?|lName)|wsrc)|e(?:ngth|ft(?:Context)?)|a(?:st(?:M(?:odified|atch)|Index|Paren)|yer(?:s|X)|nguage))|a(?:pp(?:MinorVersion|Name|Co(?:deName|re)|Version)|vail(?:Height|Top|Width|Left)|ll|r(?:ity|guments)|Linkcolor|bove)|r(?:ight(?:Context)?|e(?:sponse(?:XML|Text)|adyState))|global|x|m(?:imeTypes|ultiline|enubar|argin(?:Right|Bottom|Top|Left))|L(?:N(?:10|2)|OG(?:10E|2E))|b(?:o(?:ttom|rder(?:Width|RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth))|ufferDepth|elow|ackground(?:Color|Image)))\\b/},{token:\"identifier\",regex:a},{regex:\"\",token:\"empty\",next:\"no_regex\"}],start:[r.getStartRule(\"doc-start\"),T(\"start\"),{token:\"string.regexp\",regex:\"\\\\/\",next:\"regex\"},{token:\"text\",regex:\"\\\\s+|^$\",next:\"start\"},{token:\"empty\",regex:\"\",next:\"no_regex\"}],regex:[{token:\"regexp.keyword.operator\",regex:\"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"},{token:\"string.regexp\",regex:\"/[sxngimy]*\",next:\"no_regex\"},{token:\"invalid\",regex:/\\{\\d+\\b,?\\d*\\}[+*]|[+*$^?][+*]|[$^][?]|\\?{3,}/},{token:\"constant.language.escape\",regex:/\\(\\?[:=!]|\\)|\\{\\d+\\b,?\\d*\\}|[+*]\\?|[()$^+*?.]/},{token:\"constant.language.delimiter\",regex:/\\|/},{token:\"constant.language.escape\",regex:/\\[\\^?/,next:\"regex_character_class\"},{token:\"empty\",regex:\"$\",next:\"no_regex\"},{defaultToken:\"string.regexp\"}],regex_character_class:[{token:\"regexp.charclass.keyword.operator\",regex:\"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"},{token:\"constant.language.escape\",regex:\"]\",next:\"regex\"},{token:\"constant.language.escape\",regex:\"-\"},{token:\"empty\",regex:\"$\",next:\"no_regex\"},{defaultToken:\"string.regexp.charachterclass\"}],default_parameter:[{token:\"string\",regex:\"'(?=.)\",push:[{token:\"string\",regex:\"'|$\",next:\"pop\"},{include:\"qstring\"}]},{token:\"string\",regex:'\"(?=.)',push:[{token:\"string\",regex:'\"|$',next:\"pop\"},{include:\"qqstring\"}]},{token:\"constant.language\",regex:\"null|Infinity|NaN|undefined\"},{token:\"constant.numeric\",regex:/0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/},{token:\"constant.numeric\",regex:/(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/},{token:\"punctuation.operator\",regex:\",\",next:\"function_arguments\"},{token:\"text\",regex:\"\\\\s+\"},{token:\"punctuation.operator\",regex:\"$\"},{token:\"empty\",regex:\"\",next:\"no_regex\"}],function_arguments:[T(\"function_arguments\"),{token:\"variable.parameter\",regex:a},{token:\"punctuation.operator\",regex:\",\"},{token:\"text\",regex:\"\\\\s+\"},{token:\"punctuation.operator\",regex:\"$\"},{token:\"empty\",regex:\"\",next:\"no_regex\"}],qqstring:[{token:\"constant.language.escape\",regex:o},{token:\"string\",regex:\"\\\\\\\\$\",consumeLineEnd:!0},{token:\"string\",regex:'\"|$',next:\"no_regex\"},{defaultToken:\"string\"}],qstring:[{token:\"constant.language.escape\",regex:o},{token:\"string\",regex:\"\\\\\\\\$\",consumeLineEnd:!0},{token:\"string\",regex:\"'|$\",next:\"no_regex\"},{defaultToken:\"string\"}]},e&&e.noES6||(this.$rules.no_regex.unshift({regex:\"[{}]\",onMatch:function(e,t,n){if(this.next=\"{\"==e?this.nextState:\"\",\"{\"==e&&n.length)n.unshift(\"start\",t);else if(\"}\"==e&&n.length&&(n.shift(),this.next=n.shift(),-1!=this.next.indexOf(\"string\")||-1!=this.next.indexOf(\"jsx\")))return\"paren.quasi.end\";return\"{\"==e?\"paren.lparen\":\"paren.rparen\"},nextState:\"start\"},{token:\"string.quasi.start\",regex:/`/,push:[{token:\"constant.language.escape\",regex:o},{token:\"paren.quasi.start\",regex:/\\${/,push:\"start\"},{token:\"string.quasi.end\",regex:/`/,next:\"pop\"},{defaultToken:\"string.quasi\"}]},{token:[\"variable.parameter\",\"text\"],regex:\"(\"+a+\")(\\\\s*)(?=\\\\=>)\"},{token:\"paren.lparen\",regex:\"(\\\\()(?=[^\\\\(]+\\\\s*=>)\",next:\"function_arguments\"},{token:\"variable.language\",regex:\"(?:(?:(?:Weak)?(?:Set|Map))|Promise)\\\\b\"}),this.$rules.function_arguments.unshift({token:\"keyword.operator\",regex:\"=\",next:\"default_parameter\"},{token:\"keyword.operator\",regex:\"\\\\.{3}\"}),this.$rules.property.unshift({token:\"support.function\",regex:\"(findIndex|repeat|startsWith|endsWith|includes|isSafeInteger|trunc|cbrt|log2|log10|sign|then|catch|finally|resolve|reject|race|any|all|allSettled|keys|entries|isInteger)\\\\b(?=\\\\()\"},{token:\"constant.language\",regex:\"(?:MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|EPSILON)\\\\b\"}),e&&0==e.jsx||s.call(this)),this.embedRules(r,\"doc-\",[r.getEndRule(\"no_regex\")]),this.normalizeRules()};function s(){var e=a.replace(\"\\\\d\",\"\\\\d\\\\-\"),t={onMatch:function(e,t,n){var o=\"/\"==e.charAt(1)?2:1;return 1==o?(t!=this.nextState?n.unshift(this.next,this.nextState,0):n.unshift(this.next),n[2]++):2==o&&t==this.nextState&&(n[1]--,(!n[1]||n[1]<0)&&(n.shift(),n.shift())),[{type:\"meta.tag.punctuation.\"+(1==o?\"\":\"end-\")+\"tag-open.xml\",value:e.slice(0,o)},{type:\"meta.tag.tag-name.xml\",value:e.substr(o)}]},regex:\"</?(?:\"+e+\"|(?=>))\",next:\"jsxAttributes\",nextState:\"jsx\"};this.$rules.start.unshift(t);var n={regex:\"{\",token:\"paren.quasi.start\",push:\"start\"};this.$rules.jsx=[n,t,{include:\"reference\"},{defaultToken:\"string.xml\"}],this.$rules.jsxAttributes=[{token:\"meta.tag.punctuation.tag-close.xml\",regex:\"/?>\",onMatch:function(e,t,n){return t==n[0]&&n.shift(),2==e.length&&(n[0]==this.nextState&&n[1]--,(!n[1]||n[1]<0)&&n.splice(0,2)),this.next=n[0]||\"start\",[{type:this.token,value:e}]},nextState:\"jsx\"},n,T(\"jsxAttributes\"),{token:\"entity.other.attribute-name.xml\",regex:e},{token:\"keyword.operator.attribute-equals.xml\",regex:\"=\"},{token:\"text.tag-whitespace.xml\",regex:\"\\\\s+\"},{token:\"string.attribute-value.xml\",regex:\"'\",stateName:\"jsx_attr_q\",push:[{token:\"string.attribute-value.xml\",regex:\"'\",next:\"pop\"},{include:\"reference\"},{defaultToken:\"string.attribute-value.xml\"}]},{token:\"string.attribute-value.xml\",regex:'\"',stateName:\"jsx_attr_qq\",push:[{token:\"string.attribute-value.xml\",regex:'\"',next:\"pop\"},{include:\"reference\"},{defaultToken:\"string.attribute-value.xml\"}]},t],this.$rules.reference=[{token:\"constant.language.escape.reference.xml\",regex:\"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"}]}function T(e){return[{token:\"comment\",regex:/\\/\\*/,next:[r.getTagRule(),{token:\"comment\",regex:\"\\\\*\\\\/\",next:e||\"pop\"},{defaultToken:\"comment\",caseInsensitive:!0}]},{token:\"comment\",regex:\"\\\\/\\\\/\",next:[r.getTagRule(),{token:\"comment\",regex:\"$|^\",next:e||\"pop\"},{defaultToken:\"comment\",caseInsensitive:!0}]}]}o.inherits(i,_),t.JavaScriptHighlightRules=i})),ace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"],(function(e,t,n){\"use strict\";var o=e(\"../range\").Range,r=function(){};(function(){this.checkOutdent=function(e,t){return!!/^\\s+$/.test(e)&&/^\\s*\\}/.test(t)},this.autoOutdent=function(e,t){var n=e.getLine(t).match(/^(\\s*\\})/);if(!n)return 0;var r=n[1].length,_=e.findMatchingBracket({row:t,column:r});if(!_||_.row==t)return 0;var a=this.$getIndent(e.getLine(_.row));e.replace(new o(t,0,t,r-1),a)},this.$getIndent=function(e){return e.match(/^\\s*/)[0]}}).call(r.prototype),t.MatchingBraceOutdent=r})),ace.define(\"ace/mode/behaviour/xml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/behaviour\",\"ace/token_iterator\"],(function(e,t,n){\"use strict\";var o=e(\"../../lib/oop\"),r=e(\"../behaviour\").Behaviour,_=e(\"../../token_iterator\").TokenIterator;function a(e,t){return e&&e.type.lastIndexOf(t+\".xml\")>-1}var i=function(){this.add(\"string_dquotes\",\"insertion\",(function(e,t,n,o,r){if('\"'==r||\"'\"==r){var i=r,s=o.doc.getTextRange(n.getSelectionRange());if(\"\"!==s&&\"'\"!==s&&'\"'!=s&&n.getWrapBehavioursEnabled())return{text:i+s+i,selection:!1};var T=n.getCursorPosition(),l=o.doc.getLine(T.row).substring(T.column,T.column+1),g=new _(o,T.row,T.column),c=g.getCurrentToken();if(l==i&&(a(c,\"attribute-value\")||a(c,\"string\")))return{text:\"\",selection:[1,1]};if(c||(c=g.stepBackward()),!c)return;for(;a(c,\"tag-whitespace\")||a(c,\"whitespace\");)c=g.stepBackward();var u=!l||l.match(/\\s/);if(a(c,\"attribute-equals\")&&(u||\">\"==l)||a(c,\"decl-attribute-equals\")&&(u||\"?\"==l))return{text:i+i,selection:[1,1]}}})),this.add(\"string_dquotes\",\"deletion\",(function(e,t,n,o,r){var _=o.doc.getTextRange(r);if(!r.isMultiLine()&&('\"'==_||\"'\"==_)&&o.doc.getLine(r.start.row).substring(r.start.column+1,r.start.column+2)==_)return r.end.column++,r})),this.add(\"autoclosing\",\"insertion\",(function(e,t,n,o,r){if(\">\"==r){var i=n.getSelectionRange().start,s=new _(o,i.row,i.column),T=s.getCurrentToken()||s.stepBackward();if(!T||!(a(T,\"tag-name\")||a(T,\"tag-whitespace\")||a(T,\"attribute-name\")||a(T,\"attribute-equals\")||a(T,\"attribute-value\")))return;if(a(T,\"reference.attribute-value\"))return;if(a(T,\"attribute-value\")){var l=s.getCurrentTokenColumn()+T.value.length;if(i.column<l)return;if(i.column==l){var g=s.stepForward();if(g&&a(g,\"attribute-value\"))return;s.stepBackward()}}if(/^\\s*>/.test(o.getLine(i.row).slice(i.column)))return;for(;!a(T,\"tag-name\");)if(\"<\"==(T=s.stepBackward()).value){T=s.stepForward();break}var c=s.getCurrentTokenRow(),u=s.getCurrentTokenColumn();if(a(s.stepBackward(),\"end-tag-open\"))return;var d=T.value;if(c==i.row&&(d=d.substring(0,i.column-u)),this.voidElements&&this.voidElements.hasOwnProperty(d.toLowerCase()))return;return{text:\"></\"+d+\">\",selection:[1,1]}}})),this.add(\"autoindent\",\"insertion\",(function(e,t,n,o,r){if(\"\\n\"==r){var i=n.getCursorPosition(),s=o.getLine(i.row),T=new _(o,i.row,i.column),l=T.getCurrentToken();if(a(l,\"\")&&-1!==l.type.indexOf(\"tag-close\")){if(\"/>\"==l.value)return;for(;l&&-1===l.type.indexOf(\"tag-name\");)l=T.stepBackward();if(!l)return;var g=l.value,c=T.getCurrentTokenRow();if(!(l=T.stepBackward())||-1!==l.type.indexOf(\"end-tag\"))return;if(this.voidElements&&!this.voidElements[g]||!this.voidElements){var u=o.getTokenAt(i.row,i.column+1),d=(s=o.getLine(c),this.$getIndent(s)),L=d+o.getTabString();return u&&\"</\"===u.value?{text:\"\\n\"+L+\"\\n\"+d,selection:[1,L.length,1,L.length]}:{text:\"\\n\"+L}}}}}))};o.inherits(i,r),t.XmlBehaviour=i})),ace.define(\"ace/mode/behaviour/javascript\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/token_iterator\",\"ace/mode/behaviour/cstyle\",\"ace/mode/behaviour/xml\"],(function(e,t,n){\"use strict\";var o=e(\"../../lib/oop\"),r=e(\"../../token_iterator\").TokenIterator,_=e(\"../behaviour/cstyle\").CstyleBehaviour,a=e(\"../behaviour/xml\").XmlBehaviour,i=function(){var e=new a({closeCurlyBraces:!0}).getBehaviours();this.addBehaviours(e),this.inherit(_),this.add(\"autoclosing-fragment\",\"insertion\",(function(e,t,n,o,_){if(\">\"==_){var a=n.getSelectionRange().start,i=new r(o,a.row,a.column),s=i.getCurrentToken()||i.stepBackward();if(!s)return;if(\"<\"==s.value)return{text:\"></>\",selection:[1,1]}}}))};o.inherits(i,_),t.JavaScriptBehaviour=i})),ace.define(\"ace/mode/folding/xml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"],(function(e,t,n){\"use strict\";var o=e(\"../../lib/oop\"),r=e(\"../../range\").Range,_=e(\"./fold_mode\").FoldMode,a=t.FoldMode=function(e,t){_.call(this),this.voidElements=e||{},this.optionalEndTags=o.mixin({},this.voidElements),t&&o.mixin(this.optionalEndTags,t)};o.inherits(a,_);var i=function(){this.tagName=\"\",this.closing=!1,this.selfClosing=!1,this.start={row:0,column:0},this.end={row:0,column:0}};function s(e,t){return e.type.lastIndexOf(t+\".xml\")>-1}(function(){this.getFoldWidget=function(e,t,n){var o=this._getFirstTagInLine(e,n);return o?o.closing||!o.tagName&&o.selfClosing?\"markbeginend\"===t?\"end\":\"\":!o.tagName||o.selfClosing||this.voidElements.hasOwnProperty(o.tagName.toLowerCase())||this._findEndTagInLine(e,n,o.tagName,o.end.column)?\"\":\"start\":this.getCommentFoldWidget(e,n)},this.getCommentFoldWidget=function(e,t){return/comment/.test(e.getState(t))&&/<!-/.test(e.getLine(t))?\"start\":\"\"},this._getFirstTagInLine=function(e,t){for(var n=e.getTokens(t),o=new i,r=0;r<n.length;r++){var _=n[r];if(s(_,\"tag-open\")){if(o.end.column=o.start.column+_.value.length,o.closing=s(_,\"end-tag-open\"),!(_=n[++r]))return null;if(o.tagName=_.value,\"\"===_.value){if(!(_=n[++r]))return null;o.tagName=_.value}for(o.end.column+=_.value.length,r++;r<n.length;r++)if(_=n[r],o.end.column+=_.value.length,s(_,\"tag-close\")){o.selfClosing=\"/>\"==_.value;break}return o}if(s(_,\"tag-close\"))return o.selfClosing=\"/>\"==_.value,o;o.start.column+=_.value.length}return null},this._findEndTagInLine=function(e,t,n,o){for(var r=e.getTokens(t),_=0,a=0;a<r.length;a++){var i=r[a];if(!((_+=i.value.length)<o-1)&&s(i,\"end-tag-open\")&&(s(i=r[a+1],\"tag-name\")&&\"\"===i.value&&(i=r[a+2]),i&&i.value==n))return!0}return!1},this.getFoldWidgetRange=function(e,t,n){if(!this._getFirstTagInLine(e,n))return this.getCommentFoldWidget(e,n)&&e.getCommentFoldRange(n,e.getLine(n).length);var o=e.getMatchingTags({row:n,column:0});return o?new r(o.openTag.end.row,o.openTag.end.column,o.closeTag.start.row,o.closeTag.start.column):void 0}}).call(a.prototype)})),ace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"],(function(e,t,n){\"use strict\";var o=e(\"../../lib/oop\"),r=e(\"../../range\").Range,_=e(\"./fold_mode\").FoldMode,a=t.FoldMode=function(e){e&&(this.foldingStartMarker=new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/,\"|\"+e.start)),this.foldingStopMarker=new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/,\"|\"+e.end)))};o.inherits(a,_),function(){this.foldingStartMarker=/([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/,this.foldingStopMarker=/^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/,this.singleLineBlockCommentRe=/^\\s*(\\/\\*).*\\*\\/\\s*$/,this.tripleStarBlockCommentRe=/^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/,this.startRegionRe=/^\\s*(\\/\\*|\\/\\/)#?region\\b/,this._getFoldWidgetBase=this.getFoldWidget,this.getFoldWidget=function(e,t,n){var o=e.getLine(n);if(this.singleLineBlockCommentRe.test(o)&&!this.startRegionRe.test(o)&&!this.tripleStarBlockCommentRe.test(o))return\"\";var r=this._getFoldWidgetBase(e,t,n);return!r&&this.startRegionRe.test(o)?\"start\":r},this.getFoldWidgetRange=function(e,t,n,o){var r,_=e.getLine(n);if(this.startRegionRe.test(_))return this.getCommentRegionBlock(e,_,n);if(r=_.match(this.foldingStartMarker)){var a=r.index;if(r[1])return this.openingBracketBlock(e,r[1],n,a);var i=e.getCommentFoldRange(n,a+r[0].length,1);return i&&!i.isMultiLine()&&(o?i=this.getSectionRange(e,n):\"all\"!=t&&(i=null)),i}if(\"markbegin\"!==t&&(r=_.match(this.foldingStopMarker))){a=r.index+r[0].length;return r[1]?this.closingBracketBlock(e,r[1],n,a):e.getCommentFoldRange(n,a,-1)}},this.getSectionRange=function(e,t){for(var n=e.getLine(t),o=n.search(/\\S/),_=t,a=n.length,i=t+=1,s=e.getLength();++t<s;){var T=(n=e.getLine(t)).search(/\\S/);if(-1!==T){if(o>T)break;var l=this.getFoldWidgetRange(e,\"all\",t);if(l){if(l.start.row<=_)break;if(l.isMultiLine())t=l.end.row;else if(o==T)break}i=t}}return new r(_,a,i,e.getLine(i).length)},this.getCommentRegionBlock=function(e,t,n){for(var o=t.search(/\\s*$/),_=e.getLength(),a=n,i=/^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/,s=1;++n<_;){t=e.getLine(n);var T=i.exec(t);if(T&&(T[1]?s--:s++,!s))break}if(n>a)return new r(a,o,n,t.length)}}.call(a.prototype)})),ace.define(\"ace/mode/folding/javascript\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/xml\",\"ace/mode/folding/cstyle\"],(function(e,t,n){\"use strict\";var o=e(\"../../lib/oop\"),r=e(\"./xml\").FoldMode,_=e(\"./cstyle\").FoldMode,a=t.FoldMode=function(e){e&&(this.foldingStartMarker=new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/,\"|\"+e.start)),this.foldingStopMarker=new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/,\"|\"+e.end))),this.xmlFoldMode=new r};o.inherits(a,_),function(){this.getFoldWidgetRangeBase=this.getFoldWidgetRange,this.getFoldWidgetBase=this.getFoldWidget,this.getFoldWidget=function(e,t,n){var o=this.getFoldWidgetBase(e,t,n);return o||this.xmlFoldMode.getFoldWidget(e,t,n)},this.getFoldWidgetRange=function(e,t,n,o){var r=this.getFoldWidgetRangeBase(e,t,n,o);return r||this.xmlFoldMode.getFoldWidgetRange(e,t,n)}}.call(a.prototype)})),ace.define(\"ace/mode/javascript\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/javascript_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/worker/worker_client\",\"ace/mode/behaviour/javascript\",\"ace/mode/folding/javascript\"],(function(e,t,n){\"use strict\";var o=e(\"../lib/oop\"),r=e(\"./text\").Mode,_=e(\"./javascript_highlight_rules\").JavaScriptHighlightRules,a=e(\"./matching_brace_outdent\").MatchingBraceOutdent,i=e(\"../worker/worker_client\").WorkerClient,s=e(\"./behaviour/javascript\").JavaScriptBehaviour,T=e(\"./folding/javascript\").FoldMode,l=function(){this.HighlightRules=_,this.$outdent=new a,this.$behaviour=new s,this.foldingRules=new T};o.inherits(l,r),function(){this.lineCommentStart=\"//\",this.blockComment={start:\"/*\",end:\"*/\"},this.$quotes={'\"':'\"',\"'\":\"'\",\"`\":\"`\"},this.$pairQuotesAfter={\"`\":/\\w/},this.getNextLineIndent=function(e,t,n){var o=this.$getIndent(t),r=this.getTokenizer().getLineTokens(t,e),_=r.tokens,a=r.state;if(_.length&&\"comment\"==_[_.length-1].type)return o;if(\"start\"==e||\"no_regex\"==e)(i=t.match(/^.*(?:\\bcase\\b.*:|[\\{\\(\\[])\\s*$/))&&(o+=n);else if(\"doc-start\"==e){if(\"start\"==a||\"no_regex\"==a)return\"\";var i;(i=t.match(/^\\s*(\\/?)\\*/))&&(i[1]&&(o+=\" \"),o+=\"* \")}return o},this.checkOutdent=function(e,t,n){return this.$outdent.checkOutdent(t,n)},this.autoOutdent=function(e,t,n){this.$outdent.autoOutdent(t,n)},this.createWorker=function(e){var t=new i([\"ace\"],\"ace/mode/javascript_worker\",\"JavaScriptWorker\");return t.attachToDocument(e.getDocument()),t.on(\"annotate\",(function(t){e.setAnnotations(t.data)})),t.on(\"terminate\",(function(){e.clearAnnotations()})),t},this.$id=\"ace/mode/javascript\",this.snippetFileId=\"ace/snippets/javascript\"}.call(l.prototype),t.Mode=l})),ace.define(\"ace/mode/gobstones_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],(function(e,t,n){\"use strict\";var o=e(\"../lib/oop\"),r=e(\"./text_highlight_rules\").TextHighlightRules,_=function(){var e=\"program|procedure|function|interactive|return|let\",t=\"type|is|variant|record|field|case\",n={repetitions:\"repeat|while|foreach|in\",alternatives:\"if|elseif|else|switch\"},o={alternatives:\"choose|when|otherwise|matching|select|on\"},r={colors:\"Verde|Rojo|Azul|Negro\",cardinals:\"Norte|Sur|Este|Oeste\",booleans:\"True|False\",numbers:/([-]?)([0-9]+)\\b/,strings:'[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'},_={commands:\"Poner|Sacar|Mover|IrAlBorde|VaciarTablero|BOOM\",expressions:\"nroBolitas|hayBolitas|puedeMover|siguiente|previo|opuesto|minBool|maxBool|minDir|maxDir|minColor|maxColor|primero|sinElPrimero|esVac\\xeda|boom\",keys:\"K_A|K_B|K_C|K_D|K_E|K_F|K_G|K_G|K_H|K_I|K_J|K_K|K_L|K_M|K_N|K_\\xd1|K_O|K_P|K_Q|K_R|K_S|K_T|K_U|K_V|K_W|K_X|K_Y|K_Z|K_0|K_1|K_2|K_3|K_4|K_5|K_6|K_7|K_8|K_9|K_F1|K_F2|K_F3|K_F4|K_F5|K_F6|K_F7|K_F8|K_F9|K_F10|K_F11|K_12|K_UP|K_DOWN|K_LEFT|K_RIGHT|K_RETURN|K_BACKSPACE|K_TAB|K_SPACE|K_ESCAPEK_CTRL_A|K_CTRL_B|K_CTRL_C|K_CTRL_D|K_CTRL_E|K_CTRL_F|K_CTRL_G|K_CTRL_G|K_CTRL_H|K_CTRL_I|K_CTRL_J|K_CTRL_K|K_CTRL_L|K_CTRL_M|K_CTRL_N|K_CTRL_\\xd1|K_CTRL_O|K_CTRL_P|K_CTRL_Q|K_CTRL_R|K_CTRL_S|K_CTRL_T|K_CTRL_U|K_CTRL_V|K_CTRL_W|K_CTRL_X|K_CTRL_Y|K_CTRL_Z|K_CTRL_0|K_CTRL_1|K_CTRL_2|K_CTRL_3|K_CTRL_4|K_CTRL_5|K_CTRL_6|K_CTRL_7|K_CTRL_8|K_CTRL_9|K_CTRL_F1|K_CTRL_F2|K_CTRL_F3|K_CTRL_F4|K_CTRL_F5|K_CTRL_F6|K_CTRL_F7|K_CTRL_F8|K_CTRL_F9|K_CTRL_F10|K_CTRL_F11|K_CTRL_F12|K_CTRL_UP|K_CTRL_DOWN|K_CTRL_LEFT|K_CTRL_RIGHT|K_CTRL_RETURN|K_CTRL_BACKSPACE|K_CTRL_TAB|K_CTRL_SPACE|K_CTRL_ESCAPEK_ALT_A|K_ALT_B|K_ALT_C|K_ALT_D|K_ALT_E|K_ALT_F|K_ALT_G|K_ALT_G|K_ALT_H|K_ALT_I|K_ALT_J|K_ALT_K|K_ALT_L|K_ALT_M|K_ALT_N|K_ALT_\\xd1|K_ALT_O|K_ALT_P|K_ALT_Q|K_ALT_R|K_ALT_S|K_ALT_T|K_ALT_U|K_ALT_V|K_ALT_W|K_ALT_X|K_ALT_Y|K_ALT_Z|K_ALT_0|K_ALT_1|K_ALT_2|K_ALT_3|K_ALT_4|K_ALT_5|K_ALT_6|K_ALT_7|K_ALT_8|K_ALT_9|K_ALT_F1|K_ALT_F2|K_ALT_F3|K_ALT_F4|K_ALT_F5|K_ALT_F6|K_ALT_F7|K_ALT_F8|K_ALT_F9|K_ALT_F10|K_ALT_F11|K_ALT_F12|K_ALT_UP|K_ALT_DOWN|K_ALT_LEFT|K_ALT_RIGHT|K_ALT_RETURN|K_ALT_BACKSPACE|K_ALT_TAB|K_ALT_SPACE|K_ALT_ESCAPEK_SHIFT_A|K_SHIFT_B|K_SHIFT_C|K_SHIFT_D|K_SHIFT_E|K_SHIFT_F|K_SHIFT_G|K_SHIFT_G|K_SHIFT_H|K_SHIFT_I|K_SHIFT_J|K_SHIFT_K|K_SHIFT_L|K_SHIFT_M|K_SHIFT_N|K_SHIFT_\\xd1|K_SHIFT_O|K_SHIFT_P|K_SHIFT_Q|K_SHIFT_R|K_SHIFT_S|K_SHIFT_T|K_SHIFT_U|K_SHIFT_V|K_SHIFT_W|K_SHIFT_X|K_SHIFT_Y|K_SHIFT_Z|K_SHIFT_0|K_SHIFT_1|K_SHIFT_2|K_SHIFT_3|K_SHIFT_4|K_SHIFT_5|K_SHIFT_6|K_SHIFT_7|K_SHIFT_8|K_SHIFT_9|K_SHIFT_F1|K_SHIFT_F2|K_SHIFT_F3|K_SHIFT_F4|K_SHIFT_F5|K_SHIFT_F6|K_SHIFT_F7|K_SHIFT_F8|K_SHIFT_F9|K_SHIFT_F10|K_SHIFT_F11|K_SHIFT_F12|K_SHIFT_UP|K_SHIFT_DOWN|K_SHIFT_LEFT|K_SHIFT_RIGHT|K_SHIFT_RETURN|K_SHIFT_BACKSPACE|K_SHIFT_TAB|K_SHIFT_SPACE|K_SHIFT_ESCAPEK_CTRL_ALT_A|K_CTRL_ALT_B|K_CTRL_ALT_C|K_CTRL_ALT_D|K_CTRL_ALT_E|K_CTRL_ALT_F|K_CTRL_ALT_G|K_CTRL_ALT_G|K_CTRL_ALT_H|K_CTRL_ALT_I|K_CTRL_ALT_J|K_CTRL_ALT_K|K_CTRL_ALT_L|K_CTRL_ALT_M|K_CTRL_ALT_N|K_CTRL_ALT_\\xd1|K_CTRL_ALT_O|K_CTRL_ALT_P|K_CTRL_ALT_Q|K_CTRL_ALT_R|K_CTRL_ALT_S|K_CTRL_ALT_T|K_CTRL_ALT_U|K_CTRL_ALT_V|K_CTRL_ALT_W|K_CTRL_ALT_X|K_CTRL_ALT_Y|K_CTRL_ALT_Z|K_CTRL_ALT_0|K_CTRL_ALT_1|K_CTRL_ALT_2|K_CTRL_ALT_3|K_CTRL_ALT_4|K_CTRL_ALT_5|K_CTRL_ALT_6|K_CTRL_ALT_7|K_CTRL_ALT_8|K_CTRL_ALT_9|K_CTRL_ALT_F1|K_CTRL_ALT_F2|K_CTRL_ALT_F3|K_CTRL_ALT_F4|K_CTRL_ALT_F5|K_CTRL_ALT_F6|K_CTRL_ALT_F7|K_CTRL_ALT_F8|K_CTRL_ALT_F9|K_CTRL_ALT_F10|K_CTRL_ALT_F11|K_CTRL_ALT_F12|K_CTRL_ALT_UP|K_CTRL_ALT_DOWN|K_CTRL_ALT_LEFT|K_CTRL_ALT_RIGHT|K_CTRL_ALT_RETURN|K_CTRL_ALT_BACKSPACE|K_CTRL_ALT_TAB|K_CTRL_ALT_SPACE|K_CTRL_ALT_ESCAPEK_CTRL_SHIFT_A|K_CTRL_SHIFT_B|K_CTRL_SHIFT_C|K_CTRL_SHIFT_D|K_CTRL_SHIFT_E|K_CTRL_SHIFT_F|K_CTRL_SHIFT_G|K_CTRL_SHIFT_G|K_CTRL_SHIFT_H|K_CTRL_SHIFT_I|K_CTRL_SHIFT_J|K_CTRL_SHIFT_K|K_CTRL_SHIFT_L|K_CTRL_SHIFT_M|K_CTRL_SHIFT_N|K_CTRL_SHIFT_\\xd1|K_CTRL_SHIFT_O|K_CTRL_SHIFT_P|K_CTRL_SHIFT_Q|K_CTRL_SHIFT_R|K_CTRL_SHIFT_S|K_CTRL_SHIFT_T|K_CTRL_SHIFT_U|K_CTRL_SHIFT_V|K_CTRL_SHIFT_W|K_CTRL_SHIFT_X|K_CTRL_SHIFT_Y|K_CTRL_SHIFT_Z|K_CTRL_SHIFT_0|K_CTRL_SHIFT_1|K_CTRL_SHIFT_2|K_CTRL_SHIFT_3|K_CTRL_SHIFT_4|K_CTRL_SHIFT_5|K_CTRL_SHIFT_6|K_CTRL_SHIFT_7|K_CTRL_SHIFT_8|K_CTRL_SHIFT_9|K_CTRL_SHIFT_F1|K_CTRL_SHIFT_F2|K_CTRL_SHIFT_F3|K_CTRL_SHIFT_F4|K_CTRL_SHIFT_F5|K_CTRL_SHIFT_F6|K_CTRL_SHIFT_F7|K_CTRL_SHIFT_F8|K_CTRL_SHIFT_9|K_CTRL_SHIFT_10|K_CTRL_SHIFT_11|K_CTRL_SHIFT_12|K_CTRL_SHIFT_UP|K_CTRL_SHIFT_DOWN|K_CTRL_SHIFT_LEFT|K_CTRL_SHIFT_RIGHT|K_CTRL_SHIFT_RETURN|K_CTRL_SHIFT_BACKSPACE|K_CTRL_SHIFT_TAB|K_CTRL_SHIFT_SPACE|K_CTRL_SHIFT_ESCAPEK_ALT_SHIFT_A|K_ALT_SHIFT_B|K_ALT_SHIFT_C|K_ALT_SHIFT_D|K_ALT_SHIFT_E|K_ALT_SHIFT_F|K_ALT_SHIFT_G|K_ALT_SHIFT_G|K_ALT_SHIFT_H|K_ALT_SHIFT_I|K_ALT_SHIFT_J|K_ALT_SHIFT_K|K_ALT_SHIFT_L|K_ALT_SHIFT_M|K_ALT_SHIFT_N|K_ALT_SHIFT_\\xd1|K_ALT_SHIFT_O|K_ALT_SHIFT_P|K_ALT_SHIFT_Q|K_ALT_SHIFT_R|K_ALT_SHIFT_S|K_ALT_SHIFT_T|K_ALT_SHIFT_U|K_ALT_SHIFT_V|K_ALT_SHIFT_W|K_ALT_SHIFT_X|K_ALT_SHIFT_Y|K_ALT_SHIFT_Z|K_ALT_SHIFT_0|K_ALT_SHIFT_1|K_ALT_SHIFT_2|K_ALT_SHIFT_3|K_ALT_SHIFT_4|K_ALT_SHIFT_5|K_ALT_SHIFT_6|K_ALT_SHIFT_7|K_ALT_SHIFT_8|K_ALT_SHIFT_9|K_ALT_SHIFT_F1|K_ALT_SHIFT_F2|K_ALT_SHIFT_F3|K_ALT_SHIFT_F4|K_ALT_SHIFT_F5|K_ALT_SHIFT_F6|K_ALT_SHIFT_F7|K_ALT_SHIFT_F8|K_ALT_SHIFT_9|K_ALT_SHIFT_10|K_ALT_SHIFT_11|K_ALT_SHIFT_12|K_ALT_SHIFT_UP|K_ALT_SHIFT_DOWN|K_ALT_SHIFT_LEFT|K_ALT_SHIFT_RIGHT|K_ALT_SHIFT_RETURN|K_ALT_SHIFT_BACKSPACE|K_ALT_SHIFT_TAB|K_ALT_SHIFT_SPACE|K_ALT_SHIFT_ESCAPEK_CTRL_ALT_SHIFT_A|K_CTRL_ALT_SHIFT_B|K_CTRL_ALT_SHIFT_C|K_CTRL_ALT_SHIFT_D|K_CTRL_ALT_SHIFT_E|K_CTRL_ALT_SHIFT_F|K_CTRL_ALT_SHIFT_G|K_CTRL_ALT_SHIFT_G|K_CTRL_ALT_SHIFT_H|K_CTRL_ALT_SHIFT_I|K_CTRL_ALT_SHIFT_J|K_CTRL_ALT_SHIFT_K|K_CTRL_ALT_SHIFT_L|K_CTRL_ALT_SHIFT_M|K_CTRL_ALT_SHIFT_N|K_CTRL_ALT_SHIFT_\\xd1|K_CTRL_ALT_SHIFT_O|K_CTRL_ALT_SHIFT_P|K_CTRL_ALT_SHIFT_Q|K_CTRL_ALT_SHIFT_R|K_CTRL_ALT_SHIFT_S|K_CTRL_ALT_SHIFT_T|K_CTRL_ALT_SHIFT_U|K_CTRL_ALT_SHIFT_V|K_CTRL_ALT_SHIFT_W|K_CTRL_ALT_SHIFT_X|K_CTRL_ALT_SHIFT_Y|K_CTRL_ALT_SHIFT_Z|K_CTRL_ALT_SHIFT_0|K_CTRL_ALT_SHIFT_1|K_CTRL_ALT_SHIFT_2|K_CTRL_ALT_SHIFT_3|K_CTRL_ALT_SHIFT_4|K_CTRL_ALT_SHIFT_5|K_CTRL_ALT_SHIFT_6|K_CTRL_ALT_SHIFT_7|K_CTRL_ALT_SHIFT_8|K_CTRL_ALT_SHIFT_9|K_CTRL_ALT_SHIFT_F1|K_CTRL_ALT_SHIFT_F2|K_CTRL_ALT_SHIFT_F3|K_CTRL_ALT_SHIFT_F4|K_CTRL_ALT_SHIFT_F5|K_CTRL_ALT_SHIFT_F6|K_CTRL_ALT_SHIFT_F7|K_CTRL_ALT_SHIFT_F8|K_CTRL_ALT_SHIFT_F9|K_CTRL_ALT_SHIFT_F10|K_CTRL_ALT_SHIFT_F11|K_CTRL_ALT_SHIFT_F12|K_CTRL_ALT_SHIFT_UP|K_CTRL_ALT_SHIFT_DOWN|K_CTRL_ALT_SHIFT_LEFT|K_CTRL_ALT_SHIFT_RIGHT|K_CTRL_ALT_SHIFT_RETURN|K_CTRL_ALT_SHIFT_BACKSPACE|K_CTRL_ALT_SHIFT_TAB|K_CTRL_ALT_SHIFT_SPACE|K_CTRL_ALT_SHIFT_ESCAPE\"},a={numeric:\"\\\\+|\\\\-|\\\\*|\\\\^|div|mod\",comparison:\">=|<=|==|\\\\/=|>|<\",boolean:\"\\\\|\\\\||&&|not\",other:\"\\\\+\\\\+|<\\\\-|\\\\[|\\\\]|\\\\_|\\\\->\"},i={double_slash:\"\\\\/\\\\/.*$\",double_dash:\"\\\\-\\\\-.*$\",number_sign:\"#.*$\"},s={start:\"\\\\/\\\\*\",end:\"\\\\*\\\\/\"},T={start:\"\\\\{\\\\-\",end:\"\\\\-\\\\}\"};this.$rules={start:[{token:\"comment.line.double-slash.gobstones\",regex:i.double_slash},{token:\"comment.line.double-dash.gobstones\",regex:i.double_dash},{token:\"comment.line.number-sign.gobstones\",regex:i.number_sign},{token:\"comment.block.dash-asterisc.gobstones\",regex:s.start,next:\"block_comment_end\"},{token:\"comment.block.brace-dash.gobstones\",regex:T.start,next:\"block_comment_alt_end\"},{token:\"constant.numeric.gobstones\",regex:r.numbers},{token:\"string.quoted.double.gobstones\",regex:r.strings},{token:\"keyword.operator.other.gobstones\",regex:a.other},{token:\"keyword.operator.numeric.gobstones\",regex:a.numeric},{token:\"keyword.operator.compare.gobstones\",regex:a.comparison},{token:\"keyword.operator.boolean.gobstones\",regex:a.boolean},{token:this.createKeywordMapper({\"storage.type.definitions.gobstones\":e,\"storage.type.types.gobstones\":t,\"keyword.control.commands.repetitions.gobstones\":n.repetitions,\"keyword.control.commands.alternatives.gobstones\":n.alternatives,\"keyword.control.expressions.alternatives.gobstones\":o.alternatives,\"constant.language.colors.gobstones\":r.colors,\"constant.language.cardinals.gobstones\":r.cardinals,\"constant.language.boolean.gobstones\":r.booleans,\"support.function.gobstones\":_.commands,\"support.variable.gobstones\":_.expressions,\"variable.language.gobstones\":_.keys},\"identifier.gobstones\"),regex:\"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"},{token:\"comma.gobstones\",regex:\",\"},{token:\"semicolon.gobstones\",regex:\";\"},{token:\"lparen\",regex:\"[[({]\"},{token:\"rparen\",regex:\"[\\\\])}]\"},{token:\"text\",regex:\"\\\\s+\"}],block_comment_end:[{token:\"comment.block.dash-asterisc.gobstones\",regex:s.end,next:\"start\"},{defaultToken:\"comment.block.dash-asterisc.gobstones\"}],block_comment_alt_end:[{token:\"comment.block.brace-dash.gobstones\",regex:T.end,next:\"start\"},{defaultToken:\"comment.block.brace-dash.gobstones\"}]}};o.inherits(_,r),t.GobstonesHighlightRules=_})),ace.define(\"ace/mode/gobstones\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/javascript\",\"ace/mode/gobstones_highlight_rules\"],(function(e,t,n){\"use strict\";var o=e(\"../lib/oop\"),r=e(\"./javascript\").Mode,_=e(\"./gobstones_highlight_rules\").GobstonesHighlightRules,a=function(){r.call(this),this.HighlightRules=_,this.$behaviour=this.$defaultBehaviour};o.inherits(a,r),function(){this.createWorker=function(){return null},this.$id=\"ace/mode/gobstones\",this.snippetFileId=\"ace/snippets/gobstones\"}.call(a.prototype),t.Mode=a})),ace.require([\"ace/mode/gobstones\"],(function(e){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=e)}));","name":"cdf47c01b017303edfbb9a97a09e6a2d.js","input":"ace.define(\"ace/mode/jsdoc_comment_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var JsDocCommentHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        token: [\"comment.doc.tag\", \"comment.doc.text\", \"lparen.doc\"],\n        regex: \"(@(?:param|member|typedef|property|namespace|var|const|callback))(\\\\s*)({)\",\n        push: [{\n          token: \"lparen.doc\",\n          regex: \"{\",\n          push: [{\n            include: \"doc-syntax\"\n          }, {\n            token: \"rparen.doc\",\n            regex: \"}|(?=$)\",\n            next: \"pop\"\n          }]\n        }, {\n          token: [\"rparen.doc\", \"text.doc\", \"variable.parameter.doc\", \"lparen.doc\", \"variable.parameter.doc\", \"rparen.doc\"],\n          regex: /(})(\\s*)(?:([\\w=:\\/\\.]+)|(?:(\\[)([\\w=:\\/\\.]+)(\\])))/,\n          next: \"pop\"\n        }, {\n          token: \"rparen.doc\",\n          regex: \"}|(?=$)\",\n          next: \"pop\"\n        }, {\n          include: \"doc-syntax\"\n        }, {\n          defaultToken: \"text.doc\"\n        }]\n      }, {\n        token: [\"comment.doc.tag\", \"text.doc\", \"lparen.doc\"],\n        regex: \"(@(?:returns?|yields|type|this|suppress|public|protected|private|package|modifies|\" + \"implements|external|exception|throws|enum|define|extends))(\\\\s*)({)\",\n        push: [{\n          token: \"lparen.doc\",\n          regex: \"{\",\n          push: [{\n            include: \"doc-syntax\"\n          }, {\n            token: \"rparen.doc\",\n            regex: \"}|(?=$)\",\n            next: \"pop\"\n          }]\n        }, {\n          token: \"rparen.doc\",\n          regex: \"}|(?=$)\",\n          next: \"pop\"\n        }, {\n          include: \"doc-syntax\"\n        }, {\n          defaultToken: \"text.doc\"\n        }]\n      }, {\n        token: [\"comment.doc.tag\", \"text.doc\", \"variable.parameter.doc\"],\n        regex: \"(@(?:alias|memberof|instance|module|name|lends|namespace|external|this|template|\" + \"requires|param|implements|function|extends|typedef|mixes|constructor|var|\" + \"memberof\\\\!|event|listens|exports|class|constructs|interface|emits|fires|\" + \"throws|const|callback|borrows|augments))(\\\\s+)(\\\\w[\\\\w#\\.:\\/~\\\"\\\\-]*)?\"\n      }, {\n        token: [\"comment.doc.tag\", \"text.doc\", \"variable.parameter.doc\"],\n        regex: \"(@method)(\\\\s+)(\\\\w[\\\\w\\.\\\\(\\\\)]*)\"\n      }, {\n        token: \"comment.doc.tag\",\n        regex: \"@access\\\\s+(?:private|public|protected)\"\n      }, {\n        token: \"comment.doc.tag\",\n        regex: \"@kind\\\\s+(?:class|constant|event|external|file|function|member|mixin|module|namespace|typedef)\"\n      }, {\n        token: \"comment.doc.tag\",\n        regex: \"@\\\\w+(?=\\\\s|$)\"\n      }, JsDocCommentHighlightRules.getTagRule(), {\n        defaultToken: \"comment.doc.body\",\n        caseInsensitive: true\n      }],\n      \"doc-syntax\": [{\n        token: \"operator.doc\",\n        regex: /[|:]/\n      }, {\n        token: \"paren.doc\",\n        regex: /[\\[\\]]/\n      }]\n    };\n    this.normalizeRules();\n  };\n  oop.inherits(JsDocCommentHighlightRules, TextHighlightRules);\n  JsDocCommentHighlightRules.getTagRule = function (start) {\n    return {\n      token: \"comment.doc.tag.storage.type\",\n      regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n  };\n  JsDocCommentHighlightRules.getStartRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // doc comment\n      regex: /\\/\\*\\*(?!\\/)/,\n      next: start\n    };\n  };\n  JsDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // closing comment\n      regex: \"\\\\*\\\\/\",\n      next: start\n    };\n  };\n  exports.JsDocCommentHighlightRules = JsDocCommentHighlightRules;\n});\nace.define(\"ace/mode/javascript_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/jsdoc_comment_highlight_rules\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var DocCommentHighlightRules = require(\"./jsdoc_comment_highlight_rules\").JsDocCommentHighlightRules;\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var identifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\";\n  var JavaScriptHighlightRules = function (options) {\n    var keywords = {\n      \"variable.language\": \"Array|Boolean|Date|Function|Iterator|Number|Object|RegExp|String|Proxy|Symbol|\" +\n      // Constructors\n      \"Namespace|QName|XML|XMLList|\" +\n      // E4X\n      \"ArrayBuffer|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|\" + \"Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray|\" + \"Error|EvalError|InternalError|RangeError|ReferenceError|StopIteration|\" +\n      // Errors\n      \"SyntaxError|TypeError|URIError|\" + \"decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|eval|isFinite|\" +\n      // Non-constructor functions\n      \"isNaN|parseFloat|parseInt|\" + \"JSON|Math|\" +\n      // Other\n      \"this|arguments|prototype|window|document\",\n      // Pseudo\n      \"keyword\": \"const|yield|import|get|set|async|await|\" + \"break|case|catch|continue|default|delete|do|else|finally|for|\" + \"if|in|of|instanceof|new|return|switch|throw|try|typeof|let|var|while|with|debugger|\" + \"__parent__|__count__|escape|unescape|with|__proto__|\" + \"class|enum|extends|super|export|implements|private|public|interface|package|protected|static|constructor\",\n      \"storage.type\": \"const|let|var|function\",\n      \"constant.language\": \"null|Infinity|NaN|undefined\",\n      \"support.function\": \"alert\",\n      \"constant.language.boolean\": \"true|false\"\n    };\n    var keywordMapper = this.createKeywordMapper(keywords, \"identifier\");\n    var kwBeforeRe = \"case|do|else|finally|in|instanceof|return|throw|try|typeof|yield|void\";\n    var escapedRe = \"\\\\\\\\(?:x[0-9a-fA-F]{2}|\" +\n    // hex\n    \"u[0-9a-fA-F]{4}|\" +\n    // unicode\n    \"u{[0-9a-fA-F]{1,6}}|\" +\n    // es6 unicode\n    \"[0-2][0-7]{0,2}|\" +\n    // oct\n    \"3[0-7][0-7]?|\" +\n    // oct\n    \"[4-7][0-7]?|\" +\n    //oct\n    \".)\";\n    var anonymousFunctionRe = \"(function)(\\\\s*)(\\\\*?)\";\n    var functionCallStartRule = {\n      token: [\"identifier\", \"text\", \"paren.lparen\"],\n      regex: \"(\\\\b(?!\" + Object.values(keywords).join(\"|\") + \"\\\\b)\" + identifierRe + \")(\\\\s*)(\\\\()\"\n    };\n    this.$rules = {\n      \"no_regex\": [DocCommentHighlightRules.getStartRule(\"doc-start\"), comments(\"no_regex\"), functionCallStartRule, {\n        token: \"string\",\n        regex: \"'(?=.)\",\n        next: \"qstring\"\n      }, {\n        token: \"string\",\n        regex: '\"(?=.)',\n        next: \"qqstring\"\n      }, {\n        token: \"constant.numeric\",\n        // hexadecimal, octal and binary\n        regex: /0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/\n      }, {\n        token: \"constant.numeric\",\n        // decimal integers and floats\n        regex: /(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n      }, {\n        token: [\"entity.name.function\", \"text\", \"keyword.operator\", \"text\", \"storage.type\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"],\n        regex: \"(\" + identifierRe + \")(\\\\s*)(=)(\\\\s*)\" + anonymousFunctionRe + \"(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"storage.type\", \"text\", \"storage.type\", \"text\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"],\n        regex: \"(function)(?:(?:(\\\\s*)(\\\\*)(\\\\s*))|(\\\\s+))(\" + identifierRe + \")(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"entity.name.function\", \"text\", \"punctuation.operator\", \"text\", \"storage.type\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"],\n        regex: \"(\" + identifierRe + \")(\\\\s*)(:)(\\\\s*)\" + anonymousFunctionRe + \"(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"text\", \"text\", \"storage.type\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"],\n        regex: \"(:)(\\\\s*)\" + anonymousFunctionRe + \"(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: \"keyword\",\n        regex: \"from(?=\\\\s*('|\\\"))\"\n      }, {\n        token: \"keyword\",\n        regex: \"(?:\" + kwBeforeRe + \")\\\\b\",\n        next: \"start\"\n      }, {\n        token: \"support.constant\",\n        regex: /that\\b/\n      }, {\n        token: [\"storage.type\", \"punctuation.operator\", \"support.function.firebug\"],\n        regex: /(console)(\\.)(warn|info|log|error|debug|time|trace|timeEnd|assert)\\b/\n      }, {\n        token: keywordMapper,\n        regex: identifierRe\n      }, {\n        token: \"punctuation.operator\",\n        regex: /[.](?![.])/,\n        next: \"property\"\n      }, {\n        token: \"storage.type\",\n        regex: /=>/,\n        next: \"start\"\n      }, {\n        token: \"keyword.operator\",\n        regex: /--|\\+\\+|\\.{3}|===|==|=|!=|!==|<+=?|>+=?|!|&&|\\|\\||\\?:|[!$%&*+\\-~\\/^]=?/,\n        next: \"start\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: /[?:,;.]/,\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: /[\\[({]/,\n        next: \"start\"\n      }, {\n        token: \"paren.rparen\",\n        regex: /[\\])}]/\n      }, {\n        token: \"comment\",\n        regex: /^#!.*$/\n      }],\n      property: [{\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }, {\n        token: \"keyword.operator\",\n        regex: /=/\n      }, {\n        token: [\"storage.type\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"],\n        regex: anonymousFunctionRe + \"(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"storage.type\", \"text\", \"storage.type\", \"text\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"],\n        regex: \"(function)(?:(?:(\\\\s*)(\\\\*)(\\\\s*))|(\\\\s+))(\\\\w+)(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: /[.](?![.])/\n      }, {\n        token: \"support.function\",\n        regex: \"prototype\"\n      }, {\n        token: \"support.function\",\n        regex: /(s(?:h(?:ift|ow(?:Mod(?:elessDialog|alDialog)|Help))|croll(?:X|By(?:Pages|Lines)?|Y|To)?|t(?:op|rike)|i(?:n|zeToContent|debar|gnText)|ort|u(?:p|b(?:str(?:ing)?)?)|pli(?:ce|t)|e(?:nd|t(?:Re(?:sizable|questHeader)|M(?:i(?:nutes|lliseconds)|onth)|Seconds|Ho(?:tKeys|urs)|Year|Cursor|Time(?:out)?|Interval|ZOptions|Date|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|h(?:ome|andleEvent)|navigate|c(?:har(?:CodeAt|At)|o(?:s|n(?:cat|textual|firm)|mpile)|eil|lear(?:Timeout|Interval)?|a(?:ptureEvents|ll)|reate(?:StyleSheet|Popup|EventObject))|t(?:o(?:GMTString|S(?:tring|ource)|U(?:TCString|pperCase)|Lo(?:caleString|werCase))|est|a(?:n|int(?:Enabled)?))|i(?:s(?:NaN|Finite)|ndexOf|talics)|d(?:isableExternalCapture|ump|etachEvent)|u(?:n(?:shift|taint|escape|watch)|pdateCommands)|j(?:oin|avaEnabled)|p(?:o(?:p|w)|ush|lugins.refresh|a(?:ddings|rse(?:Int|Float)?)|r(?:int|ompt|eference))|e(?:scape|nableExternalCapture|val|lementFromPoint|x(?:p|ec(?:Script|Command)?))|valueOf|UTC|queryCommand(?:State|Indeterm|Enabled|Value)|f(?:i(?:nd|lter|le(?:ModifiedDate|Size|CreatedDate|UpdatedDate)|xed)|o(?:nt(?:size|color)|rward|rEach)|loor|romCharCode)|watch|l(?:ink|o(?:ad|g)|astIndexOf)|a(?:sin|nchor|cos|t(?:tachEvent|ob|an(?:2)?)|pply|lert|b(?:s|ort))|r(?:ou(?:nd|teEvents)|e(?:size(?:By|To)|calc|turnValue|place|verse|l(?:oad|ease(?:Capture|Events)))|andom)|g(?:o|et(?:ResponseHeader|M(?:i(?:nutes|lliseconds)|onth)|Se(?:conds|lection)|Hours|Year|Time(?:zoneOffset)?|Da(?:y|te)|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Da(?:y|te)|FullYear)|FullYear|A(?:ttention|llResponseHeaders)))|m(?:in|ove(?:B(?:y|elow)|To(?:Absolute)?|Above)|ergeAttributes|a(?:tch|rgins|x))|b(?:toa|ig|o(?:ld|rderWidths)|link|ack))\\b(?=\\()/\n      }, {\n        token: \"support.function.dom\",\n        regex: /(s(?:ub(?:stringData|mit)|plitText|e(?:t(?:NamedItem|Attribute(?:Node)?)|lect))|has(?:ChildNodes|Feature)|namedItem|c(?:l(?:ick|o(?:se|neNode))|reate(?:C(?:omment|DATASection|aption)|T(?:Head|extNode|Foot)|DocumentFragment|ProcessingInstruction|E(?:ntityReference|lement)|Attribute))|tabIndex|i(?:nsert(?:Row|Before|Cell|Data)|tem)|open|delete(?:Row|C(?:ell|aption)|T(?:Head|Foot)|Data)|focus|write(?:ln)?|a(?:dd|ppend(?:Child|Data))|re(?:set|place(?:Child|Data)|move(?:NamedItem|Child|Attribute(?:Node)?)?)|get(?:NamedItem|Element(?:sBy(?:Name|TagName|ClassName)|ById)|Attribute(?:Node)?)|blur)\\b(?=\\()/\n      }, {\n        token: \"support.constant\",\n        regex: /(s(?:ystemLanguage|cr(?:ipts|ollbars|een(?:X|Y|Top|Left))|t(?:yle(?:Sheets)?|atus(?:Text|bar)?)|ibling(?:Below|Above)|ource|uffixes|e(?:curity(?:Policy)?|l(?:ection|f)))|h(?:istory|ost(?:name)?|as(?:h|Focus))|y|X(?:MLDocument|SLDocument)|n(?:ext|ame(?:space(?:s|URI)|Prop))|M(?:IN_VALUE|AX_VALUE)|c(?:haracterSet|o(?:n(?:structor|trollers)|okieEnabled|lorDepth|mp(?:onents|lete))|urrent|puClass|l(?:i(?:p(?:boardData)?|entInformation)|osed|asses)|alle(?:e|r)|rypto)|t(?:o(?:olbar|p)|ext(?:Transform|Indent|Decoration|Align)|ags)|SQRT(?:1_2|2)|i(?:n(?:ner(?:Height|Width)|put)|ds|gnoreCase)|zIndex|o(?:scpu|n(?:readystatechange|Line)|uter(?:Height|Width)|p(?:sProfile|ener)|ffscreenBuffering)|NEGATIVE_INFINITY|d(?:i(?:splay|alog(?:Height|Top|Width|Left|Arguments)|rectories)|e(?:scription|fault(?:Status|Ch(?:ecked|arset)|View)))|u(?:ser(?:Profile|Language|Agent)|n(?:iqueID|defined)|pdateInterval)|_content|p(?:ixelDepth|ort|ersonalbar|kcs11|l(?:ugins|atform)|a(?:thname|dding(?:Right|Bottom|Top|Left)|rent(?:Window|Layer)?|ge(?:X(?:Offset)?|Y(?:Offset)?))|r(?:o(?:to(?:col|type)|duct(?:Sub)?|mpter)|e(?:vious|fix)))|e(?:n(?:coding|abledPlugin)|x(?:ternal|pando)|mbeds)|v(?:isibility|endor(?:Sub)?|Linkcolor)|URLUnencoded|P(?:I|OSITIVE_INFINITY)|f(?:ilename|o(?:nt(?:Size|Family|Weight)|rmName)|rame(?:s|Element)|gColor)|E|whiteSpace|l(?:i(?:stStyleType|n(?:eHeight|kColor))|o(?:ca(?:tion(?:bar)?|lName)|wsrc)|e(?:ngth|ft(?:Context)?)|a(?:st(?:M(?:odified|atch)|Index|Paren)|yer(?:s|X)|nguage))|a(?:pp(?:MinorVersion|Name|Co(?:deName|re)|Version)|vail(?:Height|Top|Width|Left)|ll|r(?:ity|guments)|Linkcolor|bove)|r(?:ight(?:Context)?|e(?:sponse(?:XML|Text)|adyState))|global|x|m(?:imeTypes|ultiline|enubar|argin(?:Right|Bottom|Top|Left))|L(?:N(?:10|2)|OG(?:10E|2E))|b(?:o(?:ttom|rder(?:Width|RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth))|ufferDepth|elow|ackground(?:Color|Image)))\\b/\n      }, {\n        token: \"identifier\",\n        regex: identifierRe\n      }, {\n        regex: \"\",\n        token: \"empty\",\n        next: \"no_regex\"\n      }],\n      \"start\": [DocCommentHighlightRules.getStartRule(\"doc-start\"), comments(\"start\"), {\n        token: \"string.regexp\",\n        regex: \"\\\\/\",\n        next: \"regex\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+|^$\",\n        next: \"start\"\n      }, {\n        token: \"empty\",\n        regex: \"\",\n        next: \"no_regex\"\n      }],\n      \"regex\": [{\n        token: \"regexp.keyword.operator\",\n        regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n      }, {\n        token: \"string.regexp\",\n        regex: \"/[sxngimy]*\",\n        next: \"no_regex\"\n      }, {\n        token: \"invalid\",\n        regex: /\\{\\d+\\b,?\\d*\\}[+*]|[+*$^?][+*]|[$^][?]|\\?{3,}/\n      }, {\n        token: \"constant.language.escape\",\n        regex: /\\(\\?[:=!]|\\)|\\{\\d+\\b,?\\d*\\}|[+*]\\?|[()$^+*?.]/\n      }, {\n        token: \"constant.language.delimiter\",\n        regex: /\\|/\n      }, {\n        token: \"constant.language.escape\",\n        regex: /\\[\\^?/,\n        next: \"regex_character_class\"\n      }, {\n        token: \"empty\",\n        regex: \"$\",\n        next: \"no_regex\"\n      }, {\n        defaultToken: \"string.regexp\"\n      }],\n      \"regex_character_class\": [{\n        token: \"regexp.charclass.keyword.operator\",\n        regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n      }, {\n        token: \"constant.language.escape\",\n        regex: \"]\",\n        next: \"regex\"\n      }, {\n        token: \"constant.language.escape\",\n        regex: \"-\"\n      }, {\n        token: \"empty\",\n        regex: \"$\",\n        next: \"no_regex\"\n      }, {\n        defaultToken: \"string.regexp.charachterclass\"\n      }],\n      \"default_parameter\": [{\n        token: \"string\",\n        regex: \"'(?=.)\",\n        push: [{\n          token: \"string\",\n          regex: \"'|$\",\n          next: \"pop\"\n        }, {\n          include: \"qstring\"\n        }]\n      }, {\n        token: \"string\",\n        regex: '\"(?=.)',\n        push: [{\n          token: \"string\",\n          regex: '\"|$',\n          next: \"pop\"\n        }, {\n          include: \"qqstring\"\n        }]\n      }, {\n        token: \"constant.language\",\n        regex: \"null|Infinity|NaN|undefined\"\n      }, {\n        token: \"constant.numeric\",\n        // hexadecimal, octal and binary\n        regex: /0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/\n      }, {\n        token: \"constant.numeric\",\n        // decimal integers and floats\n        regex: /(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n      }, {\n        token: \"punctuation.operator\",\n        regex: \",\",\n        next: \"function_arguments\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: \"$\"\n      }, {\n        token: \"empty\",\n        regex: \"\",\n        next: \"no_regex\"\n      }],\n      \"function_arguments\": [comments(\"function_arguments\"), {\n        token: \"variable.parameter\",\n        regex: identifierRe\n      }, {\n        token: \"punctuation.operator\",\n        regex: \",\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: \"$\"\n      }, {\n        token: \"empty\",\n        regex: \"\",\n        next: \"no_regex\"\n      }],\n      \"qqstring\": [{\n        token: \"constant.language.escape\",\n        regex: escapedRe\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        consumeLineEnd: true\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"no_regex\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"qstring\": [{\n        token: \"constant.language.escape\",\n        regex: escapedRe\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        consumeLineEnd: true\n      }, {\n        token: \"string\",\n        regex: \"'|$\",\n        next: \"no_regex\"\n      }, {\n        defaultToken: \"string\"\n      }]\n    };\n    if (!options || !options.noES6) {\n      this.$rules.no_regex.unshift({\n        regex: \"[{}]\",\n        onMatch: function (val, state, stack) {\n          this.next = val == \"{\" ? this.nextState : \"\";\n          if (val == \"{\" && stack.length) {\n            stack.unshift(\"start\", state);\n          } else if (val == \"}\" && stack.length) {\n            stack.shift();\n            this.next = stack.shift();\n            if (this.next.indexOf(\"string\") != -1 || this.next.indexOf(\"jsx\") != -1) return \"paren.quasi.end\";\n          }\n          return val == \"{\" ? \"paren.lparen\" : \"paren.rparen\";\n        },\n        nextState: \"start\"\n      }, {\n        token: \"string.quasi.start\",\n        regex: /`/,\n        push: [{\n          token: \"constant.language.escape\",\n          regex: escapedRe\n        }, {\n          token: \"paren.quasi.start\",\n          regex: /\\${/,\n          push: \"start\"\n        }, {\n          token: \"string.quasi.end\",\n          regex: /`/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"string.quasi\"\n        }]\n      }, {\n        token: [\"variable.parameter\", \"text\"],\n        regex: \"(\" + identifierRe + \")(\\\\s*)(?=\\\\=>)\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"(\\\\()(?=[^\\\\(]+\\\\s*=>)\",\n        next: \"function_arguments\"\n      }, {\n        token: \"variable.language\",\n        regex: \"(?:(?:(?:Weak)?(?:Set|Map))|Promise)\\\\b\"\n      });\n      this.$rules[\"function_arguments\"].unshift({\n        token: \"keyword.operator\",\n        regex: \"=\",\n        next: \"default_parameter\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"\\\\.{3}\"\n      });\n      this.$rules[\"property\"].unshift({\n        token: \"support.function\",\n        regex: \"(findIndex|repeat|startsWith|endsWith|includes|isSafeInteger|trunc|cbrt|log2|log10|sign|then|catch|\" + \"finally|resolve|reject|race|any|all|allSettled|keys|entries|isInteger)\\\\b(?=\\\\()\"\n      }, {\n        token: \"constant.language\",\n        regex: \"(?:MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|EPSILON)\\\\b\"\n      });\n      if (!options || options.jsx != false) JSX.call(this);\n    }\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"no_regex\")]);\n    this.normalizeRules();\n  };\n  oop.inherits(JavaScriptHighlightRules, TextHighlightRules);\n  function JSX() {\n    var tagRegex = identifierRe.replace(\"\\\\d\", \"\\\\d\\\\-\");\n    var jsxTag = {\n      onMatch: function (val, state, stack) {\n        var offset = val.charAt(1) == \"/\" ? 2 : 1;\n        if (offset == 1) {\n          if (state != this.nextState) stack.unshift(this.next, this.nextState, 0);else stack.unshift(this.next);\n          stack[2]++;\n        } else if (offset == 2) {\n          if (state == this.nextState) {\n            stack[1]--;\n            if (!stack[1] || stack[1] < 0) {\n              stack.shift();\n              stack.shift();\n            }\n          }\n        }\n        return [{\n          type: \"meta.tag.punctuation.\" + (offset == 1 ? \"\" : \"end-\") + \"tag-open.xml\",\n          value: val.slice(0, offset)\n        }, {\n          type: \"meta.tag.tag-name.xml\",\n          value: val.substr(offset)\n        }];\n      },\n      regex: \"</?(?:\" + tagRegex + \"|(?=>))\",\n      next: \"jsxAttributes\",\n      nextState: \"jsx\"\n    };\n    this.$rules.start.unshift(jsxTag);\n    var jsxJsRule = {\n      regex: \"{\",\n      token: \"paren.quasi.start\",\n      push: \"start\"\n    };\n    this.$rules.jsx = [jsxJsRule, jsxTag, {\n      include: \"reference\"\n    }, {\n      defaultToken: \"string.xml\"\n    }];\n    this.$rules.jsxAttributes = [{\n      token: \"meta.tag.punctuation.tag-close.xml\",\n      regex: \"/?>\",\n      onMatch: function (value, currentState, stack) {\n        if (currentState == stack[0]) stack.shift();\n        if (value.length == 2) {\n          if (stack[0] == this.nextState) stack[1]--;\n          if (!stack[1] || stack[1] < 0) {\n            stack.splice(0, 2);\n          }\n        }\n        this.next = stack[0] || \"start\";\n        return [{\n          type: this.token,\n          value: value\n        }];\n      },\n      nextState: \"jsx\"\n    }, jsxJsRule, comments(\"jsxAttributes\"), {\n      token: \"entity.other.attribute-name.xml\",\n      regex: tagRegex\n    }, {\n      token: \"keyword.operator.attribute-equals.xml\",\n      regex: \"=\"\n    }, {\n      token: \"text.tag-whitespace.xml\",\n      regex: \"\\\\s+\"\n    }, {\n      token: \"string.attribute-value.xml\",\n      regex: \"'\",\n      stateName: \"jsx_attr_q\",\n      push: [{\n        token: \"string.attribute-value.xml\",\n        regex: \"'\",\n        next: \"pop\"\n      }, {\n        include: \"reference\"\n      }, {\n        defaultToken: \"string.attribute-value.xml\"\n      }]\n    }, {\n      token: \"string.attribute-value.xml\",\n      regex: '\"',\n      stateName: \"jsx_attr_qq\",\n      push: [{\n        token: \"string.attribute-value.xml\",\n        regex: '\"',\n        next: \"pop\"\n      }, {\n        include: \"reference\"\n      }, {\n        defaultToken: \"string.attribute-value.xml\"\n      }]\n    }, jsxTag];\n    this.$rules.reference = [{\n      token: \"constant.language.escape.reference.xml\",\n      regex: \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n    }];\n  }\n  function comments(next) {\n    return [{\n      token: \"comment\",\n      // multi line comment\n      regex: /\\/\\*/,\n      next: [DocCommentHighlightRules.getTagRule(), {\n        token: \"comment\",\n        regex: \"\\\\*\\\\/\",\n        next: next || \"pop\"\n      }, {\n        defaultToken: \"comment\",\n        caseInsensitive: true\n      }]\n    }, {\n      token: \"comment\",\n      regex: \"\\\\/\\\\/\",\n      next: [DocCommentHighlightRules.getTagRule(), {\n        token: \"comment\",\n        regex: \"$|^\",\n        next: next || \"pop\"\n      }, {\n        defaultToken: \"comment\",\n        caseInsensitive: true\n      }]\n    }];\n  }\n  exports.JavaScriptHighlightRules = JavaScriptHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n  var MatchingBraceOutdent = function () {};\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/behaviour/xml\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/behaviour\", \"ace/token_iterator\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Behaviour = require(\"../behaviour\").Behaviour;\n  var TokenIterator = require(\"../../token_iterator\").TokenIterator;\n  function is(token, type) {\n    return token && token.type.lastIndexOf(type + \".xml\") > -1;\n  }\n  var XmlBehaviour = function () {\n    this.add(\"string_dquotes\", \"insertion\", function (state, action, editor, session, text) {\n      if (text == '\"' || text == \"'\") {\n        var quote = text;\n        var selected = session.doc.getTextRange(editor.getSelectionRange());\n        if (selected !== \"\" && selected !== \"'\" && selected != '\"' && editor.getWrapBehavioursEnabled()) {\n          return {\n            text: quote + selected + quote,\n            selection: false\n          };\n        }\n        var cursor = editor.getCursorPosition();\n        var line = session.doc.getLine(cursor.row);\n        var rightChar = line.substring(cursor.column, cursor.column + 1);\n        var iterator = new TokenIterator(session, cursor.row, cursor.column);\n        var token = iterator.getCurrentToken();\n        if (rightChar == quote && (is(token, \"attribute-value\") || is(token, \"string\"))) {\n          return {\n            text: \"\",\n            selection: [1, 1]\n          };\n        }\n        if (!token) token = iterator.stepBackward();\n        if (!token) return;\n        while (is(token, \"tag-whitespace\") || is(token, \"whitespace\")) {\n          token = iterator.stepBackward();\n        }\n        var rightSpace = !rightChar || rightChar.match(/\\s/);\n        if (is(token, \"attribute-equals\") && (rightSpace || rightChar == '>') || is(token, \"decl-attribute-equals\") && (rightSpace || rightChar == '?')) {\n          return {\n            text: quote + quote,\n            selection: [1, 1]\n          };\n        }\n      }\n    });\n    this.add(\"string_dquotes\", \"deletion\", function (state, action, editor, session, range) {\n      var selected = session.doc.getTextRange(range);\n      if (!range.isMultiLine() && (selected == '\"' || selected == \"'\")) {\n        var line = session.doc.getLine(range.start.row);\n        var rightChar = line.substring(range.start.column + 1, range.start.column + 2);\n        if (rightChar == selected) {\n          range.end.column++;\n          return range;\n        }\n      }\n    });\n    this.add(\"autoclosing\", \"insertion\", function (state, action, editor, session, text) {\n      if (text == '>') {\n        var position = editor.getSelectionRange().start;\n        var iterator = new TokenIterator(session, position.row, position.column);\n        var token = iterator.getCurrentToken() || iterator.stepBackward();\n        if (!token || !(is(token, \"tag-name\") || is(token, \"tag-whitespace\") || is(token, \"attribute-name\") || is(token, \"attribute-equals\") || is(token, \"attribute-value\"))) return;\n        if (is(token, \"reference.attribute-value\")) return;\n        if (is(token, \"attribute-value\")) {\n          var tokenEndColumn = iterator.getCurrentTokenColumn() + token.value.length;\n          if (position.column < tokenEndColumn) return;\n          if (position.column == tokenEndColumn) {\n            var nextToken = iterator.stepForward();\n            if (nextToken && is(nextToken, \"attribute-value\")) return;\n            iterator.stepBackward();\n          }\n        }\n        if (/^\\s*>/.test(session.getLine(position.row).slice(position.column))) return;\n        while (!is(token, \"tag-name\")) {\n          token = iterator.stepBackward();\n          if (token.value == \"<\") {\n            token = iterator.stepForward();\n            break;\n          }\n        }\n        var tokenRow = iterator.getCurrentTokenRow();\n        var tokenColumn = iterator.getCurrentTokenColumn();\n        if (is(iterator.stepBackward(), \"end-tag-open\")) return;\n        var element = token.value;\n        if (tokenRow == position.row) element = element.substring(0, position.column - tokenColumn);\n        if (this.voidElements && this.voidElements.hasOwnProperty(element.toLowerCase())) return;\n        return {\n          text: \">\" + \"</\" + element + \">\",\n          selection: [1, 1]\n        };\n      }\n    });\n    this.add(\"autoindent\", \"insertion\", function (state, action, editor, session, text) {\n      if (text == \"\\n\") {\n        var cursor = editor.getCursorPosition();\n        var line = session.getLine(cursor.row);\n        var iterator = new TokenIterator(session, cursor.row, cursor.column);\n        var token = iterator.getCurrentToken();\n        if (is(token, \"\") && token.type.indexOf(\"tag-close\") !== -1) {\n          if (token.value == \"/>\") return;\n          while (token && token.type.indexOf(\"tag-name\") === -1) {\n            token = iterator.stepBackward();\n          }\n          if (!token) {\n            return;\n          }\n          var tag = token.value;\n          var row = iterator.getCurrentTokenRow();\n          token = iterator.stepBackward();\n          if (!token || token.type.indexOf(\"end-tag\") !== -1) {\n            return;\n          }\n          if (this.voidElements && !this.voidElements[tag] || !this.voidElements) {\n            var nextToken = session.getTokenAt(cursor.row, cursor.column + 1);\n            var line = session.getLine(row);\n            var nextIndent = this.$getIndent(line);\n            var indent = nextIndent + session.getTabString();\n            if (nextToken && nextToken.value === \"</\") {\n              return {\n                text: \"\\n\" + indent + \"\\n\" + nextIndent,\n                selection: [1, indent.length, 1, indent.length]\n              };\n            } else {\n              return {\n                text: \"\\n\" + indent\n              };\n            }\n          }\n        }\n      }\n    });\n  };\n  oop.inherits(XmlBehaviour, Behaviour);\n  exports.XmlBehaviour = XmlBehaviour;\n});\nace.define(\"ace/mode/behaviour/javascript\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/token_iterator\", \"ace/mode/behaviour/cstyle\", \"ace/mode/behaviour/xml\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var TokenIterator = require(\"../../token_iterator\").TokenIterator;\n  var CstyleBehaviour = require(\"../behaviour/cstyle\").CstyleBehaviour;\n  var XmlBehaviour = require(\"../behaviour/xml\").XmlBehaviour;\n  var JavaScriptBehaviour = function () {\n    var xmlBehaviours = new XmlBehaviour({\n      closeCurlyBraces: true\n    }).getBehaviours();\n    this.addBehaviours(xmlBehaviours);\n    this.inherit(CstyleBehaviour);\n    this.add(\"autoclosing-fragment\", \"insertion\", function (state, action, editor, session, text) {\n      if (text == '>') {\n        var position = editor.getSelectionRange().start;\n        var iterator = new TokenIterator(session, position.row, position.column);\n        var token = iterator.getCurrentToken() || iterator.stepBackward();\n        if (!token) return;\n        if (token.value == '<') {\n          return {\n            text: \"></>\",\n            selection: [1, 1]\n          };\n        }\n      }\n    });\n  };\n  oop.inherits(JavaScriptBehaviour, CstyleBehaviour);\n  exports.JavaScriptBehaviour = JavaScriptBehaviour;\n});\nace.define(\"ace/mode/folding/xml\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Range = require(\"../../range\").Range;\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function (voidElements, optionalEndTags) {\n    BaseFoldMode.call(this);\n    this.voidElements = voidElements || {};\n    this.optionalEndTags = oop.mixin({}, this.voidElements);\n    if (optionalEndTags) oop.mixin(this.optionalEndTags, optionalEndTags);\n  };\n  oop.inherits(FoldMode, BaseFoldMode);\n  var Tag = function () {\n    this.tagName = \"\";\n    this.closing = false;\n    this.selfClosing = false;\n    this.start = {\n      row: 0,\n      column: 0\n    };\n    this.end = {\n      row: 0,\n      column: 0\n    };\n  };\n  function is(token, type) {\n    return token.type.lastIndexOf(type + \".xml\") > -1;\n  }\n  (function () {\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var tag = this._getFirstTagInLine(session, row);\n      if (!tag) return this.getCommentFoldWidget(session, row);\n      if (tag.closing || !tag.tagName && tag.selfClosing) return foldStyle === \"markbeginend\" ? \"end\" : \"\";\n      if (!tag.tagName || tag.selfClosing || this.voidElements.hasOwnProperty(tag.tagName.toLowerCase())) return \"\";\n      if (this._findEndTagInLine(session, row, tag.tagName, tag.end.column)) return \"\";\n      return \"start\";\n    };\n    this.getCommentFoldWidget = function (session, row) {\n      if (/comment/.test(session.getState(row)) && /<!-/.test(session.getLine(row))) return \"start\";\n      return \"\";\n    };\n    this._getFirstTagInLine = function (session, row) {\n      var tokens = session.getTokens(row);\n      var tag = new Tag();\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i];\n        if (is(token, \"tag-open\")) {\n          tag.end.column = tag.start.column + token.value.length;\n          tag.closing = is(token, \"end-tag-open\");\n          token = tokens[++i];\n          if (!token) return null;\n          tag.tagName = token.value;\n          if (token.value === \"\") {\n            //skip empty tag name token for fragment\n            token = tokens[++i];\n            if (!token) return null;\n            tag.tagName = token.value;\n          }\n          tag.end.column += token.value.length;\n          for (i++; i < tokens.length; i++) {\n            token = tokens[i];\n            tag.end.column += token.value.length;\n            if (is(token, \"tag-close\")) {\n              tag.selfClosing = token.value == '/>';\n              break;\n            }\n          }\n          return tag;\n        } else if (is(token, \"tag-close\")) {\n          tag.selfClosing = token.value == '/>';\n          return tag;\n        }\n        tag.start.column += token.value.length;\n      }\n      return null;\n    };\n    this._findEndTagInLine = function (session, row, tagName, startColumn) {\n      var tokens = session.getTokens(row);\n      var column = 0;\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i];\n        column += token.value.length;\n        if (column < startColumn - 1) continue;\n        if (is(token, \"end-tag-open\")) {\n          token = tokens[i + 1];\n          if (is(token, \"tag-name\") && token.value === \"\") {\n            token = tokens[i + 2];\n          }\n          if (token && token.value == tagName) return true;\n        }\n      }\n      return false;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var firstTag = this._getFirstTagInLine(session, row);\n      if (!firstTag) {\n        return this.getCommentFoldWidget(session, row) && session.getCommentFoldRange(row, session.getLine(row).length);\n      }\n      var tags = session.getMatchingTags({\n        row: row,\n        column: 0\n      });\n      if (tags) {\n        return new Range(tags.openTag.end.row, tags.openTag.end.column, tags.closeTag.start.row, tags.closeTag.start.column);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Range = require(\"../../range\").Range;\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n      return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n        return range;\n      }\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n        endRow = row;\n      }\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n      var endRow = row;\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/folding/javascript\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/xml\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var XmlFoldMode = require(\"./xml\").FoldMode;\n  var CFoldMode = require(\"./cstyle\").FoldMode;\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n    this.xmlFoldMode = new XmlFoldMode();\n  };\n  oop.inherits(FoldMode, CFoldMode);\n  (function () {\n    this.getFoldWidgetRangeBase = this.getFoldWidgetRange;\n    this.getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var fw = this.getFoldWidgetBase(session, foldStyle, row);\n      if (!fw) {\n        return this.xmlFoldMode.getFoldWidget(session, foldStyle, row);\n      }\n      return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var range = this.getFoldWidgetRangeBase(session, foldStyle, row, forceMultiline);\n      if (range) return range;\n      return this.xmlFoldMode.getFoldWidgetRange(session, foldStyle, row);\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/javascript\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/javascript_highlight_rules\", \"ace/mode/matching_brace_outdent\", \"ace/worker/worker_client\", \"ace/mode/behaviour/javascript\", \"ace/mode/folding/javascript\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var JavaScriptHighlightRules = require(\"./javascript_highlight_rules\").JavaScriptHighlightRules;\n  var MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n  var WorkerClient = require(\"../worker/worker_client\").WorkerClient;\n  var JavaScriptBehaviour = require(\"./behaviour/javascript\").JavaScriptBehaviour;\n  var JavaScriptFoldMode = require(\"./folding/javascript\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = JavaScriptHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new JavaScriptBehaviour();\n    this.foldingRules = new JavaScriptFoldMode();\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\"\n    };\n    this.$quotes = {\n      '\"': '\"',\n      \"'\": \"'\",\n      \"`\": \"`\"\n    };\n    this.$pairQuotesAfter = {\n      \"`\": /\\w/\n    };\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n      var endState = tokenizedLine.state;\n      if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n        return indent;\n      }\n      if (state == \"start\" || state == \"no_regex\") {\n        var match = line.match(/^.*(?:\\bcase\\b.*:|[\\{\\(\\[])\\s*$/);\n        if (match) {\n          indent += tab;\n        }\n      } else if (state == \"doc-start\") {\n        if (endState == \"start\" || endState == \"no_regex\") {\n          return \"\";\n        }\n        var match = line.match(/^\\s*(\\/?)\\*/);\n        if (match) {\n          if (match[1]) {\n            indent += \" \";\n          }\n          indent += \"* \";\n        }\n      }\n      return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n    this.createWorker = function (session) {\n      var worker = new WorkerClient([\"ace\"], \"ace/mode/javascript_worker\", \"JavaScriptWorker\");\n      worker.attachToDocument(session.getDocument());\n      worker.on(\"annotate\", function (results) {\n        session.setAnnotations(results.data);\n      });\n      worker.on(\"terminate\", function () {\n        session.clearAnnotations();\n      });\n      return worker;\n    };\n    this.$id = \"ace/mode/javascript\";\n    this.snippetFileId = \"ace/snippets/javascript\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\nace.define(\"ace/mode/gobstones_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var GobstonesHighlightRules = function () {\n    var definitions = {\n      standard: \"program|procedure|function|interactive|return|let\",\n      type: \"type|is|variant|record|field|case\"\n    };\n    var control = {\n      commands: {\n        repetitions: \"repeat|while|foreach|in\",\n        alternatives: \"if|elseif|else|switch\"\n      },\n      expressions: {\n        alternatives: \"choose|when|otherwise|matching|select|on\"\n      }\n    };\n    var values = {\n      colors: \"Verde|Rojo|Azul|Negro\",\n      cardinals: \"Norte|Sur|Este|Oeste\",\n      booleans: \"True|False\",\n      numbers: /([-]?)([0-9]+)\\b/,\n      strings: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n    };\n    var primitives = {\n      commands: \"Poner|Sacar|Mover|IrAlBorde|VaciarTablero|BOOM\",\n      expressions: \"nroBolitas|hayBolitas|puedeMover|\" + \"siguiente|previo|opuesto|\" + \"minBool|maxBool|minDir|maxDir|minColor|maxColor|\" + \"primero|sinElPrimero|esVacía|\" + \"boom\",\n      keys: \"K_A|K_B|K_C|K_D|K_E|K_F|K_G|K_G|K_H|K_I|K_J|K_K|K_L|K_M|K_N|K_Ñ|\" + \"K_O|K_P|K_Q|K_R|K_S|K_T|K_U|K_V|K_W|K_X|K_Y|K_Z|\" + \"K_0|K_1|K_2|K_3|K_4|K_5|K_6|K_7|K_8|K_9|\" + \"K_F1|K_F2|K_F3|K_F4|K_F5|K_F6|K_F7|K_F8|K_F9|K_F10|K_F11|K_12|\" + \"K_UP|K_DOWN|K_LEFT|K_RIGHT|K_RETURN|K_BACKSPACE|K_TAB|K_SPACE|K_ESCAPE\" + \"K_CTRL_A|K_CTRL_B|K_CTRL_C|K_CTRL_D|K_CTRL_E|K_CTRL_F|K_CTRL_G|K_CTRL_G|\" + \"K_CTRL_H|K_CTRL_I|K_CTRL_J|K_CTRL_K|K_CTRL_L|K_CTRL_M|K_CTRL_N|K_CTRL_Ñ|\" + \"K_CTRL_O|K_CTRL_P|K_CTRL_Q|K_CTRL_R|K_CTRL_S|K_CTRL_T|K_CTRL_U|K_CTRL_V|\" + \"K_CTRL_W|K_CTRL_X|K_CTRL_Y|K_CTRL_Z|\" + \"K_CTRL_0|K_CTRL_1|K_CTRL_2|K_CTRL_3|K_CTRL_4|K_CTRL_5|K_CTRL_6|K_CTRL_7|K_CTRL_8|K_CTRL_9|\" + \"K_CTRL_F1|K_CTRL_F2|K_CTRL_F3|K_CTRL_F4|K_CTRL_F5|K_CTRL_F6|K_CTRL_F7|\" + \"K_CTRL_F8|K_CTRL_F9|K_CTRL_F10|K_CTRL_F11|K_CTRL_F12|\" + \"K_CTRL_UP|K_CTRL_DOWN|K_CTRL_LEFT|K_CTRL_RIGHT|K_CTRL_RETURN|\" + \"K_CTRL_BACKSPACE|K_CTRL_TAB|K_CTRL_SPACE|K_CTRL_ESCAPE\" + \"K_ALT_A|K_ALT_B|K_ALT_C|K_ALT_D|K_ALT_E|K_ALT_F|K_ALT_G|K_ALT_G|K_ALT_H|\" + \"K_ALT_I|K_ALT_J|K_ALT_K|K_ALT_L|K_ALT_M|K_ALT_N|K_ALT_Ñ|K_ALT_O|K_ALT_P|\" + \"K_ALT_Q|K_ALT_R|K_ALT_S|K_ALT_T|K_ALT_U|K_ALT_V|K_ALT_W|K_ALT_X|K_ALT_Y|K_ALT_Z|\" + \"K_ALT_0|K_ALT_1|K_ALT_2|K_ALT_3|K_ALT_4|K_ALT_5|K_ALT_6|K_ALT_7|K_ALT_8|K_ALT_9|\" + \"K_ALT_F1|K_ALT_F2|K_ALT_F3|K_ALT_F4|K_ALT_F5|K_ALT_F6|K_ALT_F7|K_ALT_F8|\" + \"K_ALT_F9|K_ALT_F10|K_ALT_F11|K_ALT_F12|\" + \"K_ALT_UP|K_ALT_DOWN|K_ALT_LEFT|K_ALT_RIGHT|K_ALT_RETURN|K_ALT_BACKSPACE|\" + \"K_ALT_TAB|K_ALT_SPACE|K_ALT_ESCAPE\" + \"K_SHIFT_A|K_SHIFT_B|K_SHIFT_C|K_SHIFT_D|K_SHIFT_E|K_SHIFT_F|K_SHIFT_G|\" + \"K_SHIFT_G|K_SHIFT_H|K_SHIFT_I|K_SHIFT_J|K_SHIFT_K|K_SHIFT_L|K_SHIFT_M|\" + \"K_SHIFT_N|K_SHIFT_Ñ|K_SHIFT_O|K_SHIFT_P|K_SHIFT_Q|K_SHIFT_R|K_SHIFT_S|\" + \"K_SHIFT_T|K_SHIFT_U|K_SHIFT_V|K_SHIFT_W|K_SHIFT_X|K_SHIFT_Y|K_SHIFT_Z|\" + \"K_SHIFT_0|K_SHIFT_1|K_SHIFT_2|K_SHIFT_3|K_SHIFT_4|K_SHIFT_5|K_SHIFT_6|\" + \"K_SHIFT_7|K_SHIFT_8|K_SHIFT_9|\" + \"K_SHIFT_F1|K_SHIFT_F2|K_SHIFT_F3|K_SHIFT_F4|K_SHIFT_F5|K_SHIFT_F6|\" + \"K_SHIFT_F7|K_SHIFT_F8|K_SHIFT_F9|K_SHIFT_F10|K_SHIFT_F11|K_SHIFT_F12|\" + \"K_SHIFT_UP|K_SHIFT_DOWN|K_SHIFT_LEFT|K_SHIFT_RIGHT|K_SHIFT_RETURN|\" + \"K_SHIFT_BACKSPACE|K_SHIFT_TAB|K_SHIFT_SPACE|K_SHIFT_ESCAPE\" + \"K_CTRL_ALT_A|K_CTRL_ALT_B|K_CTRL_ALT_C|K_CTRL_ALT_D|K_CTRL_ALT_E|\" + \"K_CTRL_ALT_F|K_CTRL_ALT_G|K_CTRL_ALT_G|K_CTRL_ALT_H|K_CTRL_ALT_I|\" + \"K_CTRL_ALT_J|K_CTRL_ALT_K|K_CTRL_ALT_L|K_CTRL_ALT_M|K_CTRL_ALT_N|\" + \"K_CTRL_ALT_Ñ|K_CTRL_ALT_O|K_CTRL_ALT_P|K_CTRL_ALT_Q|K_CTRL_ALT_R|\" + \"K_CTRL_ALT_S|K_CTRL_ALT_T|K_CTRL_ALT_U|K_CTRL_ALT_V|K_CTRL_ALT_W|\" + \"K_CTRL_ALT_X|K_CTRL_ALT_Y|K_CTRL_ALT_Z|\" + \"K_CTRL_ALT_0|K_CTRL_ALT_1|K_CTRL_ALT_2|K_CTRL_ALT_3|K_CTRL_ALT_4|\" + \"K_CTRL_ALT_5|K_CTRL_ALT_6|K_CTRL_ALT_7|K_CTRL_ALT_8|K_CTRL_ALT_9|\" + \"K_CTRL_ALT_F1|K_CTRL_ALT_F2|K_CTRL_ALT_F3|K_CTRL_ALT_F4|K_CTRL_ALT_F5|\" + \"K_CTRL_ALT_F6|K_CTRL_ALT_F7|K_CTRL_ALT_F8|K_CTRL_ALT_F9|K_CTRL_ALT_F10|\" + \"K_CTRL_ALT_F11|K_CTRL_ALT_F12|\" + \"K_CTRL_ALT_UP|K_CTRL_ALT_DOWN|K_CTRL_ALT_LEFT|K_CTRL_ALT_RIGHT|\" + \"K_CTRL_ALT_RETURN|K_CTRL_ALT_BACKSPACE|K_CTRL_ALT_TAB|K_CTRL_ALT_SPACE|K_CTRL_ALT_ESCAPE\" + \"K_CTRL_SHIFT_A|K_CTRL_SHIFT_B|K_CTRL_SHIFT_C|K_CTRL_SHIFT_D|K_CTRL_SHIFT_E|\" + \"K_CTRL_SHIFT_F|K_CTRL_SHIFT_G|K_CTRL_SHIFT_G|K_CTRL_SHIFT_H|K_CTRL_SHIFT_I|\" + \"K_CTRL_SHIFT_J|K_CTRL_SHIFT_K|K_CTRL_SHIFT_L|K_CTRL_SHIFT_M|K_CTRL_SHIFT_N|\" + \"K_CTRL_SHIFT_Ñ|K_CTRL_SHIFT_O|K_CTRL_SHIFT_P|K_CTRL_SHIFT_Q|K_CTRL_SHIFT_R|\" + \"K_CTRL_SHIFT_S|K_CTRL_SHIFT_T|K_CTRL_SHIFT_U|K_CTRL_SHIFT_V|K_CTRL_SHIFT_W|\" + \"K_CTRL_SHIFT_X|K_CTRL_SHIFT_Y|K_CTRL_SHIFT_Z|\" + \"K_CTRL_SHIFT_0|K_CTRL_SHIFT_1|K_CTRL_SHIFT_2|K_CTRL_SHIFT_3|K_CTRL_SHIFT_4|\" + \"K_CTRL_SHIFT_5|K_CTRL_SHIFT_6|K_CTRL_SHIFT_7|K_CTRL_SHIFT_8|K_CTRL_SHIFT_9|\" + \"K_CTRL_SHIFT_F1|K_CTRL_SHIFT_F2|K_CTRL_SHIFT_F3|K_CTRL_SHIFT_F4|\" + \"K_CTRL_SHIFT_F5|K_CTRL_SHIFT_F6|K_CTRL_SHIFT_F7|K_CTRL_SHIFT_F8|\" + \"K_CTRL_SHIFT_9|K_CTRL_SHIFT_10|K_CTRL_SHIFT_11|K_CTRL_SHIFT_12|\" + \"K_CTRL_SHIFT_UP|K_CTRL_SHIFT_DOWN|K_CTRL_SHIFT_LEFT|K_CTRL_SHIFT_RIGHT|\" + \"K_CTRL_SHIFT_RETURN|K_CTRL_SHIFT_BACKSPACE|K_CTRL_SHIFT_TAB|\" + \"K_CTRL_SHIFT_SPACE|K_CTRL_SHIFT_ESCAPE\" + \"K_ALT_SHIFT_A|K_ALT_SHIFT_B|K_ALT_SHIFT_C|K_ALT_SHIFT_D|K_ALT_SHIFT_E|\" + \"K_ALT_SHIFT_F|K_ALT_SHIFT_G|K_ALT_SHIFT_G|K_ALT_SHIFT_H|K_ALT_SHIFT_I|\" + \"K_ALT_SHIFT_J|K_ALT_SHIFT_K|K_ALT_SHIFT_L|K_ALT_SHIFT_M|K_ALT_SHIFT_N|\" + \"K_ALT_SHIFT_Ñ|K_ALT_SHIFT_O|K_ALT_SHIFT_P|K_ALT_SHIFT_Q|K_ALT_SHIFT_R|\" + \"K_ALT_SHIFT_S|K_ALT_SHIFT_T|K_ALT_SHIFT_U|K_ALT_SHIFT_V|K_ALT_SHIFT_W|\" + \"K_ALT_SHIFT_X|K_ALT_SHIFT_Y|K_ALT_SHIFT_Z|\" + \"K_ALT_SHIFT_0|K_ALT_SHIFT_1|K_ALT_SHIFT_2|K_ALT_SHIFT_3|K_ALT_SHIFT_4|\" + \"K_ALT_SHIFT_5|K_ALT_SHIFT_6|K_ALT_SHIFT_7|K_ALT_SHIFT_8|K_ALT_SHIFT_9|\" + \"K_ALT_SHIFT_F1|K_ALT_SHIFT_F2|K_ALT_SHIFT_F3|K_ALT_SHIFT_F4|\" + \"K_ALT_SHIFT_F5|K_ALT_SHIFT_F6|K_ALT_SHIFT_F7|K_ALT_SHIFT_F8|\" + \"K_ALT_SHIFT_9|K_ALT_SHIFT_10|K_ALT_SHIFT_11|K_ALT_SHIFT_12|\" + \"K_ALT_SHIFT_UP|K_ALT_SHIFT_DOWN|K_ALT_SHIFT_LEFT|K_ALT_SHIFT_RIGHT|\" + \"K_ALT_SHIFT_RETURN|K_ALT_SHIFT_BACKSPACE|K_ALT_SHIFT_TAB|K_ALT_SHIFT_SPACE|\" + \"K_ALT_SHIFT_ESCAPE\" + \"K_CTRL_ALT_SHIFT_A|K_CTRL_ALT_SHIFT_B|K_CTRL_ALT_SHIFT_C|K_CTRL_ALT_SHIFT_D|\" + \"K_CTRL_ALT_SHIFT_E|K_CTRL_ALT_SHIFT_F|K_CTRL_ALT_SHIFT_G|K_CTRL_ALT_SHIFT_G|\" + \"K_CTRL_ALT_SHIFT_H|K_CTRL_ALT_SHIFT_I|K_CTRL_ALT_SHIFT_J|K_CTRL_ALT_SHIFT_K|\" + \"K_CTRL_ALT_SHIFT_L|K_CTRL_ALT_SHIFT_M|K_CTRL_ALT_SHIFT_N|K_CTRL_ALT_SHIFT_Ñ|\" + \"K_CTRL_ALT_SHIFT_O|K_CTRL_ALT_SHIFT_P|K_CTRL_ALT_SHIFT_Q|K_CTRL_ALT_SHIFT_R|\" + \"K_CTRL_ALT_SHIFT_S|K_CTRL_ALT_SHIFT_T|K_CTRL_ALT_SHIFT_U|K_CTRL_ALT_SHIFT_V|\" + \"K_CTRL_ALT_SHIFT_W|K_CTRL_ALT_SHIFT_X|K_CTRL_ALT_SHIFT_Y|K_CTRL_ALT_SHIFT_Z|\" + \"K_CTRL_ALT_SHIFT_0|K_CTRL_ALT_SHIFT_1|K_CTRL_ALT_SHIFT_2|K_CTRL_ALT_SHIFT_3|\" + \"K_CTRL_ALT_SHIFT_4|K_CTRL_ALT_SHIFT_5|K_CTRL_ALT_SHIFT_6|K_CTRL_ALT_SHIFT_7|\" + \"K_CTRL_ALT_SHIFT_8|K_CTRL_ALT_SHIFT_9|\" + \"K_CTRL_ALT_SHIFT_F1|K_CTRL_ALT_SHIFT_F2|K_CTRL_ALT_SHIFT_F3|K_CTRL_ALT_SHIFT_F4|\" + \"K_CTRL_ALT_SHIFT_F5|K_CTRL_ALT_SHIFT_F6|K_CTRL_ALT_SHIFT_F7|K_CTRL_ALT_SHIFT_F8|\" + \"K_CTRL_ALT_SHIFT_F9|K_CTRL_ALT_SHIFT_F10|K_CTRL_ALT_SHIFT_F11|K_CTRL_ALT_SHIFT_F12|\" + \"K_CTRL_ALT_SHIFT_UP|K_CTRL_ALT_SHIFT_DOWN|K_CTRL_ALT_SHIFT_LEFT|K_CTRL_ALT_SHIFT_RIGHT|\" + \"K_CTRL_ALT_SHIFT_RETURN|K_CTRL_ALT_SHIFT_BACKSPACE|K_CTRL_ALT_SHIFT_TAB|\" + \"K_CTRL_ALT_SHIFT_SPACE|K_CTRL_ALT_SHIFT_ESCAPE\"\n    };\n    var operations = {\n      commands: \":=\",\n      expressions: {\n        numeric: \"\\\\+|\\\\-|\\\\*|\\\\^|div|mod\",\n        comparison: \">=|<=|==|\\\\/=|>|<\",\n        boolean: \"\\\\|\\\\||&&|not\",\n        other: \"\\\\+\\\\+|<\\\\-|\\\\[|\\\\]|\\\\_|\\\\->\"\n      }\n    };\n    var comments = {\n      line: {\n        double_slash: \"\\\\/\\\\/.*$\",\n        double_dash: \"\\\\-\\\\-.*$\",\n        number_sign: \"#.*$\"\n      },\n      block: {\n        start: \"\\\\/\\\\*\",\n        end: \"\\\\*\\\\/\"\n      },\n      block_alt: {\n        start: \"\\\\{\\\\-\",\n        end: \"\\\\-\\\\}\"\n      }\n    };\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.line.double-slash.gobstones\",\n        regex: comments.line.double_slash\n      }, {\n        token: \"comment.line.double-dash.gobstones\",\n        regex: comments.line.double_dash\n      }, {\n        token: \"comment.line.number-sign.gobstones\",\n        regex: comments.line.number_sign\n      }, {\n        token: \"comment.block.dash-asterisc.gobstones\",\n        regex: comments.block.start,\n        next: \"block_comment_end\"\n      }, {\n        token: \"comment.block.brace-dash.gobstones\",\n        regex: comments.block_alt.start,\n        next: \"block_comment_alt_end\"\n      }, {\n        token: \"constant.numeric.gobstones\",\n        regex: values.numbers\n      }, {\n        token: \"string.quoted.double.gobstones\",\n        regex: values.strings\n      }, {\n        token: \"keyword.operator.other.gobstones\",\n        regex: operations.expressions.other\n      }, {\n        token: \"keyword.operator.numeric.gobstones\",\n        regex: operations.expressions.numeric\n      }, {\n        token: \"keyword.operator.compare.gobstones\",\n        regex: operations.expressions.comparison\n      }, {\n        token: \"keyword.operator.boolean.gobstones\",\n        regex: operations.expressions.boolean\n      }, {\n        token: this.createKeywordMapper({\n          \"storage.type.definitions.gobstones\": definitions.standard,\n          \"storage.type.types.gobstones\": definitions.type,\n          \"keyword.control.commands.repetitions.gobstones\": control.commands.repetitions,\n          \"keyword.control.commands.alternatives.gobstones\": control.commands.alternatives,\n          \"keyword.control.expressions.alternatives.gobstones\": control.expressions.alternatives,\n          \"constant.language.colors.gobstones\": values.colors,\n          \"constant.language.cardinals.gobstones\": values.cardinals,\n          \"constant.language.boolean.gobstones\": values.booleans,\n          \"support.function.gobstones\": primitives.commands,\n          \"support.variable.gobstones\": primitives.expressions,\n          \"variable.language.gobstones\": primitives.keys\n        }, \"identifier.gobstones\"),\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: \"comma.gobstones\",\n        regex: \",\"\n      }, {\n        token: \"semicolon.gobstones\",\n        regex: \";\"\n      }, {\n        token: \"lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      \"block_comment_end\": [{\n        token: \"comment.block.dash-asterisc.gobstones\",\n        regex: comments.block.end,\n        next: \"start\"\n      }, {\n        defaultToken: \"comment.block.dash-asterisc.gobstones\"\n      }],\n      \"block_comment_alt_end\": [{\n        token: \"comment.block.brace-dash.gobstones\",\n        regex: comments.block_alt.end,\n        next: \"start\"\n      }, {\n        defaultToken: \"comment.block.brace-dash.gobstones\"\n      }]\n    };\n  };\n  oop.inherits(GobstonesHighlightRules, TextHighlightRules);\n  exports.GobstonesHighlightRules = GobstonesHighlightRules;\n});\nace.define(\"ace/mode/gobstones\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/javascript\", \"ace/mode/gobstones_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var JavaScriptMode = require(\"./javascript\").Mode;\n  var GobstonesHighlightRules = require(\"./gobstones_highlight_rules\").GobstonesHighlightRules;\n  var Mode = function () {\n    JavaScriptMode.call(this);\n    this.HighlightRules = GobstonesHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n  };\n  oop.inherits(Mode, JavaScriptMode);\n  (function () {\n    this.createWorker = function () {\n      return null;\n    };\n    this.$id = \"ace/mode/gobstones\";\n    this.snippetFileId = \"ace/snippets/gobstones\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/gobstones\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}