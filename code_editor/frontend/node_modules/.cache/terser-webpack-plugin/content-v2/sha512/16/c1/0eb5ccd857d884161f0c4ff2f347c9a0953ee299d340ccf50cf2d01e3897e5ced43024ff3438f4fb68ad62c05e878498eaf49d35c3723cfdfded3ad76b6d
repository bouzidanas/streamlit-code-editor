{"code":"ace.define(\"ace/mode/hjson_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],(function(e,t,n){\"use strict\";var o=e(\"../lib/oop\"),i=e(\"./text_highlight_rules\").TextHighlightRules,r=function(){this.$rules={start:[{include:\"#comments\"},{include:\"#rootObject\"},{include:\"#value\"}],\"#array\":[{token:\"paren.lparen\",regex:/\\[/,push:[{token:\"paren.rparen\",regex:/\\]/,next:\"pop\"},{include:\"#value\"},{include:\"#comments\"},{token:\"text\",regex:/,|$/},{token:\"invalid.illegal\",regex:/[^\\s\\]]/},{defaultToken:\"array\"}]}],\"#comments\":[{token:[\"comment.punctuation\",\"comment.line\"],regex:/(#)(.*$)/},{token:\"comment.punctuation\",regex:/\\/\\*/,push:[{token:\"comment.punctuation\",regex:/\\*\\//,next:\"pop\"},{defaultToken:\"comment.block\"}]},{token:[\"comment.punctuation\",\"comment.line\"],regex:/(\\/\\/)(.*$)/}],\"#constant\":[{token:\"constant\",regex:/\\b(?:true|false|null)\\b/}],\"#keyname\":[{token:\"keyword\",regex:/(?:[^,\\{\\[\\}\\]\\s]+|\"(?:[^\"\\\\]|\\\\.)*\")\\s*(?=:)/}],\"#mstring\":[{token:\"string\",regex:/'''/,push:[{token:\"string\",regex:/'''/,next:\"pop\"},{defaultToken:\"string\"}]}],\"#number\":[{token:\"constant.numeric\",regex:/-?(?:0|[1-9]\\d*)(?:(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)?/,comment:\"handles integer and decimal numbers\"}],\"#object\":[{token:\"paren.lparen\",regex:/\\{/,push:[{token:\"paren.rparen\",regex:/\\}/,next:\"pop\"},{include:\"#keyname\"},{include:\"#value\"},{token:\"text\",regex:/:/},{token:\"text\",regex:/,/},{defaultToken:\"paren\"}]}],\"#rootObject\":[{token:\"paren\",regex:/(?=\\s*(?:[^,\\{\\[\\}\\]\\s]+|\"(?:[^\"\\\\]|\\\\.)*\")\\s*:)/,push:[{token:\"paren.rparen\",regex:/---none---/,next:\"pop\"},{include:\"#keyname\"},{include:\"#value\"},{token:\"text\",regex:/:/},{token:\"text\",regex:/,/},{defaultToken:\"paren\"}]}],\"#string\":[{token:\"string\",regex:/\"/,push:[{token:\"string\",regex:/\"/,next:\"pop\"},{token:\"constant.language.escape\",regex:/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/},{token:\"invalid.illegal\",regex:/\\\\./},{defaultToken:\"string\"}]}],\"#ustring\":[{token:\"string\",regex:/\\b[^:,0-9\\-\\{\\[\\}\\]\\s].*$/}],\"#value\":[{include:\"#constant\"},{include:\"#number\"},{include:\"#string\"},{include:\"#array\"},{include:\"#object\"},{include:\"#comments\"},{include:\"#mstring\"},{include:\"#ustring\"}]},this.normalizeRules()};r.metaData={fileTypes:[\"hjson\"],foldingStartMarker:\"(?x:     # turn on extended mode\\n              ^    # a line beginning with\\n              \\\\s*    # some optional space\\n              [{\\\\[]  # the start of an object or array\\n              (?!    # but not followed by\\n              .*   # whatever\\n              [}\\\\]]  # and the close of an object or array\\n              ,?   # an optional comma\\n              \\\\s*  # some optional space\\n              $    # at the end of the line\\n              )\\n              |    # ...or...\\n              [{\\\\[]  # the start of an object or array\\n              \\\\s*    # some optional space\\n              $    # at the end of the line\\n            )\",foldingStopMarker:\"(?x:   # turn on extended mode\\n             ^    # a line beginning with\\n             \\\\s*  # some optional space\\n             [}\\\\]]  # and the close of an object or array\\n             )\",keyEquivalent:\"^~J\",name:\"Hjson\",scopeName:\"source.hjson\"},o.inherits(r,i),t.HjsonHighlightRules=r})),ace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"],(function(e,t,n){\"use strict\";var o=e(\"../../lib/oop\"),i=e(\"../../range\").Range,r=e(\"./fold_mode\").FoldMode,a=t.FoldMode=function(e){e&&(this.foldingStartMarker=new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/,\"|\"+e.start)),this.foldingStopMarker=new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/,\"|\"+e.end)))};o.inherits(a,r),function(){this.foldingStartMarker=/([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/,this.foldingStopMarker=/^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/,this.singleLineBlockCommentRe=/^\\s*(\\/\\*).*\\*\\/\\s*$/,this.tripleStarBlockCommentRe=/^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/,this.startRegionRe=/^\\s*(\\/\\*|\\/\\/)#?region\\b/,this._getFoldWidgetBase=this.getFoldWidget,this.getFoldWidget=function(e,t,n){var o=e.getLine(n);if(this.singleLineBlockCommentRe.test(o)&&!this.startRegionRe.test(o)&&!this.tripleStarBlockCommentRe.test(o))return\"\";var i=this._getFoldWidgetBase(e,t,n);return!i&&this.startRegionRe.test(o)?\"start\":i},this.getFoldWidgetRange=function(e,t,n,o){var i,r=e.getLine(n);if(this.startRegionRe.test(r))return this.getCommentRegionBlock(e,r,n);if(i=r.match(this.foldingStartMarker)){var a=i.index;if(i[1])return this.openingBracketBlock(e,i[1],n,a);var s=e.getCommentFoldRange(n,a+i[0].length,1);return s&&!s.isMultiLine()&&(o?s=this.getSectionRange(e,n):\"all\"!=t&&(s=null)),s}if(\"markbegin\"!==t&&(i=r.match(this.foldingStopMarker))){a=i.index+i[0].length;return i[1]?this.closingBracketBlock(e,i[1],n,a):e.getCommentFoldRange(n,a,-1)}},this.getSectionRange=function(e,t){for(var n=e.getLine(t),o=n.search(/\\S/),r=t,a=n.length,s=t+=1,l=e.getLength();++t<l;){var g=(n=e.getLine(t)).search(/\\S/);if(-1!==g){if(o>g)break;var c=this.getFoldWidgetRange(e,\"all\",t);if(c){if(c.start.row<=r)break;if(c.isMultiLine())t=c.end.row;else if(o==g)break}s=t}}return new i(r,a,s,e.getLine(s).length)},this.getCommentRegionBlock=function(e,t,n){for(var o=t.search(/\\s*$/),r=e.getLength(),a=n,s=/^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/,l=1;++n<r;){t=e.getLine(n);var g=s.exec(t);if(g&&(g[1]?l--:l++,!l))break}if(n>a)return new i(a,o,n,t.length)}}.call(a.prototype)})),ace.define(\"ace/mode/hjson\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/hjson_highlight_rules\",\"ace/mode/folding/cstyle\"],(function(e,t,n){\"use strict\";var o=e(\"../lib/oop\"),i=e(\"./text\").Mode,r=e(\"./hjson_highlight_rules\").HjsonHighlightRules,a=e(\"./folding/cstyle\").FoldMode,s=function(){this.HighlightRules=r,this.foldingRules=new a};o.inherits(s,i),function(){this.lineCommentStart=\"//\",this.blockComment={start:\"/*\",end:\"*/\"},this.$id=\"ace/mode/hjson\"}.call(s.prototype),t.Mode=s})),ace.require([\"ace/mode/hjson\"],(function(e){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=e)}));","name":"697aa6c0f830d56d721e37fc0ae005fd.js","input":"ace.define(\"ace/mode/hjson_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  /* This file was autogenerated from Hjson.tmLanguage (uuid: ) */\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var HjsonHighlightRules = function () {\n    this.$rules = {\n      start: [{\n        include: \"#comments\"\n      }, {\n        include: \"#rootObject\"\n      }, {\n        include: \"#value\"\n      }],\n      \"#array\": [{\n        token: \"paren.lparen\",\n        regex: /\\[/,\n        push: [{\n          token: \"paren.rparen\",\n          regex: /\\]/,\n          next: \"pop\"\n        }, {\n          include: \"#value\"\n        }, {\n          include: \"#comments\"\n        }, {\n          token: \"text\",\n          regex: /,|$/\n        }, {\n          token: \"invalid.illegal\",\n          regex: /[^\\s\\]]/\n        }, {\n          defaultToken: \"array\"\n        }]\n      }],\n      \"#comments\": [{\n        token: [\"comment.punctuation\", \"comment.line\"],\n        regex: /(#)(.*$)/\n      }, {\n        token: \"comment.punctuation\",\n        regex: /\\/\\*/,\n        push: [{\n          token: \"comment.punctuation\",\n          regex: /\\*\\//,\n          next: \"pop\"\n        }, {\n          defaultToken: \"comment.block\"\n        }]\n      }, {\n        token: [\"comment.punctuation\", \"comment.line\"],\n        regex: /(\\/\\/)(.*$)/\n      }],\n      \"#constant\": [{\n        token: \"constant\",\n        regex: /\\b(?:true|false|null)\\b/\n      }],\n      \"#keyname\": [{\n        token: \"keyword\",\n        regex: /(?:[^,\\{\\[\\}\\]\\s]+|\"(?:[^\"\\\\]|\\\\.)*\")\\s*(?=:)/\n      }],\n      \"#mstring\": [{\n        token: \"string\",\n        regex: /'''/,\n        push: [{\n          token: \"string\",\n          regex: /'''/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      }],\n      \"#number\": [{\n        token: \"constant.numeric\",\n        regex: /-?(?:0|[1-9]\\d*)(?:(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)?/,\n        comment: \"handles integer and decimal numbers\"\n      }],\n      \"#object\": [{\n        token: \"paren.lparen\",\n        regex: /\\{/,\n        push: [{\n          token: \"paren.rparen\",\n          regex: /\\}/,\n          next: \"pop\"\n        }, {\n          include: \"#keyname\"\n        }, {\n          include: \"#value\"\n        }, {\n          token: \"text\",\n          regex: /:/\n        }, {\n          token: \"text\",\n          regex: /,/\n        }, {\n          defaultToken: \"paren\"\n        }]\n      }],\n      \"#rootObject\": [{\n        token: \"paren\",\n        regex: /(?=\\s*(?:[^,\\{\\[\\}\\]\\s]+|\"(?:[^\"\\\\]|\\\\.)*\")\\s*:)/,\n        push: [{\n          token: \"paren.rparen\",\n          regex: /---none---/,\n          next: \"pop\"\n        }, {\n          include: \"#keyname\"\n        }, {\n          include: \"#value\"\n        }, {\n          token: \"text\",\n          regex: /:/\n        }, {\n          token: \"text\",\n          regex: /,/\n        }, {\n          defaultToken: \"paren\"\n        }]\n      }],\n      \"#string\": [{\n        token: \"string\",\n        regex: /\"/,\n        push: [{\n          token: \"string\",\n          regex: /\"/,\n          next: \"pop\"\n        }, {\n          token: \"constant.language.escape\",\n          regex: /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/\n        }, {\n          token: \"invalid.illegal\",\n          regex: /\\\\./\n        }, {\n          defaultToken: \"string\"\n        }]\n      }],\n      \"#ustring\": [{\n        token: \"string\",\n        regex: /\\b[^:,0-9\\-\\{\\[\\}\\]\\s].*$/\n      }],\n      \"#value\": [{\n        include: \"#constant\"\n      }, {\n        include: \"#number\"\n      }, {\n        include: \"#string\"\n      }, {\n        include: \"#array\"\n      }, {\n        include: \"#object\"\n      }, {\n        include: \"#comments\"\n      }, {\n        include: \"#mstring\"\n      }, {\n        include: \"#ustring\"\n      }]\n    };\n    this.normalizeRules();\n  };\n  HjsonHighlightRules.metaData = {\n    fileTypes: [\"hjson\"],\n    foldingStartMarker: \"(?x:     # turn on extended mode\\n              ^    # a line beginning with\\n              \\\\s*    # some optional space\\n              [{\\\\[]  # the start of an object or array\\n              (?!    # but not followed by\\n              .*   # whatever\\n              [}\\\\]]  # and the close of an object or array\\n              ,?   # an optional comma\\n              \\\\s*  # some optional space\\n              $    # at the end of the line\\n              )\\n              |    # ...or...\\n              [{\\\\[]  # the start of an object or array\\n              \\\\s*    # some optional space\\n              $    # at the end of the line\\n            )\",\n    foldingStopMarker: \"(?x:   # turn on extended mode\\n             ^    # a line beginning with\\n             \\\\s*  # some optional space\\n             [}\\\\]]  # and the close of an object or array\\n             )\",\n    keyEquivalent: \"^~J\",\n    name: \"Hjson\",\n    scopeName: \"source.hjson\"\n  };\n  oop.inherits(HjsonHighlightRules, TextHighlightRules);\n  exports.HjsonHighlightRules = HjsonHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Range = require(\"../../range\").Range;\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n      return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n        return range;\n      }\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n        endRow = row;\n      }\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n      var endRow = row;\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/hjson\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/hjson_highlight_rules\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var HjsonHighlightRules = require(\"./hjson_highlight_rules\").HjsonHighlightRules;\n  var FoldMode = require(\"./folding/cstyle\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = HjsonHighlightRules;\n    this.foldingRules = new FoldMode();\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\"\n    };\n    this.$id = \"ace/mode/hjson\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/hjson\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}