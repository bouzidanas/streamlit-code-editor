{"code":"ace.define(\"ace/mode/mixal_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],(function(e,t,i){\"use strict\";var l=e(\"../lib/oop\"),N=e(\"./text_highlight_rules\").TextHighlightRules,r=function(){var e=function(e){return e&&e.search(/^[A-Z\\u0394\\u03a0\\u03a30-9]{1,10}$/)>-1&&e.search(/[A-Z\\u0394\\u03a0\\u03a3]/)>-1},t=function(e){return e&&[\"NOP\",\"ADD\",\"FADD\",\"SUB\",\"FSUB\",\"MUL\",\"FMUL\",\"DIV\",\"FDIV\",\"NUM\",\"CHAR\",\"HLT\",\"SLA\",\"SRA\",\"SLAX\",\"SRAX\",\"SLC\",\"SRC\",\"MOVE\",\"LDA\",\"LD1\",\"LD2\",\"LD3\",\"LD4\",\"LD5\",\"LD6\",\"LDX\",\"LDAN\",\"LD1N\",\"LD2N\",\"LD3N\",\"LD4N\",\"LD5N\",\"LD6N\",\"LDXN\",\"STA\",\"ST1\",\"ST2\",\"ST3\",\"ST4\",\"ST5\",\"ST6\",\"STX\",\"STJ\",\"STZ\",\"JBUS\",\"IOC\",\"IN\",\"OUT\",\"JRED\",\"JMP\",\"JSJ\",\"JOV\",\"JNOV\",\"JL\",\"JE\",\"JG\",\"JGE\",\"JNE\",\"JLE\",\"JAN\",\"JAZ\",\"JAP\",\"JANN\",\"JANZ\",\"JANP\",\"J1N\",\"J1Z\",\"J1P\",\"J1NN\",\"J1NZ\",\"J1NP\",\"J2N\",\"J2Z\",\"J2P\",\"J2NN\",\"J2NZ\",\"J2NP\",\"J3N\",\"J3Z\",\"J3P\",\"J3NN\",\"J3NZ\",\"J3NP\",\"J4N\",\"J4Z\",\"J4P\",\"J4NN\",\"J4NZ\",\"J4NP\",\"J5N\",\"J5Z\",\"J5P\",\"J5NN\",\"J5NZ\",\"J5NP\",\"J6N\",\"J6Z\",\"J6P\",\"J6NN\",\"J6NZ\",\"J6NP\",\"JXN\",\"JXZ\",\"JXP\",\"JXNN\",\"JXNZ\",\"JXNP\",\"INCA\",\"DECA\",\"ENTA\",\"ENNA\",\"INC1\",\"DEC1\",\"ENT1\",\"ENN1\",\"INC2\",\"DEC2\",\"ENT2\",\"ENN2\",\"INC3\",\"DEC3\",\"ENT3\",\"ENN3\",\"INC4\",\"DEC4\",\"ENT4\",\"ENN4\",\"INC5\",\"DEC5\",\"ENT5\",\"ENN5\",\"INC6\",\"DEC6\",\"ENT6\",\"ENN6\",\"INCX\",\"DECX\",\"ENTX\",\"ENNX\",\"CMPA\",\"FCMP\",\"CMP1\",\"CMP2\",\"CMP3\",\"CMP4\",\"CMP5\",\"CMP6\",\"CMPX\",\"EQU\",\"ORIG\",\"CON\",\"ALF\",\"END\"].indexOf(e)>-1},i=function(e){return e&&-1==e.search(/[^ A-Z\\u0394\\u03a0\\u03a30-9.,()+*/=$<>@;:'-]/)};this.$rules={start:[{token:\"comment.line.character\",regex:/^ *\\*.*$/},{token:function(t,l,N,r,o,a){return[e(t)?\"variable.other\":\"invalid.illegal\",\"text\",\"keyword.control\",\"text\",i(o)?\"text\":\"invalid.illegal\",\"comment.line.character\"]},regex:/^(\\S+)?( +)(ALF)(  )(.{5})(\\s+.*)?$/},{token:function(t,l,N,r,o,a){return[e(t)?\"variable.other\":\"invalid.illegal\",\"text\",\"keyword.control\",\"text\",i(o)?\"text\":\"invalid.illegal\",\"comment.line.character\"]},regex:/^(\\S+)?( +)(ALF)( )(\\S.{4})(\\s+.*)?$/},{token:function(i,l,N,r){return[e(i)?\"variable.other\":\"invalid.illegal\",\"text\",t(N)?\"keyword.control\":\"invalid.illegal\",\"comment.line.character\"]},regex:/^(\\S+)?( +)(\\S+)(?:\\s*)$/},{token:function(l,N,r,o,a,n){return[e(l)?\"variable.other\":\"invalid.illegal\",\"text\",t(r)?\"keyword.control\":\"invalid.illegal\",\"text\",i(a)?\"text\":\"invalid.illegal\",\"comment.line.character\"]},regex:/^(\\S+)?( +)(\\S+)( +)(\\S+)(\\s+.*)?$/},{defaultToken:\"text\"}]}};l.inherits(r,N),t.MixalHighlightRules=r})),ace.define(\"ace/mode/mixal\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/mixal_highlight_rules\"],(function(e,t,i){\"use strict\";var l=e(\"../lib/oop\"),N=e(\"./text\").Mode,r=e(\"./mixal_highlight_rules\").MixalHighlightRules,o=function(){this.HighlightRules=r};l.inherits(o,N),function(){this.$id=\"ace/mode/mixal\",this.lineCommentStart=\"*\"}.call(o.prototype),t.Mode=o})),ace.require([\"ace/mode/mixal\"],(function(e){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=e)}));","name":"0a459948dae1290356f3d6e3d656a56b.js","input":"ace.define(\"ace/mode/mixal_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var MixalHighlightRules = function () {\n    var isValidSymbol = function (string) {\n      return string && string.search(/^[A-Z\\u0394\\u03a0\\u03a30-9]{1,10}$/) > -1 && string.search(/[A-Z\\u0394\\u03a0\\u03a3]/) > -1;\n    };\n    var isValidOp = function (op) {\n      return op && ['NOP', 'ADD', 'FADD', 'SUB', 'FSUB', 'MUL', 'FMUL', 'DIV', 'FDIV', 'NUM', 'CHAR', 'HLT', 'SLA', 'SRA', 'SLAX', 'SRAX', 'SLC', 'SRC', 'MOVE', 'LDA', 'LD1', 'LD2', 'LD3', 'LD4', 'LD5', 'LD6', 'LDX', 'LDAN', 'LD1N', 'LD2N', 'LD3N', 'LD4N', 'LD5N', 'LD6N', 'LDXN', 'STA', 'ST1', 'ST2', 'ST3', 'ST4', 'ST5', 'ST6', 'STX', 'STJ', 'STZ', 'JBUS', 'IOC', 'IN', 'OUT', 'JRED', 'JMP', 'JSJ', 'JOV', 'JNOV', 'JL', 'JE', 'JG', 'JGE', 'JNE', 'JLE', 'JAN', 'JAZ', 'JAP', 'JANN', 'JANZ', 'JANP', 'J1N', 'J1Z', 'J1P', 'J1NN', 'J1NZ', 'J1NP', 'J2N', 'J2Z', 'J2P', 'J2NN', 'J2NZ', 'J2NP', 'J3N', 'J3Z', 'J3P', 'J3NN', 'J3NZ', 'J3NP', 'J4N', 'J4Z', 'J4P', 'J4NN', 'J4NZ', 'J4NP', 'J5N', 'J5Z', 'J5P', 'J5NN', 'J5NZ', 'J5NP', 'J6N', 'J6Z', 'J6P', 'J6NN', 'J6NZ', 'J6NP', 'JXN', 'JXZ', 'JXP', 'JXNN', 'JXNZ', 'JXNP', 'INCA', 'DECA', 'ENTA', 'ENNA', 'INC1', 'DEC1', 'ENT1', 'ENN1', 'INC2', 'DEC2', 'ENT2', 'ENN2', 'INC3', 'DEC3', 'ENT3', 'ENN3', 'INC4', 'DEC4', 'ENT4', 'ENN4', 'INC5', 'DEC5', 'ENT5', 'ENN5', 'INC6', 'DEC6', 'ENT6', 'ENN6', 'INCX', 'DECX', 'ENTX', 'ENNX', 'CMPA', 'FCMP', 'CMP1', 'CMP2', 'CMP3', 'CMP4', 'CMP5', 'CMP6', 'CMPX', 'EQU', 'ORIG', 'CON', 'ALF', 'END'].indexOf(op) > -1;\n    };\n    var containsOnlySupportedCharacters = function (string) {\n      return string && string.search(/[^ A-Z\\u0394\\u03a0\\u03a30-9.,()+*/=$<>@;:'-]/) == -1;\n    };\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.line.character\",\n        regex: /^ *\\*.*$/\n      }, {\n        token: function (label, space0, keyword, space1, literal, comment) {\n          return [isValidSymbol(label) ? \"variable.other\" : \"invalid.illegal\", \"text\", \"keyword.control\", \"text\", containsOnlySupportedCharacters(literal) ? \"text\" : \"invalid.illegal\", \"comment.line.character\"];\n        },\n        regex: /^(\\S+)?( +)(ALF)(  )(.{5})(\\s+.*)?$/\n      }, {\n        token: function (label, space0, keyword, space1, literal, comment) {\n          return [isValidSymbol(label) ? \"variable.other\" : \"invalid.illegal\", \"text\", \"keyword.control\", \"text\", containsOnlySupportedCharacters(literal) ? \"text\" : \"invalid.illegal\", \"comment.line.character\"];\n        },\n        regex: /^(\\S+)?( +)(ALF)( )(\\S.{4})(\\s+.*)?$/\n      }, {\n        token: function (label, space0, op, comment) {\n          return [isValidSymbol(label) ? \"variable.other\" : \"invalid.illegal\", \"text\", isValidOp(op) ? \"keyword.control\" : \"invalid.illegal\", \"comment.line.character\"];\n        },\n        regex: /^(\\S+)?( +)(\\S+)(?:\\s*)$/\n      }, {\n        token: function (label, space0, op, space1, address, comment) {\n          return [isValidSymbol(label) ? \"variable.other\" : \"invalid.illegal\", \"text\", isValidOp(op) ? \"keyword.control\" : \"invalid.illegal\", \"text\", containsOnlySupportedCharacters(address) ? \"text\" : \"invalid.illegal\", \"comment.line.character\"];\n        },\n        regex: /^(\\S+)?( +)(\\S+)( +)(\\S+)(\\s+.*)?$/\n      }, {\n        defaultToken: \"text\"\n      }]\n    };\n  };\n  oop.inherits(MixalHighlightRules, TextHighlightRules);\n  exports.MixalHighlightRules = MixalHighlightRules;\n});\nace.define(\"ace/mode/mixal\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/mixal_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var MixalHighlightRules = require(\"./mixal_highlight_rules\").MixalHighlightRules;\n  var Mode = function () {\n    this.HighlightRules = MixalHighlightRules;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.$id = \"ace/mode/mixal\";\n    this.lineCommentStart = \"*\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/mixal\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}