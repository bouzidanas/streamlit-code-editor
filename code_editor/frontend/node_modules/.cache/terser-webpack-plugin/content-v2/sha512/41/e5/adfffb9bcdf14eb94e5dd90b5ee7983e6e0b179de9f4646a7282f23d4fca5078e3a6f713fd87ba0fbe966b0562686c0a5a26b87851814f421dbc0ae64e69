{"code":"ace.define(\"ace/ext/statusbar\",[\"require\",\"exports\",\"module\",\"ace/lib/dom\",\"ace/lib/lang\"],(function(e,t,n){\"use strict\";var a=e(\"../lib/dom\"),o=e(\"../lib/lang\"),i=function(){function e(e,t){this.element=a.createElement(\"div\"),this.element.className=\"ace_status-indicator\",this.element.style.cssText=\"display: inline-block;\",t.appendChild(this.element);var n=o.delayedCall(function(){this.updateStatus(e)}.bind(this)).schedule.bind(null,100);e.on(\"changeStatus\",n),e.on(\"changeSelection\",n),e.on(\"keyboardActivity\",n)}return e.prototype.updateStatus=function(e){var t=[];function n(e,n){e&&t.push(e,n||\"|\")}n(e.keyBinding.getStatusText(e)),e.commands.recording&&n(\"REC\");var a=e.selection,o=a.lead;if(!a.isEmpty()){var i=e.getSelectionRange();n(\"(\"+(i.end.row-i.start.row)+\":\"+(i.end.column-i.start.column)+\")\",\" \")}n(o.row+\":\"+o.column,\" \"),a.rangeCount&&n(\"[\"+a.rangeCount+\"]\",\" \"),t.pop(),this.element.textContent=t.join(\"\")},e}();t.StatusBar=i})),ace.require([\"ace/ext/statusbar\"],(function(e){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=e)}));","name":"0db473c88fdf68a9b6cec96a21ef604f.js","input":"ace.define(\"ace/ext/statusbar\", [\"require\", \"exports\", \"module\", \"ace/lib/dom\", \"ace/lib/lang\"], function (require, exports, module) {\n  \"use strict\";\n\n  var dom = require(\"../lib/dom\");\n  var lang = require(\"../lib/lang\");\n  var StatusBar = /** @class */function () {\n    function StatusBar(editor, parentNode) {\n      this.element = dom.createElement(\"div\");\n      this.element.className = \"ace_status-indicator\";\n      this.element.style.cssText = \"display: inline-block;\";\n      parentNode.appendChild(this.element);\n      var statusUpdate = lang.delayedCall(function () {\n        this.updateStatus(editor);\n      }.bind(this)).schedule.bind(null, 100);\n      editor.on(\"changeStatus\", statusUpdate);\n      editor.on(\"changeSelection\", statusUpdate);\n      editor.on(\"keyboardActivity\", statusUpdate);\n    }\n    StatusBar.prototype.updateStatus = function (editor) {\n      var status = [];\n      function add(str, separator) {\n        str && status.push(str, separator || \"|\");\n      }\n      add(editor.keyBinding.getStatusText(editor));\n      if (editor.commands.recording) add(\"REC\");\n      var sel = editor.selection;\n      var c = sel.lead;\n      if (!sel.isEmpty()) {\n        var r = editor.getSelectionRange();\n        add(\"(\" + (r.end.row - r.start.row) + \":\" + (r.end.column - r.start.column) + \")\", \" \");\n      }\n      add(c.row + \":\" + c.column, \" \");\n      if (sel.rangeCount) add(\"[\" + sel.rangeCount + \"]\", \" \");\n      status.pop();\n      this.element.textContent = status.join(\"\");\n    };\n    return StatusBar;\n  }();\n  exports.StatusBar = StatusBar;\n});\n(function () {\n  ace.require([\"ace/ext/statusbar\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}