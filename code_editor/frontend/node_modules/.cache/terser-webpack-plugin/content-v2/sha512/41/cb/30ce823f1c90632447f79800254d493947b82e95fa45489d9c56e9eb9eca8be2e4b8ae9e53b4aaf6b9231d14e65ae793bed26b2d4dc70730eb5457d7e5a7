{"code":"ace.define(\"ace/ext/static-css\",[\"require\",\"exports\",\"module\"],(function(e,t,n){n.exports=\".ace_static_highlight {\\n    font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', 'Consolas', 'Source Code Pro', 'source-code-pro', 'Droid Sans Mono', monospace;\\n    font-size: 12px;\\n    white-space: pre-wrap\\n}\\n\\n.ace_static_highlight .ace_gutter {\\n    width: 2em;\\n    text-align: right;\\n    padding: 0 3px 0 0;\\n    margin-right: 3px;\\n    contain: none;\\n}\\n\\n.ace_static_highlight.ace_show_gutter .ace_line {\\n    padding-left: 2.6em;\\n}\\n\\n.ace_static_highlight .ace_line { position: relative; }\\n\\n.ace_static_highlight .ace_gutter-cell {\\n    -moz-user-select: -moz-none;\\n    -khtml-user-select: none;\\n    -webkit-user-select: none;\\n    user-select: none;\\n    top: 0;\\n    bottom: 0;\\n    left: 0;\\n    position: absolute;\\n}\\n\\n\\n.ace_static_highlight .ace_gutter-cell:before {\\n    content: counter(ace_line, decimal);\\n    counter-increment: ace_line;\\n}\\n.ace_static_highlight {\\n    counter-reset: ace_line;\\n}\\n\"})),ace.define(\"ace/ext/static_highlight\",[\"require\",\"exports\",\"module\",\"ace/edit_session\",\"ace/layer/text\",\"ace/ext/static-css\",\"ace/config\",\"ace/lib/dom\",\"ace/lib/lang\"],(function(e,t,n){\"use strict\";var i=e(\"../edit_session\").EditSession,s=e(\"../layer/text\").Text,o=e(\"./static-css\"),r=e(\"../config\"),a=e(\"../lib/dom\"),c=e(\"../lib/lang\").escapeHTML,l=function(){function e(e){this.className,this.type=e,this.style={},this.textContent=\"\"}return e.prototype.cloneNode=function(){return this},e.prototype.appendChild=function(e){this.textContent+=e.toString()},e.prototype.toString=function(){var e=[];if(\"fragment\"!=this.type){e.push(\"<\",this.type),this.className&&e.push(\" class='\",this.className,\"'\");var t=[];for(var n in this.style)t.push(n,\":\",this.style[n]);t.length&&e.push(\" style='\",t.join(\"\"),\"'\"),e.push(\">\")}return this.textContent&&e.push(this.textContent),\"fragment\"!=this.type&&e.push(\"</\",this.type,\">\"),e.join(\"\")},e}(),h={createTextNode:function(e,t){return c(e)},createElement:function(e){return new l(e)},createFragment:function(){return new l(\"fragment\")}},u=function(){this.config={},this.dom=h};u.prototype=s.prototype;var p=function(e,t,n){var i=e.className.match(/lang-(\\w+)/),s=t.mode||i&&\"ace/mode/\"+i[1];if(!s)return!1;var o=t.theme||\"ace/theme/textmate\",r=\"\",c=[];if(e.firstElementChild)for(var l=0,h=0;h<e.childNodes.length;h++){var u=e.childNodes[h];3==u.nodeType?(l+=u.data.length,r+=u.data):c.push(l,u)}else r=e.textContent,t.trim&&(r=r.trim());p.render(r,s,o,t.firstLineNumber,!t.showGutter,(function(t){a.importCssString(t.css,\"ace_highlight\",!0),e.innerHTML=t.html;for(var i=e.firstChild.firstChild,s=0;s<c.length;s+=2){var o=t.session.doc.indexToPosition(c[s]),r=c[s+1],l=i.children[o.row];l&&l.appendChild(r)}n&&n()}))};p.render=function(e,t,n,s,o,a){var c,l=1,h=i.prototype.$modes;function u(){var i=p.renderSync(e,t,n,s,o);return a?a(i):i}return\"string\"==typeof n&&(l++,r.loadModule([\"theme\",n],(function(e){n=e,--l||u()}))),t&&\"object\"===typeof t&&!t.getTokenizer&&(t=(c=t).path),\"string\"==typeof t&&(l++,r.loadModule([\"mode\",t],(function(e){h[t]&&!c||(h[t]=new e.Mode(c)),t=h[t],--l||u()}))),--l||u()},p.renderSync=function(e,t,n,s,r){s=parseInt(s||1,10);var a=new i(\"\");a.setUseWorker(!1),a.setMode(t);var c=new u;c.setSession(a),Object.keys(c.$tabStrings).forEach((function(e){if(\"string\"==typeof c.$tabStrings[e]){var t=h.createFragment();t.textContent=c.$tabStrings[e],c.$tabStrings[e]=t}})),a.setValue(e);var l=a.getLength(),p=h.createElement(\"div\");p.className=n.cssClass;var g=h.createElement(\"div\");g.className=\"ace_static_highlight\"+(r?\"\":\" ace_show_gutter\"),g.style[\"counter-reset\"]=\"ace_line \"+(s-1);for(var d=0;d<l;d++){var f=h.createElement(\"div\");if(f.className=\"ace_line\",!r){var m=h.createElement(\"span\");m.className=\"ace_gutter ace_gutter-cell\",m.textContent=\"\",f.appendChild(m)}c.$renderLine(f,d,!1),f.textContent+=\"\\n\",g.appendChild(f)}return p.appendChild(g),{css:o+n.cssText,html:p.toString(),session:a}},n.exports=p,n.exports.highlight=p})),ace.require([\"ace/ext/static_highlight\"],(function(e){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=e)}));","name":"75117b31c38f7f13ae0a9cd145b71f49.js","input":"ace.define(\"ace/ext/static-css\", [\"require\", \"exports\", \"module\"], function (require, exports, module) {\n  module.exports = \".ace_static_highlight {\\n    font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', 'Consolas', 'Source Code Pro', 'source-code-pro', 'Droid Sans Mono', monospace;\\n    font-size: 12px;\\n    white-space: pre-wrap\\n}\\n\\n.ace_static_highlight .ace_gutter {\\n    width: 2em;\\n    text-align: right;\\n    padding: 0 3px 0 0;\\n    margin-right: 3px;\\n    contain: none;\\n}\\n\\n.ace_static_highlight.ace_show_gutter .ace_line {\\n    padding-left: 2.6em;\\n}\\n\\n.ace_static_highlight .ace_line { position: relative; }\\n\\n.ace_static_highlight .ace_gutter-cell {\\n    -moz-user-select: -moz-none;\\n    -khtml-user-select: none;\\n    -webkit-user-select: none;\\n    user-select: none;\\n    top: 0;\\n    bottom: 0;\\n    left: 0;\\n    position: absolute;\\n}\\n\\n\\n.ace_static_highlight .ace_gutter-cell:before {\\n    content: counter(ace_line, decimal);\\n    counter-increment: ace_line;\\n}\\n.ace_static_highlight {\\n    counter-reset: ace_line;\\n}\\n\";\n});\nace.define(\"ace/ext/static_highlight\", [\"require\", \"exports\", \"module\", \"ace/edit_session\", \"ace/layer/text\", \"ace/ext/static-css\", \"ace/config\", \"ace/lib/dom\", \"ace/lib/lang\"], function (require, exports, module) {\n  \"use strict\";\n\n  var EditSession = require(\"../edit_session\").EditSession;\n  var TextLayer = require(\"../layer/text\").Text;\n  var baseStyles = require(\"./static-css\");\n  var config = require(\"../config\");\n  var dom = require(\"../lib/dom\");\n  var escapeHTML = require(\"../lib/lang\").escapeHTML;\n  var Element = /** @class */function () {\n    function Element(type) {\n      this.className;\n      this.type = type;\n      this.style = {};\n      this.textContent = \"\";\n    }\n    Element.prototype.cloneNode = function () {\n      return this;\n    };\n    Element.prototype.appendChild = function (child) {\n      this.textContent += child.toString();\n    };\n    Element.prototype.toString = function () {\n      var stringBuilder = [];\n      if (this.type != \"fragment\") {\n        stringBuilder.push(\"<\", this.type);\n        if (this.className) stringBuilder.push(\" class='\", this.className, \"'\");\n        var styleStr = [];\n        for (var key in this.style) {\n          styleStr.push(key, \":\", this.style[key]);\n        }\n        if (styleStr.length) stringBuilder.push(\" style='\", styleStr.join(\"\"), \"'\");\n        stringBuilder.push(\">\");\n      }\n      if (this.textContent) {\n        stringBuilder.push(this.textContent);\n      }\n      if (this.type != \"fragment\") {\n        stringBuilder.push(\"</\", this.type, \">\");\n      }\n      return stringBuilder.join(\"\");\n    };\n    return Element;\n  }();\n  var simpleDom = {\n    createTextNode: function ( /** @type {string} */textContent, /** @type {any} */element) {\n      return escapeHTML(textContent);\n    },\n    createElement: function ( /** @type {string} */type) {\n      return new Element(type);\n    },\n    createFragment: function () {\n      return new Element(\"fragment\");\n    }\n  };\n  var SimpleTextLayer = function () {\n    this.config = {};\n    this.dom = simpleDom;\n  };\n  SimpleTextLayer.prototype = TextLayer.prototype;\n  var highlight = function (el, opts, callback) {\n    var m = el.className.match(/lang-(\\w+)/);\n    var mode = opts.mode || m && \"ace/mode/\" + m[1];\n    if (!mode) return false;\n    var theme = opts.theme || \"ace/theme/textmate\";\n    var data = \"\";\n    var nodes = [];\n    if (el.firstElementChild) {\n      var textLen = 0;\n      for (var i = 0; i < el.childNodes.length; i++) {\n        var ch = el.childNodes[i];\n        if (ch.nodeType == 3) {\n          textLen += ch.data.length;\n          data += ch.data;\n        } else {\n          nodes.push(textLen, ch);\n        }\n      }\n    } else {\n      data = el.textContent;\n      if (opts.trim) data = data.trim();\n    }\n    highlight.render(data, mode, theme, opts.firstLineNumber, !opts.showGutter, function (highlighted) {\n      dom.importCssString(highlighted.css, \"ace_highlight\", true);\n      el.innerHTML = highlighted.html;\n      var container = el.firstChild.firstChild;\n      for (var i = 0; i < nodes.length; i += 2) {\n        var pos = highlighted.session.doc.indexToPosition(nodes[i]);\n        var node = nodes[i + 1];\n        var lineEl = container.children[pos.row];\n        lineEl && lineEl.appendChild(node);\n      }\n      callback && callback();\n    });\n  };\n  highlight.render = function (input, mode, theme, lineStart, disableGutter, callback) {\n    var waiting = 1;\n    var modeCache = EditSession.prototype.$modes;\n    if (typeof theme == \"string\") {\n      waiting++;\n      config.loadModule(['theme', theme], function (m) {\n        theme = m;\n        --waiting || done();\n      });\n    }\n    var modeOptions;\n    if (mode && typeof mode === \"object\" && !mode.getTokenizer) {\n      modeOptions = mode;\n      mode = modeOptions.path;\n    }\n    if (typeof mode == \"string\") {\n      waiting++;\n      config.loadModule(['mode', mode], function (m) {\n        if (!modeCache[( /**@type{string}*/mode)] || modeOptions) modeCache[( /**@type{string}*/mode)] = new m.Mode(modeOptions);\n        mode = modeCache[( /**@type{string}*/mode)];\n        --waiting || done();\n      });\n    }\n    function done() {\n      var result = highlight.renderSync(input, mode, theme, lineStart, disableGutter);\n      return callback ? callback(result) : result;\n    }\n    return --waiting || done();\n  };\n  highlight.renderSync = function (input, mode, theme, lineStart, disableGutter) {\n    lineStart = parseInt(lineStart || 1, 10);\n    var session = new EditSession(\"\");\n    session.setUseWorker(false);\n    session.setMode(mode);\n    var textLayer = new SimpleTextLayer();\n    textLayer.setSession(session);\n    Object.keys(textLayer.$tabStrings).forEach(function (k) {\n      if (typeof textLayer.$tabStrings[k] == \"string\") {\n        var el = simpleDom.createFragment();\n        el.textContent = textLayer.$tabStrings[k];\n        textLayer.$tabStrings[k] = el;\n      }\n    });\n    session.setValue(input);\n    var length = session.getLength();\n    var outerEl = simpleDom.createElement(\"div\");\n    outerEl.className = theme.cssClass;\n    var innerEl = simpleDom.createElement(\"div\");\n    innerEl.className = \"ace_static_highlight\" + (disableGutter ? \"\" : \" ace_show_gutter\");\n    innerEl.style[\"counter-reset\"] = \"ace_line \" + (lineStart - 1);\n    for (var ix = 0; ix < length; ix++) {\n      var lineEl = simpleDom.createElement(\"div\");\n      lineEl.className = \"ace_line\";\n      if (!disableGutter) {\n        var gutterEl = simpleDom.createElement(\"span\");\n        gutterEl.className = \"ace_gutter ace_gutter-cell\";\n        gutterEl.textContent = \"\";\n        lineEl.appendChild(gutterEl);\n      }\n      textLayer.$renderLine(lineEl, ix, false);\n      lineEl.textContent += \"\\n\";\n      innerEl.appendChild(lineEl);\n    }\n    outerEl.appendChild(innerEl);\n    return {\n      css: baseStyles + theme.cssText,\n      html: outerEl.toString(),\n      session: session\n    };\n  };\n  module.exports = highlight;\n  module.exports.highlight = highlight;\n});\n(function () {\n  ace.require([\"ace/ext/static_highlight\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}