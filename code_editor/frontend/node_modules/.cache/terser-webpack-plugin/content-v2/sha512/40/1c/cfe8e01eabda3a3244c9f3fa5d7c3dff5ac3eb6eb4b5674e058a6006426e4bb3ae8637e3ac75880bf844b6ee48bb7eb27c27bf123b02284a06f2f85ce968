{"code":"ace.define(\"ace/mode/toml_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],(function(e,t,o){\"use strict\";var i=e(\"../lib/oop\"),n=e(\"./text_highlight_rules\").TextHighlightRules,r=function(){var e=this.createKeywordMapper({\"constant.language.boolean\":\"true|false\"},\"identifier\");this.$rules={start:[{token:\"comment.toml\",regex:/#.*$/},{token:\"string\",regex:'\"(?=.)',next:\"qqstring\"},{token:[\"variable.keygroup.toml\"],regex:\"(?:^\\\\s*)(\\\\[\\\\[([^\\\\]]+)\\\\]\\\\])\"},{token:[\"variable.keygroup.toml\"],regex:\"(?:^\\\\s*)(\\\\[([^\\\\]]+)\\\\])\"},{token:e,regex:\"[a-zA-Z\\\\$_\\xa1-\\uffff][a-zA-Z\\\\d\\\\$_\\xa1-\\uffff]*\\\\b\"},{token:\"support.date.toml\",regex:\"\\\\d{4}-\\\\d{2}-\\\\d{2}(T)\\\\d{2}:\\\\d{2}:\\\\d{2}(Z)\"},{token:\"constant.numeric.toml\",regex:\"-?\\\\d+(\\\\.?\\\\d+)?\"}],qqstring:[{token:\"string\",regex:\"\\\\\\\\$\",next:\"qqstring\"},{token:\"constant.language.escape\",regex:'\\\\\\\\[0tnr\"\\\\\\\\]'},{token:\"string\",regex:'\"|$',next:\"start\"},{defaultToken:\"string\"}]}};i.inherits(r,n),t.TomlHighlightRules=r})),ace.define(\"ace/mode/folding/ini\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"],(function(e,t,o){\"use strict\";var i=e(\"../../lib/oop\"),n=e(\"../../range\").Range,r=e(\"./fold_mode\").FoldMode,l=t.FoldMode=function(){};i.inherits(l,r),function(){this.foldingStartMarker=/^\\s*\\[([^\\])]*)]\\s*(?:$|[;#])/,this.getFoldWidgetRange=function(e,t,o){var i=this.foldingStartMarker,r=e.getLine(o),l=r.match(i);if(l){for(var a=l[1]+\".\",g=r.length,s=e.getLength(),d=o,u=o;++o<s;)if(r=e.getLine(o),!/^\\s*$/.test(r)){if((l=r.match(i))&&0!==l[1].lastIndexOf(a,0))break;u=o}if(u>d){var c=e.getLine(u).length;return new n(d,g,u,c)}}}}.call(l.prototype)})),ace.define(\"ace/mode/toml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/toml_highlight_rules\",\"ace/mode/folding/ini\"],(function(e,t,o){\"use strict\";var i=e(\"../lib/oop\"),n=e(\"./text\").Mode,r=e(\"./toml_highlight_rules\").TomlHighlightRules,l=e(\"./folding/ini\").FoldMode,a=function(){this.HighlightRules=r,this.foldingRules=new l,this.$behaviour=this.$defaultBehaviour};i.inherits(a,n),function(){this.lineCommentStart=\"#\",this.$id=\"ace/mode/toml\"}.call(a.prototype),t.Mode=a})),ace.require([\"ace/mode/toml\"],(function(e){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=e)}));","name":"c60b82833583a85aa26303a0f96b5fbf.js","input":"ace.define(\"ace/mode/toml_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var TomlHighlightRules = function () {\n    var keywordMapper = this.createKeywordMapper({\n      \"constant.language.boolean\": \"true|false\"\n    }, \"identifier\");\n    var identifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\\\\b\";\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.toml\",\n        regex: /#.*$/\n      }, {\n        token: \"string\",\n        regex: '\"(?=.)',\n        next: \"qqstring\"\n      }, {\n        token: [\"variable.keygroup.toml\"],\n        regex: \"(?:^\\\\s*)(\\\\[\\\\[([^\\\\]]+)\\\\]\\\\])\"\n      }, {\n        token: [\"variable.keygroup.toml\"],\n        regex: \"(?:^\\\\s*)(\\\\[([^\\\\]]+)\\\\])\"\n      }, {\n        token: keywordMapper,\n        regex: identifierRe\n      }, {\n        token: \"support.date.toml\",\n        regex: \"\\\\d{4}-\\\\d{2}-\\\\d{2}(T)\\\\d{2}:\\\\d{2}:\\\\d{2}(Z)\"\n      }, {\n        token: \"constant.numeric.toml\",\n        regex: \"-?\\\\d+(\\\\.?\\\\d+)?\"\n      }],\n      \"qqstring\": [{\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"qqstring\"\n      }, {\n        token: \"constant.language.escape\",\n        regex: '\\\\\\\\[0tnr\"\\\\\\\\]'\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }]\n    };\n  };\n  oop.inherits(TomlHighlightRules, TextHighlightRules);\n  exports.TomlHighlightRules = TomlHighlightRules;\n});\nace.define(\"ace/mode/folding/ini\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Range = require(\"../../range\").Range;\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function () {};\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /^\\s*\\[([^\\])]*)]\\s*(?:$|[;#])/;\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var re = this.foldingStartMarker;\n      var line = session.getLine(row);\n      var m = line.match(re);\n      if (!m) return;\n      var startName = m[1] + \".\";\n      var startColumn = line.length;\n      var maxRow = session.getLength();\n      var startRow = row;\n      var endRow = row;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        if (/^\\s*$/.test(line)) continue;\n        m = line.match(re);\n        if (m && m[1].lastIndexOf(startName, 0) !== 0) break;\n        endRow = row;\n      }\n      if (endRow > startRow) {\n        var endColumn = session.getLine(endRow).length;\n        return new Range(startRow, startColumn, endRow, endColumn);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/toml\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/toml_highlight_rules\", \"ace/mode/folding/ini\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var TomlHighlightRules = require(\"./toml_highlight_rules\").TomlHighlightRules;\n  var FoldMode = require(\"./folding/ini\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = TomlHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/toml\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/toml\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}