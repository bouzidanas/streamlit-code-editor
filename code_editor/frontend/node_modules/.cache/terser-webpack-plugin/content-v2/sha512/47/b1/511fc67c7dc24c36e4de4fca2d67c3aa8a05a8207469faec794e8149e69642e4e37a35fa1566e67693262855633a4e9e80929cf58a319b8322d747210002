{"code":"ace.define(\"ace/occur\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/search\",\"ace/edit_session\",\"ace/search_highlight\",\"ace/lib/dom\"],(function(e,n,t){\"use strict\";var o=this&&this.__extends||function(){var e=function(n,t){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])},e(n,t)};return function(n,t){if(\"function\"!==typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function o(){this.constructor=n}e(n,t),n.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),r=e(\"./lib/oop\"),a=e(\"./search\").Search,i=e(\"./edit_session\").EditSession,s=e(\"./search_highlight\").SearchHighlight,c=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return o(n,e),n.prototype.enter=function(e,n){if(!n.needle)return!1;var t=e.getCursorPosition();this.displayOccurContent(e,n);var o=this.originalToOccurPosition(e.session,t);return e.moveCursorToPosition(o),!0},n.prototype.exit=function(e,n){var t=n.translatePosition&&e.getCursorPosition(),o=t&&this.occurToOriginalPosition(e.session,t);return this.displayOriginalContent(e),o&&e.moveCursorToPosition(o),!0},n.prototype.highlight=function(e,n){(e.$occurHighlight=e.$occurHighlight||e.addDynamicMarker(new s(null,\"ace_occur-highlight\",\"text\"))).setRegexp(n),e._emit(\"changeBackMarker\")},n.prototype.displayOccurContent=function(e,n){this.$originalSession=e.session;var t=this.matchingLines(e.session,n),o=t.map((function(e){return e.content})),r=new i(o.join(\"\\n\"));r.$occur=this,r.$occurMatchingLines=t,e.setSession(r),this.$useEmacsStyleLineStart=this.$originalSession.$useEmacsStyleLineStart,r.$useEmacsStyleLineStart=this.$useEmacsStyleLineStart,this.highlight(r,n.re),r._emit(\"changeBackMarker\")},n.prototype.displayOriginalContent=function(e){e.setSession(this.$originalSession),this.$originalSession.$useEmacsStyleLineStart=this.$useEmacsStyleLineStart},n.prototype.originalToOccurPosition=function(e,n){var t=e.$occurMatchingLines,o={row:0,column:0};if(!t)return o;for(var r=0;r<t.length;r++)if(t[r].row===n.row)return{row:r,column:n.column};return o},n.prototype.occurToOriginalPosition=function(e,n){var t=e.$occurMatchingLines;return t&&t[n.row]?{row:t[n.row].row,column:n.column}:n},n.prototype.matchingLines=function(e,n){if(n=r.mixin({},n),!e||!n.needle)return[];var t=new a;return t.set(n),t.findAll(e).reduce((function(n,t){var o=t.start.row,r=n[n.length-1];return r&&r.row===o?n:n.concat({row:o,content:e.getLine(o)})}),[])},n}(a);e(\"./lib/dom\").importCssString(\".ace_occur-highlight {\\n    border-radius: 4px;\\n    background-color: rgba(87, 255, 8, 0.25);\\n    position: absolute;\\n    z-index: 4;\\n    box-sizing: border-box;\\n    box-shadow: 0 0 4px rgb(91, 255, 50);\\n}\\n.ace_dark .ace_occur-highlight {\\n    background-color: rgb(80, 140, 85);\\n    box-shadow: 0 0 4px rgb(60, 120, 70);\\n}\\n\",\"incremental-occur-highlighting\",!1),n.Occur=c})),ace.define(\"ace/commands/occur_commands\",[\"require\",\"exports\",\"module\",\"ace/config\",\"ace/occur\",\"ace/keyboard/hash_handler\",\"ace/lib/oop\"],(function(e,n,t){e(\"../config\");var o=e(\"../occur\").Occur,r={name:\"occur\",exec:function(e,n){var t=!!e.session.$occur;(new o).enter(e,n)&&!t&&s.installIn(e)},readOnly:!0},a=[{name:\"occurexit\",bindKey:\"esc|Ctrl-G\",exec:function(e){var n=e.session.$occur;n&&(n.exit(e,{}),e.session.$occur||s.uninstallFrom(e))},readOnly:!0},{name:\"occuraccept\",bindKey:\"enter\",exec:function(e){var n=e.session.$occur;n&&(n.exit(e,{translatePosition:!0}),e.session.$occur||s.uninstallFrom(e))},readOnly:!0}],i=e(\"../keyboard/hash_handler\").HashHandler;function s(){}e(\"../lib/oop\").inherits(s,i),function(){this.isOccurHandler=!0,this.attach=function(e){i.call(this,a,e.commands.platform),this.$editor=e};var e=this.handleKeyboard;this.handleKeyboard=function(n,t,o,r){var a=e.call(this,n,t,o,r);return a&&a.command?a:void 0}}.call(s.prototype),s.installIn=function(e){var n=new this;e.keyBinding.addKeyboardHandler(n),e.commands.addCommands(a)},s.uninstallFrom=function(e){e.commands.removeCommands(a);var n=e.getKeyboardHandler();n.isOccurHandler&&e.keyBinding.removeKeyboardHandler(n)},n.occurStartCommand=r})),ace.define(\"ace/commands/incremental_search_commands\",[\"require\",\"exports\",\"module\",\"ace/config\",\"ace/lib/oop\",\"ace/keyboard/hash_handler\",\"ace/commands/occur_commands\"],(function(e,n,t){var o=e(\"../config\"),r=e(\"../lib/oop\"),a=e(\"../keyboard/hash_handler\").HashHandler,i=e(\"./occur_commands\").occurStartCommand;function s(e){this.$iSearch=e}n.iSearchStartCommands=[{name:\"iSearch\",bindKey:{win:\"Ctrl-F\",mac:\"Command-F\"},exec:function(e,n){o.loadModule([\"core\",\"ace/incremental_search\"],(function(t){var o=t.iSearch=t.iSearch||new t.IncrementalSearch;o.activate(e,n.backwards),n.jumpToFirstMatch&&o.next(n)}))},readOnly:!0},{name:\"iSearchBackwards\",exec:function(e,n){e.execCommand(\"iSearch\",{backwards:!0})},readOnly:!0},{name:\"iSearchAndGo\",bindKey:{win:\"Ctrl-K\",mac:\"Command-G\"},exec:function(e,n){e.execCommand(\"iSearch\",{jumpToFirstMatch:!0,useCurrentOrPrevSearch:!0})},readOnly:!0},{name:\"iSearchBackwardsAndGo\",bindKey:{win:\"Ctrl-Shift-K\",mac:\"Command-Shift-G\"},exec:function(e){e.execCommand(\"iSearch\",{jumpToFirstMatch:!0,backwards:!0,useCurrentOrPrevSearch:!0})},readOnly:!0}],n.iSearchCommands=[{name:\"restartSearch\",bindKey:{win:\"Ctrl-F\",mac:\"Command-F\"},exec:function(e){e.cancelSearch(!0)}},{name:\"searchForward\",bindKey:{win:\"Ctrl-S|Ctrl-K\",mac:\"Ctrl-S|Command-G\"},exec:function(e,n){n.useCurrentOrPrevSearch=!0,e.next(n)}},{name:\"searchBackward\",bindKey:{win:\"Ctrl-R|Ctrl-Shift-K\",mac:\"Ctrl-R|Command-Shift-G\"},exec:function(e,n){n.useCurrentOrPrevSearch=!0,n.backwards=!0,e.next(n)}},{name:\"extendSearchTerm\",exec:function(e,n){e.addString(n)}},{name:\"extendSearchTermSpace\",bindKey:\"space\",exec:function(e){e.addString(\" \")}},{name:\"shrinkSearchTerm\",bindKey:\"backspace\",exec:function(e){e.removeChar()}},{name:\"confirmSearch\",bindKey:\"return\",exec:function(e){e.deactivate()}},{name:\"cancelSearch\",bindKey:\"esc|Ctrl-G\",exec:function(e){e.deactivate(!0)}},{name:\"occurisearch\",bindKey:\"Ctrl-O\",exec:function(e){var n=r.mixin({},e.$options);e.deactivate(),i.exec(e.$editor,n)}},{name:\"yankNextWord\",bindKey:\"Ctrl-w\",exec:function(e){var n=e.$editor,t=n.selection.getRangeOfMovements((function(e){e.moveCursorWordRight()})),o=n.session.getTextRange(t);e.addString(o)}},{name:\"yankNextChar\",bindKey:\"Ctrl-Alt-y\",exec:function(e){var n=e.$editor,t=n.selection.getRangeOfMovements((function(e){e.moveCursorRight()})),o=n.session.getTextRange(t);e.addString(o)}},{name:\"recenterTopBottom\",bindKey:\"Ctrl-l\",exec:function(e){e.$editor.execCommand(\"recenterTopBottom\")}},{name:\"selectAllMatches\",bindKey:\"Ctrl-space\",exec:function(e){var n=e.$editor,t=n.session.$isearchHighlight,o=t&&t.cache?t.cache.reduce((function(e,n){return e.concat(n||[])}),[]):[];e.deactivate(!1),o.forEach(n.selection.addRange.bind(n.selection))}},{name:\"searchAsRegExp\",bindKey:\"Alt-r\",exec:function(e){e.convertNeedleToRegExp()}}].map((function(e){return e.readOnly=!0,e.isIncrementalSearchCommand=!0,e.scrollIntoView=\"animate-cursor\",e})),r.inherits(s,a),function(){this.attach=function(e){var t=this.$iSearch;a.call(this,n.iSearchCommands,e.commands.platform),this.$commandExecHandler=e.commands.on(\"exec\",(function(n){if(!n.command.isIncrementalSearchCommand)return t.deactivate();n.stopPropagation(),n.preventDefault();var o=e.session.getScrollTop(),r=n.command.exec(t,n.args||{});return e.renderer.scrollCursorIntoView(null,.5),e.renderer.animateScrolling(o),r}))},this.detach=function(e){this.$commandExecHandler&&(e.commands.off(\"exec\",this.$commandExecHandler),delete this.$commandExecHandler)};var e=this.handleKeyboard;this.handleKeyboard=function(n,t,o,r){if((1===t||8===t)&&\"v\"===o||1===t&&\"y\"===o)return null;var a=e.call(this,n,t,o,r);if(a&&a.command)return a;if(-1==t){var i=this.commands.extendSearchTerm;if(i)return{command:i,args:o}}return!1}}.call(s.prototype),n.IncrementalSearchKeyboardHandler=s})),ace.define(\"ace/incremental_search\",[\"require\",\"exports\",\"module\",\"ace/range\",\"ace/search\",\"ace/search_highlight\",\"ace/commands/incremental_search_commands\",\"ace/lib/dom\",\"ace/commands/command_manager\",\"ace/editor\",\"ace/config\"],(function(e,n,t){\"use strict\";var o=this&&this.__extends||function(){var e=function(n,t){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])},e(n,t)};return function(n,t){if(\"function\"!==typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function o(){this.constructor=n}e(n,t),n.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),r=e(\"./range\").Range,a=e(\"./search\").Search,i=e(\"./search_highlight\").SearchHighlight,s=e(\"./commands/incremental_search_commands\"),c=s.IncrementalSearchKeyboardHandler;function l(e){return e instanceof RegExp}function d(e){var n=String(e),t=n.indexOf(\"/\"),o=n.lastIndexOf(\"/\");return{expression:n.slice(t+1,o),flags:n.slice(o+1)}}function u(e,n){try{return new RegExp(e,n)}catch(t){return e}}function m(e){return u(e.expression,e.flags)}var h=function(e){function n(){var n=e.call(this)||this;return n.$options={wrap:!1,skipCurrent:!1},n.$keyboardHandler=new c(n),n}return o(n,e),n.prototype.activate=function(e,n){this.$editor=e,this.$startPos=this.$currentPos=e.getCursorPosition(),this.$options.needle=\"\",this.$options.backwards=n,e.keyBinding.addKeyboardHandler(this.$keyboardHandler),this.$originalEditorOnPaste=e.onPaste,e.onPaste=this.onPaste.bind(this),this.$mousedownHandler=e.on(\"mousedown\",this.onMouseDown.bind(this)),this.selectionFix(e),this.statusMessage(!0)},n.prototype.deactivate=function(e){this.cancelSearch(e);var n=this.$editor;n.keyBinding.removeKeyboardHandler(this.$keyboardHandler),this.$mousedownHandler&&(n.off(\"mousedown\",this.$mousedownHandler),delete this.$mousedownHandler),n.onPaste=this.$originalEditorOnPaste,this.message(\"\")},n.prototype.selectionFix=function(e){e.selection.isEmpty()&&!e.session.$emacsMark&&e.clearSelection()},n.prototype.highlight=function(e){var n=this.$editor.session;(n.$isearchHighlight=n.$isearchHighlight||n.addDynamicMarker(new i(null,\"ace_isearch-result\",\"text\"))).setRegexp(e),n._emit(\"changeBackMarker\")},n.prototype.cancelSearch=function(e){var n=this.$editor;return this.$prevNeedle=this.$options.needle,this.$options.needle=\"\",e?(n.moveCursorToPosition(this.$startPos),this.$currentPos=this.$startPos):n.pushEmacsMark&&n.pushEmacsMark(this.$startPos,!1),this.highlight(null),r.fromPoints(this.$currentPos,this.$currentPos)},n.prototype.highlightAndFindWithNeedle=function(e,n){if(!this.$editor)return null;var t=this.$options;if(n&&(t.needle=n.call(this,t.needle||\"\")||\"\"),0===t.needle.length)return this.statusMessage(!0),this.cancelSearch(!0);t.start=this.$currentPos;var o=this.$editor.session,a=this.find(o),i=this.$editor.emacsMark?!!this.$editor.emacsMark():!this.$editor.selection.isEmpty();return a&&(t.backwards&&(a=r.fromPoints(a.end,a.start)),this.$editor.selection.setRange(r.fromPoints(i?this.$startPos:a.end,a.end)),e&&(this.$currentPos=a.end),this.highlight(t.re)),this.statusMessage(a),a},n.prototype.addString=function(e){return this.highlightAndFindWithNeedle(!1,(function(n){if(!l(n))return n+e;var t=d(n);return t.expression+=e,m(t)}))},n.prototype.removeChar=function(e){return this.highlightAndFindWithNeedle(!1,(function(e){if(!l(e))return e.substring(0,e.length-1);var n=d(e);return n.expression=n.expression.substring(0,n.expression.length-1),m(n)}))},n.prototype.next=function(e){return e=e||{},this.$options.backwards=!!e.backwards,this.$currentPos=this.$editor.getCursorPosition(),this.highlightAndFindWithNeedle(!0,(function(n){return e.useCurrentOrPrevSearch&&0===n.length?this.$prevNeedle||\"\":n}))},n.prototype.onMouseDown=function(e){return this.deactivate(),!0},n.prototype.onPaste=function(e){this.addString(e)},n.prototype.convertNeedleToRegExp=function(){return this.highlightAndFindWithNeedle(!1,(function(e){return l(e)?e:u(e,\"ig\")}))},n.prototype.convertNeedleToString=function(){return this.highlightAndFindWithNeedle(!1,(function(e){return l(e)?d(e).expression:e}))},n.prototype.statusMessage=function(e){var n=this.$options,t=\"\";t+=n.backwards?\"reverse-\":\"\",t+=\"isearch: \"+n.needle,t+=e?\"\":\" (not found)\",this.message(t)},n.prototype.message=function(e){this.$editor.showCommandLine&&(this.$editor.showCommandLine(e),this.$editor.focus())},n}(a);n.IncrementalSearch=h,e(\"./lib/dom\").importCssString(\"\\n.ace_marker-layer .ace_isearch-result {\\n  position: absolute;\\n  z-index: 6;\\n  box-sizing: border-box;\\n}\\ndiv.ace_isearch-result {\\n  border-radius: 4px;\\n  background-color: rgba(255, 200, 0, 0.5);\\n  box-shadow: 0 0 4px rgb(255, 200, 0);\\n}\\n.ace_dark div.ace_isearch-result {\\n  background-color: rgb(100, 110, 160);\\n  box-shadow: 0 0 4px rgb(80, 90, 140);\\n}\",\"incremental-search-highlighting\",!1);var g=e(\"./commands/command_manager\");(function(){this.setupIncrementalSearch=function(e,n){if(this.usesIncrementalSearch!=n){this.usesIncrementalSearch=n;var t=s.iSearchStartCommands;this[n?\"addCommands\":\"removeCommands\"](t)}}}).call(g.CommandManager.prototype);var p=e(\"./editor\").Editor;e(\"./config\").defineOptions(p.prototype,\"editor\",{useIncrementalSearch:{set:function(e){this.keyBinding.$handlers.forEach((function(n){n.setupIncrementalSearch&&n.setupIncrementalSearch(this,e)})),this._emit(\"incrementalSearchSettingChanged\",{isEnabled:e})}}})})),ace.define(\"ace/keyboard/emacs\",[\"require\",\"exports\",\"module\",\"ace/lib/dom\",\"ace/incremental_search\",\"ace/commands/incremental_search_commands\",\"ace/keyboard/hash_handler\",\"ace/lib/keys\"],(function(e,n,t){\"use strict\";var o=e(\"../lib/dom\");e(\"../incremental_search\");var r,a,i=e(\"../commands/incremental_search_commands\"),s=e(\"./hash_handler\").HashHandler;n.handler=new s,n.handler.isEmacs=!0,n.handler.$id=\"ace/keyboard/emacs\",o.importCssString(\"\\n.emacs-mode .ace_cursor{\\n    border: 1px rgba(50,250,50,0.8) solid!important;\\n    box-sizing: border-box!important;\\n    background-color: rgba(0,250,0,0.9);\\n    opacity: 0.5;\\n}\\n.emacs-mode .ace_hidden-cursors .ace_cursor{\\n    opacity: 1;\\n    background-color: transparent;\\n}\\n.emacs-mode .ace_overwrite-cursors .ace_cursor {\\n    opacity: 1;\\n    background-color: transparent;\\n    border-width: 0 0 2px 2px !important;\\n}\\n.emacs-mode .ace_text-layer {\\n    z-index: 4\\n}\\n.emacs-mode .ace_cursor-layer {\\n    z-index: 2\\n}\",\"emacsMode\"),n.handler.attach=function(e){r=e.session.$selectLongWords,e.session.$selectLongWords=!0,a=e.session.$useEmacsStyleLineStart,e.session.$useEmacsStyleLineStart=!0,e.session.$emacsMark=null,e.session.$emacsMarkRing=e.session.$emacsMarkRing||[],e.emacsMark=function(){return this.session.$emacsMark},e.setEmacsMark=function(e){this.session.$emacsMark=e},e.pushEmacsMark=function(e,n){var t=this.session.$emacsMark;t&&this.session.$emacsMarkRing.push(t),!e||n?this.setEmacsMark(e):this.session.$emacsMarkRing.push(e)},e.popEmacsMark=function(){var e=this.emacsMark();return e?(this.setEmacsMark(null),e):this.session.$emacsMarkRing.pop()},e.getLastEmacsMark=function(e){return this.session.$emacsMark||this.session.$emacsMarkRing.slice(-1)[0]},e.emacsMarkForSelection=function(e){var n=this.selection,t=this.multiSelect?this.multiSelect.getAllRanges().length:1,o=n.index||0,r=this.session.$emacsMarkRing,a=r.length-(t-o),i=r[a]||n.anchor;return e&&r.splice(a,1,\"row\"in e&&\"column\"in e?e:void 0),i},e.on(\"click\",l),e.on(\"changeSession\",c),e.renderer.$blockCursor=!0,e.setStyle(\"emacs-mode\"),e.commands.addCommands(m),n.handler.platform=e.commands.platform,e.$emacsModeHandler=this,e.on(\"copy\",this.onCopy),e.on(\"paste\",this.onPaste)},n.handler.detach=function(e){e.renderer.$blockCursor=!1,e.session.$selectLongWords=r,e.session.$useEmacsStyleLineStart=a,e.off(\"click\",l),e.off(\"changeSession\",c),e.unsetStyle(\"emacs-mode\"),e.commands.removeCommands(m),e.off(\"copy\",this.onCopy),e.off(\"paste\",this.onPaste),e.$emacsModeHandler=null};var c=function(e){e.oldSession&&(e.oldSession.$selectLongWords=r,e.oldSession.$useEmacsStyleLineStart=a),r=e.session.$selectLongWords,e.session.$selectLongWords=!0,a=e.session.$useEmacsStyleLineStart,e.session.$useEmacsStyleLineStart=!0,e.session.hasOwnProperty(\"$emacsMark\")||(e.session.$emacsMark=null),e.session.hasOwnProperty(\"$emacsMarkRing\")||(e.session.$emacsMarkRing=[])},l=function(e){e.editor.session.$emacsMark=null},d=e(\"../lib/keys\").KEY_MODS,u={C:\"ctrl\",S:\"shift\",M:\"alt\",CMD:\"command\"};[\"C-S-M-CMD\",\"S-M-CMD\",\"C-M-CMD\",\"C-S-CMD\",\"C-S-M\",\"M-CMD\",\"S-CMD\",\"S-M\",\"C-CMD\",\"C-M\",\"C-S\",\"CMD\",\"M\",\"S\",\"C\"].forEach((function(e){var n=0;e.split(\"-\").forEach((function(e){n|=d[u[e]]})),u[n]=e.toLowerCase()+\"-\"})),n.handler.onCopy=function(e,t){t.$handlesEmacsOnCopy||(t.$handlesEmacsOnCopy=!0,n.handler.commands.killRingSave.exec(t),t.$handlesEmacsOnCopy=!1)},n.handler.onPaste=function(e,n){n.pushEmacsMark(n.getCursorPosition())},n.handler.bindKey=function(e,n){if(\"object\"==typeof e&&(e=e[this.platform]),e){var t=this.commandKeyBinding;e.split(\"|\").forEach((function(e){e=e.toLowerCase(),t[e]=n,e.split(\" \").slice(0,-1).reduce((function(e,n,t){var o=e[t-1]?e[t-1]+\" \":\"\";return e.concat([o+n])}),[]).forEach((function(e){t[e]||(t[e]=\"null\")}))}),this)}},n.handler.getStatusText=function(e,n){var t=\"\";return n.count&&(t+=n.count),n.keyChain&&(t+=\" \"+n.keyChain),t},n.handler.handleKeyboard=function(e,n,t,o){if(-1!==o){var r=e.editor;if(r._signal(\"changeStatus\"),-1==n&&(r.pushEmacsMark(),e.count)){var a=new Array(e.count+1).join(t);return e.count=null,{command:\"insertstring\",args:a}}var i=u[n];if(\"c-\"==i||e.count)if(\"number\"===typeof(l=parseInt(t[t.length-1]))&&!isNaN(l))return e.count=Math.max(e.count,0)||0,e.count=10*e.count+l,{command:\"null\"};i&&(t=i+t),e.keyChain&&(t=e.keyChain+=\" \"+t);var s=this.commandKeyBinding[t];if(e.keyChain=\"null\"==s?t:\"\",s){if(\"null\"===s)return{command:\"null\"};if(\"universalArgument\"===s)return e.count=-4,{command:\"null\"};var c;if(\"string\"!==typeof s&&(c=s.args,s.command&&(s=s.command),\"goorselect\"===s&&(s=r.emacsMark()?c[1]:c[0],c=null)),\"string\"!==typeof s||(\"insertstring\"!==s&&\"splitline\"!==s&&\"togglecomment\"!==s||r.pushEmacsMark(),s=this.commands[s]||r.commands.commands[s])){if(s.readOnly||s.isYank||(e.lastCommand=null),!s.readOnly&&r.emacsMark()&&r.setEmacsMark(null),e.count){var l=e.count;if(e.count=0,!s||!s.handlesCount)return{args:c,command:{exec:function(e,n){for(var t=0;t<l;t++)s.exec(e,n)},multiSelectAction:s.multiSelectAction}};c||(c={}),\"object\"===typeof c&&(c.count=l)}return{command:s,args:c}}}}},n.emacsKeys={\"Up|C-p\":{command:\"goorselect\",args:[\"golineup\",\"selectup\"]},\"Down|C-n\":{command:\"goorselect\",args:[\"golinedown\",\"selectdown\"]},\"Left|C-b\":{command:\"goorselect\",args:[\"gotoleft\",\"selectleft\"]},\"Right|C-f\":{command:\"goorselect\",args:[\"gotoright\",\"selectright\"]},\"C-Left|M-b\":{command:\"goorselect\",args:[\"gotowordleft\",\"selectwordleft\"]},\"C-Right|M-f\":{command:\"goorselect\",args:[\"gotowordright\",\"selectwordright\"]},\"Home|C-a\":{command:\"goorselect\",args:[\"gotolinestart\",\"selecttolinestart\"]},\"End|C-e\":{command:\"goorselect\",args:[\"gotolineend\",\"selecttolineend\"]},\"C-Home|S-M-,\":{command:\"goorselect\",args:[\"gotostart\",\"selecttostart\"]},\"C-End|S-M-.\":{command:\"goorselect\",args:[\"gotoend\",\"selecttoend\"]},\"S-Up|S-C-p\":\"selectup\",\"S-Down|S-C-n\":\"selectdown\",\"S-Left|S-C-b\":\"selectleft\",\"S-Right|S-C-f\":\"selectright\",\"S-C-Left|S-M-b\":\"selectwordleft\",\"S-C-Right|S-M-f\":\"selectwordright\",\"S-Home|S-C-a\":\"selecttolinestart\",\"S-End|S-C-e\":\"selecttolineend\",\"S-C-Home\":\"selecttostart\",\"S-C-End\":\"selecttoend\",\"C-l\":\"recenterTopBottom\",\"M-s\":\"centerselection\",\"M-g\":\"gotoline\",\"C-x C-p\":\"selectall\",\"C-Down\":{command:\"goorselect\",args:[\"gotopagedown\",\"selectpagedown\"]},\"C-Up\":{command:\"goorselect\",args:[\"gotopageup\",\"selectpageup\"]},\"PageDown|C-v\":{command:\"goorselect\",args:[\"gotopagedown\",\"selectpagedown\"]},\"PageUp|M-v\":{command:\"goorselect\",args:[\"gotopageup\",\"selectpageup\"]},\"S-C-Down\":\"selectpagedown\",\"S-C-Up\":\"selectpageup\",\"C-s\":\"iSearch\",\"C-r\":\"iSearchBackwards\",\"M-C-s\":\"findnext\",\"M-C-r\":\"findprevious\",\"S-M-5\":\"replace\",Backspace:\"backspace\",\"Delete|C-d\":\"del\",\"Return|C-m\":{command:\"insertstring\",args:\"\\n\"},\"C-o\":\"splitline\",\"M-d|C-Delete\":{command:\"killWord\",args:\"right\"},\"C-Backspace|M-Backspace|M-Delete\":{command:\"killWord\",args:\"left\"},\"C-k\":\"killLine\",\"C-y|S-Delete\":\"yank\",\"M-y\":\"yankRotate\",\"C-g\":\"keyboardQuit\",\"C-w|C-S-W\":\"killRegion\",\"M-w\":\"killRingSave\",\"C-Space\":\"setMark\",\"C-x C-x\":\"exchangePointAndMark\",\"C-t\":\"transposeletters\",\"M-u\":\"touppercase\",\"M-l\":\"tolowercase\",\"M-/\":\"autocomplete\",\"C-u\":\"universalArgument\",\"M-;\":\"togglecomment\",\"C-/|C-x u|S-C--|C-z\":\"undo\",\"S-C-/|S-C-x u|C--|S-C-z\":\"redo\",\"C-x r\":\"selectRectangularRegion\",\"M-x\":{command:\"focusCommandLine\",args:\"M-x \"}},n.handler.bindKeys(n.emacsKeys),n.handler.addCommands({recenterTopBottom:function(e){var n=e.renderer,t=n.$cursorLayer.getPixelPosition(),o=n.$size.scrollerHeight-n.lineHeight,r=n.scrollTop;r=Math.abs(t.top-r)<2?t.top-o:Math.abs(t.top-r-.5*o)<2?t.top:t.top-.5*o,e.session.setScrollTop(r)},selectRectangularRegion:function(e){e.multiSelect.toggleBlockSelection()},setMark:{exec:function(e,n){if(n&&n.count)return e.inMultiSelectMode?e.forEachSelection(i):i(),void i();var t=e.emacsMark(),o=e.selection.getAllRanges(),r=o.map((function(e){return{row:e.start.row,column:e.start.column}})),a=o.every((function(e){return e.isEmpty()}));if(t||!a)return e.inMultiSelectMode?e.forEachSelection({exec:e.clearSelection.bind(e)}):e.clearSelection(),void(t&&e.pushEmacsMark(null));if(!t)return r.forEach((function(n){e.pushEmacsMark(n)})),void e.setEmacsMark(r[r.length-1]);function i(){var n=e.popEmacsMark();n&&e.moveCursorToPosition(n)}},readOnly:!0,handlesCount:!0},exchangePointAndMark:{exec:function(e,n){var t=e.selection;if(n.count||t.isEmpty())if(n.count){var o={row:t.lead.row,column:t.lead.column};t.clearSelection(),t.moveCursorToPosition(e.emacsMarkForSelection(o))}else t.selectToPosition(e.emacsMarkForSelection());else t.setSelectionRange(t.getRange(),!t.isBackwards())},readOnly:!0,handlesCount:!0,multiSelectAction:\"forEach\"},killWord:{exec:function(e,t){e.clearSelection(),\"left\"==t?e.selection.selectWordLeft():e.selection.selectWordRight();var o=e.getSelectionRange(),r=e.session.getTextRange(o);n.killRing.add(r),e.session.remove(o),e.clearSelection()},multiSelectAction:\"forEach\"},killLine:function(e){e.pushEmacsMark(null),e.clearSelection();var t=e.getSelectionRange(),o=e.session.getLine(t.start.row);t.end.column=o.length,o=o.substr(t.start.column);var r=e.session.getFoldLine(t.start.row);r&&t.end.row!=r.end.row&&(t.end.row=r.end.row,o=\"x\"),/^\\s*$/.test(o)&&(t.end.row++,o=e.session.getLine(t.end.row),t.end.column=/^\\s*$/.test(o)?o.length:0);var a=e.session.getTextRange(t);e.prevOp.command==this?n.killRing.append(a):n.killRing.add(a),e.session.remove(t),e.clearSelection()},yank:function(e){e.onPaste(n.killRing.get()||\"\"),e.keyBinding.$data.lastCommand=\"yank\"},yankRotate:function(e){\"yank\"==e.keyBinding.$data.lastCommand&&(e.undo(),e.session.$emacsMarkRing.pop(),e.onPaste(n.killRing.rotate()),e.keyBinding.$data.lastCommand=\"yank\")},killRegion:{exec:function(e){n.killRing.add(e.getCopyText()),e.commands.byName.cut.exec(e),e.setEmacsMark(null)},readOnly:!0,multiSelectAction:\"forEach\"},killRingSave:{exec:function(e){e.$handlesEmacsOnCopy=!0;var t=e.session.$emacsMarkRing.slice(),o=[];n.killRing.add(e.getCopyText()),setTimeout((function(){function n(){var n=e.selection,t=n.getRange(),r=n.isBackwards()?t.end:t.start;o.push({row:r.row,column:r.column}),n.clearSelection()}e.$handlesEmacsOnCopy=!1,e.inMultiSelectMode?e.forEachSelection({exec:n}):n(),e.setEmacsMark(null),e.session.$emacsMarkRing=t.concat(o.reverse())}),0)},readOnly:!0},keyboardQuit:function(e){e.selection.clearSelection(),e.setEmacsMark(null),e.keyBinding.$data.count=null},focusCommandLine:function(e,n){e.showCommandLine&&e.showCommandLine(n)}}),n.handler.addCommands(i.iSearchStartCommands);var m=n.handler.commands;m.yank.isYank=!0,m.yankRotate.isYank=!0,n.killRing={$data:[],add:function(e){e&&this.$data.push(e),this.$data.length>30&&this.$data.shift()},append:function(e){var n=this.$data.length-1,t=this.$data[n]||\"\";e&&(t+=e),t&&(this.$data[n]=t)},get:function(e){return e=e||1,this.$data.slice(this.$data.length-e,this.$data.length).reverse().join(\"\\n\")},pop:function(){return this.$data.length>1&&this.$data.pop(),this.get()},rotate:function(){return this.$data.unshift(this.$data.pop()),this.get()}}})),ace.require([\"ace/keyboard/emacs\"],(function(e){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=e)}));","name":"14b39db975d8d5dd90f09bc6f3b1a6f0.js","input":"ace.define(\"ace/occur\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/search\", \"ace/edit_session\", \"ace/search_highlight\", \"ace/lib/dom\"], function (require, exports, module) {\n  \"use strict\";\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = function (d, b) {\n      extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      };\n      return extendStatics(d, b);\n    };\n    return function (d, b) {\n      if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n      extendStatics(d, b);\n      function __() {\n        this.constructor = d;\n      }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n  var oop = require(\"./lib/oop\");\n  var Search = require(\"./search\").Search;\n  var EditSession = require(\"./edit_session\").EditSession;\n  var SearchHighlight = require(\"./search_highlight\").SearchHighlight;\n  var Occur = /** @class */function (_super) {\n    __extends(Occur, _super);\n    function Occur() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Occur.prototype.enter = function (editor, options) {\n      if (!options.needle) return false;\n      var pos = editor.getCursorPosition();\n      this.displayOccurContent(editor, options);\n      var translatedPos = this.originalToOccurPosition(editor.session, pos);\n      editor.moveCursorToPosition(translatedPos);\n      return true;\n    };\n    Occur.prototype.exit = function (editor, options) {\n      var pos = options.translatePosition && editor.getCursorPosition();\n      var translatedPos = pos && this.occurToOriginalPosition(editor.session, pos);\n      this.displayOriginalContent(editor);\n      if (translatedPos) editor.moveCursorToPosition(translatedPos);\n      return true;\n    };\n    Occur.prototype.highlight = function (sess, regexp) {\n      var hl = sess.$occurHighlight = sess.$occurHighlight || sess.addDynamicMarker(new SearchHighlight(null, \"ace_occur-highlight\", \"text\"));\n      hl.setRegexp(regexp);\n      sess._emit(\"changeBackMarker\"); // force highlight layer redraw\n    };\n    Occur.prototype.displayOccurContent = function (editor, options) {\n      this.$originalSession = editor.session;\n      var found = this.matchingLines(editor.session, options);\n      var lines = found.map(function (foundLine) {\n        return foundLine.content;\n      });\n      var occurSession = new EditSession(lines.join('\\n'));\n      occurSession.$occur = this;\n      occurSession.$occurMatchingLines = found;\n      editor.setSession(occurSession);\n      this.$useEmacsStyleLineStart = this.$originalSession.$useEmacsStyleLineStart;\n      occurSession.$useEmacsStyleLineStart = this.$useEmacsStyleLineStart;\n      this.highlight(occurSession, options.re);\n      occurSession._emit('changeBackMarker');\n    };\n    Occur.prototype.displayOriginalContent = function (editor) {\n      editor.setSession(this.$originalSession);\n      this.$originalSession.$useEmacsStyleLineStart = this.$useEmacsStyleLineStart;\n    };\n    Occur.prototype.originalToOccurPosition = function (session, pos) {\n      var lines = session.$occurMatchingLines;\n      var nullPos = {\n        row: 0,\n        column: 0\n      };\n      if (!lines) return nullPos;\n      for (var i = 0; i < lines.length; i++) {\n        if (lines[i].row === pos.row) return {\n          row: i,\n          column: pos.column\n        };\n      }\n      return nullPos;\n    };\n    Occur.prototype.occurToOriginalPosition = function (session, pos) {\n      var lines = session.$occurMatchingLines;\n      if (!lines || !lines[pos.row]) return pos;\n      return {\n        row: lines[pos.row].row,\n        column: pos.column\n      };\n    };\n    Occur.prototype.matchingLines = function (session, options) {\n      options = oop.mixin({}, options);\n      if (!session || !options.needle) return [];\n      var search = new Search();\n      search.set(options);\n      return search.findAll(session).reduce(function (lines, range) {\n        var row = range.start.row;\n        var last = lines[lines.length - 1];\n        return last && last.row === row ? lines : lines.concat({\n          row: row,\n          content: session.getLine(row)\n        });\n      }, []);\n    };\n    return Occur;\n  }(Search);\n  var dom = require('./lib/dom');\n  dom.importCssString(\".ace_occur-highlight {\\n\\\n    border-radius: 4px;\\n\\\n    background-color: rgba(87, 255, 8, 0.25);\\n\\\n    position: absolute;\\n\\\n    z-index: 4;\\n\\\n    box-sizing: border-box;\\n\\\n    box-shadow: 0 0 4px rgb(91, 255, 50);\\n\\\n}\\n\\\n.ace_dark .ace_occur-highlight {\\n\\\n    background-color: rgb(80, 140, 85);\\n\\\n    box-shadow: 0 0 4px rgb(60, 120, 70);\\n\\\n}\\n\", \"incremental-occur-highlighting\", false);\n  exports.Occur = Occur;\n});\nace.define(\"ace/commands/occur_commands\", [\"require\", \"exports\", \"module\", \"ace/config\", \"ace/occur\", \"ace/keyboard/hash_handler\", \"ace/lib/oop\"], function (require, exports, module) {\n  var config = require(\"../config\"),\n    Occur = require(\"../occur\").Occur;\n  var occurStartCommand = {\n    name: \"occur\",\n    exec: function (editor, options) {\n      var alreadyInOccur = !!editor.session.$occur;\n      var occurSessionActive = new Occur().enter(editor, options);\n      if (occurSessionActive && !alreadyInOccur) OccurKeyboardHandler.installIn(editor);\n    },\n    readOnly: true\n  };\n  var occurCommands = [{\n    name: \"occurexit\",\n    bindKey: 'esc|Ctrl-G',\n    exec: function (editor) {\n      var occur = editor.session.$occur;\n      if (!occur) return;\n      occur.exit(editor, {});\n      if (!editor.session.$occur) OccurKeyboardHandler.uninstallFrom(editor);\n    },\n    readOnly: true\n  }, {\n    name: \"occuraccept\",\n    bindKey: 'enter',\n    exec: function (editor) {\n      var occur = editor.session.$occur;\n      if (!occur) return;\n      occur.exit(editor, {\n        translatePosition: true\n      });\n      if (!editor.session.$occur) OccurKeyboardHandler.uninstallFrom(editor);\n    },\n    readOnly: true\n  }];\n  var HashHandler = require(\"../keyboard/hash_handler\").HashHandler;\n  var oop = require(\"../lib/oop\");\n  function OccurKeyboardHandler() {}\n  oop.inherits(OccurKeyboardHandler, HashHandler);\n  (function () {\n    this.isOccurHandler = true;\n    this.attach = function (editor) {\n      HashHandler.call(this, occurCommands, editor.commands.platform);\n      this.$editor = editor;\n    };\n    var handleKeyboard$super = this.handleKeyboard;\n    this.handleKeyboard = function (data, hashId, key, keyCode) {\n      var cmd = handleKeyboard$super.call(this, data, hashId, key, keyCode);\n      return cmd && cmd.command ? cmd : undefined;\n    };\n  }).call(OccurKeyboardHandler.prototype);\n  OccurKeyboardHandler.installIn = function (editor) {\n    var handler = new this();\n    editor.keyBinding.addKeyboardHandler(handler);\n    editor.commands.addCommands(occurCommands);\n  };\n  OccurKeyboardHandler.uninstallFrom = function (editor) {\n    editor.commands.removeCommands(occurCommands);\n    var handler = editor.getKeyboardHandler();\n    if (handler.isOccurHandler) editor.keyBinding.removeKeyboardHandler(handler);\n  };\n  exports.occurStartCommand = occurStartCommand;\n});\nace.define(\"ace/commands/incremental_search_commands\", [\"require\", \"exports\", \"module\", \"ace/config\", \"ace/lib/oop\", \"ace/keyboard/hash_handler\", \"ace/commands/occur_commands\"], function (require, exports, module) {\n  var config = require(\"../config\");\n  var oop = require(\"../lib/oop\");\n  var HashHandler = require(\"../keyboard/hash_handler\").HashHandler;\n  var occurStartCommand = require(\"./occur_commands\").occurStartCommand;\n  exports.iSearchStartCommands = [{\n    name: \"iSearch\",\n    bindKey: {\n      win: \"Ctrl-F\",\n      mac: \"Command-F\"\n    },\n    exec: function (editor, options) {\n      config.loadModule([\"core\", \"ace/incremental_search\"], function (e) {\n        var iSearch = e.iSearch = e.iSearch || new e.IncrementalSearch();\n        iSearch.activate(editor, options.backwards);\n        if (options.jumpToFirstMatch) iSearch.next(options);\n      });\n    },\n    readOnly: true\n  }, {\n    name: \"iSearchBackwards\",\n    exec: function (editor, jumpToNext) {\n      editor.execCommand('iSearch', {\n        backwards: true\n      });\n    },\n    readOnly: true\n  }, {\n    name: \"iSearchAndGo\",\n    bindKey: {\n      win: \"Ctrl-K\",\n      mac: \"Command-G\"\n    },\n    exec: function (editor, jumpToNext) {\n      editor.execCommand('iSearch', {\n        jumpToFirstMatch: true,\n        useCurrentOrPrevSearch: true\n      });\n    },\n    readOnly: true\n  }, {\n    name: \"iSearchBackwardsAndGo\",\n    bindKey: {\n      win: \"Ctrl-Shift-K\",\n      mac: \"Command-Shift-G\"\n    },\n    exec: function (editor) {\n      editor.execCommand('iSearch', {\n        jumpToFirstMatch: true,\n        backwards: true,\n        useCurrentOrPrevSearch: true\n      });\n    },\n    readOnly: true\n  }];\n  exports.iSearchCommands = [{\n    name: \"restartSearch\",\n    bindKey: {\n      win: \"Ctrl-F\",\n      mac: \"Command-F\"\n    },\n    exec: function (iSearch) {\n      iSearch.cancelSearch(true);\n    }\n  }, {\n    name: \"searchForward\",\n    bindKey: {\n      win: \"Ctrl-S|Ctrl-K\",\n      mac: \"Ctrl-S|Command-G\"\n    },\n    exec: function (iSearch, options) {\n      options.useCurrentOrPrevSearch = true;\n      iSearch.next(options);\n    }\n  }, {\n    name: \"searchBackward\",\n    bindKey: {\n      win: \"Ctrl-R|Ctrl-Shift-K\",\n      mac: \"Ctrl-R|Command-Shift-G\"\n    },\n    exec: function (iSearch, options) {\n      options.useCurrentOrPrevSearch = true;\n      options.backwards = true;\n      iSearch.next(options);\n    }\n  }, {\n    name: \"extendSearchTerm\",\n    exec: function (iSearch, string) {\n      iSearch.addString(string);\n    }\n  }, {\n    name: \"extendSearchTermSpace\",\n    bindKey: \"space\",\n    exec: function (iSearch) {\n      iSearch.addString(' ');\n    }\n  }, {\n    name: \"shrinkSearchTerm\",\n    bindKey: \"backspace\",\n    exec: function (iSearch) {\n      iSearch.removeChar();\n    }\n  }, {\n    name: 'confirmSearch',\n    bindKey: 'return',\n    exec: function (iSearch) {\n      iSearch.deactivate();\n    }\n  }, {\n    name: 'cancelSearch',\n    bindKey: 'esc|Ctrl-G',\n    exec: function (iSearch) {\n      iSearch.deactivate(true);\n    }\n  }, {\n    name: 'occurisearch',\n    bindKey: 'Ctrl-O',\n    exec: function (iSearch) {\n      var options = oop.mixin({}, iSearch.$options);\n      iSearch.deactivate();\n      occurStartCommand.exec(iSearch.$editor, options);\n    }\n  }, {\n    name: \"yankNextWord\",\n    bindKey: \"Ctrl-w\",\n    exec: function (iSearch) {\n      var ed = iSearch.$editor,\n        range = ed.selection.getRangeOfMovements(function (sel) {\n          sel.moveCursorWordRight();\n        }),\n        string = ed.session.getTextRange(range);\n      iSearch.addString(string);\n    }\n  }, {\n    name: \"yankNextChar\",\n    bindKey: \"Ctrl-Alt-y\",\n    exec: function (iSearch) {\n      var ed = iSearch.$editor,\n        range = ed.selection.getRangeOfMovements(function (sel) {\n          sel.moveCursorRight();\n        }),\n        string = ed.session.getTextRange(range);\n      iSearch.addString(string);\n    }\n  }, {\n    name: 'recenterTopBottom',\n    bindKey: 'Ctrl-l',\n    exec: function (iSearch) {\n      iSearch.$editor.execCommand('recenterTopBottom');\n    }\n  }, {\n    name: 'selectAllMatches',\n    bindKey: 'Ctrl-space',\n    exec: function (iSearch) {\n      var ed = iSearch.$editor,\n        hl = ed.session.$isearchHighlight,\n        ranges = hl && hl.cache ? hl.cache.reduce(function (ranges, ea) {\n          return ranges.concat(ea ? ea : []);\n        }, []) : [];\n      iSearch.deactivate(false);\n      ranges.forEach(ed.selection.addRange.bind(ed.selection));\n    }\n  }, {\n    name: 'searchAsRegExp',\n    bindKey: 'Alt-r',\n    exec: function (iSearch) {\n      iSearch.convertNeedleToRegExp();\n    }\n  }].map(function (cmd) {\n    cmd.readOnly = true;\n    cmd.isIncrementalSearchCommand = true;\n    cmd.scrollIntoView = \"animate-cursor\";\n    return cmd;\n  });\n  function IncrementalSearchKeyboardHandler(iSearch) {\n    this.$iSearch = iSearch;\n  }\n  oop.inherits(IncrementalSearchKeyboardHandler, HashHandler);\n  (function () {\n    this.attach = function (editor) {\n      var iSearch = this.$iSearch;\n      HashHandler.call(this, exports.iSearchCommands, editor.commands.platform);\n      this.$commandExecHandler = editor.commands.on('exec', function (e) {\n        if (!e.command.isIncrementalSearchCommand) return iSearch.deactivate();\n        e.stopPropagation();\n        e.preventDefault();\n        var scrollTop = editor.session.getScrollTop();\n        var result = e.command.exec(iSearch, e.args || {});\n        editor.renderer.scrollCursorIntoView(null, 0.5);\n        editor.renderer.animateScrolling(scrollTop);\n        return result;\n      });\n    };\n    this.detach = function (editor) {\n      if (!this.$commandExecHandler) return;\n      editor.commands.off('exec', this.$commandExecHandler);\n      delete this.$commandExecHandler;\n    };\n    var handleKeyboard$super = this.handleKeyboard;\n    this.handleKeyboard = function (data, hashId, key, keyCode) {\n      if ((hashId === 1 /*ctrl*/ || hashId === 8 /*command*/) && key === 'v' || hashId === 1 /*ctrl*/ && key === 'y') return null;\n      var cmd = handleKeyboard$super.call(this, data, hashId, key, keyCode);\n      if (cmd && cmd.command) {\n        return cmd;\n      }\n      if (hashId == -1) {\n        var extendCmd = this.commands.extendSearchTerm;\n        if (extendCmd) {\n          return {\n            command: extendCmd,\n            args: key\n          };\n        }\n      }\n      return false;\n    };\n  }).call(IncrementalSearchKeyboardHandler.prototype);\n  exports.IncrementalSearchKeyboardHandler = IncrementalSearchKeyboardHandler;\n});\nace.define(\"ace/incremental_search\", [\"require\", \"exports\", \"module\", \"ace/range\", \"ace/search\", \"ace/search_highlight\", \"ace/commands/incremental_search_commands\", \"ace/lib/dom\", \"ace/commands/command_manager\", \"ace/editor\", \"ace/config\"], function (require, exports, module) {\n  \"use strict\";\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = function (d, b) {\n      extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      };\n      return extendStatics(d, b);\n    };\n    return function (d, b) {\n      if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n      extendStatics(d, b);\n      function __() {\n        this.constructor = d;\n      }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n  var Range = require(\"./range\").Range;\n  var Search = require(\"./search\").Search;\n  var SearchHighlight = require(\"./search_highlight\").SearchHighlight;\n  var iSearchCommandModule = require(\"./commands/incremental_search_commands\");\n  var ISearchKbd = iSearchCommandModule.IncrementalSearchKeyboardHandler;\n  function isRegExp(obj) {\n    return obj instanceof RegExp;\n  }\n  function regExpToObject(re) {\n    var string = String(re),\n      start = string.indexOf('/'),\n      flagStart = string.lastIndexOf('/');\n    return {\n      expression: string.slice(start + 1, flagStart),\n      flags: string.slice(flagStart + 1)\n    };\n  }\n  function stringToRegExp(string, flags) {\n    try {\n      return new RegExp(string, flags);\n    } catch (e) {\n      return string;\n    }\n  }\n  function objectToRegExp(obj) {\n    return stringToRegExp(obj.expression, obj.flags);\n  }\n  var IncrementalSearch = /** @class */function (_super) {\n    __extends(IncrementalSearch, _super);\n    function IncrementalSearch() {\n      var _this = _super.call(this) || this;\n      _this.$options = {\n        wrap: false,\n        skipCurrent: false\n      };\n      _this.$keyboardHandler = new ISearchKbd(_this);\n      return _this;\n    }\n    IncrementalSearch.prototype.activate = function (editor, backwards) {\n      this.$editor = editor;\n      this.$startPos = this.$currentPos = editor.getCursorPosition();\n      this.$options.needle = '';\n      this.$options.backwards = backwards;\n      editor.keyBinding.addKeyboardHandler(this.$keyboardHandler);\n      this.$originalEditorOnPaste = editor.onPaste;\n      editor.onPaste = this.onPaste.bind(this);\n      this.$mousedownHandler = editor.on('mousedown', this.onMouseDown.bind(this));\n      this.selectionFix(editor);\n      this.statusMessage(true);\n    };\n    IncrementalSearch.prototype.deactivate = function (reset) {\n      this.cancelSearch(reset);\n      var editor = this.$editor;\n      editor.keyBinding.removeKeyboardHandler(this.$keyboardHandler);\n      if (this.$mousedownHandler) {\n        editor.off('mousedown', this.$mousedownHandler);\n        delete this.$mousedownHandler;\n      }\n      editor.onPaste = this.$originalEditorOnPaste;\n      this.message('');\n    };\n    IncrementalSearch.prototype.selectionFix = function (editor) {\n      if (editor.selection.isEmpty() && !editor.session.$emacsMark) {\n        editor.clearSelection();\n      }\n    };\n    IncrementalSearch.prototype.highlight = function (regexp) {\n      var sess = this.$editor.session,\n        hl = sess.$isearchHighlight = sess.$isearchHighlight || sess.addDynamicMarker(new SearchHighlight(null, \"ace_isearch-result\", \"text\"));\n      hl.setRegexp(regexp);\n      sess._emit(\"changeBackMarker\"); // force highlight layer redraw\n    };\n    IncrementalSearch.prototype.cancelSearch = function (reset) {\n      var e = this.$editor;\n      this.$prevNeedle = this.$options.needle;\n      this.$options.needle = '';\n      if (reset) {\n        e.moveCursorToPosition(this.$startPos);\n        this.$currentPos = this.$startPos;\n      } else {\n        e.pushEmacsMark && e.pushEmacsMark(this.$startPos, false);\n      }\n      this.highlight(null);\n      return Range.fromPoints(this.$currentPos, this.$currentPos);\n    };\n    IncrementalSearch.prototype.highlightAndFindWithNeedle = function (moveToNext, needleUpdateFunc) {\n      if (!this.$editor) return null;\n      var options = this.$options;\n      if (needleUpdateFunc) {\n        options.needle = needleUpdateFunc.call(this, options.needle || '') || '';\n      }\n      if (options.needle.length === 0) {\n        this.statusMessage(true);\n        return this.cancelSearch(true);\n      }\n      options.start = this.$currentPos;\n      var session = this.$editor.session,\n        found = this.find(session),\n        shouldSelect = this.$editor.emacsMark ? !!this.$editor.emacsMark() : !this.$editor.selection.isEmpty();\n      if (found) {\n        if (options.backwards) found = Range.fromPoints(found.end, found.start);\n        this.$editor.selection.setRange(Range.fromPoints(shouldSelect ? this.$startPos : found.end, found.end));\n        if (moveToNext) this.$currentPos = found.end;\n        this.highlight(options.re);\n      }\n      this.statusMessage(found);\n      return found;\n    };\n    IncrementalSearch.prototype.addString = function (s) {\n      return this.highlightAndFindWithNeedle(false, function (needle) {\n        if (!isRegExp(needle)) return needle + s;\n        var reObj = regExpToObject(needle);\n        reObj.expression += s;\n        return objectToRegExp(reObj);\n      });\n    };\n    IncrementalSearch.prototype.removeChar = function (c) {\n      return this.highlightAndFindWithNeedle(false, function (needle) {\n        if (!isRegExp(needle)) return needle.substring(0, needle.length - 1);\n        var reObj = regExpToObject(needle);\n        reObj.expression = reObj.expression.substring(0, reObj.expression.length - 1);\n        return objectToRegExp(reObj);\n      });\n    };\n    IncrementalSearch.prototype.next = function (options) {\n      options = options || {};\n      this.$options.backwards = !!options.backwards;\n      this.$currentPos = this.$editor.getCursorPosition();\n      return this.highlightAndFindWithNeedle(true, function (needle) {\n        return options.useCurrentOrPrevSearch && needle.length === 0 ? this.$prevNeedle || '' : needle;\n      });\n    };\n    IncrementalSearch.prototype.onMouseDown = function (evt) {\n      this.deactivate();\n      return true;\n    };\n    IncrementalSearch.prototype.onPaste = function (text) {\n      this.addString(text);\n    };\n    IncrementalSearch.prototype.convertNeedleToRegExp = function () {\n      return this.highlightAndFindWithNeedle(false, function (needle) {\n        return isRegExp(needle) ? needle : stringToRegExp(needle, 'ig');\n      });\n    };\n    IncrementalSearch.prototype.convertNeedleToString = function () {\n      return this.highlightAndFindWithNeedle(false, function (needle) {\n        return isRegExp(needle) ? regExpToObject(needle).expression : needle;\n      });\n    };\n    IncrementalSearch.prototype.statusMessage = function (found) {\n      var options = this.$options,\n        msg = '';\n      msg += options.backwards ? 'reverse-' : '';\n      msg += 'isearch: ' + options.needle;\n      msg += found ? '' : ' (not found)';\n      this.message(msg);\n    };\n    IncrementalSearch.prototype.message = function (msg) {\n      if (this.$editor.showCommandLine) {\n        this.$editor.showCommandLine(msg);\n        this.$editor.focus();\n      }\n    };\n    return IncrementalSearch;\n  }(Search);\n  exports.IncrementalSearch = IncrementalSearch;\n  var dom = require('./lib/dom');\n  dom.importCssString(\"\\n.ace_marker-layer .ace_isearch-result {\\n  position: absolute;\\n  z-index: 6;\\n  box-sizing: border-box;\\n}\\ndiv.ace_isearch-result {\\n  border-radius: 4px;\\n  background-color: rgba(255, 200, 0, 0.5);\\n  box-shadow: 0 0 4px rgb(255, 200, 0);\\n}\\n.ace_dark div.ace_isearch-result {\\n  background-color: rgb(100, 110, 160);\\n  box-shadow: 0 0 4px rgb(80, 90, 140);\\n}\", \"incremental-search-highlighting\", false);\n  var commands = require(\"./commands/command_manager\");\n  (function () {\n    this.setupIncrementalSearch = function (editor, val) {\n      if (this.usesIncrementalSearch == val) return;\n      this.usesIncrementalSearch = val;\n      var iSearchCommands = iSearchCommandModule.iSearchStartCommands;\n      var method = val ? 'addCommands' : 'removeCommands';\n      this[method](iSearchCommands);\n    };\n  }).call(commands.CommandManager.prototype);\n  var Editor = require(\"./editor\").Editor;\n  require(\"./config\").defineOptions(Editor.prototype, \"editor\", {\n    useIncrementalSearch: {\n      set: function (val) {\n        this.keyBinding.$handlers.forEach(function (handler) {\n          if (handler.setupIncrementalSearch) {\n            handler.setupIncrementalSearch(this, val);\n          }\n        });\n        this._emit('incrementalSearchSettingChanged', {\n          isEnabled: val\n        });\n      }\n    }\n  });\n});\nace.define(\"ace/keyboard/emacs\", [\"require\", \"exports\", \"module\", \"ace/lib/dom\", \"ace/incremental_search\", \"ace/commands/incremental_search_commands\", \"ace/keyboard/hash_handler\", \"ace/lib/keys\"], function (require, exports, module) {\n  \"use strict\";\n\n  var dom = require(\"../lib/dom\");\n  require(\"../incremental_search\");\n  var iSearchCommandModule = require(\"../commands/incremental_search_commands\");\n  var HashHandler = require(\"./hash_handler\").HashHandler;\n  exports.handler = new HashHandler();\n  exports.handler.isEmacs = true;\n  exports.handler.$id = \"ace/keyboard/emacs\";\n  dom.importCssString(\"\\n.emacs-mode .ace_cursor{\\n    border: 1px rgba(50,250,50,0.8) solid!important;\\n    box-sizing: border-box!important;\\n    background-color: rgba(0,250,0,0.9);\\n    opacity: 0.5;\\n}\\n.emacs-mode .ace_hidden-cursors .ace_cursor{\\n    opacity: 1;\\n    background-color: transparent;\\n}\\n.emacs-mode .ace_overwrite-cursors .ace_cursor {\\n    opacity: 1;\\n    background-color: transparent;\\n    border-width: 0 0 2px 2px !important;\\n}\\n.emacs-mode .ace_text-layer {\\n    z-index: 4\\n}\\n.emacs-mode .ace_cursor-layer {\\n    z-index: 2\\n}\", 'emacsMode');\n  var $formerLongWords;\n  var $formerLineStart;\n  exports.handler.attach = function (editor) {\n    $formerLongWords = editor.session.$selectLongWords;\n    editor.session.$selectLongWords = true;\n    $formerLineStart = editor.session.$useEmacsStyleLineStart;\n    editor.session.$useEmacsStyleLineStart = true;\n    editor.session.$emacsMark = null; // the active mark\n    editor.session.$emacsMarkRing = editor.session.$emacsMarkRing || [];\n    editor.emacsMark = function () {\n      return this.session.$emacsMark;\n    };\n    editor.setEmacsMark = function (p) {\n      this.session.$emacsMark = p;\n    };\n    editor.pushEmacsMark = function (p, activate) {\n      var prevMark = this.session.$emacsMark;\n      if (prevMark) this.session.$emacsMarkRing.push(prevMark);\n      if (!p || activate) this.setEmacsMark(p);else this.session.$emacsMarkRing.push(p);\n    };\n    editor.popEmacsMark = function () {\n      var mark = this.emacsMark();\n      if (mark) {\n        this.setEmacsMark(null);\n        return mark;\n      }\n      return this.session.$emacsMarkRing.pop();\n    };\n    editor.getLastEmacsMark = function (p) {\n      return this.session.$emacsMark || this.session.$emacsMarkRing.slice(-1)[0];\n    };\n    editor.emacsMarkForSelection = function (replacement) {\n      var sel = this.selection,\n        multiRangeLength = this.multiSelect ? this.multiSelect.getAllRanges().length : 1,\n        selIndex = sel.index || 0,\n        markRing = this.session.$emacsMarkRing,\n        markIndex = markRing.length - (multiRangeLength - selIndex),\n        lastMark = markRing[markIndex] || sel.anchor;\n      if (replacement) {\n        markRing.splice(markIndex, 1, \"row\" in replacement && \"column\" in replacement ? replacement : undefined);\n      }\n      return lastMark;\n    };\n    editor.on(\"click\", $resetMarkMode);\n    editor.on(\"changeSession\", $kbSessionChange);\n    editor.renderer.$blockCursor = true;\n    editor.setStyle(\"emacs-mode\");\n    editor.commands.addCommands(commands);\n    exports.handler.platform = editor.commands.platform;\n    editor.$emacsModeHandler = this;\n    editor.on('copy', this.onCopy);\n    editor.on('paste', this.onPaste);\n  };\n  exports.handler.detach = function (editor) {\n    editor.renderer.$blockCursor = false;\n    editor.session.$selectLongWords = $formerLongWords;\n    editor.session.$useEmacsStyleLineStart = $formerLineStart;\n    editor.off(\"click\", $resetMarkMode);\n    editor.off(\"changeSession\", $kbSessionChange);\n    editor.unsetStyle(\"emacs-mode\");\n    editor.commands.removeCommands(commands);\n    editor.off('copy', this.onCopy);\n    editor.off('paste', this.onPaste);\n    editor.$emacsModeHandler = null;\n  };\n  var $kbSessionChange = function (e) {\n    if (e.oldSession) {\n      e.oldSession.$selectLongWords = $formerLongWords;\n      e.oldSession.$useEmacsStyleLineStart = $formerLineStart;\n    }\n    $formerLongWords = e.session.$selectLongWords;\n    e.session.$selectLongWords = true;\n    $formerLineStart = e.session.$useEmacsStyleLineStart;\n    e.session.$useEmacsStyleLineStart = true;\n    if (!e.session.hasOwnProperty('$emacsMark')) e.session.$emacsMark = null;\n    if (!e.session.hasOwnProperty('$emacsMarkRing')) e.session.$emacsMarkRing = [];\n  };\n  var $resetMarkMode = function (e) {\n    e.editor.session.$emacsMark = null;\n  };\n  var keys = require(\"../lib/keys\").KEY_MODS;\n  var eMods = {\n    C: \"ctrl\",\n    S: \"shift\",\n    M: \"alt\",\n    CMD: \"command\"\n  };\n  var combinations = [\"C-S-M-CMD\", \"S-M-CMD\", \"C-M-CMD\", \"C-S-CMD\", \"C-S-M\", \"M-CMD\", \"S-CMD\", \"S-M\", \"C-CMD\", \"C-M\", \"C-S\", \"CMD\", \"M\", \"S\", \"C\"];\n  combinations.forEach(function (c) {\n    var hashId = 0;\n    c.split(\"-\").forEach(function (c) {\n      hashId = hashId | keys[eMods[c]];\n    });\n    eMods[hashId] = c.toLowerCase() + \"-\";\n  });\n  exports.handler.onCopy = function (e, editor) {\n    if (editor.$handlesEmacsOnCopy) return;\n    editor.$handlesEmacsOnCopy = true;\n    exports.handler.commands.killRingSave.exec(editor);\n    editor.$handlesEmacsOnCopy = false;\n  };\n  exports.handler.onPaste = function (e, editor) {\n    editor.pushEmacsMark(editor.getCursorPosition());\n  };\n  exports.handler.bindKey = function (key, command) {\n    if (typeof key == \"object\") key = key[this.platform];\n    if (!key) return;\n    var ckb = this.commandKeyBinding;\n    key.split(\"|\").forEach(function (keyPart) {\n      keyPart = keyPart.toLowerCase();\n      ckb[keyPart] = command;\n      var keyParts = keyPart.split(\" \").slice(0, -1);\n      keyParts.reduce(function (keyMapKeys, keyPart, i) {\n        var prefix = keyMapKeys[i - 1] ? keyMapKeys[i - 1] + ' ' : '';\n        return keyMapKeys.concat([prefix + keyPart]);\n      }, []).forEach(function (keyPart) {\n        if (!ckb[keyPart]) ckb[keyPart] = \"null\";\n      });\n    }, this);\n  };\n  exports.handler.getStatusText = function (editor, data) {\n    var str = \"\";\n    if (data.count) str += data.count;\n    if (data.keyChain) str += \" \" + data.keyChain;\n    return str;\n  };\n  exports.handler.handleKeyboard = function (data, hashId, key, keyCode) {\n    if (keyCode === -1) return undefined;\n    var editor = data.editor;\n    editor._signal(\"changeStatus\");\n    if (hashId == -1) {\n      editor.pushEmacsMark();\n      if (data.count) {\n        var str = new Array(data.count + 1).join(key);\n        data.count = null;\n        return {\n          command: \"insertstring\",\n          args: str\n        };\n      }\n    }\n    var modifier = eMods[hashId];\n    if (modifier == \"c-\" || data.count) {\n      var count = parseInt(key[key.length - 1]);\n      if (typeof count === 'number' && !isNaN(count)) {\n        data.count = Math.max(data.count, 0) || 0;\n        data.count = 10 * data.count + count;\n        return {\n          command: \"null\"\n        };\n      }\n    }\n    if (modifier) key = modifier + key;\n    if (data.keyChain) key = data.keyChain += \" \" + key;\n    var command = this.commandKeyBinding[key];\n    data.keyChain = command == \"null\" ? key : \"\";\n    if (!command) return undefined;\n    if (command === \"null\") return {\n      command: \"null\"\n    };\n    if (command === \"universalArgument\") {\n      data.count = -4;\n      return {\n        command: \"null\"\n      };\n    }\n    var args;\n    if (typeof command !== \"string\") {\n      args = command.args;\n      if (command.command) command = command.command;\n      if (command === \"goorselect\") {\n        command = editor.emacsMark() ? args[1] : args[0];\n        args = null;\n      }\n    }\n    if (typeof command === \"string\") {\n      if (command === \"insertstring\" || command === \"splitline\" || command === \"togglecomment\") {\n        editor.pushEmacsMark();\n      }\n      command = this.commands[command] || editor.commands.commands[command];\n      if (!command) return undefined;\n    }\n    if (!command.readOnly && !command.isYank) data.lastCommand = null;\n    if (!command.readOnly && editor.emacsMark()) editor.setEmacsMark(null);\n    if (data.count) {\n      var count = data.count;\n      data.count = 0;\n      if (!command || !command.handlesCount) {\n        return {\n          args: args,\n          command: {\n            exec: function (editor, args) {\n              for (var i = 0; i < count; i++) command.exec(editor, args);\n            },\n            multiSelectAction: command.multiSelectAction\n          }\n        };\n      } else {\n        if (!args) args = {};\n        if (typeof args === 'object') args.count = count;\n      }\n    }\n    return {\n      command: command,\n      args: args\n    };\n  };\n  exports.emacsKeys = {\n    \"Up|C-p\": {\n      command: \"goorselect\",\n      args: [\"golineup\", \"selectup\"]\n    },\n    \"Down|C-n\": {\n      command: \"goorselect\",\n      args: [\"golinedown\", \"selectdown\"]\n    },\n    \"Left|C-b\": {\n      command: \"goorselect\",\n      args: [\"gotoleft\", \"selectleft\"]\n    },\n    \"Right|C-f\": {\n      command: \"goorselect\",\n      args: [\"gotoright\", \"selectright\"]\n    },\n    \"C-Left|M-b\": {\n      command: \"goorselect\",\n      args: [\"gotowordleft\", \"selectwordleft\"]\n    },\n    \"C-Right|M-f\": {\n      command: \"goorselect\",\n      args: [\"gotowordright\", \"selectwordright\"]\n    },\n    \"Home|C-a\": {\n      command: \"goorselect\",\n      args: [\"gotolinestart\", \"selecttolinestart\"]\n    },\n    \"End|C-e\": {\n      command: \"goorselect\",\n      args: [\"gotolineend\", \"selecttolineend\"]\n    },\n    \"C-Home|S-M-,\": {\n      command: \"goorselect\",\n      args: [\"gotostart\", \"selecttostart\"]\n    },\n    \"C-End|S-M-.\": {\n      command: \"goorselect\",\n      args: [\"gotoend\", \"selecttoend\"]\n    },\n    \"S-Up|S-C-p\": \"selectup\",\n    \"S-Down|S-C-n\": \"selectdown\",\n    \"S-Left|S-C-b\": \"selectleft\",\n    \"S-Right|S-C-f\": \"selectright\",\n    \"S-C-Left|S-M-b\": \"selectwordleft\",\n    \"S-C-Right|S-M-f\": \"selectwordright\",\n    \"S-Home|S-C-a\": \"selecttolinestart\",\n    \"S-End|S-C-e\": \"selecttolineend\",\n    \"S-C-Home\": \"selecttostart\",\n    \"S-C-End\": \"selecttoend\",\n    \"C-l\": \"recenterTopBottom\",\n    \"M-s\": \"centerselection\",\n    \"M-g\": \"gotoline\",\n    \"C-x C-p\": \"selectall\",\n    \"C-Down\": {\n      command: \"goorselect\",\n      args: [\"gotopagedown\", \"selectpagedown\"]\n    },\n    \"C-Up\": {\n      command: \"goorselect\",\n      args: [\"gotopageup\", \"selectpageup\"]\n    },\n    \"PageDown|C-v\": {\n      command: \"goorselect\",\n      args: [\"gotopagedown\", \"selectpagedown\"]\n    },\n    \"PageUp|M-v\": {\n      command: \"goorselect\",\n      args: [\"gotopageup\", \"selectpageup\"]\n    },\n    \"S-C-Down\": \"selectpagedown\",\n    \"S-C-Up\": \"selectpageup\",\n    \"C-s\": \"iSearch\",\n    \"C-r\": \"iSearchBackwards\",\n    \"M-C-s\": \"findnext\",\n    \"M-C-r\": \"findprevious\",\n    \"S-M-5\": \"replace\",\n    \"Backspace\": \"backspace\",\n    \"Delete|C-d\": \"del\",\n    \"Return|C-m\": {\n      command: \"insertstring\",\n      args: \"\\n\"\n    },\n    // \"newline\"\n    \"C-o\": \"splitline\",\n    \"M-d|C-Delete\": {\n      command: \"killWord\",\n      args: \"right\"\n    },\n    \"C-Backspace|M-Backspace|M-Delete\": {\n      command: \"killWord\",\n      args: \"left\"\n    },\n    \"C-k\": \"killLine\",\n    \"C-y|S-Delete\": \"yank\",\n    \"M-y\": \"yankRotate\",\n    \"C-g\": \"keyboardQuit\",\n    \"C-w|C-S-W\": \"killRegion\",\n    \"M-w\": \"killRingSave\",\n    \"C-Space\": \"setMark\",\n    \"C-x C-x\": \"exchangePointAndMark\",\n    \"C-t\": \"transposeletters\",\n    \"M-u\": \"touppercase\",\n    // Doesn't work\n    \"M-l\": \"tolowercase\",\n    \"M-/\": \"autocomplete\",\n    // Doesn't work\n    \"C-u\": \"universalArgument\",\n    \"M-;\": \"togglecomment\",\n    \"C-/|C-x u|S-C--|C-z\": \"undo\",\n    \"S-C-/|S-C-x u|C--|S-C-z\": \"redo\",\n    // infinite undo?\n    \"C-x r\": \"selectRectangularRegion\",\n    \"M-x\": {\n      command: \"focusCommandLine\",\n      args: \"M-x \"\n    }\n  };\n  exports.handler.bindKeys(exports.emacsKeys);\n  exports.handler.addCommands({\n    recenterTopBottom: function (editor) {\n      var renderer = editor.renderer;\n      var pos = renderer.$cursorLayer.getPixelPosition();\n      var h = renderer.$size.scrollerHeight - renderer.lineHeight;\n      var scrollTop = renderer.scrollTop;\n      if (Math.abs(pos.top - scrollTop) < 2) {\n        scrollTop = pos.top - h;\n      } else if (Math.abs(pos.top - scrollTop - h * 0.5) < 2) {\n        scrollTop = pos.top;\n      } else {\n        scrollTop = pos.top - h * 0.5;\n      }\n      editor.session.setScrollTop(scrollTop);\n    },\n    selectRectangularRegion: function (editor) {\n      editor.multiSelect.toggleBlockSelection();\n    },\n    setMark: {\n      exec: function (editor, args) {\n        if (args && args.count) {\n          if (editor.inMultiSelectMode) editor.forEachSelection(moveToMark);else moveToMark();\n          moveToMark();\n          return;\n        }\n        var mark = editor.emacsMark(),\n          ranges = editor.selection.getAllRanges(),\n          rangePositions = ranges.map(function (r) {\n            return {\n              row: r.start.row,\n              column: r.start.column\n            };\n          }),\n          transientMarkModeActive = true,\n          hasNoSelection = ranges.every(function (range) {\n            return range.isEmpty();\n          });\n        if (transientMarkModeActive && (mark || !hasNoSelection)) {\n          if (editor.inMultiSelectMode) editor.forEachSelection({\n            exec: editor.clearSelection.bind(editor)\n          });else editor.clearSelection();\n          if (mark) editor.pushEmacsMark(null);\n          return;\n        }\n        if (!mark) {\n          rangePositions.forEach(function (pos) {\n            editor.pushEmacsMark(pos);\n          });\n          editor.setEmacsMark(rangePositions[rangePositions.length - 1]);\n          return;\n        }\n        function moveToMark() {\n          var mark = editor.popEmacsMark();\n          mark && editor.moveCursorToPosition(mark);\n        }\n      },\n      readOnly: true,\n      handlesCount: true\n    },\n    exchangePointAndMark: {\n      exec: function exchangePointAndMark$exec(editor, args) {\n        var sel = editor.selection;\n        if (!args.count && !sel.isEmpty()) {\n          // just invert selection\n          sel.setSelectionRange(sel.getRange(), !sel.isBackwards());\n          return;\n        }\n        if (args.count) {\n          // replace mark and point\n          var pos = {\n            row: sel.lead.row,\n            column: sel.lead.column\n          };\n          sel.clearSelection();\n          sel.moveCursorToPosition(editor.emacsMarkForSelection(pos));\n        } else {\n          // create selection to last mark\n          sel.selectToPosition(editor.emacsMarkForSelection());\n        }\n      },\n      readOnly: true,\n      handlesCount: true,\n      multiSelectAction: \"forEach\"\n    },\n    killWord: {\n      exec: function (editor, dir) {\n        editor.clearSelection();\n        if (dir == \"left\") editor.selection.selectWordLeft();else editor.selection.selectWordRight();\n        var range = editor.getSelectionRange();\n        var text = editor.session.getTextRange(range);\n        exports.killRing.add(text);\n        editor.session.remove(range);\n        editor.clearSelection();\n      },\n      multiSelectAction: \"forEach\"\n    },\n    killLine: function (editor) {\n      editor.pushEmacsMark(null);\n      editor.clearSelection();\n      var range = editor.getSelectionRange();\n      var line = editor.session.getLine(range.start.row);\n      range.end.column = line.length;\n      line = line.substr(range.start.column);\n      var foldLine = editor.session.getFoldLine(range.start.row);\n      if (foldLine && range.end.row != foldLine.end.row) {\n        range.end.row = foldLine.end.row;\n        line = \"x\";\n      }\n      if (/^\\s*$/.test(line)) {\n        range.end.row++;\n        line = editor.session.getLine(range.end.row);\n        range.end.column = /^\\s*$/.test(line) ? line.length : 0;\n      }\n      var text = editor.session.getTextRange(range);\n      if (editor.prevOp.command == this) exports.killRing.append(text);else exports.killRing.add(text);\n      editor.session.remove(range);\n      editor.clearSelection();\n    },\n    yank: function (editor) {\n      editor.onPaste(exports.killRing.get() || '');\n      editor.keyBinding.$data.lastCommand = \"yank\";\n    },\n    yankRotate: function (editor) {\n      if (editor.keyBinding.$data.lastCommand != \"yank\") return;\n      editor.undo();\n      editor.session.$emacsMarkRing.pop(); // also undo recording mark\n      editor.onPaste(exports.killRing.rotate());\n      editor.keyBinding.$data.lastCommand = \"yank\";\n    },\n    killRegion: {\n      exec: function (editor) {\n        exports.killRing.add(editor.getCopyText());\n        editor.commands.byName.cut.exec(editor);\n        editor.setEmacsMark(null);\n      },\n      readOnly: true,\n      multiSelectAction: \"forEach\"\n    },\n    killRingSave: {\n      exec: function (editor) {\n        editor.$handlesEmacsOnCopy = true;\n        var marks = editor.session.$emacsMarkRing.slice(),\n          deselectedMarks = [];\n        exports.killRing.add(editor.getCopyText());\n        setTimeout(function () {\n          function deselect() {\n            var sel = editor.selection,\n              range = sel.getRange(),\n              pos = sel.isBackwards() ? range.end : range.start;\n            deselectedMarks.push({\n              row: pos.row,\n              column: pos.column\n            });\n            sel.clearSelection();\n          }\n          editor.$handlesEmacsOnCopy = false;\n          if (editor.inMultiSelectMode) editor.forEachSelection({\n            exec: deselect\n          });else deselect();\n          editor.setEmacsMark(null);\n          editor.session.$emacsMarkRing = marks.concat(deselectedMarks.reverse());\n        }, 0);\n      },\n      readOnly: true\n    },\n    keyboardQuit: function (editor) {\n      editor.selection.clearSelection();\n      editor.setEmacsMark(null);\n      editor.keyBinding.$data.count = null;\n    },\n    focusCommandLine: function (editor, arg) {\n      if (editor.showCommandLine) editor.showCommandLine(arg);\n    }\n  });\n  exports.handler.addCommands(iSearchCommandModule.iSearchStartCommands);\n  var commands = exports.handler.commands;\n  commands.yank.isYank = true;\n  commands.yankRotate.isYank = true;\n  exports.killRing = {\n    $data: [],\n    add: function (str) {\n      str && this.$data.push(str);\n      if (this.$data.length > 30) this.$data.shift();\n    },\n    append: function (str) {\n      var idx = this.$data.length - 1;\n      var text = this.$data[idx] || \"\";\n      if (str) text += str;\n      if (text) this.$data[idx] = text;\n    },\n    get: function (n) {\n      n = n || 1;\n      return this.$data.slice(this.$data.length - n, this.$data.length).reverse().join('\\n');\n    },\n    pop: function () {\n      if (this.$data.length > 1) this.$data.pop();\n      return this.get();\n    },\n    rotate: function () {\n      this.$data.unshift(this.$data.pop());\n      return this.get();\n    }\n  };\n});\n(function () {\n  ace.require([\"ace/keyboard/emacs\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}