{"code":"ace.define(\"ace/mode/sh_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],(function(e,t,n){\"use strict\";var r=e(\"../lib/oop\"),i=e(\"./text_highlight_rules\").TextHighlightRules,o=t.reservedKeywords=\"!|{|}|case|do|done|elif|else|esac|fi|for|if|in|then|until|while|&|;|export|local|read|typeset|unset|elif|select|set|function|declare|readonly\",a=t.languageConstructs=\"[|]|alias|bg|bind|break|builtin|cd|command|compgen|complete|continue|dirs|disown|echo|enable|eval|exec|exit|fc|fg|getopts|hash|help|history|jobs|kill|let|logout|popd|printf|pushd|pwd|return|set|shift|shopt|source|suspend|test|times|trap|type|ulimit|umask|unalias|wait\",s=function(){var e=this.createKeywordMapper({keyword:o,\"support.function.builtin\":a,\"invalid.deprecated\":\"debugger\"},\"identifier\"),t=\"(?:\\\\d+)\",n=\"(?:(?:\"+t+\"?(?:\\\\.\\\\d+))|(?:\"+t+\"\\\\.))\",r=\"(?:\"+(\"(?:(?:\"+n+\"|\"+t+\"))\")+\"|\"+n+\")\",i=\"(?:&\"+t+\")\",s=\"[a-zA-Z_][a-zA-Z0-9_]*\",l=\"(?:\"+s+\"(?==))\",d=\"(?:\"+s+\"\\\\s*\\\\(\\\\))\";this.$rules={start:[{token:\"constant\",regex:/\\\\./},{token:[\"text\",\"comment\"],regex:/(^|\\s)(#.*)$/},{token:\"string.start\",regex:'\"',push:[{token:\"constant.language.escape\",regex:/\\\\(?:[$`\"\\\\]|$)/},{include:\"variables\"},{token:\"keyword.operator\",regex:/`/},{token:\"string.end\",regex:'\"',next:\"pop\"},{defaultToken:\"string\"}]},{token:\"string\",regex:\"\\\\$'\",push:[{token:\"constant.language.escape\",regex:/\\\\(?:[abeEfnrtv\\\\'\"]|x[a-fA-F\\d]{1,2}|u[a-fA-F\\d]{4}([a-fA-F\\d]{4})?|c.|\\d{1,3})/},{token:\"string\",regex:\"'\",next:\"pop\"},{defaultToken:\"string\"}]},{regex:\"<<<\",token:\"keyword.operator\"},{stateName:\"heredoc\",regex:\"(<<-?)(\\\\s*)(['\\\"`]?)([\\\\w\\\\-]+)(['\\\"`]?)\",onMatch:function(e,t,n){var r=\"-\"==e[2]?\"indentedHeredoc\":\"heredoc\",i=e.split(this.splitRegex);return n.push(r,i[4]),[{type:\"constant\",value:i[1]},{type:\"text\",value:i[2]},{type:\"string\",value:i[3]},{type:\"support.class\",value:i[4]},{type:\"string\",value:i[5]}]},rules:{heredoc:[{onMatch:function(e,t,n){return e===n[1]?(n.shift(),n.shift(),this.next=n[0]||\"start\",\"support.class\"):(this.next=\"\",\"string\")},regex:\".*$\",next:\"start\"}],indentedHeredoc:[{token:\"string\",regex:\"^\\t+\"},{onMatch:function(e,t,n){return e===n[1]?(n.shift(),n.shift(),this.next=n[0]||\"start\",\"support.class\"):(this.next=\"\",\"string\")},regex:\".*$\",next:\"start\"}]}},{regex:\"$\",token:\"empty\",next:function(e,t){return\"heredoc\"===t[0]||\"indentedHeredoc\"===t[0]?t[0]:e}},{token:[\"keyword\",\"text\",\"text\",\"text\",\"variable\"],regex:/(declare|local|readonly)(\\s+)(?:(-[fixar]+)(\\s+))?([a-zA-Z_][a-zA-Z0-9_]*\\b)/},{token:\"variable.language\",regex:\"(?:\\\\$(?:SHLVL|\\\\$|\\\\!|\\\\?))\"},{token:\"variable\",regex:l},{include:\"variables\"},{token:\"support.function\",regex:d},{token:\"support.function\",regex:i},{token:\"string\",start:\"'\",end:\"'\"},{token:\"constant.numeric\",regex:r},{token:\"constant.numeric\",regex:\"(?:(?:[1-9]\\\\d*)|(?:0))\\\\b\"},{token:e,regex:\"[a-zA-Z_][a-zA-Z0-9_]*\\\\b\"},{token:\"keyword.operator\",regex:\"\\\\+|\\\\-|\\\\*|\\\\*\\\\*|\\\\/|\\\\/\\\\/|~|<|>|<=|=>|=|!=|[%&|`]\"},{token:\"punctuation.operator\",regex:\";\"},{token:\"paren.lparen\",regex:\"[\\\\[\\\\(\\\\{]\"},{token:\"paren.rparen\",regex:\"[\\\\]]\"},{token:\"paren.rparen\",regex:\"[\\\\)\\\\}]\",next:\"pop\"}],variables:[{token:\"variable\",regex:/(\\$)(\\w+)/},{token:[\"variable\",\"paren.lparen\"],regex:/(\\$)(\\()/,push:\"start\"},{token:[\"variable\",\"paren.lparen\",\"keyword.operator\",\"variable\",\"keyword.operator\"],regex:/(\\$)(\\{)([#!]?)(\\w+|[*@#?\\-$!0_])(:[?+\\-=]?|##?|%%?|,,?\\/|\\^\\^?)?/,push:\"start\"},{token:\"variable\",regex:/\\$[*@#?\\-$!0_]/},{token:[\"variable\",\"paren.lparen\"],regex:/(\\$)(\\{)/,push:\"start\"}]},this.normalizeRules()};r.inherits(s,i),t.ShHighlightRules=s})),ace.define(\"ace/mode/makefile_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\",\"ace/mode/sh_highlight_rules\"],(function(e,t,n){\"use strict\";var r=e(\"../lib/oop\"),i=e(\"./text_highlight_rules\").TextHighlightRules,o=e(\"./sh_highlight_rules\"),a=function(){var e=this.createKeywordMapper({keyword:o.reservedKeywords,\"support.function.builtin\":o.languageConstructs,\"invalid.deprecated\":\"debugger\"},\"string\");this.$rules={start:[{token:\"string.interpolated.backtick.makefile\",regex:\"`\",next:\"shell-start\"},{token:\"punctuation.definition.comment.makefile\",regex:/#(?=.)/,next:\"comment\"},{token:[\"keyword.control.makefile\"],regex:\"^(?:\\\\s*\\\\b)(\\\\-??include|ifeq|ifneq|ifdef|ifndef|else|endif|vpath|export|unexport|define|endef|override)(?:\\\\b)\"},{token:[\"entity.name.function.makefile\",\"text\"],regex:\"^([^\\\\t ]+(?:\\\\s[^\\\\t ]+)*:)(\\\\s*.*)\"}],comment:[{token:\"punctuation.definition.comment.makefile\",regex:/.+\\\\/},{token:\"punctuation.definition.comment.makefile\",regex:\".+\",next:\"start\"}],\"shell-start\":[{token:e,regex:\"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"},{token:\"string\",regex:\"\\\\w+\"},{token:\"string.interpolated.backtick.makefile\",regex:\"`\",next:\"start\"}]}};r.inherits(a,i),t.MakefileHighlightRules=a})),ace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"],(function(e,t,n){\"use strict\";var r=e(\"../../lib/oop\"),i=e(\"./fold_mode\").FoldMode,o=e(\"../../range\").Range,a=t.FoldMode=function(){};r.inherits(a,i),function(){this.commentBlock=function(e,t){var n=/\\S/,r=e.getLine(t),i=r.search(n);if(-1!=i&&\"#\"==r[i]){for(var a=r.length,s=e.getLength(),l=t,d=t;++t<s;){var g=(r=e.getLine(t)).search(n);if(-1!=g){if(\"#\"!=r[g])break;d=t}}if(d>l){var c=e.getLine(d).length;return new o(l,a,d,c)}}},this.getFoldWidgetRange=function(e,t,n){var r=this.indentationBlock(e,n);return r||((r=this.commentBlock(e,n))||void 0)},this.getFoldWidget=function(e,t,n){var r=e.getLine(n),i=r.search(/\\S/),o=e.getLine(n+1),a=e.getLine(n-1),s=a.search(/\\S/),l=o.search(/\\S/);if(-1==i)return e.foldWidgets[n-1]=-1!=s&&s<l?\"start\":\"\",\"\";if(-1==s){if(i==l&&\"#\"==r[i]&&\"#\"==o[i])return e.foldWidgets[n-1]=\"\",e.foldWidgets[n+1]=\"\",\"start\"}else if(s==i&&\"#\"==r[i]&&\"#\"==a[i]&&-1==e.getLine(n-2).search(/\\S/))return e.foldWidgets[n-1]=\"start\",e.foldWidgets[n+1]=\"\",\"\";return e.foldWidgets[n-1]=-1!=s&&s<i?\"start\":\"\",i<l?\"start\":\"\"}}.call(a.prototype)})),ace.define(\"ace/mode/makefile\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/makefile_highlight_rules\",\"ace/mode/folding/coffee\"],(function(e,t,n){\"use strict\";var r=e(\"../lib/oop\"),i=e(\"./text\").Mode,o=e(\"./makefile_highlight_rules\").MakefileHighlightRules,a=e(\"./folding/coffee\").FoldMode,s=function(){this.HighlightRules=o,this.foldingRules=new a,this.$behaviour=this.$defaultBehaviour};r.inherits(s,i),function(){this.lineCommentStart=\"#\",this.$indentWithTabs=!0,this.$id=\"ace/mode/makefile\",this.snippetFileId=\"ace/snippets/makefile\"}.call(s.prototype),t.Mode=s})),ace.require([\"ace/mode/makefile\"],(function(e){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=e)}));","name":"85360a0736ad80afc9ac10e166ec5d22.js","input":"ace.define(\"ace/mode/sh_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var reservedKeywords = exports.reservedKeywords = '!|{|}|case|do|done|elif|else|' + 'esac|fi|for|if|in|then|until|while|' + '&|;|export|local|read|typeset|unset|' + 'elif|select|set|function|declare|readonly';\n  var languageConstructs = exports.languageConstructs = '[|]|alias|bg|bind|break|builtin|' + 'cd|command|compgen|complete|continue|' + 'dirs|disown|echo|enable|eval|exec|' + 'exit|fc|fg|getopts|hash|help|history|' + 'jobs|kill|let|logout|popd|printf|pushd|' + 'pwd|return|set|shift|shopt|source|' + 'suspend|test|times|trap|type|ulimit|' + 'umask|unalias|wait';\n  var ShHighlightRules = function () {\n    var keywordMapper = this.createKeywordMapper({\n      \"keyword\": reservedKeywords,\n      \"support.function.builtin\": languageConstructs,\n      \"invalid.deprecated\": \"debugger\"\n    }, \"identifier\");\n    var integer = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\n    var fraction = \"(?:\\\\.\\\\d+)\";\n    var intPart = \"(?:\\\\d+)\";\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\n    var exponentFloat = \"(?:(?:\" + pointFloat + \"|\" + intPart + \")\" + \")\";\n    var floatNumber = \"(?:\" + exponentFloat + \"|\" + pointFloat + \")\";\n    var fileDescriptor = \"(?:&\" + intPart + \")\";\n    var variableName = \"[a-zA-Z_][a-zA-Z0-9_]*\";\n    var variable = \"(?:\" + variableName + \"(?==))\";\n    var builtinVariable = \"(?:\\\\$(?:SHLVL|\\\\$|\\\\!|\\\\?))\";\n    var func = \"(?:\" + variableName + \"\\\\s*\\\\(\\\\))\";\n    this.$rules = {\n      \"start\": [{\n        token: \"constant\",\n        regex: /\\\\./\n      }, {\n        token: [\"text\", \"comment\"],\n        regex: /(^|\\s)(#.*)$/\n      }, {\n        token: \"string.start\",\n        regex: '\"',\n        push: [{\n          token: \"constant.language.escape\",\n          regex: /\\\\(?:[$`\"\\\\]|$)/\n        }, {\n          include: \"variables\"\n        }, {\n          token: \"keyword.operator\",\n          regex: /`/ // TODO highlight `\n        }, {\n          token: \"string.end\",\n          regex: '\"',\n          next: \"pop\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        token: \"string\",\n        regex: \"\\\\$'\",\n        push: [{\n          token: \"constant.language.escape\",\n          regex: /\\\\(?:[abeEfnrtv\\\\'\"]|x[a-fA-F\\d]{1,2}|u[a-fA-F\\d]{4}([a-fA-F\\d]{4})?|c.|\\d{1,3})/\n        }, {\n          token: \"string\",\n          regex: \"'\",\n          next: \"pop\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        regex: \"<<<\",\n        token: \"keyword.operator\"\n      }, {\n        stateName: \"heredoc\",\n        regex: \"(<<-?)(\\\\s*)(['\\\"`]?)([\\\\w\\\\-]+)(['\\\"`]?)\",\n        onMatch: function (value, currentState, stack) {\n          var next = value[2] == '-' ? \"indentedHeredoc\" : \"heredoc\";\n          var tokens = value.split(this.splitRegex);\n          stack.push(next, tokens[4]);\n          return [{\n            type: \"constant\",\n            value: tokens[1]\n          }, {\n            type: \"text\",\n            value: tokens[2]\n          }, {\n            type: \"string\",\n            value: tokens[3]\n          }, {\n            type: \"support.class\",\n            value: tokens[4]\n          }, {\n            type: \"string\",\n            value: tokens[5]\n          }];\n        },\n        rules: {\n          heredoc: [{\n            onMatch: function (value, currentState, stack) {\n              if (value === stack[1]) {\n                stack.shift();\n                stack.shift();\n                this.next = stack[0] || \"start\";\n                return \"support.class\";\n              }\n              this.next = \"\";\n              return \"string\";\n            },\n            regex: \".*$\",\n            next: \"start\"\n          }],\n          indentedHeredoc: [{\n            token: \"string\",\n            regex: \"^\\t+\"\n          }, {\n            onMatch: function (value, currentState, stack) {\n              if (value === stack[1]) {\n                stack.shift();\n                stack.shift();\n                this.next = stack[0] || \"start\";\n                return \"support.class\";\n              }\n              this.next = \"\";\n              return \"string\";\n            },\n            regex: \".*$\",\n            next: \"start\"\n          }]\n        }\n      }, {\n        regex: \"$\",\n        token: \"empty\",\n        next: function (currentState, stack) {\n          if (stack[0] === \"heredoc\" || stack[0] === \"indentedHeredoc\") return stack[0];\n          return currentState;\n        }\n      }, {\n        token: [\"keyword\", \"text\", \"text\", \"text\", \"variable\"],\n        regex: /(declare|local|readonly)(\\s+)(?:(-[fixar]+)(\\s+))?([a-zA-Z_][a-zA-Z0-9_]*\\b)/\n      }, {\n        token: \"variable.language\",\n        regex: builtinVariable\n      }, {\n        token: \"variable\",\n        regex: variable\n      }, {\n        include: \"variables\"\n      }, {\n        token: \"support.function\",\n        regex: func\n      }, {\n        token: \"support.function\",\n        regex: fileDescriptor\n      }, {\n        token: \"string\",\n        // ' string\n        start: \"'\",\n        end: \"'\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: floatNumber\n      }, {\n        token: \"constant.numeric\",\n        // integer\n        regex: integer + \"\\\\b\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_][a-zA-Z0-9_]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"\\\\+|\\\\-|\\\\*|\\\\*\\\\*|\\\\/|\\\\/\\\\/|~|<|>|<=|=>|=|!=|[%&|`]\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: \";\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[\\\\[\\\\(\\\\{]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\]]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\)\\\\}]\",\n        next: \"pop\"\n      }],\n      variables: [{\n        token: \"variable\",\n        regex: /(\\$)(\\w+)/\n      }, {\n        token: [\"variable\", \"paren.lparen\"],\n        regex: /(\\$)(\\()/,\n        push: \"start\"\n      }, {\n        token: [\"variable\", \"paren.lparen\", \"keyword.operator\", \"variable\", \"keyword.operator\"],\n        regex: /(\\$)(\\{)([#!]?)(\\w+|[*@#?\\-$!0_])(:[?+\\-=]?|##?|%%?|,,?\\/|\\^\\^?)?/,\n        push: \"start\"\n      }, {\n        token: \"variable\",\n        regex: /\\$[*@#?\\-$!0_]/\n      }, {\n        token: [\"variable\", \"paren.lparen\"],\n        regex: /(\\$)(\\{)/,\n        push: \"start\"\n      }]\n    };\n    this.normalizeRules();\n  };\n  oop.inherits(ShHighlightRules, TextHighlightRules);\n  exports.ShHighlightRules = ShHighlightRules;\n});\nace.define(\"ace/mode/makefile_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\", \"ace/mode/sh_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var ShHighlightFile = require(\"./sh_highlight_rules\");\n  var MakefileHighlightRules = function () {\n    var keywordMapper = this.createKeywordMapper({\n      \"keyword\": ShHighlightFile.reservedKeywords,\n      \"support.function.builtin\": ShHighlightFile.languageConstructs,\n      \"invalid.deprecated\": \"debugger\"\n    }, \"string\");\n    this.$rules = {\n      \"start\": [{\n        token: \"string.interpolated.backtick.makefile\",\n        regex: \"`\",\n        next: \"shell-start\"\n      }, {\n        token: \"punctuation.definition.comment.makefile\",\n        regex: /#(?=.)/,\n        next: \"comment\"\n      }, {\n        token: [\"keyword.control.makefile\"],\n        regex: \"^(?:\\\\s*\\\\b)(\\\\-??include|ifeq|ifneq|ifdef|ifndef|else|endif|vpath|export|unexport|define|endef|override)(?:\\\\b)\"\n      }, {\n        token: [\"entity.name.function.makefile\", \"text\"],\n        regex: \"^([^\\\\t ]+(?:\\\\s[^\\\\t ]+)*:)(\\\\s*.*)\"\n      }],\n      \"comment\": [{\n        token: \"punctuation.definition.comment.makefile\",\n        regex: /.+\\\\/\n      }, {\n        token: \"punctuation.definition.comment.makefile\",\n        regex: \".+\",\n        next: \"start\"\n      }],\n      \"shell-start\": [{\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: \"string\",\n        regex: \"\\\\w+\"\n      }, {\n        token: \"string.interpolated.backtick.makefile\",\n        regex: \"`\",\n        next: \"start\"\n      }]\n    };\n  };\n  oop.inherits(MakefileHighlightRules, TextHighlightRules);\n  exports.MakefileHighlightRules = MakefileHighlightRules;\n});\nace.define(\"ace/mode/folding/coffee\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var Range = require(\"../../range\").Range;\n  var FoldMode = exports.FoldMode = function () {};\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.commentBlock = function (session, row) {\n      var re = /\\S/;\n      var line = session.getLine(row);\n      var startLevel = line.search(re);\n      if (startLevel == -1 || line[startLevel] != \"#\") return;\n      var startColumn = line.length;\n      var maxRow = session.getLength();\n      var startRow = row;\n      var endRow = row;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var level = line.search(re);\n        if (level == -1) continue;\n        if (line[level] != \"#\") break;\n        endRow = row;\n      }\n      if (endRow > startRow) {\n        var endColumn = session.getLine(endRow).length;\n        return new Range(startRow, startColumn, endRow, endColumn);\n      }\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var range = this.indentationBlock(session, row);\n      if (range) return range;\n      range = this.commentBlock(session, row);\n      if (range) return range;\n    };\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var indent = line.search(/\\S/);\n      var next = session.getLine(row + 1);\n      var prev = session.getLine(row - 1);\n      var prevIndent = prev.search(/\\S/);\n      var nextIndent = next.search(/\\S/);\n      if (indent == -1) {\n        session.foldWidgets[row - 1] = prevIndent != -1 && prevIndent < nextIndent ? \"start\" : \"\";\n        return \"\";\n      }\n      if (prevIndent == -1) {\n        if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n          session.foldWidgets[row - 1] = \"\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"start\";\n        }\n      } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n        if (session.getLine(row - 2).search(/\\S/) == -1) {\n          session.foldWidgets[row - 1] = \"start\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"\";\n        }\n      }\n      if (prevIndent != -1 && prevIndent < indent) session.foldWidgets[row - 1] = \"start\";else session.foldWidgets[row - 1] = \"\";\n      if (indent < nextIndent) return \"start\";else return \"\";\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/makefile\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/makefile_highlight_rules\", \"ace/mode/folding/coffee\"], function (require, exports, module) {\n  /*\n  THIS FILE WAS AUTOGENERATED BY mode.tmpl.js\n  */\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var MakefileHighlightRules = require(\"./makefile_highlight_rules\").MakefileHighlightRules;\n  var FoldMode = require(\"./folding/coffee\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = MakefileHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"#\";\n    this.$indentWithTabs = true;\n    this.$id = \"ace/mode/makefile\";\n    this.snippetFileId = \"ace/snippets/makefile\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/makefile\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}