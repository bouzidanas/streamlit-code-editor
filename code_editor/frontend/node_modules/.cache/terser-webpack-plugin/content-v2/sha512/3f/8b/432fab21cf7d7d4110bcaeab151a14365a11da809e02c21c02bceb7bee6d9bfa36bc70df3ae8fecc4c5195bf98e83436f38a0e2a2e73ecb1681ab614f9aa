{"code":"ace.define(\"ace/split\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/lib/event_emitter\",\"ace/editor\",\"ace/virtual_renderer\",\"ace/edit_session\"],(function(t,i,e){\"use strict\";var s,o=t(\"./lib/oop\"),n=(t(\"./lib/lang\"),t(\"./lib/event_emitter\").EventEmitter),r=t(\"./editor\").Editor,h=t(\"./virtual_renderer\").VirtualRenderer,a=t(\"./edit_session\").EditSession;(function(){o.implement(this,n),this.$createEditor=function(){var t=document.createElement(\"div\");t.className=this.$editorCSS,t.style.cssText=\"position: absolute; top:0px; bottom:0px\",this.$container.appendChild(t);var i=new r(new h(t,this.$theme));return i.on(\"focus\",function(){this._emit(\"focus\",i)}.bind(this)),this.$editors.push(i),i.setFontSize(this.$fontSize),i},this.setSplits=function(t){var i;if(t<1)throw\"The number of splits have to be > 0!\";if(t!=this.$splits){if(t>this.$splits){for(;this.$splits<this.$editors.length&&this.$splits<t;)i=this.$editors[this.$splits],this.$container.appendChild(i.container),i.setFontSize(this.$fontSize),this.$splits++;for(;this.$splits<t;)this.$createEditor(),this.$splits++}else for(;this.$splits>t;)i=this.$editors[this.$splits-1],this.$container.removeChild(i.container),this.$splits--;this.resize()}},this.getSplits=function(){return this.$splits},this.getEditor=function(t){return this.$editors[t]},this.getCurrentEditor=function(){return this.$cEditor},this.focus=function(){this.$cEditor.focus()},this.blur=function(){this.$cEditor.blur()},this.setTheme=function(t){this.$editors.forEach((function(i){i.setTheme(t)}))},this.setKeyboardHandler=function(t){this.$editors.forEach((function(i){i.setKeyboardHandler(t)}))},this.forEach=function(t,i){this.$editors.forEach(t,i)},this.$fontSize=\"\",this.setFontSize=function(t){this.$fontSize=t,this.forEach((function(i){i.setFontSize(t)}))},this.$cloneSession=function(t){var i=new a(t.getDocument(),t.getMode()),e=t.getUndoManager();return i.setUndoManager(e),i.setTabSize(t.getTabSize()),i.setUseSoftTabs(t.getUseSoftTabs()),i.setOverwrite(t.getOverwrite()),i.setBreakpoints(t.getBreakpoints()),i.setUseWrapMode(t.getUseWrapMode()),i.setUseWorker(t.getUseWorker()),i.setWrapLimitRange(t.$wrapLimitRange.min,t.$wrapLimitRange.max),i.$foldData=t.$cloneFoldData(),i},this.setSession=function(t,i){var e;e=null==i?this.$cEditor:this.$editors[i];var s=this.$editors.some((function(i){return i.session===t}));return s&&(t=this.$cloneSession(t)),e.setSession(t),t},this.getOrientation=function(){return this.$orientation},this.setOrientation=function(t){this.$orientation!=t&&(this.$orientation=t,this.resize())},this.resize=function(){var t,i=this.$container.clientWidth,e=this.$container.clientHeight;if(this.$orientation==this.BESIDE)for(var s=i/this.$splits,o=0;o<this.$splits;o++)(t=this.$editors[o]).container.style.width=s+\"px\",t.container.style.top=\"0px\",t.container.style.left=o*s+\"px\",t.container.style.height=e+\"px\",t.resize();else{var n=e/this.$splits;for(o=0;o<this.$splits;o++)(t=this.$editors[o]).container.style.width=i+\"px\",t.container.style.top=o*n+\"px\",t.container.style.left=\"0px\",t.container.style.height=n+\"px\",t.resize()}}}).call((s=function(t,i,e){this.BELOW=1,this.BESIDE=0,this.$container=t,this.$theme=i,this.$splits=0,this.$editorCSS=\"\",this.$editors=[],this.$orientation=this.BESIDE,this.setSplits(e||1),this.$cEditor=this.$editors[0],this.on(\"focus\",function(t){this.$cEditor=t}.bind(this))}).prototype),i.Split=s})),ace.define(\"ace/ext/split\",[\"require\",\"exports\",\"module\",\"ace/split\"],(function(t,i,e){\"use strict\";e.exports=t(\"../split\")})),ace.require([\"ace/ext/split\"],(function(t){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=t)}));","name":"90cbad0fb95d8bff28f74c5bccee9bb8.js","input":"ace.define(\"ace/split\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/lib/lang\", \"ace/lib/event_emitter\", \"ace/editor\", \"ace/virtual_renderer\", \"ace/edit_session\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"./lib/oop\");\n  var lang = require(\"./lib/lang\");\n  var EventEmitter = require(\"./lib/event_emitter\").EventEmitter;\n  var Editor = require(\"./editor\").Editor;\n  var Renderer = require(\"./virtual_renderer\").VirtualRenderer;\n  var EditSession = require(\"./edit_session\").EditSession;\n  var Split;\n  Split = function (container, theme, splits) {\n    this.BELOW = 1;\n    this.BESIDE = 0;\n    this.$container = container;\n    this.$theme = theme;\n    this.$splits = 0;\n    this.$editorCSS = \"\";\n    this.$editors = [];\n    this.$orientation = this.BESIDE;\n    this.setSplits(splits || 1);\n    this.$cEditor = this.$editors[0];\n    this.on(\"focus\", function (editor) {\n      this.$cEditor = editor;\n    }.bind(this));\n  };\n  (function () {\n    oop.implement(this, EventEmitter);\n    this.$createEditor = function () {\n      var el = document.createElement(\"div\");\n      el.className = this.$editorCSS;\n      el.style.cssText = \"position: absolute; top:0px; bottom:0px\";\n      this.$container.appendChild(el);\n      var editor = new Editor(new Renderer(el, this.$theme));\n      editor.on(\"focus\", function () {\n        this._emit(\"focus\", editor);\n      }.bind(this));\n      this.$editors.push(editor);\n      editor.setFontSize(this.$fontSize);\n      return editor;\n    };\n    this.setSplits = function (splits) {\n      var editor;\n      if (splits < 1) {\n        throw \"The number of splits have to be > 0!\";\n      }\n      if (splits == this.$splits) {\n        return;\n      } else if (splits > this.$splits) {\n        while (this.$splits < this.$editors.length && this.$splits < splits) {\n          editor = this.$editors[this.$splits];\n          this.$container.appendChild(editor.container);\n          editor.setFontSize(this.$fontSize);\n          this.$splits++;\n        }\n        while (this.$splits < splits) {\n          this.$createEditor();\n          this.$splits++;\n        }\n      } else {\n        while (this.$splits > splits) {\n          editor = this.$editors[this.$splits - 1];\n          this.$container.removeChild(editor.container);\n          this.$splits--;\n        }\n      }\n      this.resize();\n    };\n    this.getSplits = function () {\n      return this.$splits;\n    };\n    this.getEditor = function (idx) {\n      return this.$editors[idx];\n    };\n    this.getCurrentEditor = function () {\n      return this.$cEditor;\n    };\n    this.focus = function () {\n      this.$cEditor.focus();\n    };\n    this.blur = function () {\n      this.$cEditor.blur();\n    };\n    this.setTheme = function (theme) {\n      this.$editors.forEach(function (editor) {\n        editor.setTheme(theme);\n      });\n    };\n    this.setKeyboardHandler = function (keybinding) {\n      this.$editors.forEach(function (editor) {\n        editor.setKeyboardHandler(keybinding);\n      });\n    };\n    this.forEach = function (callback, scope) {\n      this.$editors.forEach(callback, scope);\n    };\n    this.$fontSize = \"\";\n    this.setFontSize = function (size) {\n      this.$fontSize = size;\n      this.forEach(function (editor) {\n        editor.setFontSize(size);\n      });\n    };\n    this.$cloneSession = function (session) {\n      var s = new EditSession(session.getDocument(), session.getMode());\n      var undoManager = session.getUndoManager();\n      s.setUndoManager(undoManager);\n      s.setTabSize(session.getTabSize());\n      s.setUseSoftTabs(session.getUseSoftTabs());\n      s.setOverwrite(session.getOverwrite());\n      s.setBreakpoints(session.getBreakpoints());\n      s.setUseWrapMode(session.getUseWrapMode());\n      s.setUseWorker(session.getUseWorker());\n      s.setWrapLimitRange(session.$wrapLimitRange.min, session.$wrapLimitRange.max);\n      s.$foldData = session.$cloneFoldData();\n      return s;\n    };\n    this.setSession = function (session, idx) {\n      var editor;\n      if (idx == null) {\n        editor = this.$cEditor;\n      } else {\n        editor = this.$editors[idx];\n      }\n      var isUsed = this.$editors.some(function (editor) {\n        return editor.session === session;\n      });\n      if (isUsed) {\n        session = this.$cloneSession(session);\n      }\n      editor.setSession(session);\n      return session;\n    };\n    this.getOrientation = function () {\n      return this.$orientation;\n    };\n    this.setOrientation = function (orientation) {\n      if (this.$orientation == orientation) {\n        return;\n      }\n      this.$orientation = orientation;\n      this.resize();\n    };\n    this.resize = function () {\n      var width = this.$container.clientWidth;\n      var height = this.$container.clientHeight;\n      var editor;\n      if (this.$orientation == this.BESIDE) {\n        var editorWidth = width / this.$splits;\n        for (var i = 0; i < this.$splits; i++) {\n          editor = this.$editors[i];\n          editor.container.style.width = editorWidth + \"px\";\n          editor.container.style.top = \"0px\";\n          editor.container.style.left = i * editorWidth + \"px\";\n          editor.container.style.height = height + \"px\";\n          editor.resize();\n        }\n      } else {\n        var editorHeight = height / this.$splits;\n        for (var i = 0; i < this.$splits; i++) {\n          editor = this.$editors[i];\n          editor.container.style.width = width + \"px\";\n          editor.container.style.top = i * editorHeight + \"px\";\n          editor.container.style.left = \"0px\";\n          editor.container.style.height = editorHeight + \"px\";\n          editor.resize();\n        }\n      }\n    };\n  }).call(Split.prototype);\n  exports.Split = Split;\n});\nace.define(\"ace/ext/split\", [\"require\", \"exports\", \"module\", \"ace/split\"], function (require, exports, module) {\n  \"use strict\";\n\n  module.exports = require(\"../split\");\n});\n(function () {\n  ace.require([\"ace/ext/split\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}