{"code":"ace.define(\"ace/mode/mediawiki_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],(function(e,t,n){\"use strict\";var i=e(\"../lib/oop\"),a=e(\"./text_highlight_rules\").TextHighlightRules,o=function(){this.$rules={start:[{include:\"#switch\"},{include:\"#redirect\"},{include:\"#variable\"},{include:\"#comment\"},{include:\"#entity\"},{include:\"#emphasis\"},{include:\"#tag\"},{include:\"#table\"},{include:\"#hr\"},{include:\"#heading\"},{include:\"#link\"},{include:\"#list\"},{include:\"#template\"}],\"#hr\":[{token:\"markup.bold\",regex:/^[-]{4,}/}],\"#switch\":[{token:\"constant.language\",regex:/(__NOTOC__|__FORCETOC__|__TOC__|__NOEDITSECTION__|__NEWSECTIONLINK__|__NONEWSECTIONLINK__|__NOWYSIWYG__|__NOGALLERY__|__HIDDENCAT__|__EXPECTUNUSEDCATEGORY__|__NOCONTENTCONVERT__|__NOCC__|__NOTITLECONVERT__|__NOTC__|__START__|__END__|__INDEX__|__NOINDEX__|__STATICREDIRECT__|__NOGLOBAL__|__DISAMBIG__)/}],\"#redirect\":[{token:[\"keyword.control.redirect\",\"meta.keyword.control\"],regex:/(^#REDIRECT|^#redirect|^#Redirect)(\\s+)/}],\"#variable\":[{token:\"storage.type.variable\",regex:/{{{/,push:[{token:\"storage.type.variable\",regex:/}}}/,next:\"pop\"},{token:[\"text\",\"variable.other\",\"text\",\"keyword.operator\"],regex:/(\\s*)(\\w+)(\\s*)((?:\\|)?)/},{defaultToken:\"storage.type.variable\"}]}],\"#entity\":[{token:\"constant.character.entity\",regex:/&\\w+;/}],\"#list\":[{token:\"markup.bold\",regex:/^[#*;:]+/,push:[{token:\"markup.list\",regex:/$/,next:\"pop\"},{include:\"$self\"},{defaultToken:\"markup.list\"}]}],\"#template\":[{token:[\"storage.type.function\",\"meta.template\",\"entity.name.function\",\"meta.template\"],regex:/({{)(\\s*)([#\\w: ]+)(\\s*)/,push:[{token:\"storage.type.function\",regex:/}}/,next:\"pop\"},{token:[\"storage\",\"meta.structure.dictionary\",\"support.type.property-name\",\"meta.structure.dictionary\",\"punctuation.separator.dictionary.key-value\",\"meta.structure.dictionary\",\"meta.structure.dictionary.value\"],regex:/(\\|)(\\s*)([a-zA-Z-]*)(\\s*)(=)(\\s*)([^|}]*)/,push:[{token:\"meta.structure.dictionary\",regex:/(?=}}|[|])/,next:\"pop\"},{defaultToken:\"meta.structure.dictionary\"}]},{token:[\"storage\",\"meta.template.value\"],regex:/(\\|)(.*?)/,push:[{token:[],regex:/(?=}}|[|])/,next:\"pop\"},{include:\"$self\"},{defaultToken:\"meta.template.value\"}]},{defaultToken:\"meta.template\"}]}],\"#link\":[{token:[\"punctuation.definition.tag.begin\",\"meta.tag.link.internal\",\"entity.name.tag\",\"meta.tag.link.internal\",\"string.other.link.title\",\"meta.tag.link.internal\",\"punctuation.definition.tag\"],regex:/(\\[\\[)(\\s*)((?:Category|Wikipedia)?)(:?)([^\\]\\]\\|]+)(\\s*)((?:\\|)*)/,push:[{token:\"punctuation.definition.tag.end\",regex:/\\]\\]/,next:\"pop\"},{include:\"$self\"},{defaultToken:\"meta.tag.link.internal\"}]},{token:[\"punctuation.definition.tag.begin\",\"meta.tag.link.external\",\"meta.tag.link.external\",\"string.unquoted\",\"punctuation.definition.tag.end\"],regex:/(\\[)(.*?)([\\s]+)(.*?)(\\])/}],\"#comment\":[{token:\"punctuation.definition.comment.html\",regex:/<!--/,push:[{token:\"punctuation.definition.comment.html\",regex:/-->/,next:\"pop\"},{defaultToken:\"comment.block.html\"}]}],\"#emphasis\":[{token:[\"punctuation.definition.tag.begin\",\"markup.italic.bold\",\"punctuation.definition.tag.end\"],regex:/(''''')(?!')(.*?)('''''|$)/},{token:[\"punctuation.definition.tag.begin\",\"markup.bold\",\"punctuation.definition.tag.end\"],regex:/(''')(?!')(.*?)('''|$)/},{token:[\"punctuation.definition.tag.begin\",\"markup.italic\",\"punctuation.definition.tag.end\"],regex:/('')(?!')(.*?)(''|$)/}],\"#heading\":[{token:[\"punctuation.definition.heading\",\"entity.name.section\",\"punctuation.definition.heading\"],regex:/(={1,6})(.+?)(\\1)(?!=)/}],\"#tag\":[{token:[\"punctuation.definition.tag.begin\",\"entity.name.tag\",\"meta.tag.block.ref\",\"punctuation.definition.tag.end\"],regex:/(<)(ref)((?:\\s+.*?)?)(>)/,caseInsensitive:!0,push:[{token:[\"punctuation.definition.tag.begin\",\"entity.name.tag\",\"meta.tag.block.ref\",\"punctuation.definition.tag.end\"],regex:/(<\\/)(ref)(\\s*)(>)/,caseInsensitive:!0,next:\"pop\"},{include:\"$self\"},{defaultToken:\"meta.tag.block.ref\"}]},{token:[\"punctuation.definition.tag.begin\",\"entity.name.tag\",\"meta.tag.block.nowiki\",\"punctuation.definition.tag.end\"],regex:/(<)(nowiki)((?:\\s+.*?)?)(>)/,caseInsensitive:!0,push:[{token:[\"punctuation.definition.tag.begin\",\"entity.name.tag\",\"meta.tag.block.nowiki\",\"punctuation.definition.tag.end\"],regex:/(<\\/)(nowiki)(\\s*)(>)/,caseInsensitive:!0,next:\"pop\"},{defaultToken:\"meta.tag.block.nowiki\"}]},{token:[\"punctuation.definition.tag.begin\",\"entity.name.tag\"],regex:/(<\\/?)(noinclude|includeonly|onlyinclude)(?=\\W)/,caseInsensitive:!0,push:[{token:[\"invalid.illegal\",\"punctuation.definition.tag.end\"],regex:/((?:\\/)?)(>)/,next:\"pop\"},{include:\"#attribute\"},{defaultToken:\"meta.tag.block.any\"}]},{token:[\"punctuation.definition.tag.begin\",\"entity.name.tag\"],regex:/(<)(br|wbr|hr|meta|link)(?=\\W)/,caseInsensitive:!0,push:[{token:\"punctuation.definition.tag.end\",regex:/\\/?>/,next:\"pop\"},{include:\"#attribute\"},{defaultToken:\"meta.tag.other\"}]},{token:[\"punctuation.definition.tag.begin\",\"entity.name.tag\"],regex:/(<\\/?)(div|center|span|h1|h2|h3|h4|h5|h6|bdo|em|strong|cite|dfn|code|samp|kbd|var|abbr|blockquote|q|sub|sup|p|pre|ins|del|ul|ol|li|dl|dd|dt|table|caption|thead|tfoot|tbody|colgroup|col|tr|td|th|a|img|video|source|track|tt|b|i|big|small|strike|s|u|font|ruby|rb|rp|rt|rtc|math|figure|figcaption|bdi|data|time|mark|html)(?=\\W)/,caseInsensitive:!0,push:[{token:[\"invalid.illegal\",\"punctuation.definition.tag.end\"],regex:/((?:\\/)?)(>)/,next:\"pop\"},{include:\"#attribute\"},{defaultToken:\"meta.tag.block\"}]},{token:[\"punctuation.definition.tag.begin\",\"invalid.illegal\"],regex:/(<\\/)(br|wbr|hr|meta|link)(?=\\W)/,caseInsensitive:!0,push:[{token:\"punctuation.definition.tag.end\",regex:/\\/?>/,next:\"pop\"},{include:\"#attribute\"},{defaultToken:\"meta.tag.other\"}]}],\"#caption\":[{token:[\"meta.tag.block.table-caption\",\"punctuation.definition.tag.begin\"],regex:/^(\\s*)(\\|\\+)/,push:[{token:\"meta.tag.block.table-caption\",regex:/$/,next:\"pop\"},{defaultToken:\"meta.tag.block.table-caption\"}]}],\"#tr\":[{token:[\"meta.tag.block.tr\",\"punctuation.definition.tag.begin\",\"meta.tag.block.tr\",\"invalid.illegal\"],regex:/^(\\s*)(\\|\\-)([\\s]*)(.*)/}],\"#th\":[{token:[\"meta.tag.block.th.heading\",\"punctuation.definition.tag.begin\",\"meta.tag.block.th.heading\",\"punctuation.definition.tag\",\"markup.bold\"],regex:/^(\\s*)(!)(?:(.*?)(\\|))?(.*?)(?=!!|$)/,push:[{token:\"meta.tag.block.th.heading\",regex:/$/,next:\"pop\"},{token:[\"punctuation.definition.tag.begin\",\"meta.tag.block.th.inline\",\"punctuation.definition.tag\",\"markup.bold\"],regex:/(!!)(?:(.*?)(\\|))?(.*?)(?=!!|$)/},{include:\"$self\"},{defaultToken:\"meta.tag.block.th.heading\"}]}],\"#td\":[{token:[\"meta.tag.block.td\",\"punctuation.definition.tag.begin\"],regex:/^(\\s*)(\\|)/,push:[{token:\"meta.tag.block.td\",regex:/$/,next:\"pop\"},{include:\"$self\"},{defaultToken:\"meta.tag.block.td\"}]}],\"#table\":[{patterns:[{name:\"meta.tag.block.table\",begin:\"^\\\\s*({\\\\|)(.*?)$\",end:\"^\\\\s*\\\\|}\",beginCaptures:{1:{name:\"punctuation.definition.tag.begin\"},2:{patterns:[{include:\"#attribute\"}]},3:{name:\"invalid.illegal\"}},endCaptures:{0:{name:\"punctuation.definition.tag.end\"}},patterns:[{include:\"#comment\"},{include:\"#template\"},{include:\"#caption\"},{include:\"#tr\"},{include:\"#th\"},{include:\"#td\"}]}],repository:{caption:{name:\"meta.tag.block.table-caption\",begin:\"^\\\\s*(\\\\|\\\\+)\",end:\"$\",beginCaptures:{1:{name:\"punctuation.definition.tag.begin\"}}},tr:{name:\"meta.tag.block.tr\",match:\"^\\\\s*(\\\\|\\\\-)[\\\\s]*(.*)\",captures:{1:{name:\"punctuation.definition.tag.begin\"},2:{name:\"invalid.illegal\"}}},th:{name:\"meta.tag.block.th.heading\",begin:\"^\\\\s*(!)((.*?)(\\\\|))?(.*?)(?=(!!)|$)\",end:\"$\",beginCaptures:{1:{name:\"punctuation.definition.tag.begin\"},3:{patterns:[{include:\"#attribute\"}]},4:{name:\"punctuation.definition.tag\"},5:{name:\"markup.bold\"}},patterns:[{name:\"meta.tag.block.th.inline\",match:\"(!!)((.*?)(\\\\|))?(.*?)(?=(!!)|$)\",captures:{1:{name:\"punctuation.definition.tag.begin\"},3:{patterns:[{include:\"#attribute\"}]},4:{name:\"punctuation.definition.tag\"},5:{name:\"markup.bold\"}}},{include:\"$self\"}]},td:{name:\"meta.tag.block.td\",begin:\"^\\\\s*(\\\\|)\",end:\"$\",beginCaptures:{1:{name:\"punctuation.definition.tag.begin\"},2:{patterns:[{include:\"#attribute\"}]},3:{name:\"punctuation.definition.tag\"}},patterns:[{include:\"$self\"}]}}}],\"#attribute\":[{include:\"#string\"},{token:\"entity.other.attribute-name\",regex:/\\w+/}],\"#string\":[{token:\"string.quoted.double\",regex:/\\\"/,push:[{token:\"string.quoted.double\",regex:/\\\"/,next:\"pop\"},{defaultToken:\"string.quoted.double\"}]},{token:\"string.quoted.single\",regex:/\\'/,push:[{token:\"string.quoted.single\",regex:/\\'/,next:\"pop\"},{defaultToken:\"string.quoted.single\"}]}],\"#url\":[{token:\"markup.underline.link\",regex:/(?:http(?:s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:\\/?#\\[\\]@!\\$&'\\(\\)\\*\\+,;=.]+/},{token:\"invalid.illegal\",regex:/.*/}]},this.normalizeRules()};o.metaData={name:\"MediaWiki\",scopeName:\"text.html.mediawiki\",fileTypes:[\"mediawiki\",\"wiki\"]},i.inherits(o,a),t.MediaWikiHighlightRules=o})),ace.define(\"ace/mode/mediawiki\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/mediawiki_highlight_rules\"],(function(e,t,n){\"use strict\";var i=e(\"../lib/oop\"),a=e(\"./text\").Mode,o=e(\"./mediawiki_highlight_rules\").MediaWikiHighlightRules,u=function(){this.HighlightRules=o};i.inherits(u,a),function(){this.type=\"text\",this.blockComment={start:\"\\x3c!--\",end:\"--\\x3e\"},this.$id=\"ace/mode/mediawiki\"}.call(u.prototype),t.Mode=u})),ace.require([\"ace/mode/mediawiki\"],(function(e){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=e)}));","name":"9c8d16b30b3a0707efd2320be0042bb7.js","input":"ace.define(\"ace/mode/mediawiki_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var MediaWikiHighlightRules = function () {\n    this.$rules = {\n      start: [{\n        include: \"#switch\"\n      }, {\n        include: \"#redirect\"\n      }, {\n        include: \"#variable\"\n      }, {\n        include: \"#comment\"\n      }, {\n        include: \"#entity\"\n      }, {\n        include: \"#emphasis\"\n      }, {\n        include: \"#tag\"\n      }, {\n        include: \"#table\"\n      }, {\n        include: \"#hr\"\n      }, {\n        include: \"#heading\"\n      }, {\n        include: \"#link\"\n      }, {\n        include: \"#list\"\n      }, {\n        include: \"#template\"\n      }],\n      \"#hr\": [{\n        token: \"markup.bold\",\n        regex: /^[-]{4,}/\n      }],\n      \"#switch\": [{\n        token: \"constant.language\",\n        regex: /(__NOTOC__|__FORCETOC__|__TOC__|__NOEDITSECTION__|__NEWSECTIONLINK__|__NONEWSECTIONLINK__|__NOWYSIWYG__|__NOGALLERY__|__HIDDENCAT__|__EXPECTUNUSEDCATEGORY__|__NOCONTENTCONVERT__|__NOCC__|__NOTITLECONVERT__|__NOTC__|__START__|__END__|__INDEX__|__NOINDEX__|__STATICREDIRECT__|__NOGLOBAL__|__DISAMBIG__)/\n      }],\n      \"#redirect\": [{\n        token: [\"keyword.control.redirect\", \"meta.keyword.control\"],\n        regex: /(^#REDIRECT|^#redirect|^#Redirect)(\\s+)/\n      }],\n      \"#variable\": [{\n        token: \"storage.type.variable\",\n        regex: /{{{/,\n        push: [{\n          token: \"storage.type.variable\",\n          regex: /}}}/,\n          next: \"pop\"\n        }, {\n          token: [\"text\", \"variable.other\", \"text\", \"keyword.operator\"],\n          regex: /(\\s*)(\\w+)(\\s*)((?:\\|)?)/\n        }, {\n          defaultToken: \"storage.type.variable\"\n        }]\n      }],\n      \"#entity\": [{\n        token: \"constant.character.entity\",\n        regex: /&\\w+;/\n      }],\n      \"#list\": [{\n        token: \"markup.bold\",\n        regex: /^[#*;:]+/,\n        push: [{\n          token: \"markup.list\",\n          regex: /$/,\n          next: \"pop\"\n        }, {\n          include: \"$self\"\n        }, {\n          defaultToken: \"markup.list\"\n        }]\n      }],\n      \"#template\": [{\n        token: [\"storage.type.function\", \"meta.template\", \"entity.name.function\", \"meta.template\"],\n        regex: /({{)(\\s*)([#\\w: ]+)(\\s*)/,\n        push: [{\n          token: \"storage.type.function\",\n          regex: /}}/,\n          next: \"pop\"\n        }, {\n          token: [\"storage\", \"meta.structure.dictionary\", \"support.type.property-name\", \"meta.structure.dictionary\", \"punctuation.separator.dictionary.key-value\", \"meta.structure.dictionary\", \"meta.structure.dictionary.value\"],\n          regex: /(\\|)(\\s*)([a-zA-Z-]*)(\\s*)(=)(\\s*)([^|}]*)/,\n          push: [{\n            token: \"meta.structure.dictionary\",\n            regex: /(?=}}|[|])/,\n            next: \"pop\"\n          }, {\n            defaultToken: \"meta.structure.dictionary\"\n          }]\n        }, {\n          token: [\"storage\", \"meta.template.value\"],\n          regex: /(\\|)(.*?)/,\n          push: [{\n            token: [],\n            regex: /(?=}}|[|])/,\n            next: \"pop\"\n          }, {\n            include: \"$self\"\n          }, {\n            defaultToken: \"meta.template.value\"\n          }]\n        }, {\n          defaultToken: \"meta.template\"\n        }]\n      }],\n      \"#link\": [{\n        token: [\"punctuation.definition.tag.begin\", \"meta.tag.link.internal\", \"entity.name.tag\", \"meta.tag.link.internal\", \"string.other.link.title\", \"meta.tag.link.internal\", \"punctuation.definition.tag\"],\n        regex: /(\\[\\[)(\\s*)((?:Category|Wikipedia)?)(:?)([^\\]\\]\\|]+)(\\s*)((?:\\|)*)/,\n        push: [{\n          token: \"punctuation.definition.tag.end\",\n          regex: /\\]\\]/,\n          next: \"pop\"\n        }, {\n          include: \"$self\"\n        }, {\n          defaultToken: \"meta.tag.link.internal\"\n        }]\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"meta.tag.link.external\", \"meta.tag.link.external\", \"string.unquoted\", \"punctuation.definition.tag.end\"],\n        regex: /(\\[)(.*?)([\\s]+)(.*?)(\\])/\n      }],\n      \"#comment\": [{\n        token: \"punctuation.definition.comment.html\",\n        regex: /<!--/,\n        push: [{\n          token: \"punctuation.definition.comment.html\",\n          regex: /-->/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"comment.block.html\"\n        }]\n      }],\n      \"#emphasis\": [{\n        token: [\"punctuation.definition.tag.begin\", \"markup.italic.bold\", \"punctuation.definition.tag.end\"],\n        regex: /(''''')(?!')(.*?)('''''|$)/\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"markup.bold\", \"punctuation.definition.tag.end\"],\n        regex: /(''')(?!')(.*?)('''|$)/\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"markup.italic\", \"punctuation.definition.tag.end\"],\n        regex: /('')(?!')(.*?)(''|$)/\n      }],\n      \"#heading\": [{\n        token: [\"punctuation.definition.heading\", \"entity.name.section\", \"punctuation.definition.heading\"],\n        regex: /(={1,6})(.+?)(\\1)(?!=)/\n      }],\n      \"#tag\": [{\n        token: [\"punctuation.definition.tag.begin\", \"entity.name.tag\", \"meta.tag.block.ref\", \"punctuation.definition.tag.end\"],\n        regex: /(<)(ref)((?:\\s+.*?)?)(>)/,\n        caseInsensitive: true,\n        push: [{\n          token: [\"punctuation.definition.tag.begin\", \"entity.name.tag\", \"meta.tag.block.ref\", \"punctuation.definition.tag.end\"],\n          regex: /(<\\/)(ref)(\\s*)(>)/,\n          caseInsensitive: true,\n          next: \"pop\"\n        }, {\n          include: \"$self\"\n        }, {\n          defaultToken: \"meta.tag.block.ref\"\n        }]\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"entity.name.tag\", \"meta.tag.block.nowiki\", \"punctuation.definition.tag.end\"],\n        regex: /(<)(nowiki)((?:\\s+.*?)?)(>)/,\n        caseInsensitive: true,\n        push: [{\n          token: [\"punctuation.definition.tag.begin\", \"entity.name.tag\", \"meta.tag.block.nowiki\", \"punctuation.definition.tag.end\"],\n          regex: /(<\\/)(nowiki)(\\s*)(>)/,\n          caseInsensitive: true,\n          next: \"pop\"\n        }, {\n          defaultToken: \"meta.tag.block.nowiki\"\n        }]\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"entity.name.tag\"],\n        regex: /(<\\/?)(noinclude|includeonly|onlyinclude)(?=\\W)/,\n        caseInsensitive: true,\n        push: [{\n          token: [\"invalid.illegal\", \"punctuation.definition.tag.end\"],\n          regex: /((?:\\/)?)(>)/,\n          next: \"pop\"\n        }, {\n          include: \"#attribute\"\n        }, {\n          defaultToken: \"meta.tag.block.any\"\n        }]\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"entity.name.tag\"],\n        regex: /(<)(br|wbr|hr|meta|link)(?=\\W)/,\n        caseInsensitive: true,\n        push: [{\n          token: \"punctuation.definition.tag.end\",\n          regex: /\\/?>/,\n          next: \"pop\"\n        }, {\n          include: \"#attribute\"\n        }, {\n          defaultToken: \"meta.tag.other\"\n        }]\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"entity.name.tag\"],\n        regex: /(<\\/?)(div|center|span|h1|h2|h3|h4|h5|h6|bdo|em|strong|cite|dfn|code|samp|kbd|var|abbr|blockquote|q|sub|sup|p|pre|ins|del|ul|ol|li|dl|dd|dt|table|caption|thead|tfoot|tbody|colgroup|col|tr|td|th|a|img|video|source|track|tt|b|i|big|small|strike|s|u|font|ruby|rb|rp|rt|rtc|math|figure|figcaption|bdi|data|time|mark|html)(?=\\W)/,\n        caseInsensitive: true,\n        push: [{\n          token: [\"invalid.illegal\", \"punctuation.definition.tag.end\"],\n          regex: /((?:\\/)?)(>)/,\n          next: \"pop\"\n        }, {\n          include: \"#attribute\"\n        }, {\n          defaultToken: \"meta.tag.block\"\n        }]\n      }, {\n        token: [\"punctuation.definition.tag.begin\", \"invalid.illegal\"],\n        regex: /(<\\/)(br|wbr|hr|meta|link)(?=\\W)/,\n        caseInsensitive: true,\n        push: [{\n          token: \"punctuation.definition.tag.end\",\n          regex: /\\/?>/,\n          next: \"pop\"\n        }, {\n          include: \"#attribute\"\n        }, {\n          defaultToken: \"meta.tag.other\"\n        }]\n      }],\n      \"#caption\": [{\n        token: [\"meta.tag.block.table-caption\", \"punctuation.definition.tag.begin\"],\n        regex: /^(\\s*)(\\|\\+)/,\n        push: [{\n          token: \"meta.tag.block.table-caption\",\n          regex: /$/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"meta.tag.block.table-caption\"\n        }]\n      }],\n      \"#tr\": [{\n        token: [\"meta.tag.block.tr\", \"punctuation.definition.tag.begin\", \"meta.tag.block.tr\", \"invalid.illegal\"],\n        regex: /^(\\s*)(\\|\\-)([\\s]*)(.*)/\n      }],\n      \"#th\": [{\n        token: [\"meta.tag.block.th.heading\", \"punctuation.definition.tag.begin\", \"meta.tag.block.th.heading\", \"punctuation.definition.tag\", \"markup.bold\"],\n        regex: /^(\\s*)(!)(?:(.*?)(\\|))?(.*?)(?=!!|$)/,\n        push: [{\n          token: \"meta.tag.block.th.heading\",\n          regex: /$/,\n          next: \"pop\"\n        }, {\n          token: [\"punctuation.definition.tag.begin\", \"meta.tag.block.th.inline\", \"punctuation.definition.tag\", \"markup.bold\"],\n          regex: /(!!)(?:(.*?)(\\|))?(.*?)(?=!!|$)/\n        }, {\n          include: \"$self\"\n        }, {\n          defaultToken: \"meta.tag.block.th.heading\"\n        }]\n      }],\n      \"#td\": [{\n        token: [\"meta.tag.block.td\", \"punctuation.definition.tag.begin\"],\n        regex: /^(\\s*)(\\|)/,\n        push: [{\n          token: \"meta.tag.block.td\",\n          regex: /$/,\n          next: \"pop\"\n        }, {\n          include: \"$self\"\n        }, {\n          defaultToken: \"meta.tag.block.td\"\n        }]\n      }],\n      \"#table\": [{\n        patterns: [{\n          name: \"meta.tag.block.table\",\n          begin: \"^\\\\s*({\\\\|)(.*?)$\",\n          end: \"^\\\\s*\\\\|}\",\n          beginCaptures: {\n            1: {\n              name: \"punctuation.definition.tag.begin\"\n            },\n            2: {\n              patterns: [{\n                include: \"#attribute\"\n              }]\n            },\n            3: {\n              name: \"invalid.illegal\"\n            }\n          },\n          endCaptures: {\n            0: {\n              name: \"punctuation.definition.tag.end\"\n            }\n          },\n          patterns: [{\n            include: \"#comment\"\n          }, {\n            include: \"#template\"\n          }, {\n            include: \"#caption\"\n          }, {\n            include: \"#tr\"\n          }, {\n            include: \"#th\"\n          }, {\n            include: \"#td\"\n          }]\n        }],\n        repository: {\n          caption: {\n            name: \"meta.tag.block.table-caption\",\n            begin: \"^\\\\s*(\\\\|\\\\+)\",\n            end: \"$\",\n            beginCaptures: {\n              1: {\n                name: \"punctuation.definition.tag.begin\"\n              }\n            }\n          },\n          tr: {\n            name: \"meta.tag.block.tr\",\n            match: \"^\\\\s*(\\\\|\\\\-)[\\\\s]*(.*)\",\n            captures: {\n              1: {\n                name: \"punctuation.definition.tag.begin\"\n              },\n              2: {\n                name: \"invalid.illegal\"\n              }\n            }\n          },\n          th: {\n            name: \"meta.tag.block.th.heading\",\n            begin: \"^\\\\s*(!)((.*?)(\\\\|))?(.*?)(?=(!!)|$)\",\n            end: \"$\",\n            beginCaptures: {\n              1: {\n                name: \"punctuation.definition.tag.begin\"\n              },\n              3: {\n                patterns: [{\n                  include: \"#attribute\"\n                }]\n              },\n              4: {\n                name: \"punctuation.definition.tag\"\n              },\n              5: {\n                name: \"markup.bold\"\n              }\n            },\n            patterns: [{\n              name: \"meta.tag.block.th.inline\",\n              match: \"(!!)((.*?)(\\\\|))?(.*?)(?=(!!)|$)\",\n              captures: {\n                1: {\n                  name: \"punctuation.definition.tag.begin\"\n                },\n                3: {\n                  patterns: [{\n                    include: \"#attribute\"\n                  }]\n                },\n                4: {\n                  name: \"punctuation.definition.tag\"\n                },\n                5: {\n                  name: \"markup.bold\"\n                }\n              }\n            }, {\n              include: \"$self\"\n            }]\n          },\n          td: {\n            name: \"meta.tag.block.td\",\n            begin: \"^\\\\s*(\\\\|)\",\n            end: \"$\",\n            beginCaptures: {\n              1: {\n                name: \"punctuation.definition.tag.begin\"\n              },\n              2: {\n                patterns: [{\n                  include: \"#attribute\"\n                }]\n              },\n              3: {\n                name: \"punctuation.definition.tag\"\n              }\n            },\n            patterns: [{\n              include: \"$self\"\n            }]\n          }\n        }\n      }],\n      \"#attribute\": [{\n        include: \"#string\"\n      }, {\n        token: \"entity.other.attribute-name\",\n        regex: /\\w+/\n      }],\n      \"#string\": [{\n        token: \"string.quoted.double\",\n        regex: /\\\"/,\n        push: [{\n          token: \"string.quoted.double\",\n          regex: /\\\"/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"string.quoted.double\"\n        }]\n      }, {\n        token: \"string.quoted.single\",\n        regex: /\\'/,\n        push: [{\n          token: \"string.quoted.single\",\n          regex: /\\'/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"string.quoted.single\"\n        }]\n      }],\n      \"#url\": [{\n        token: \"markup.underline.link\",\n        regex: /(?:http(?:s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:\\/?#\\[\\]@!\\$&'\\(\\)\\*\\+,;=.]+/\n      }, {\n        token: \"invalid.illegal\",\n        regex: /.*/\n      }]\n    };\n    this.normalizeRules();\n  };\n  MediaWikiHighlightRules.metaData = {\n    name: \"MediaWiki\",\n    scopeName: \"text.html.mediawiki\",\n    fileTypes: [\"mediawiki\", \"wiki\"]\n  };\n  oop.inherits(MediaWikiHighlightRules, TextHighlightRules);\n  exports.MediaWikiHighlightRules = MediaWikiHighlightRules;\n});\nace.define(\"ace/mode/mediawiki\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/mediawiki_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var MediaWikiHighlightRules = require(\"./mediawiki_highlight_rules\").MediaWikiHighlightRules;\n  var Mode = function () {\n    this.HighlightRules = MediaWikiHighlightRules;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.type = \"text\";\n    this.blockComment = {\n      start: \"<!--\",\n      end: \"-->\"\n    };\n    this.$id = \"ace/mode/mediawiki\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/mediawiki\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}