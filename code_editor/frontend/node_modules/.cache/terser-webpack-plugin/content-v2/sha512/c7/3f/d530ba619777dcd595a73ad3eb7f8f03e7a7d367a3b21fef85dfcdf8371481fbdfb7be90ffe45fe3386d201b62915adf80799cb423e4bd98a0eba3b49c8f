{"code":"ace.define(\"ace/mode/xml_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],(function(e,t,n){\"use strict\";var r=e(\"../lib/oop\"),o=e(\"./text_highlight_rules\").TextHighlightRules,a=function(e){var t=\"[_:a-zA-Z\\xc0-\\uffff][-_:.a-zA-Z0-9\\xc0-\\uffff]*\";this.$rules={start:[{token:\"string.cdata.xml\",regex:\"<\\\\!\\\\[CDATA\\\\[\",next:\"cdata\"},{token:[\"punctuation.instruction.xml\",\"keyword.instruction.xml\"],regex:\"(<\\\\?)(\"+t+\")\",next:\"processing_instruction\"},{token:\"comment.start.xml\",regex:\"<\\\\!--\",next:\"comment\"},{token:[\"xml-pe.doctype.xml\",\"xml-pe.doctype.xml\"],regex:\"(<\\\\!)(DOCTYPE)(?=[\\\\s])\",next:\"doctype\",caseInsensitive:!0},{include:\"tag\"},{token:\"text.end-tag-open.xml\",regex:\"</\"},{token:\"text.tag-open.xml\",regex:\"<\"},{include:\"reference\"},{defaultToken:\"text.xml\"}],processing_instruction:[{token:\"entity.other.attribute-name.decl-attribute-name.xml\",regex:t},{token:\"keyword.operator.decl-attribute-equals.xml\",regex:\"=\"},{include:\"whitespace\"},{include:\"string\"},{token:\"punctuation.xml-decl.xml\",regex:\"\\\\?>\",next:\"start\"}],doctype:[{include:\"whitespace\"},{include:\"string\"},{token:\"xml-pe.doctype.xml\",regex:\">\",next:\"start\"},{token:\"xml-pe.xml\",regex:\"[-_a-zA-Z0-9:]+\"},{token:\"punctuation.int-subset\",regex:\"\\\\[\",push:\"int_subset\"}],int_subset:[{token:\"text.xml\",regex:\"\\\\s+\"},{token:\"punctuation.int-subset.xml\",regex:\"]\",next:\"pop\"},{token:[\"punctuation.markup-decl.xml\",\"keyword.markup-decl.xml\"],regex:\"(<\\\\!)(\"+t+\")\",push:[{token:\"text\",regex:\"\\\\s+\"},{token:\"punctuation.markup-decl.xml\",regex:\">\",next:\"pop\"},{include:\"string\"}]}],cdata:[{token:\"string.cdata.xml\",regex:\"\\\\]\\\\]>\",next:\"start\"},{token:\"text.xml\",regex:\"\\\\s+\"},{token:\"text.xml\",regex:\"(?:[^\\\\]]|\\\\](?!\\\\]>))+\"}],comment:[{token:\"comment.end.xml\",regex:\"--\\x3e\",next:\"start\"},{defaultToken:\"comment.xml\"}],reference:[{token:\"constant.language.escape.reference.xml\",regex:\"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"}],attr_reference:[{token:\"constant.language.escape.reference.attribute-value.xml\",regex:\"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"}],tag:[{token:[\"meta.tag.punctuation.tag-open.xml\",\"meta.tag.punctuation.end-tag-open.xml\",\"meta.tag.tag-name.xml\"],regex:\"(?:(<)|(</))((?:\"+t+\":)?\"+t+\")\",next:[{include:\"attributes\"},{token:\"meta.tag.punctuation.tag-close.xml\",regex:\"/?>\",next:\"start\"}]}],tag_whitespace:[{token:\"text.tag-whitespace.xml\",regex:\"\\\\s+\"}],whitespace:[{token:\"text.whitespace.xml\",regex:\"\\\\s+\"}],string:[{token:\"string.xml\",regex:\"'\",push:[{token:\"string.xml\",regex:\"'\",next:\"pop\"},{defaultToken:\"string.xml\"}]},{token:\"string.xml\",regex:'\"',push:[{token:\"string.xml\",regex:'\"',next:\"pop\"},{defaultToken:\"string.xml\"}]}],attributes:[{token:\"entity.other.attribute-name.xml\",regex:t},{token:\"keyword.operator.attribute-equals.xml\",regex:\"=\"},{include:\"tag_whitespace\"},{include:\"attribute_value\"}],attribute_value:[{token:\"string.attribute-value.xml\",regex:\"'\",push:[{token:\"string.attribute-value.xml\",regex:\"'\",next:\"pop\"},{include:\"attr_reference\"},{defaultToken:\"string.attribute-value.xml\"}]},{token:\"string.attribute-value.xml\",regex:'\"',push:[{token:\"string.attribute-value.xml\",regex:'\"',next:\"pop\"},{include:\"attr_reference\"},{defaultToken:\"string.attribute-value.xml\"}]}]},this.constructor===a&&this.normalizeRules()};(function(){this.embedTagRules=function(e,t,n){this.$rules.tag.unshift({token:[\"meta.tag.punctuation.tag-open.xml\",\"meta.tag.\"+n+\".tag-name.xml\"],regex:\"(<)(\"+n+\"(?=\\\\s|>|$))\",next:[{include:\"attributes\"},{token:\"meta.tag.punctuation.tag-close.xml\",regex:\"/?>\",next:t+\"start\"}]}),this.$rules[n+\"-end\"]=[{include:\"attributes\"},{token:\"meta.tag.punctuation.tag-close.xml\",regex:\"/?>\",next:\"start\",onMatch:function(e,t,n){return n.splice(0),this.token}}],this.embedRules(e,t,[{token:[\"meta.tag.punctuation.end-tag-open.xml\",\"meta.tag.\"+n+\".tag-name.xml\"],regex:\"(</)(\"+n+\"(?=\\\\s|>|$))\",next:n+\"-end\"},{token:\"string.cdata.xml\",regex:\"<\\\\!\\\\[CDATA\\\\[\"},{token:\"string.cdata.xml\",regex:\"\\\\]\\\\]>\"}])}}).call(o.prototype),r.inherits(a,o),t.XmlHighlightRules=a})),ace.define(\"ace/mode/behaviour/xml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/behaviour\",\"ace/token_iterator\"],(function(e,t,n){\"use strict\";var r=e(\"../../lib/oop\"),o=e(\"../behaviour\").Behaviour,a=e(\"../../token_iterator\").TokenIterator;function i(e,t){return e&&e.type.lastIndexOf(t+\".xml\")>-1}var s=function(){this.add(\"string_dquotes\",\"insertion\",(function(e,t,n,r,o){if('\"'==o||\"'\"==o){var s=o,l=r.doc.getTextRange(n.getSelectionRange());if(\"\"!==l&&\"'\"!==l&&'\"'!=l&&n.getWrapBehavioursEnabled())return{text:s+l+s,selection:!1};var g=n.getCursorPosition(),u=r.doc.getLine(g.row).substring(g.column,g.column+1),c=new a(r,g.row,g.column),d=c.getCurrentToken();if(u==s&&(i(d,\"attribute-value\")||i(d,\"string\")))return{text:\"\",selection:[1,1]};if(d||(d=c.stepBackward()),!d)return;for(;i(d,\"tag-whitespace\")||i(d,\"whitespace\");)d=c.stepBackward();var x=!u||u.match(/\\s/);if(i(d,\"attribute-equals\")&&(x||\">\"==u)||i(d,\"decl-attribute-equals\")&&(x||\"?\"==u))return{text:s+s,selection:[1,1]}}})),this.add(\"string_dquotes\",\"deletion\",(function(e,t,n,r,o){var a=r.doc.getTextRange(o);if(!o.isMultiLine()&&('\"'==a||\"'\"==a)&&r.doc.getLine(o.start.row).substring(o.start.column+1,o.start.column+2)==a)return o.end.column++,o})),this.add(\"autoclosing\",\"insertion\",(function(e,t,n,r,o){if(\">\"==o){var s=n.getSelectionRange().start,l=new a(r,s.row,s.column),g=l.getCurrentToken()||l.stepBackward();if(!g||!(i(g,\"tag-name\")||i(g,\"tag-whitespace\")||i(g,\"attribute-name\")||i(g,\"attribute-equals\")||i(g,\"attribute-value\")))return;if(i(g,\"reference.attribute-value\"))return;if(i(g,\"attribute-value\")){var u=l.getCurrentTokenColumn()+g.value.length;if(s.column<u)return;if(s.column==u){var c=l.stepForward();if(c&&i(c,\"attribute-value\"))return;l.stepBackward()}}if(/^\\s*>/.test(r.getLine(s.row).slice(s.column)))return;for(;!i(g,\"tag-name\");)if(\"<\"==(g=l.stepBackward()).value){g=l.stepForward();break}var d=l.getCurrentTokenRow(),x=l.getCurrentTokenColumn();if(i(l.stepBackward(),\"end-tag-open\"))return;var m=g.value;if(d==s.row&&(m=m.substring(0,s.column-x)),this.voidElements&&this.voidElements.hasOwnProperty(m.toLowerCase()))return;return{text:\"></\"+m+\">\",selection:[1,1]}}})),this.add(\"autoindent\",\"insertion\",(function(e,t,n,r,o){if(\"\\n\"==o){var s=n.getCursorPosition(),l=r.getLine(s.row),g=new a(r,s.row,s.column),u=g.getCurrentToken();if(i(u,\"\")&&-1!==u.type.indexOf(\"tag-close\")){if(\"/>\"==u.value)return;for(;u&&-1===u.type.indexOf(\"tag-name\");)u=g.stepBackward();if(!u)return;var c=u.value,d=g.getCurrentTokenRow();if(!(u=g.stepBackward())||-1!==u.type.indexOf(\"end-tag\"))return;if(this.voidElements&&!this.voidElements[c]||!this.voidElements){var x=r.getTokenAt(s.row,s.column+1),m=(l=r.getLine(d),this.$getIndent(l)),p=m+r.getTabString();return x&&\"</\"===x.value?{text:\"\\n\"+p+\"\\n\"+m,selection:[1,p.length,1,p.length]}:{text:\"\\n\"+p}}}}}))};r.inherits(s,o),t.XmlBehaviour=s})),ace.define(\"ace/mode/folding/xml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"],(function(e,t,n){\"use strict\";var r=e(\"../../lib/oop\"),o=e(\"../../range\").Range,a=e(\"./fold_mode\").FoldMode,i=t.FoldMode=function(e,t){a.call(this),this.voidElements=e||{},this.optionalEndTags=r.mixin({},this.voidElements),t&&r.mixin(this.optionalEndTags,t)};r.inherits(i,a);var s=function(){this.tagName=\"\",this.closing=!1,this.selfClosing=!1,this.start={row:0,column:0},this.end={row:0,column:0}};function l(e,t){return e.type.lastIndexOf(t+\".xml\")>-1}(function(){this.getFoldWidget=function(e,t,n){var r=this._getFirstTagInLine(e,n);return r?r.closing||!r.tagName&&r.selfClosing?\"markbeginend\"===t?\"end\":\"\":!r.tagName||r.selfClosing||this.voidElements.hasOwnProperty(r.tagName.toLowerCase())||this._findEndTagInLine(e,n,r.tagName,r.end.column)?\"\":\"start\":this.getCommentFoldWidget(e,n)},this.getCommentFoldWidget=function(e,t){return/comment/.test(e.getState(t))&&/<!-/.test(e.getLine(t))?\"start\":\"\"},this._getFirstTagInLine=function(e,t){for(var n=e.getTokens(t),r=new s,o=0;o<n.length;o++){var a=n[o];if(l(a,\"tag-open\")){if(r.end.column=r.start.column+a.value.length,r.closing=l(a,\"end-tag-open\"),!(a=n[++o]))return null;if(r.tagName=a.value,\"\"===a.value){if(!(a=n[++o]))return null;r.tagName=a.value}for(r.end.column+=a.value.length,o++;o<n.length;o++)if(a=n[o],r.end.column+=a.value.length,l(a,\"tag-close\")){r.selfClosing=\"/>\"==a.value;break}return r}if(l(a,\"tag-close\"))return r.selfClosing=\"/>\"==a.value,r;r.start.column+=a.value.length}return null},this._findEndTagInLine=function(e,t,n,r){for(var o=e.getTokens(t),a=0,i=0;i<o.length;i++){var s=o[i];if(!((a+=s.value.length)<r-1)&&l(s,\"end-tag-open\")&&(l(s=o[i+1],\"tag-name\")&&\"\"===s.value&&(s=o[i+2]),s&&s.value==n))return!0}return!1},this.getFoldWidgetRange=function(e,t,n){if(!this._getFirstTagInLine(e,n))return this.getCommentFoldWidget(e,n)&&e.getCommentFoldRange(n,e.getLine(n).length);var r=e.getMatchingTags({row:n,column:0});return r?new o(r.openTag.end.row,r.openTag.end.column,r.closeTag.start.row,r.closeTag.start.column):void 0}}).call(i.prototype)})),ace.define(\"ace/mode/xml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text\",\"ace/mode/xml_highlight_rules\",\"ace/mode/behaviour/xml\",\"ace/mode/folding/xml\",\"ace/worker/worker_client\"],(function(e,t,n){\"use strict\";var r=e(\"../lib/oop\"),o=e(\"../lib/lang\"),a=e(\"./text\").Mode,i=e(\"./xml_highlight_rules\").XmlHighlightRules,s=e(\"./behaviour/xml\").XmlBehaviour,l=e(\"./folding/xml\").FoldMode,g=e(\"../worker/worker_client\").WorkerClient,u=function(){this.HighlightRules=i,this.$behaviour=new s,this.foldingRules=new l};r.inherits(u,a),function(){this.voidElements=o.arrayToMap([]),this.blockComment={start:\"\\x3c!--\",end:\"--\\x3e\"},this.createWorker=function(e){var t=new g([\"ace\"],\"ace/mode/xml_worker\",\"Worker\");return t.attachToDocument(e.getDocument()),t.on(\"error\",(function(t){e.setAnnotations(t.data)})),t.on(\"terminate\",(function(){e.clearAnnotations()})),t},this.$id=\"ace/mode/xml\"}.call(u.prototype),t.Mode=u})),ace.define(\"ace/mode/jsdoc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],(function(e,t,n){\"use strict\";var r=e(\"../lib/oop\"),o=e(\"./text_highlight_rules\").TextHighlightRules,a=function(){this.$rules={start:[{token:[\"comment.doc.tag\",\"comment.doc.text\",\"lparen.doc\"],regex:\"(@(?:param|member|typedef|property|namespace|var|const|callback))(\\\\s*)({)\",push:[{token:\"lparen.doc\",regex:\"{\",push:[{include:\"doc-syntax\"},{token:\"rparen.doc\",regex:\"}|(?=$)\",next:\"pop\"}]},{token:[\"rparen.doc\",\"text.doc\",\"variable.parameter.doc\",\"lparen.doc\",\"variable.parameter.doc\",\"rparen.doc\"],regex:/(})(\\s*)(?:([\\w=:\\/\\.]+)|(?:(\\[)([\\w=:\\/\\.]+)(\\])))/,next:\"pop\"},{token:\"rparen.doc\",regex:\"}|(?=$)\",next:\"pop\"},{include:\"doc-syntax\"},{defaultToken:\"text.doc\"}]},{token:[\"comment.doc.tag\",\"text.doc\",\"lparen.doc\"],regex:\"(@(?:returns?|yields|type|this|suppress|public|protected|private|package|modifies|implements|external|exception|throws|enum|define|extends))(\\\\s*)({)\",push:[{token:\"lparen.doc\",regex:\"{\",push:[{include:\"doc-syntax\"},{token:\"rparen.doc\",regex:\"}|(?=$)\",next:\"pop\"}]},{token:\"rparen.doc\",regex:\"}|(?=$)\",next:\"pop\"},{include:\"doc-syntax\"},{defaultToken:\"text.doc\"}]},{token:[\"comment.doc.tag\",\"text.doc\",\"variable.parameter.doc\"],regex:'(@(?:alias|memberof|instance|module|name|lends|namespace|external|this|template|requires|param|implements|function|extends|typedef|mixes|constructor|var|memberof\\\\!|event|listens|exports|class|constructs|interface|emits|fires|throws|const|callback|borrows|augments))(\\\\s+)(\\\\w[\\\\w#.:/~\"\\\\-]*)?'},{token:[\"comment.doc.tag\",\"text.doc\",\"variable.parameter.doc\"],regex:\"(@method)(\\\\s+)(\\\\w[\\\\w.\\\\(\\\\)]*)\"},{token:\"comment.doc.tag\",regex:\"@access\\\\s+(?:private|public|protected)\"},{token:\"comment.doc.tag\",regex:\"@kind\\\\s+(?:class|constant|event|external|file|function|member|mixin|module|namespace|typedef)\"},{token:\"comment.doc.tag\",regex:\"@\\\\w+(?=\\\\s|$)\"},a.getTagRule(),{defaultToken:\"comment.doc.body\",caseInsensitive:!0}],\"doc-syntax\":[{token:\"operator.doc\",regex:/[|:]/},{token:\"paren.doc\",regex:/[\\[\\]]/}]},this.normalizeRules()};r.inherits(a,o),a.getTagRule=function(e){return{token:\"comment.doc.tag.storage.type\",regex:\"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"}},a.getStartRule=function(e){return{token:\"comment.doc\",regex:/\\/\\*\\*(?!\\/)/,next:e}},a.getEndRule=function(e){return{token:\"comment.doc\",regex:\"\\\\*\\\\/\",next:e}},t.JsDocCommentHighlightRules=a})),ace.define(\"ace/mode/javascript_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/jsdoc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"],(function(e,t,n){\"use strict\";var r=e(\"../lib/oop\"),o=e(\"./jsdoc_comment_highlight_rules\").JsDocCommentHighlightRules,a=e(\"./text_highlight_rules\").TextHighlightRules,i=\"[a-zA-Z\\\\$_\\xa1-\\uffff][a-zA-Z\\\\d\\\\$_\\xa1-\\uffff]*\",s=function(e){var t={\"variable.language\":\"Array|Boolean|Date|Function|Iterator|Number|Object|RegExp|String|Proxy|Symbol|Namespace|QName|XML|XMLList|ArrayBuffer|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray|Error|EvalError|InternalError|RangeError|ReferenceError|StopIteration|SyntaxError|TypeError|URIError|decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|eval|isFinite|isNaN|parseFloat|parseInt|JSON|Math|this|arguments|prototype|window|document\",keyword:\"const|yield|import|get|set|async|await|break|case|catch|continue|default|delete|do|else|finally|for|if|in|of|instanceof|new|return|switch|throw|try|typeof|let|var|while|with|debugger|__parent__|__count__|escape|unescape|with|__proto__|class|enum|extends|super|export|implements|private|public|interface|package|protected|static|constructor\",\"storage.type\":\"const|let|var|function\",\"constant.language\":\"null|Infinity|NaN|undefined\",\"support.function\":\"alert\",\"constant.language.boolean\":\"true|false\"},n=this.createKeywordMapper(t,\"identifier\"),r=\"\\\\\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|u{[0-9a-fA-F]{1,6}}|[0-2][0-7]{0,2}|3[0-7][0-7]?|[4-7][0-7]?|.)\",a=\"(function)(\\\\s*)(\\\\*?)\",s={token:[\"identifier\",\"text\",\"paren.lparen\"],regex:\"(\\\\b(?!\"+Object.values(t).join(\"|\")+\"\\\\b)\"+i+\")(\\\\s*)(\\\\()\"};this.$rules={no_regex:[o.getStartRule(\"doc-start\"),g(\"no_regex\"),s,{token:\"string\",regex:\"'(?=.)\",next:\"qstring\"},{token:\"string\",regex:'\"(?=.)',next:\"qqstring\"},{token:\"constant.numeric\",regex:/0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/},{token:\"constant.numeric\",regex:/(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/},{token:[\"entity.name.function\",\"text\",\"keyword.operator\",\"text\",\"storage.type\",\"text\",\"storage.type\",\"text\",\"paren.lparen\"],regex:\"(\"+i+\")(\\\\s*)(=)(\\\\s*)\"+a+\"(\\\\s*)(\\\\()\",next:\"function_arguments\"},{token:[\"storage.type\",\"text\",\"storage.type\",\"text\",\"text\",\"entity.name.function\",\"text\",\"paren.lparen\"],regex:\"(function)(?:(?:(\\\\s*)(\\\\*)(\\\\s*))|(\\\\s+))(\"+i+\")(\\\\s*)(\\\\()\",next:\"function_arguments\"},{token:[\"entity.name.function\",\"text\",\"punctuation.operator\",\"text\",\"storage.type\",\"text\",\"storage.type\",\"text\",\"paren.lparen\"],regex:\"(\"+i+\")(\\\\s*)(:)(\\\\s*)\"+a+\"(\\\\s*)(\\\\()\",next:\"function_arguments\"},{token:[\"text\",\"text\",\"storage.type\",\"text\",\"storage.type\",\"text\",\"paren.lparen\"],regex:\"(:)(\\\\s*)\"+a+\"(\\\\s*)(\\\\()\",next:\"function_arguments\"},{token:\"keyword\",regex:\"from(?=\\\\s*('|\\\"))\"},{token:\"keyword\",regex:\"(?:case|do|else|finally|in|instanceof|return|throw|try|typeof|yield|void)\\\\b\",next:\"start\"},{token:\"support.constant\",regex:/that\\b/},{token:[\"storage.type\",\"punctuation.operator\",\"support.function.firebug\"],regex:/(console)(\\.)(warn|info|log|error|debug|time|trace|timeEnd|assert)\\b/},{token:n,regex:i},{token:\"punctuation.operator\",regex:/[.](?![.])/,next:\"property\"},{token:\"storage.type\",regex:/=>/,next:\"start\"},{token:\"keyword.operator\",regex:/--|\\+\\+|\\.{3}|===|==|=|!=|!==|<+=?|>+=?|!|&&|\\|\\||\\?:|[!$%&*+\\-~\\/^]=?/,next:\"start\"},{token:\"punctuation.operator\",regex:/[?:,;.]/,next:\"start\"},{token:\"paren.lparen\",regex:/[\\[({]/,next:\"start\"},{token:\"paren.rparen\",regex:/[\\])}]/},{token:\"comment\",regex:/^#!.*$/}],property:[{token:\"text\",regex:\"\\\\s+\"},{token:\"keyword.operator\",regex:/=/},{token:[\"storage.type\",\"text\",\"storage.type\",\"text\",\"paren.lparen\"],regex:a+\"(\\\\s*)(\\\\()\",next:\"function_arguments\"},{token:[\"storage.type\",\"text\",\"storage.type\",\"text\",\"text\",\"entity.name.function\",\"text\",\"paren.lparen\"],regex:\"(function)(?:(?:(\\\\s*)(\\\\*)(\\\\s*))|(\\\\s+))(\\\\w+)(\\\\s*)(\\\\()\",next:\"function_arguments\"},{token:\"punctuation.operator\",regex:/[.](?![.])/},{token:\"support.function\",regex:\"prototype\"},{token:\"support.function\",regex:/(s(?:h(?:ift|ow(?:Mod(?:elessDialog|alDialog)|Help))|croll(?:X|By(?:Pages|Lines)?|Y|To)?|t(?:op|rike)|i(?:n|zeToContent|debar|gnText)|ort|u(?:p|b(?:str(?:ing)?)?)|pli(?:ce|t)|e(?:nd|t(?:Re(?:sizable|questHeader)|M(?:i(?:nutes|lliseconds)|onth)|Seconds|Ho(?:tKeys|urs)|Year|Cursor|Time(?:out)?|Interval|ZOptions|Date|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|h(?:ome|andleEvent)|navigate|c(?:har(?:CodeAt|At)|o(?:s|n(?:cat|textual|firm)|mpile)|eil|lear(?:Timeout|Interval)?|a(?:ptureEvents|ll)|reate(?:StyleSheet|Popup|EventObject))|t(?:o(?:GMTString|S(?:tring|ource)|U(?:TCString|pperCase)|Lo(?:caleString|werCase))|est|a(?:n|int(?:Enabled)?))|i(?:s(?:NaN|Finite)|ndexOf|talics)|d(?:isableExternalCapture|ump|etachEvent)|u(?:n(?:shift|taint|escape|watch)|pdateCommands)|j(?:oin|avaEnabled)|p(?:o(?:p|w)|ush|lugins.refresh|a(?:ddings|rse(?:Int|Float)?)|r(?:int|ompt|eference))|e(?:scape|nableExternalCapture|val|lementFromPoint|x(?:p|ec(?:Script|Command)?))|valueOf|UTC|queryCommand(?:State|Indeterm|Enabled|Value)|f(?:i(?:nd|lter|le(?:ModifiedDate|Size|CreatedDate|UpdatedDate)|xed)|o(?:nt(?:size|color)|rward|rEach)|loor|romCharCode)|watch|l(?:ink|o(?:ad|g)|astIndexOf)|a(?:sin|nchor|cos|t(?:tachEvent|ob|an(?:2)?)|pply|lert|b(?:s|ort))|r(?:ou(?:nd|teEvents)|e(?:size(?:By|To)|calc|turnValue|place|verse|l(?:oad|ease(?:Capture|Events)))|andom)|g(?:o|et(?:ResponseHeader|M(?:i(?:nutes|lliseconds)|onth)|Se(?:conds|lection)|Hours|Year|Time(?:zoneOffset)?|Da(?:y|te)|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Da(?:y|te)|FullYear)|FullYear|A(?:ttention|llResponseHeaders)))|m(?:in|ove(?:B(?:y|elow)|To(?:Absolute)?|Above)|ergeAttributes|a(?:tch|rgins|x))|b(?:toa|ig|o(?:ld|rderWidths)|link|ack))\\b(?=\\()/},{token:\"support.function.dom\",regex:/(s(?:ub(?:stringData|mit)|plitText|e(?:t(?:NamedItem|Attribute(?:Node)?)|lect))|has(?:ChildNodes|Feature)|namedItem|c(?:l(?:ick|o(?:se|neNode))|reate(?:C(?:omment|DATASection|aption)|T(?:Head|extNode|Foot)|DocumentFragment|ProcessingInstruction|E(?:ntityReference|lement)|Attribute))|tabIndex|i(?:nsert(?:Row|Before|Cell|Data)|tem)|open|delete(?:Row|C(?:ell|aption)|T(?:Head|Foot)|Data)|focus|write(?:ln)?|a(?:dd|ppend(?:Child|Data))|re(?:set|place(?:Child|Data)|move(?:NamedItem|Child|Attribute(?:Node)?)?)|get(?:NamedItem|Element(?:sBy(?:Name|TagName|ClassName)|ById)|Attribute(?:Node)?)|blur)\\b(?=\\()/},{token:\"support.constant\",regex:/(s(?:ystemLanguage|cr(?:ipts|ollbars|een(?:X|Y|Top|Left))|t(?:yle(?:Sheets)?|atus(?:Text|bar)?)|ibling(?:Below|Above)|ource|uffixes|e(?:curity(?:Policy)?|l(?:ection|f)))|h(?:istory|ost(?:name)?|as(?:h|Focus))|y|X(?:MLDocument|SLDocument)|n(?:ext|ame(?:space(?:s|URI)|Prop))|M(?:IN_VALUE|AX_VALUE)|c(?:haracterSet|o(?:n(?:structor|trollers)|okieEnabled|lorDepth|mp(?:onents|lete))|urrent|puClass|l(?:i(?:p(?:boardData)?|entInformation)|osed|asses)|alle(?:e|r)|rypto)|t(?:o(?:olbar|p)|ext(?:Transform|Indent|Decoration|Align)|ags)|SQRT(?:1_2|2)|i(?:n(?:ner(?:Height|Width)|put)|ds|gnoreCase)|zIndex|o(?:scpu|n(?:readystatechange|Line)|uter(?:Height|Width)|p(?:sProfile|ener)|ffscreenBuffering)|NEGATIVE_INFINITY|d(?:i(?:splay|alog(?:Height|Top|Width|Left|Arguments)|rectories)|e(?:scription|fault(?:Status|Ch(?:ecked|arset)|View)))|u(?:ser(?:Profile|Language|Agent)|n(?:iqueID|defined)|pdateInterval)|_content|p(?:ixelDepth|ort|ersonalbar|kcs11|l(?:ugins|atform)|a(?:thname|dding(?:Right|Bottom|Top|Left)|rent(?:Window|Layer)?|ge(?:X(?:Offset)?|Y(?:Offset)?))|r(?:o(?:to(?:col|type)|duct(?:Sub)?|mpter)|e(?:vious|fix)))|e(?:n(?:coding|abledPlugin)|x(?:ternal|pando)|mbeds)|v(?:isibility|endor(?:Sub)?|Linkcolor)|URLUnencoded|P(?:I|OSITIVE_INFINITY)|f(?:ilename|o(?:nt(?:Size|Family|Weight)|rmName)|rame(?:s|Element)|gColor)|E|whiteSpace|l(?:i(?:stStyleType|n(?:eHeight|kColor))|o(?:ca(?:tion(?:bar)?|lName)|wsrc)|e(?:ngth|ft(?:Context)?)|a(?:st(?:M(?:odified|atch)|Index|Paren)|yer(?:s|X)|nguage))|a(?:pp(?:MinorVersion|Name|Co(?:deName|re)|Version)|vail(?:Height|Top|Width|Left)|ll|r(?:ity|guments)|Linkcolor|bove)|r(?:ight(?:Context)?|e(?:sponse(?:XML|Text)|adyState))|global|x|m(?:imeTypes|ultiline|enubar|argin(?:Right|Bottom|Top|Left))|L(?:N(?:10|2)|OG(?:10E|2E))|b(?:o(?:ttom|rder(?:Width|RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth))|ufferDepth|elow|ackground(?:Color|Image)))\\b/},{token:\"identifier\",regex:i},{regex:\"\",token:\"empty\",next:\"no_regex\"}],start:[o.getStartRule(\"doc-start\"),g(\"start\"),{token:\"string.regexp\",regex:\"\\\\/\",next:\"regex\"},{token:\"text\",regex:\"\\\\s+|^$\",next:\"start\"},{token:\"empty\",regex:\"\",next:\"no_regex\"}],regex:[{token:\"regexp.keyword.operator\",regex:\"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"},{token:\"string.regexp\",regex:\"/[sxngimy]*\",next:\"no_regex\"},{token:\"invalid\",regex:/\\{\\d+\\b,?\\d*\\}[+*]|[+*$^?][+*]|[$^][?]|\\?{3,}/},{token:\"constant.language.escape\",regex:/\\(\\?[:=!]|\\)|\\{\\d+\\b,?\\d*\\}|[+*]\\?|[()$^+*?.]/},{token:\"constant.language.delimiter\",regex:/\\|/},{token:\"constant.language.escape\",regex:/\\[\\^?/,next:\"regex_character_class\"},{token:\"empty\",regex:\"$\",next:\"no_regex\"},{defaultToken:\"string.regexp\"}],regex_character_class:[{token:\"regexp.charclass.keyword.operator\",regex:\"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"},{token:\"constant.language.escape\",regex:\"]\",next:\"regex\"},{token:\"constant.language.escape\",regex:\"-\"},{token:\"empty\",regex:\"$\",next:\"no_regex\"},{defaultToken:\"string.regexp.charachterclass\"}],default_parameter:[{token:\"string\",regex:\"'(?=.)\",push:[{token:\"string\",regex:\"'|$\",next:\"pop\"},{include:\"qstring\"}]},{token:\"string\",regex:'\"(?=.)',push:[{token:\"string\",regex:'\"|$',next:\"pop\"},{include:\"qqstring\"}]},{token:\"constant.language\",regex:\"null|Infinity|NaN|undefined\"},{token:\"constant.numeric\",regex:/0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/},{token:\"constant.numeric\",regex:/(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/},{token:\"punctuation.operator\",regex:\",\",next:\"function_arguments\"},{token:\"text\",regex:\"\\\\s+\"},{token:\"punctuation.operator\",regex:\"$\"},{token:\"empty\",regex:\"\",next:\"no_regex\"}],function_arguments:[g(\"function_arguments\"),{token:\"variable.parameter\",regex:i},{token:\"punctuation.operator\",regex:\",\"},{token:\"text\",regex:\"\\\\s+\"},{token:\"punctuation.operator\",regex:\"$\"},{token:\"empty\",regex:\"\",next:\"no_regex\"}],qqstring:[{token:\"constant.language.escape\",regex:r},{token:\"string\",regex:\"\\\\\\\\$\",consumeLineEnd:!0},{token:\"string\",regex:'\"|$',next:\"no_regex\"},{defaultToken:\"string\"}],qstring:[{token:\"constant.language.escape\",regex:r},{token:\"string\",regex:\"\\\\\\\\$\",consumeLineEnd:!0},{token:\"string\",regex:\"'|$\",next:\"no_regex\"},{defaultToken:\"string\"}]},e&&e.noES6||(this.$rules.no_regex.unshift({regex:\"[{}]\",onMatch:function(e,t,n){if(this.next=\"{\"==e?this.nextState:\"\",\"{\"==e&&n.length)n.unshift(\"start\",t);else if(\"}\"==e&&n.length&&(n.shift(),this.next=n.shift(),-1!=this.next.indexOf(\"string\")||-1!=this.next.indexOf(\"jsx\")))return\"paren.quasi.end\";return\"{\"==e?\"paren.lparen\":\"paren.rparen\"},nextState:\"start\"},{token:\"string.quasi.start\",regex:/`/,push:[{token:\"constant.language.escape\",regex:r},{token:\"paren.quasi.start\",regex:/\\${/,push:\"start\"},{token:\"string.quasi.end\",regex:/`/,next:\"pop\"},{defaultToken:\"string.quasi\"}]},{token:[\"variable.parameter\",\"text\"],regex:\"(\"+i+\")(\\\\s*)(?=\\\\=>)\"},{token:\"paren.lparen\",regex:\"(\\\\()(?=[^\\\\(]+\\\\s*=>)\",next:\"function_arguments\"},{token:\"variable.language\",regex:\"(?:(?:(?:Weak)?(?:Set|Map))|Promise)\\\\b\"}),this.$rules.function_arguments.unshift({token:\"keyword.operator\",regex:\"=\",next:\"default_parameter\"},{token:\"keyword.operator\",regex:\"\\\\.{3}\"}),this.$rules.property.unshift({token:\"support.function\",regex:\"(findIndex|repeat|startsWith|endsWith|includes|isSafeInteger|trunc|cbrt|log2|log10|sign|then|catch|finally|resolve|reject|race|any|all|allSettled|keys|entries|isInteger)\\\\b(?=\\\\()\"},{token:\"constant.language\",regex:\"(?:MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|EPSILON)\\\\b\"}),e&&0==e.jsx||l.call(this)),this.embedRules(o,\"doc-\",[o.getEndRule(\"no_regex\")]),this.normalizeRules()};function l(){var e=i.replace(\"\\\\d\",\"\\\\d\\\\-\"),t={onMatch:function(e,t,n){var r=\"/\"==e.charAt(1)?2:1;return 1==r?(t!=this.nextState?n.unshift(this.next,this.nextState,0):n.unshift(this.next),n[2]++):2==r&&t==this.nextState&&(n[1]--,(!n[1]||n[1]<0)&&(n.shift(),n.shift())),[{type:\"meta.tag.punctuation.\"+(1==r?\"\":\"end-\")+\"tag-open.xml\",value:e.slice(0,r)},{type:\"meta.tag.tag-name.xml\",value:e.substr(r)}]},regex:\"</?(?:\"+e+\"|(?=>))\",next:\"jsxAttributes\",nextState:\"jsx\"};this.$rules.start.unshift(t);var n={regex:\"{\",token:\"paren.quasi.start\",push:\"start\"};this.$rules.jsx=[n,t,{include:\"reference\"},{defaultToken:\"string.xml\"}],this.$rules.jsxAttributes=[{token:\"meta.tag.punctuation.tag-close.xml\",regex:\"/?>\",onMatch:function(e,t,n){return t==n[0]&&n.shift(),2==e.length&&(n[0]==this.nextState&&n[1]--,(!n[1]||n[1]<0)&&n.splice(0,2)),this.next=n[0]||\"start\",[{type:this.token,value:e}]},nextState:\"jsx\"},n,g(\"jsxAttributes\"),{token:\"entity.other.attribute-name.xml\",regex:e},{token:\"keyword.operator.attribute-equals.xml\",regex:\"=\"},{token:\"text.tag-whitespace.xml\",regex:\"\\\\s+\"},{token:\"string.attribute-value.xml\",regex:\"'\",stateName:\"jsx_attr_q\",push:[{token:\"string.attribute-value.xml\",regex:\"'\",next:\"pop\"},{include:\"reference\"},{defaultToken:\"string.attribute-value.xml\"}]},{token:\"string.attribute-value.xml\",regex:'\"',stateName:\"jsx_attr_qq\",push:[{token:\"string.attribute-value.xml\",regex:'\"',next:\"pop\"},{include:\"reference\"},{defaultToken:\"string.attribute-value.xml\"}]},t],this.$rules.reference=[{token:\"constant.language.escape.reference.xml\",regex:\"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"}]}function g(e){return[{token:\"comment\",regex:/\\/\\*/,next:[o.getTagRule(),{token:\"comment\",regex:\"\\\\*\\\\/\",next:e||\"pop\"},{defaultToken:\"comment\",caseInsensitive:!0}]},{token:\"comment\",regex:\"\\\\/\\\\/\",next:[o.getTagRule(),{token:\"comment\",regex:\"$|^\",next:e||\"pop\"},{defaultToken:\"comment\",caseInsensitive:!0}]}]}r.inherits(s,a),t.JavaScriptHighlightRules=s})),ace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"],(function(e,t,n){\"use strict\";var r=e(\"../range\").Range,o=function(){};(function(){this.checkOutdent=function(e,t){return!!/^\\s+$/.test(e)&&/^\\s*\\}/.test(t)},this.autoOutdent=function(e,t){var n=e.getLine(t).match(/^(\\s*\\})/);if(!n)return 0;var o=n[1].length,a=e.findMatchingBracket({row:t,column:o});if(!a||a.row==t)return 0;var i=this.$getIndent(e.getLine(a.row));e.replace(new r(t,0,t,o-1),i)},this.$getIndent=function(e){return e.match(/^\\s*/)[0]}}).call(o.prototype),t.MatchingBraceOutdent=o})),ace.define(\"ace/mode/behaviour/javascript\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/token_iterator\",\"ace/mode/behaviour/cstyle\",\"ace/mode/behaviour/xml\"],(function(e,t,n){\"use strict\";var r=e(\"../../lib/oop\"),o=e(\"../../token_iterator\").TokenIterator,a=e(\"../behaviour/cstyle\").CstyleBehaviour,i=e(\"../behaviour/xml\").XmlBehaviour,s=function(){var e=new i({closeCurlyBraces:!0}).getBehaviours();this.addBehaviours(e),this.inherit(a),this.add(\"autoclosing-fragment\",\"insertion\",(function(e,t,n,r,a){if(\">\"==a){var i=n.getSelectionRange().start,s=new o(r,i.row,i.column),l=s.getCurrentToken()||s.stepBackward();if(!l)return;if(\"<\"==l.value)return{text:\"></>\",selection:[1,1]}}}))};r.inherits(s,a),t.JavaScriptBehaviour=s})),ace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"],(function(e,t,n){\"use strict\";var r=e(\"../../lib/oop\"),o=e(\"../../range\").Range,a=e(\"./fold_mode\").FoldMode,i=t.FoldMode=function(e){e&&(this.foldingStartMarker=new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/,\"|\"+e.start)),this.foldingStopMarker=new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/,\"|\"+e.end)))};r.inherits(i,a),function(){this.foldingStartMarker=/([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/,this.foldingStopMarker=/^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/,this.singleLineBlockCommentRe=/^\\s*(\\/\\*).*\\*\\/\\s*$/,this.tripleStarBlockCommentRe=/^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/,this.startRegionRe=/^\\s*(\\/\\*|\\/\\/)#?region\\b/,this._getFoldWidgetBase=this.getFoldWidget,this.getFoldWidget=function(e,t,n){var r=e.getLine(n);if(this.singleLineBlockCommentRe.test(r)&&!this.startRegionRe.test(r)&&!this.tripleStarBlockCommentRe.test(r))return\"\";var o=this._getFoldWidgetBase(e,t,n);return!o&&this.startRegionRe.test(r)?\"start\":o},this.getFoldWidgetRange=function(e,t,n,r){var o,a=e.getLine(n);if(this.startRegionRe.test(a))return this.getCommentRegionBlock(e,a,n);if(o=a.match(this.foldingStartMarker)){var i=o.index;if(o[1])return this.openingBracketBlock(e,o[1],n,i);var s=e.getCommentFoldRange(n,i+o[0].length,1);return s&&!s.isMultiLine()&&(r?s=this.getSectionRange(e,n):\"all\"!=t&&(s=null)),s}if(\"markbegin\"!==t&&(o=a.match(this.foldingStopMarker))){i=o.index+o[0].length;return o[1]?this.closingBracketBlock(e,o[1],n,i):e.getCommentFoldRange(n,i,-1)}},this.getSectionRange=function(e,t){for(var n=e.getLine(t),r=n.search(/\\S/),a=t,i=n.length,s=t+=1,l=e.getLength();++t<l;){var g=(n=e.getLine(t)).search(/\\S/);if(-1!==g){if(r>g)break;var u=this.getFoldWidgetRange(e,\"all\",t);if(u){if(u.start.row<=a)break;if(u.isMultiLine())t=u.end.row;else if(r==g)break}s=t}}return new o(a,i,s,e.getLine(s).length)},this.getCommentRegionBlock=function(e,t,n){for(var r=t.search(/\\s*$/),a=e.getLength(),i=n,s=/^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/,l=1;++n<a;){t=e.getLine(n);var g=s.exec(t);if(g&&(g[1]?l--:l++,!l))break}if(n>i)return new o(i,r,n,t.length)}}.call(i.prototype)})),ace.define(\"ace/mode/folding/javascript\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/xml\",\"ace/mode/folding/cstyle\"],(function(e,t,n){\"use strict\";var r=e(\"../../lib/oop\"),o=e(\"./xml\").FoldMode,a=e(\"./cstyle\").FoldMode,i=t.FoldMode=function(e){e&&(this.foldingStartMarker=new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/,\"|\"+e.start)),this.foldingStopMarker=new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/,\"|\"+e.end))),this.xmlFoldMode=new o};r.inherits(i,a),function(){this.getFoldWidgetRangeBase=this.getFoldWidgetRange,this.getFoldWidgetBase=this.getFoldWidget,this.getFoldWidget=function(e,t,n){var r=this.getFoldWidgetBase(e,t,n);return r||this.xmlFoldMode.getFoldWidget(e,t,n)},this.getFoldWidgetRange=function(e,t,n,r){var o=this.getFoldWidgetRangeBase(e,t,n,r);return o||this.xmlFoldMode.getFoldWidgetRange(e,t,n)}}.call(i.prototype)})),ace.define(\"ace/mode/javascript\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/javascript_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/worker/worker_client\",\"ace/mode/behaviour/javascript\",\"ace/mode/folding/javascript\"],(function(e,t,n){\"use strict\";var r=e(\"../lib/oop\"),o=e(\"./text\").Mode,a=e(\"./javascript_highlight_rules\").JavaScriptHighlightRules,i=e(\"./matching_brace_outdent\").MatchingBraceOutdent,s=e(\"../worker/worker_client\").WorkerClient,l=e(\"./behaviour/javascript\").JavaScriptBehaviour,g=e(\"./folding/javascript\").FoldMode,u=function(){this.HighlightRules=a,this.$outdent=new i,this.$behaviour=new l,this.foldingRules=new g};r.inherits(u,o),function(){this.lineCommentStart=\"//\",this.blockComment={start:\"/*\",end:\"*/\"},this.$quotes={'\"':'\"',\"'\":\"'\",\"`\":\"`\"},this.$pairQuotesAfter={\"`\":/\\w/},this.getNextLineIndent=function(e,t,n){var r=this.$getIndent(t),o=this.getTokenizer().getLineTokens(t,e),a=o.tokens,i=o.state;if(a.length&&\"comment\"==a[a.length-1].type)return r;if(\"start\"==e||\"no_regex\"==e)(s=t.match(/^.*(?:\\bcase\\b.*:|[\\{\\(\\[])\\s*$/))&&(r+=n);else if(\"doc-start\"==e){if(\"start\"==i||\"no_regex\"==i)return\"\";var s;(s=t.match(/^\\s*(\\/?)\\*/))&&(s[1]&&(r+=\" \"),r+=\"* \")}return r},this.checkOutdent=function(e,t,n){return this.$outdent.checkOutdent(t,n)},this.autoOutdent=function(e,t,n){this.$outdent.autoOutdent(t,n)},this.createWorker=function(e){var t=new s([\"ace\"],\"ace/mode/javascript_worker\",\"JavaScriptWorker\");return t.attachToDocument(e.getDocument()),t.on(\"annotate\",(function(t){e.setAnnotations(t.data)})),t.on(\"terminate\",(function(){e.clearAnnotations()})),t},this.$id=\"ace/mode/javascript\",this.snippetFileId=\"ace/snippets/javascript\"}.call(u.prototype),t.Mode=u})),ace.define(\"ace/mode/svg_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/javascript_highlight_rules\",\"ace/mode/xml_highlight_rules\"],(function(e,t,n){\"use strict\";var r=e(\"../lib/oop\"),o=e(\"./javascript_highlight_rules\").JavaScriptHighlightRules,a=e(\"./xml_highlight_rules\").XmlHighlightRules,i=function(){a.call(this),this.embedTagRules(o,\"js-\",\"script\"),this.normalizeRules()};r.inherits(i,a),t.SvgHighlightRules=i})),ace.define(\"ace/mode/folding/mixed\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\"],(function(e,t,n){\"use strict\";var r=e(\"../../lib/oop\"),o=e(\"./fold_mode\").FoldMode,a=t.FoldMode=function(e,t){this.defaultMode=e,this.subModes=t};r.inherits(a,o),function(){this.$getMode=function(e){for(var t in\"string\"!=typeof e&&(e=e[0]),this.subModes)if(0===e.indexOf(t))return this.subModes[t];return null},this.$tryMode=function(e,t,n,r){var o=this.$getMode(e);return o?o.getFoldWidget(t,n,r):\"\"},this.getFoldWidget=function(e,t,n){return this.$tryMode(e.getState(n-1),e,t,n)||this.$tryMode(e.getState(n),e,t,n)||this.defaultMode.getFoldWidget(e,t,n)},this.getFoldWidgetRange=function(e,t,n){var r=this.$getMode(e.getState(n-1));return r&&r.getFoldWidget(e,t,n)||(r=this.$getMode(e.getState(n))),r&&r.getFoldWidget(e,t,n)||(r=this.defaultMode),r.getFoldWidgetRange(e,t,n)}}.call(a.prototype)})),ace.define(\"ace/mode/svg\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/xml\",\"ace/mode/javascript\",\"ace/mode/svg_highlight_rules\",\"ace/mode/folding/mixed\",\"ace/mode/folding/xml\",\"ace/mode/folding/cstyle\"],(function(e,t,n){\"use strict\";var r=e(\"../lib/oop\"),o=e(\"./xml\").Mode,a=e(\"./javascript\").Mode,i=e(\"./svg_highlight_rules\").SvgHighlightRules,s=e(\"./folding/mixed\").FoldMode,l=e(\"./folding/xml\").FoldMode,g=e(\"./folding/cstyle\").FoldMode,u=function(){o.call(this),this.HighlightRules=i,this.createModeDelegates({\"js-\":a}),this.foldingRules=new s(new l,{\"js-\":new g})};r.inherits(u,o),function(){this.getNextLineIndent=function(e,t,n){return this.$getIndent(t)},this.$id=\"ace/mode/svg\"}.call(u.prototype),t.Mode=u})),ace.require([\"ace/mode/svg\"],(function(e){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=e)}));","name":"2e84aa7381ab6f007afeeee63195fff6.js","input":"ace.define(\"ace/mode/xml_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var XmlHighlightRules = function (normalize) {\n    var tagRegex = \"[_:a-zA-Z\\xc0-\\uffff][-_:.a-zA-Z0-9\\xc0-\\uffff]*\";\n    this.$rules = {\n      start: [{\n        token: \"string.cdata.xml\",\n        regex: \"<\\\\!\\\\[CDATA\\\\[\",\n        next: \"cdata\"\n      }, {\n        token: [\"punctuation.instruction.xml\", \"keyword.instruction.xml\"],\n        regex: \"(<\\\\?)(\" + tagRegex + \")\",\n        next: \"processing_instruction\"\n      }, {\n        token: \"comment.start.xml\",\n        regex: \"<\\\\!--\",\n        next: \"comment\"\n      }, {\n        token: [\"xml-pe.doctype.xml\", \"xml-pe.doctype.xml\"],\n        regex: \"(<\\\\!)(DOCTYPE)(?=[\\\\s])\",\n        next: \"doctype\",\n        caseInsensitive: true\n      }, {\n        include: \"tag\"\n      }, {\n        token: \"text.end-tag-open.xml\",\n        regex: \"</\"\n      }, {\n        token: \"text.tag-open.xml\",\n        regex: \"<\"\n      }, {\n        include: \"reference\"\n      }, {\n        defaultToken: \"text.xml\"\n      }],\n      processing_instruction: [{\n        token: \"entity.other.attribute-name.decl-attribute-name.xml\",\n        regex: tagRegex\n      }, {\n        token: \"keyword.operator.decl-attribute-equals.xml\",\n        regex: \"=\"\n      }, {\n        include: \"whitespace\"\n      }, {\n        include: \"string\"\n      }, {\n        token: \"punctuation.xml-decl.xml\",\n        regex: \"\\\\?>\",\n        next: \"start\"\n      }],\n      doctype: [{\n        include: \"whitespace\"\n      }, {\n        include: \"string\"\n      }, {\n        token: \"xml-pe.doctype.xml\",\n        regex: \">\",\n        next: \"start\"\n      }, {\n        token: \"xml-pe.xml\",\n        regex: \"[-_a-zA-Z0-9:]+\"\n      }, {\n        token: \"punctuation.int-subset\",\n        regex: \"\\\\[\",\n        push: \"int_subset\"\n      }],\n      int_subset: [{\n        token: \"text.xml\",\n        regex: \"\\\\s+\"\n      }, {\n        token: \"punctuation.int-subset.xml\",\n        regex: \"]\",\n        next: \"pop\"\n      }, {\n        token: [\"punctuation.markup-decl.xml\", \"keyword.markup-decl.xml\"],\n        regex: \"(<\\\\!)(\" + tagRegex + \")\",\n        push: [{\n          token: \"text\",\n          regex: \"\\\\s+\"\n        }, {\n          token: \"punctuation.markup-decl.xml\",\n          regex: \">\",\n          next: \"pop\"\n        }, {\n          include: \"string\"\n        }]\n      }],\n      cdata: [{\n        token: \"string.cdata.xml\",\n        regex: \"\\\\]\\\\]>\",\n        next: \"start\"\n      }, {\n        token: \"text.xml\",\n        regex: \"\\\\s+\"\n      }, {\n        token: \"text.xml\",\n        regex: \"(?:[^\\\\]]|\\\\](?!\\\\]>))+\"\n      }],\n      comment: [{\n        token: \"comment.end.xml\",\n        regex: \"-->\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment.xml\"\n      }],\n      reference: [{\n        token: \"constant.language.escape.reference.xml\",\n        regex: \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n      }],\n      attr_reference: [{\n        token: \"constant.language.escape.reference.attribute-value.xml\",\n        regex: \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n      }],\n      tag: [{\n        token: [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.tag-name.xml\"],\n        regex: \"(?:(<)|(</))((?:\" + tagRegex + \":)?\" + tagRegex + \")\",\n        next: [{\n          include: \"attributes\"\n        }, {\n          token: \"meta.tag.punctuation.tag-close.xml\",\n          regex: \"/?>\",\n          next: \"start\"\n        }]\n      }],\n      tag_whitespace: [{\n        token: \"text.tag-whitespace.xml\",\n        regex: \"\\\\s+\"\n      }],\n      whitespace: [{\n        token: \"text.whitespace.xml\",\n        regex: \"\\\\s+\"\n      }],\n      string: [{\n        token: \"string.xml\",\n        regex: \"'\",\n        push: [{\n          token: \"string.xml\",\n          regex: \"'\",\n          next: \"pop\"\n        }, {\n          defaultToken: \"string.xml\"\n        }]\n      }, {\n        token: \"string.xml\",\n        regex: '\"',\n        push: [{\n          token: \"string.xml\",\n          regex: '\"',\n          next: \"pop\"\n        }, {\n          defaultToken: \"string.xml\"\n        }]\n      }],\n      attributes: [{\n        token: \"entity.other.attribute-name.xml\",\n        regex: tagRegex\n      }, {\n        token: \"keyword.operator.attribute-equals.xml\",\n        regex: \"=\"\n      }, {\n        include: \"tag_whitespace\"\n      }, {\n        include: \"attribute_value\"\n      }],\n      attribute_value: [{\n        token: \"string.attribute-value.xml\",\n        regex: \"'\",\n        push: [{\n          token: \"string.attribute-value.xml\",\n          regex: \"'\",\n          next: \"pop\"\n        }, {\n          include: \"attr_reference\"\n        }, {\n          defaultToken: \"string.attribute-value.xml\"\n        }]\n      }, {\n        token: \"string.attribute-value.xml\",\n        regex: '\"',\n        push: [{\n          token: \"string.attribute-value.xml\",\n          regex: '\"',\n          next: \"pop\"\n        }, {\n          include: \"attr_reference\"\n        }, {\n          defaultToken: \"string.attribute-value.xml\"\n        }]\n      }]\n    };\n    if (this.constructor === XmlHighlightRules) this.normalizeRules();\n  };\n  (function () {\n    this.embedTagRules = function (HighlightRules, prefix, tag) {\n      this.$rules.tag.unshift({\n        token: [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n        regex: \"(<)(\" + tag + \"(?=\\\\s|>|$))\",\n        next: [{\n          include: \"attributes\"\n        }, {\n          token: \"meta.tag.punctuation.tag-close.xml\",\n          regex: \"/?>\",\n          next: prefix + \"start\"\n        }]\n      });\n      this.$rules[tag + \"-end\"] = [{\n        include: \"attributes\"\n      }, {\n        token: \"meta.tag.punctuation.tag-close.xml\",\n        regex: \"/?>\",\n        next: \"start\",\n        onMatch: function (value, currentState, stack) {\n          stack.splice(0);\n          return this.token;\n        }\n      }];\n      this.embedRules(HighlightRules, prefix, [{\n        token: [\"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n        regex: \"(</)(\" + tag + \"(?=\\\\s|>|$))\",\n        next: tag + \"-end\"\n      }, {\n        token: \"string.cdata.xml\",\n        regex: \"<\\\\!\\\\[CDATA\\\\[\"\n      }, {\n        token: \"string.cdata.xml\",\n        regex: \"\\\\]\\\\]>\"\n      }]);\n    };\n  }).call(TextHighlightRules.prototype);\n  oop.inherits(XmlHighlightRules, TextHighlightRules);\n  exports.XmlHighlightRules = XmlHighlightRules;\n});\nace.define(\"ace/mode/behaviour/xml\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/behaviour\", \"ace/token_iterator\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Behaviour = require(\"../behaviour\").Behaviour;\n  var TokenIterator = require(\"../../token_iterator\").TokenIterator;\n  function is(token, type) {\n    return token && token.type.lastIndexOf(type + \".xml\") > -1;\n  }\n  var XmlBehaviour = function () {\n    this.add(\"string_dquotes\", \"insertion\", function (state, action, editor, session, text) {\n      if (text == '\"' || text == \"'\") {\n        var quote = text;\n        var selected = session.doc.getTextRange(editor.getSelectionRange());\n        if (selected !== \"\" && selected !== \"'\" && selected != '\"' && editor.getWrapBehavioursEnabled()) {\n          return {\n            text: quote + selected + quote,\n            selection: false\n          };\n        }\n        var cursor = editor.getCursorPosition();\n        var line = session.doc.getLine(cursor.row);\n        var rightChar = line.substring(cursor.column, cursor.column + 1);\n        var iterator = new TokenIterator(session, cursor.row, cursor.column);\n        var token = iterator.getCurrentToken();\n        if (rightChar == quote && (is(token, \"attribute-value\") || is(token, \"string\"))) {\n          return {\n            text: \"\",\n            selection: [1, 1]\n          };\n        }\n        if (!token) token = iterator.stepBackward();\n        if (!token) return;\n        while (is(token, \"tag-whitespace\") || is(token, \"whitespace\")) {\n          token = iterator.stepBackward();\n        }\n        var rightSpace = !rightChar || rightChar.match(/\\s/);\n        if (is(token, \"attribute-equals\") && (rightSpace || rightChar == '>') || is(token, \"decl-attribute-equals\") && (rightSpace || rightChar == '?')) {\n          return {\n            text: quote + quote,\n            selection: [1, 1]\n          };\n        }\n      }\n    });\n    this.add(\"string_dquotes\", \"deletion\", function (state, action, editor, session, range) {\n      var selected = session.doc.getTextRange(range);\n      if (!range.isMultiLine() && (selected == '\"' || selected == \"'\")) {\n        var line = session.doc.getLine(range.start.row);\n        var rightChar = line.substring(range.start.column + 1, range.start.column + 2);\n        if (rightChar == selected) {\n          range.end.column++;\n          return range;\n        }\n      }\n    });\n    this.add(\"autoclosing\", \"insertion\", function (state, action, editor, session, text) {\n      if (text == '>') {\n        var position = editor.getSelectionRange().start;\n        var iterator = new TokenIterator(session, position.row, position.column);\n        var token = iterator.getCurrentToken() || iterator.stepBackward();\n        if (!token || !(is(token, \"tag-name\") || is(token, \"tag-whitespace\") || is(token, \"attribute-name\") || is(token, \"attribute-equals\") || is(token, \"attribute-value\"))) return;\n        if (is(token, \"reference.attribute-value\")) return;\n        if (is(token, \"attribute-value\")) {\n          var tokenEndColumn = iterator.getCurrentTokenColumn() + token.value.length;\n          if (position.column < tokenEndColumn) return;\n          if (position.column == tokenEndColumn) {\n            var nextToken = iterator.stepForward();\n            if (nextToken && is(nextToken, \"attribute-value\")) return;\n            iterator.stepBackward();\n          }\n        }\n        if (/^\\s*>/.test(session.getLine(position.row).slice(position.column))) return;\n        while (!is(token, \"tag-name\")) {\n          token = iterator.stepBackward();\n          if (token.value == \"<\") {\n            token = iterator.stepForward();\n            break;\n          }\n        }\n        var tokenRow = iterator.getCurrentTokenRow();\n        var tokenColumn = iterator.getCurrentTokenColumn();\n        if (is(iterator.stepBackward(), \"end-tag-open\")) return;\n        var element = token.value;\n        if (tokenRow == position.row) element = element.substring(0, position.column - tokenColumn);\n        if (this.voidElements && this.voidElements.hasOwnProperty(element.toLowerCase())) return;\n        return {\n          text: \">\" + \"</\" + element + \">\",\n          selection: [1, 1]\n        };\n      }\n    });\n    this.add(\"autoindent\", \"insertion\", function (state, action, editor, session, text) {\n      if (text == \"\\n\") {\n        var cursor = editor.getCursorPosition();\n        var line = session.getLine(cursor.row);\n        var iterator = new TokenIterator(session, cursor.row, cursor.column);\n        var token = iterator.getCurrentToken();\n        if (is(token, \"\") && token.type.indexOf(\"tag-close\") !== -1) {\n          if (token.value == \"/>\") return;\n          while (token && token.type.indexOf(\"tag-name\") === -1) {\n            token = iterator.stepBackward();\n          }\n          if (!token) {\n            return;\n          }\n          var tag = token.value;\n          var row = iterator.getCurrentTokenRow();\n          token = iterator.stepBackward();\n          if (!token || token.type.indexOf(\"end-tag\") !== -1) {\n            return;\n          }\n          if (this.voidElements && !this.voidElements[tag] || !this.voidElements) {\n            var nextToken = session.getTokenAt(cursor.row, cursor.column + 1);\n            var line = session.getLine(row);\n            var nextIndent = this.$getIndent(line);\n            var indent = nextIndent + session.getTabString();\n            if (nextToken && nextToken.value === \"</\") {\n              return {\n                text: \"\\n\" + indent + \"\\n\" + nextIndent,\n                selection: [1, indent.length, 1, indent.length]\n              };\n            } else {\n              return {\n                text: \"\\n\" + indent\n              };\n            }\n          }\n        }\n      }\n    });\n  };\n  oop.inherits(XmlBehaviour, Behaviour);\n  exports.XmlBehaviour = XmlBehaviour;\n});\nace.define(\"ace/mode/folding/xml\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Range = require(\"../../range\").Range;\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function (voidElements, optionalEndTags) {\n    BaseFoldMode.call(this);\n    this.voidElements = voidElements || {};\n    this.optionalEndTags = oop.mixin({}, this.voidElements);\n    if (optionalEndTags) oop.mixin(this.optionalEndTags, optionalEndTags);\n  };\n  oop.inherits(FoldMode, BaseFoldMode);\n  var Tag = function () {\n    this.tagName = \"\";\n    this.closing = false;\n    this.selfClosing = false;\n    this.start = {\n      row: 0,\n      column: 0\n    };\n    this.end = {\n      row: 0,\n      column: 0\n    };\n  };\n  function is(token, type) {\n    return token.type.lastIndexOf(type + \".xml\") > -1;\n  }\n  (function () {\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var tag = this._getFirstTagInLine(session, row);\n      if (!tag) return this.getCommentFoldWidget(session, row);\n      if (tag.closing || !tag.tagName && tag.selfClosing) return foldStyle === \"markbeginend\" ? \"end\" : \"\";\n      if (!tag.tagName || tag.selfClosing || this.voidElements.hasOwnProperty(tag.tagName.toLowerCase())) return \"\";\n      if (this._findEndTagInLine(session, row, tag.tagName, tag.end.column)) return \"\";\n      return \"start\";\n    };\n    this.getCommentFoldWidget = function (session, row) {\n      if (/comment/.test(session.getState(row)) && /<!-/.test(session.getLine(row))) return \"start\";\n      return \"\";\n    };\n    this._getFirstTagInLine = function (session, row) {\n      var tokens = session.getTokens(row);\n      var tag = new Tag();\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i];\n        if (is(token, \"tag-open\")) {\n          tag.end.column = tag.start.column + token.value.length;\n          tag.closing = is(token, \"end-tag-open\");\n          token = tokens[++i];\n          if (!token) return null;\n          tag.tagName = token.value;\n          if (token.value === \"\") {\n            //skip empty tag name token for fragment\n            token = tokens[++i];\n            if (!token) return null;\n            tag.tagName = token.value;\n          }\n          tag.end.column += token.value.length;\n          for (i++; i < tokens.length; i++) {\n            token = tokens[i];\n            tag.end.column += token.value.length;\n            if (is(token, \"tag-close\")) {\n              tag.selfClosing = token.value == '/>';\n              break;\n            }\n          }\n          return tag;\n        } else if (is(token, \"tag-close\")) {\n          tag.selfClosing = token.value == '/>';\n          return tag;\n        }\n        tag.start.column += token.value.length;\n      }\n      return null;\n    };\n    this._findEndTagInLine = function (session, row, tagName, startColumn) {\n      var tokens = session.getTokens(row);\n      var column = 0;\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i];\n        column += token.value.length;\n        if (column < startColumn - 1) continue;\n        if (is(token, \"end-tag-open\")) {\n          token = tokens[i + 1];\n          if (is(token, \"tag-name\") && token.value === \"\") {\n            token = tokens[i + 2];\n          }\n          if (token && token.value == tagName) return true;\n        }\n      }\n      return false;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var firstTag = this._getFirstTagInLine(session, row);\n      if (!firstTag) {\n        return this.getCommentFoldWidget(session, row) && session.getCommentFoldRange(row, session.getLine(row).length);\n      }\n      var tags = session.getMatchingTags({\n        row: row,\n        column: 0\n      });\n      if (tags) {\n        return new Range(tags.openTag.end.row, tags.openTag.end.column, tags.closeTag.start.row, tags.closeTag.start.column);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/xml\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/lib/lang\", \"ace/mode/text\", \"ace/mode/xml_highlight_rules\", \"ace/mode/behaviour/xml\", \"ace/mode/folding/xml\", \"ace/worker/worker_client\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var lang = require(\"../lib/lang\");\n  var TextMode = require(\"./text\").Mode;\n  var XmlHighlightRules = require(\"./xml_highlight_rules\").XmlHighlightRules;\n  var XmlBehaviour = require(\"./behaviour/xml\").XmlBehaviour;\n  var XmlFoldMode = require(\"./folding/xml\").FoldMode;\n  var WorkerClient = require(\"../worker/worker_client\").WorkerClient;\n  var Mode = function () {\n    this.HighlightRules = XmlHighlightRules;\n    this.$behaviour = new XmlBehaviour();\n    this.foldingRules = new XmlFoldMode();\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.voidElements = lang.arrayToMap([]);\n    this.blockComment = {\n      start: \"<!--\",\n      end: \"-->\"\n    };\n    this.createWorker = function (session) {\n      var worker = new WorkerClient([\"ace\"], \"ace/mode/xml_worker\", \"Worker\");\n      worker.attachToDocument(session.getDocument());\n      worker.on(\"error\", function (e) {\n        session.setAnnotations(e.data);\n      });\n      worker.on(\"terminate\", function () {\n        session.clearAnnotations();\n      });\n      return worker;\n    };\n    this.$id = \"ace/mode/xml\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\nace.define(\"ace/mode/jsdoc_comment_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var JsDocCommentHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        token: [\"comment.doc.tag\", \"comment.doc.text\", \"lparen.doc\"],\n        regex: \"(@(?:param|member|typedef|property|namespace|var|const|callback))(\\\\s*)({)\",\n        push: [{\n          token: \"lparen.doc\",\n          regex: \"{\",\n          push: [{\n            include: \"doc-syntax\"\n          }, {\n            token: \"rparen.doc\",\n            regex: \"}|(?=$)\",\n            next: \"pop\"\n          }]\n        }, {\n          token: [\"rparen.doc\", \"text.doc\", \"variable.parameter.doc\", \"lparen.doc\", \"variable.parameter.doc\", \"rparen.doc\"],\n          regex: /(})(\\s*)(?:([\\w=:\\/\\.]+)|(?:(\\[)([\\w=:\\/\\.]+)(\\])))/,\n          next: \"pop\"\n        }, {\n          token: \"rparen.doc\",\n          regex: \"}|(?=$)\",\n          next: \"pop\"\n        }, {\n          include: \"doc-syntax\"\n        }, {\n          defaultToken: \"text.doc\"\n        }]\n      }, {\n        token: [\"comment.doc.tag\", \"text.doc\", \"lparen.doc\"],\n        regex: \"(@(?:returns?|yields|type|this|suppress|public|protected|private|package|modifies|\" + \"implements|external|exception|throws|enum|define|extends))(\\\\s*)({)\",\n        push: [{\n          token: \"lparen.doc\",\n          regex: \"{\",\n          push: [{\n            include: \"doc-syntax\"\n          }, {\n            token: \"rparen.doc\",\n            regex: \"}|(?=$)\",\n            next: \"pop\"\n          }]\n        }, {\n          token: \"rparen.doc\",\n          regex: \"}|(?=$)\",\n          next: \"pop\"\n        }, {\n          include: \"doc-syntax\"\n        }, {\n          defaultToken: \"text.doc\"\n        }]\n      }, {\n        token: [\"comment.doc.tag\", \"text.doc\", \"variable.parameter.doc\"],\n        regex: \"(@(?:alias|memberof|instance|module|name|lends|namespace|external|this|template|\" + \"requires|param|implements|function|extends|typedef|mixes|constructor|var|\" + \"memberof\\\\!|event|listens|exports|class|constructs|interface|emits|fires|\" + \"throws|const|callback|borrows|augments))(\\\\s+)(\\\\w[\\\\w#\\.:\\/~\\\"\\\\-]*)?\"\n      }, {\n        token: [\"comment.doc.tag\", \"text.doc\", \"variable.parameter.doc\"],\n        regex: \"(@method)(\\\\s+)(\\\\w[\\\\w\\.\\\\(\\\\)]*)\"\n      }, {\n        token: \"comment.doc.tag\",\n        regex: \"@access\\\\s+(?:private|public|protected)\"\n      }, {\n        token: \"comment.doc.tag\",\n        regex: \"@kind\\\\s+(?:class|constant|event|external|file|function|member|mixin|module|namespace|typedef)\"\n      }, {\n        token: \"comment.doc.tag\",\n        regex: \"@\\\\w+(?=\\\\s|$)\"\n      }, JsDocCommentHighlightRules.getTagRule(), {\n        defaultToken: \"comment.doc.body\",\n        caseInsensitive: true\n      }],\n      \"doc-syntax\": [{\n        token: \"operator.doc\",\n        regex: /[|:]/\n      }, {\n        token: \"paren.doc\",\n        regex: /[\\[\\]]/\n      }]\n    };\n    this.normalizeRules();\n  };\n  oop.inherits(JsDocCommentHighlightRules, TextHighlightRules);\n  JsDocCommentHighlightRules.getTagRule = function (start) {\n    return {\n      token: \"comment.doc.tag.storage.type\",\n      regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n  };\n  JsDocCommentHighlightRules.getStartRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // doc comment\n      regex: /\\/\\*\\*(?!\\/)/,\n      next: start\n    };\n  };\n  JsDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // closing comment\n      regex: \"\\\\*\\\\/\",\n      next: start\n    };\n  };\n  exports.JsDocCommentHighlightRules = JsDocCommentHighlightRules;\n});\nace.define(\"ace/mode/javascript_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/jsdoc_comment_highlight_rules\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var DocCommentHighlightRules = require(\"./jsdoc_comment_highlight_rules\").JsDocCommentHighlightRules;\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var identifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\";\n  var JavaScriptHighlightRules = function (options) {\n    var keywords = {\n      \"variable.language\": \"Array|Boolean|Date|Function|Iterator|Number|Object|RegExp|String|Proxy|Symbol|\" +\n      // Constructors\n      \"Namespace|QName|XML|XMLList|\" +\n      // E4X\n      \"ArrayBuffer|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|\" + \"Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray|\" + \"Error|EvalError|InternalError|RangeError|ReferenceError|StopIteration|\" +\n      // Errors\n      \"SyntaxError|TypeError|URIError|\" + \"decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|eval|isFinite|\" +\n      // Non-constructor functions\n      \"isNaN|parseFloat|parseInt|\" + \"JSON|Math|\" +\n      // Other\n      \"this|arguments|prototype|window|document\",\n      // Pseudo\n      \"keyword\": \"const|yield|import|get|set|async|await|\" + \"break|case|catch|continue|default|delete|do|else|finally|for|\" + \"if|in|of|instanceof|new|return|switch|throw|try|typeof|let|var|while|with|debugger|\" + \"__parent__|__count__|escape|unescape|with|__proto__|\" + \"class|enum|extends|super|export|implements|private|public|interface|package|protected|static|constructor\",\n      \"storage.type\": \"const|let|var|function\",\n      \"constant.language\": \"null|Infinity|NaN|undefined\",\n      \"support.function\": \"alert\",\n      \"constant.language.boolean\": \"true|false\"\n    };\n    var keywordMapper = this.createKeywordMapper(keywords, \"identifier\");\n    var kwBeforeRe = \"case|do|else|finally|in|instanceof|return|throw|try|typeof|yield|void\";\n    var escapedRe = \"\\\\\\\\(?:x[0-9a-fA-F]{2}|\" +\n    // hex\n    \"u[0-9a-fA-F]{4}|\" +\n    // unicode\n    \"u{[0-9a-fA-F]{1,6}}|\" +\n    // es6 unicode\n    \"[0-2][0-7]{0,2}|\" +\n    // oct\n    \"3[0-7][0-7]?|\" +\n    // oct\n    \"[4-7][0-7]?|\" +\n    //oct\n    \".)\";\n    var anonymousFunctionRe = \"(function)(\\\\s*)(\\\\*?)\";\n    var functionCallStartRule = {\n      token: [\"identifier\", \"text\", \"paren.lparen\"],\n      regex: \"(\\\\b(?!\" + Object.values(keywords).join(\"|\") + \"\\\\b)\" + identifierRe + \")(\\\\s*)(\\\\()\"\n    };\n    this.$rules = {\n      \"no_regex\": [DocCommentHighlightRules.getStartRule(\"doc-start\"), comments(\"no_regex\"), functionCallStartRule, {\n        token: \"string\",\n        regex: \"'(?=.)\",\n        next: \"qstring\"\n      }, {\n        token: \"string\",\n        regex: '\"(?=.)',\n        next: \"qqstring\"\n      }, {\n        token: \"constant.numeric\",\n        // hexadecimal, octal and binary\n        regex: /0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/\n      }, {\n        token: \"constant.numeric\",\n        // decimal integers and floats\n        regex: /(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n      }, {\n        token: [\"entity.name.function\", \"text\", \"keyword.operator\", \"text\", \"storage.type\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"],\n        regex: \"(\" + identifierRe + \")(\\\\s*)(=)(\\\\s*)\" + anonymousFunctionRe + \"(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"storage.type\", \"text\", \"storage.type\", \"text\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"],\n        regex: \"(function)(?:(?:(\\\\s*)(\\\\*)(\\\\s*))|(\\\\s+))(\" + identifierRe + \")(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"entity.name.function\", \"text\", \"punctuation.operator\", \"text\", \"storage.type\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"],\n        regex: \"(\" + identifierRe + \")(\\\\s*)(:)(\\\\s*)\" + anonymousFunctionRe + \"(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"text\", \"text\", \"storage.type\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"],\n        regex: \"(:)(\\\\s*)\" + anonymousFunctionRe + \"(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: \"keyword\",\n        regex: \"from(?=\\\\s*('|\\\"))\"\n      }, {\n        token: \"keyword\",\n        regex: \"(?:\" + kwBeforeRe + \")\\\\b\",\n        next: \"start\"\n      }, {\n        token: \"support.constant\",\n        regex: /that\\b/\n      }, {\n        token: [\"storage.type\", \"punctuation.operator\", \"support.function.firebug\"],\n        regex: /(console)(\\.)(warn|info|log|error|debug|time|trace|timeEnd|assert)\\b/\n      }, {\n        token: keywordMapper,\n        regex: identifierRe\n      }, {\n        token: \"punctuation.operator\",\n        regex: /[.](?![.])/,\n        next: \"property\"\n      }, {\n        token: \"storage.type\",\n        regex: /=>/,\n        next: \"start\"\n      }, {\n        token: \"keyword.operator\",\n        regex: /--|\\+\\+|\\.{3}|===|==|=|!=|!==|<+=?|>+=?|!|&&|\\|\\||\\?:|[!$%&*+\\-~\\/^]=?/,\n        next: \"start\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: /[?:,;.]/,\n        next: \"start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: /[\\[({]/,\n        next: \"start\"\n      }, {\n        token: \"paren.rparen\",\n        regex: /[\\])}]/\n      }, {\n        token: \"comment\",\n        regex: /^#!.*$/\n      }],\n      property: [{\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }, {\n        token: \"keyword.operator\",\n        regex: /=/\n      }, {\n        token: [\"storage.type\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"],\n        regex: anonymousFunctionRe + \"(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: [\"storage.type\", \"text\", \"storage.type\", \"text\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"],\n        regex: \"(function)(?:(?:(\\\\s*)(\\\\*)(\\\\s*))|(\\\\s+))(\\\\w+)(\\\\s*)(\\\\()\",\n        next: \"function_arguments\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: /[.](?![.])/\n      }, {\n        token: \"support.function\",\n        regex: \"prototype\"\n      }, {\n        token: \"support.function\",\n        regex: /(s(?:h(?:ift|ow(?:Mod(?:elessDialog|alDialog)|Help))|croll(?:X|By(?:Pages|Lines)?|Y|To)?|t(?:op|rike)|i(?:n|zeToContent|debar|gnText)|ort|u(?:p|b(?:str(?:ing)?)?)|pli(?:ce|t)|e(?:nd|t(?:Re(?:sizable|questHeader)|M(?:i(?:nutes|lliseconds)|onth)|Seconds|Ho(?:tKeys|urs)|Year|Cursor|Time(?:out)?|Interval|ZOptions|Date|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|h(?:ome|andleEvent)|navigate|c(?:har(?:CodeAt|At)|o(?:s|n(?:cat|textual|firm)|mpile)|eil|lear(?:Timeout|Interval)?|a(?:ptureEvents|ll)|reate(?:StyleSheet|Popup|EventObject))|t(?:o(?:GMTString|S(?:tring|ource)|U(?:TCString|pperCase)|Lo(?:caleString|werCase))|est|a(?:n|int(?:Enabled)?))|i(?:s(?:NaN|Finite)|ndexOf|talics)|d(?:isableExternalCapture|ump|etachEvent)|u(?:n(?:shift|taint|escape|watch)|pdateCommands)|j(?:oin|avaEnabled)|p(?:o(?:p|w)|ush|lugins.refresh|a(?:ddings|rse(?:Int|Float)?)|r(?:int|ompt|eference))|e(?:scape|nableExternalCapture|val|lementFromPoint|x(?:p|ec(?:Script|Command)?))|valueOf|UTC|queryCommand(?:State|Indeterm|Enabled|Value)|f(?:i(?:nd|lter|le(?:ModifiedDate|Size|CreatedDate|UpdatedDate)|xed)|o(?:nt(?:size|color)|rward|rEach)|loor|romCharCode)|watch|l(?:ink|o(?:ad|g)|astIndexOf)|a(?:sin|nchor|cos|t(?:tachEvent|ob|an(?:2)?)|pply|lert|b(?:s|ort))|r(?:ou(?:nd|teEvents)|e(?:size(?:By|To)|calc|turnValue|place|verse|l(?:oad|ease(?:Capture|Events)))|andom)|g(?:o|et(?:ResponseHeader|M(?:i(?:nutes|lliseconds)|onth)|Se(?:conds|lection)|Hours|Year|Time(?:zoneOffset)?|Da(?:y|te)|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Da(?:y|te)|FullYear)|FullYear|A(?:ttention|llResponseHeaders)))|m(?:in|ove(?:B(?:y|elow)|To(?:Absolute)?|Above)|ergeAttributes|a(?:tch|rgins|x))|b(?:toa|ig|o(?:ld|rderWidths)|link|ack))\\b(?=\\()/\n      }, {\n        token: \"support.function.dom\",\n        regex: /(s(?:ub(?:stringData|mit)|plitText|e(?:t(?:NamedItem|Attribute(?:Node)?)|lect))|has(?:ChildNodes|Feature)|namedItem|c(?:l(?:ick|o(?:se|neNode))|reate(?:C(?:omment|DATASection|aption)|T(?:Head|extNode|Foot)|DocumentFragment|ProcessingInstruction|E(?:ntityReference|lement)|Attribute))|tabIndex|i(?:nsert(?:Row|Before|Cell|Data)|tem)|open|delete(?:Row|C(?:ell|aption)|T(?:Head|Foot)|Data)|focus|write(?:ln)?|a(?:dd|ppend(?:Child|Data))|re(?:set|place(?:Child|Data)|move(?:NamedItem|Child|Attribute(?:Node)?)?)|get(?:NamedItem|Element(?:sBy(?:Name|TagName|ClassName)|ById)|Attribute(?:Node)?)|blur)\\b(?=\\()/\n      }, {\n        token: \"support.constant\",\n        regex: /(s(?:ystemLanguage|cr(?:ipts|ollbars|een(?:X|Y|Top|Left))|t(?:yle(?:Sheets)?|atus(?:Text|bar)?)|ibling(?:Below|Above)|ource|uffixes|e(?:curity(?:Policy)?|l(?:ection|f)))|h(?:istory|ost(?:name)?|as(?:h|Focus))|y|X(?:MLDocument|SLDocument)|n(?:ext|ame(?:space(?:s|URI)|Prop))|M(?:IN_VALUE|AX_VALUE)|c(?:haracterSet|o(?:n(?:structor|trollers)|okieEnabled|lorDepth|mp(?:onents|lete))|urrent|puClass|l(?:i(?:p(?:boardData)?|entInformation)|osed|asses)|alle(?:e|r)|rypto)|t(?:o(?:olbar|p)|ext(?:Transform|Indent|Decoration|Align)|ags)|SQRT(?:1_2|2)|i(?:n(?:ner(?:Height|Width)|put)|ds|gnoreCase)|zIndex|o(?:scpu|n(?:readystatechange|Line)|uter(?:Height|Width)|p(?:sProfile|ener)|ffscreenBuffering)|NEGATIVE_INFINITY|d(?:i(?:splay|alog(?:Height|Top|Width|Left|Arguments)|rectories)|e(?:scription|fault(?:Status|Ch(?:ecked|arset)|View)))|u(?:ser(?:Profile|Language|Agent)|n(?:iqueID|defined)|pdateInterval)|_content|p(?:ixelDepth|ort|ersonalbar|kcs11|l(?:ugins|atform)|a(?:thname|dding(?:Right|Bottom|Top|Left)|rent(?:Window|Layer)?|ge(?:X(?:Offset)?|Y(?:Offset)?))|r(?:o(?:to(?:col|type)|duct(?:Sub)?|mpter)|e(?:vious|fix)))|e(?:n(?:coding|abledPlugin)|x(?:ternal|pando)|mbeds)|v(?:isibility|endor(?:Sub)?|Linkcolor)|URLUnencoded|P(?:I|OSITIVE_INFINITY)|f(?:ilename|o(?:nt(?:Size|Family|Weight)|rmName)|rame(?:s|Element)|gColor)|E|whiteSpace|l(?:i(?:stStyleType|n(?:eHeight|kColor))|o(?:ca(?:tion(?:bar)?|lName)|wsrc)|e(?:ngth|ft(?:Context)?)|a(?:st(?:M(?:odified|atch)|Index|Paren)|yer(?:s|X)|nguage))|a(?:pp(?:MinorVersion|Name|Co(?:deName|re)|Version)|vail(?:Height|Top|Width|Left)|ll|r(?:ity|guments)|Linkcolor|bove)|r(?:ight(?:Context)?|e(?:sponse(?:XML|Text)|adyState))|global|x|m(?:imeTypes|ultiline|enubar|argin(?:Right|Bottom|Top|Left))|L(?:N(?:10|2)|OG(?:10E|2E))|b(?:o(?:ttom|rder(?:Width|RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth))|ufferDepth|elow|ackground(?:Color|Image)))\\b/\n      }, {\n        token: \"identifier\",\n        regex: identifierRe\n      }, {\n        regex: \"\",\n        token: \"empty\",\n        next: \"no_regex\"\n      }],\n      \"start\": [DocCommentHighlightRules.getStartRule(\"doc-start\"), comments(\"start\"), {\n        token: \"string.regexp\",\n        regex: \"\\\\/\",\n        next: \"regex\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+|^$\",\n        next: \"start\"\n      }, {\n        token: \"empty\",\n        regex: \"\",\n        next: \"no_regex\"\n      }],\n      \"regex\": [{\n        token: \"regexp.keyword.operator\",\n        regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n      }, {\n        token: \"string.regexp\",\n        regex: \"/[sxngimy]*\",\n        next: \"no_regex\"\n      }, {\n        token: \"invalid\",\n        regex: /\\{\\d+\\b,?\\d*\\}[+*]|[+*$^?][+*]|[$^][?]|\\?{3,}/\n      }, {\n        token: \"constant.language.escape\",\n        regex: /\\(\\?[:=!]|\\)|\\{\\d+\\b,?\\d*\\}|[+*]\\?|[()$^+*?.]/\n      }, {\n        token: \"constant.language.delimiter\",\n        regex: /\\|/\n      }, {\n        token: \"constant.language.escape\",\n        regex: /\\[\\^?/,\n        next: \"regex_character_class\"\n      }, {\n        token: \"empty\",\n        regex: \"$\",\n        next: \"no_regex\"\n      }, {\n        defaultToken: \"string.regexp\"\n      }],\n      \"regex_character_class\": [{\n        token: \"regexp.charclass.keyword.operator\",\n        regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n      }, {\n        token: \"constant.language.escape\",\n        regex: \"]\",\n        next: \"regex\"\n      }, {\n        token: \"constant.language.escape\",\n        regex: \"-\"\n      }, {\n        token: \"empty\",\n        regex: \"$\",\n        next: \"no_regex\"\n      }, {\n        defaultToken: \"string.regexp.charachterclass\"\n      }],\n      \"default_parameter\": [{\n        token: \"string\",\n        regex: \"'(?=.)\",\n        push: [{\n          token: \"string\",\n          regex: \"'|$\",\n          next: \"pop\"\n        }, {\n          include: \"qstring\"\n        }]\n      }, {\n        token: \"string\",\n        regex: '\"(?=.)',\n        push: [{\n          token: \"string\",\n          regex: '\"|$',\n          next: \"pop\"\n        }, {\n          include: \"qqstring\"\n        }]\n      }, {\n        token: \"constant.language\",\n        regex: \"null|Infinity|NaN|undefined\"\n      }, {\n        token: \"constant.numeric\",\n        // hexadecimal, octal and binary\n        regex: /0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/\n      }, {\n        token: \"constant.numeric\",\n        // decimal integers and floats\n        regex: /(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n      }, {\n        token: \"punctuation.operator\",\n        regex: \",\",\n        next: \"function_arguments\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: \"$\"\n      }, {\n        token: \"empty\",\n        regex: \"\",\n        next: \"no_regex\"\n      }],\n      \"function_arguments\": [comments(\"function_arguments\"), {\n        token: \"variable.parameter\",\n        regex: identifierRe\n      }, {\n        token: \"punctuation.operator\",\n        regex: \",\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }, {\n        token: \"punctuation.operator\",\n        regex: \"$\"\n      }, {\n        token: \"empty\",\n        regex: \"\",\n        next: \"no_regex\"\n      }],\n      \"qqstring\": [{\n        token: \"constant.language.escape\",\n        regex: escapedRe\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        consumeLineEnd: true\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"no_regex\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"qstring\": [{\n        token: \"constant.language.escape\",\n        regex: escapedRe\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        consumeLineEnd: true\n      }, {\n        token: \"string\",\n        regex: \"'|$\",\n        next: \"no_regex\"\n      }, {\n        defaultToken: \"string\"\n      }]\n    };\n    if (!options || !options.noES6) {\n      this.$rules.no_regex.unshift({\n        regex: \"[{}]\",\n        onMatch: function (val, state, stack) {\n          this.next = val == \"{\" ? this.nextState : \"\";\n          if (val == \"{\" && stack.length) {\n            stack.unshift(\"start\", state);\n          } else if (val == \"}\" && stack.length) {\n            stack.shift();\n            this.next = stack.shift();\n            if (this.next.indexOf(\"string\") != -1 || this.next.indexOf(\"jsx\") != -1) return \"paren.quasi.end\";\n          }\n          return val == \"{\" ? \"paren.lparen\" : \"paren.rparen\";\n        },\n        nextState: \"start\"\n      }, {\n        token: \"string.quasi.start\",\n        regex: /`/,\n        push: [{\n          token: \"constant.language.escape\",\n          regex: escapedRe\n        }, {\n          token: \"paren.quasi.start\",\n          regex: /\\${/,\n          push: \"start\"\n        }, {\n          token: \"string.quasi.end\",\n          regex: /`/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"string.quasi\"\n        }]\n      }, {\n        token: [\"variable.parameter\", \"text\"],\n        regex: \"(\" + identifierRe + \")(\\\\s*)(?=\\\\=>)\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"(\\\\()(?=[^\\\\(]+\\\\s*=>)\",\n        next: \"function_arguments\"\n      }, {\n        token: \"variable.language\",\n        regex: \"(?:(?:(?:Weak)?(?:Set|Map))|Promise)\\\\b\"\n      });\n      this.$rules[\"function_arguments\"].unshift({\n        token: \"keyword.operator\",\n        regex: \"=\",\n        next: \"default_parameter\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"\\\\.{3}\"\n      });\n      this.$rules[\"property\"].unshift({\n        token: \"support.function\",\n        regex: \"(findIndex|repeat|startsWith|endsWith|includes|isSafeInteger|trunc|cbrt|log2|log10|sign|then|catch|\" + \"finally|resolve|reject|race|any|all|allSettled|keys|entries|isInteger)\\\\b(?=\\\\()\"\n      }, {\n        token: \"constant.language\",\n        regex: \"(?:MAX_SAFE_INTEGER|MIN_SAFE_INTEGER|EPSILON)\\\\b\"\n      });\n      if (!options || options.jsx != false) JSX.call(this);\n    }\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"no_regex\")]);\n    this.normalizeRules();\n  };\n  oop.inherits(JavaScriptHighlightRules, TextHighlightRules);\n  function JSX() {\n    var tagRegex = identifierRe.replace(\"\\\\d\", \"\\\\d\\\\-\");\n    var jsxTag = {\n      onMatch: function (val, state, stack) {\n        var offset = val.charAt(1) == \"/\" ? 2 : 1;\n        if (offset == 1) {\n          if (state != this.nextState) stack.unshift(this.next, this.nextState, 0);else stack.unshift(this.next);\n          stack[2]++;\n        } else if (offset == 2) {\n          if (state == this.nextState) {\n            stack[1]--;\n            if (!stack[1] || stack[1] < 0) {\n              stack.shift();\n              stack.shift();\n            }\n          }\n        }\n        return [{\n          type: \"meta.tag.punctuation.\" + (offset == 1 ? \"\" : \"end-\") + \"tag-open.xml\",\n          value: val.slice(0, offset)\n        }, {\n          type: \"meta.tag.tag-name.xml\",\n          value: val.substr(offset)\n        }];\n      },\n      regex: \"</?(?:\" + tagRegex + \"|(?=>))\",\n      next: \"jsxAttributes\",\n      nextState: \"jsx\"\n    };\n    this.$rules.start.unshift(jsxTag);\n    var jsxJsRule = {\n      regex: \"{\",\n      token: \"paren.quasi.start\",\n      push: \"start\"\n    };\n    this.$rules.jsx = [jsxJsRule, jsxTag, {\n      include: \"reference\"\n    }, {\n      defaultToken: \"string.xml\"\n    }];\n    this.$rules.jsxAttributes = [{\n      token: \"meta.tag.punctuation.tag-close.xml\",\n      regex: \"/?>\",\n      onMatch: function (value, currentState, stack) {\n        if (currentState == stack[0]) stack.shift();\n        if (value.length == 2) {\n          if (stack[0] == this.nextState) stack[1]--;\n          if (!stack[1] || stack[1] < 0) {\n            stack.splice(0, 2);\n          }\n        }\n        this.next = stack[0] || \"start\";\n        return [{\n          type: this.token,\n          value: value\n        }];\n      },\n      nextState: \"jsx\"\n    }, jsxJsRule, comments(\"jsxAttributes\"), {\n      token: \"entity.other.attribute-name.xml\",\n      regex: tagRegex\n    }, {\n      token: \"keyword.operator.attribute-equals.xml\",\n      regex: \"=\"\n    }, {\n      token: \"text.tag-whitespace.xml\",\n      regex: \"\\\\s+\"\n    }, {\n      token: \"string.attribute-value.xml\",\n      regex: \"'\",\n      stateName: \"jsx_attr_q\",\n      push: [{\n        token: \"string.attribute-value.xml\",\n        regex: \"'\",\n        next: \"pop\"\n      }, {\n        include: \"reference\"\n      }, {\n        defaultToken: \"string.attribute-value.xml\"\n      }]\n    }, {\n      token: \"string.attribute-value.xml\",\n      regex: '\"',\n      stateName: \"jsx_attr_qq\",\n      push: [{\n        token: \"string.attribute-value.xml\",\n        regex: '\"',\n        next: \"pop\"\n      }, {\n        include: \"reference\"\n      }, {\n        defaultToken: \"string.attribute-value.xml\"\n      }]\n    }, jsxTag];\n    this.$rules.reference = [{\n      token: \"constant.language.escape.reference.xml\",\n      regex: \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n    }];\n  }\n  function comments(next) {\n    return [{\n      token: \"comment\",\n      // multi line comment\n      regex: /\\/\\*/,\n      next: [DocCommentHighlightRules.getTagRule(), {\n        token: \"comment\",\n        regex: \"\\\\*\\\\/\",\n        next: next || \"pop\"\n      }, {\n        defaultToken: \"comment\",\n        caseInsensitive: true\n      }]\n    }, {\n      token: \"comment\",\n      regex: \"\\\\/\\\\/\",\n      next: [DocCommentHighlightRules.getTagRule(), {\n        token: \"comment\",\n        regex: \"$|^\",\n        next: next || \"pop\"\n      }, {\n        defaultToken: \"comment\",\n        caseInsensitive: true\n      }]\n    }];\n  }\n  exports.JavaScriptHighlightRules = JavaScriptHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n  var MatchingBraceOutdent = function () {};\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/behaviour/javascript\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/token_iterator\", \"ace/mode/behaviour/cstyle\", \"ace/mode/behaviour/xml\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var TokenIterator = require(\"../../token_iterator\").TokenIterator;\n  var CstyleBehaviour = require(\"../behaviour/cstyle\").CstyleBehaviour;\n  var XmlBehaviour = require(\"../behaviour/xml\").XmlBehaviour;\n  var JavaScriptBehaviour = function () {\n    var xmlBehaviours = new XmlBehaviour({\n      closeCurlyBraces: true\n    }).getBehaviours();\n    this.addBehaviours(xmlBehaviours);\n    this.inherit(CstyleBehaviour);\n    this.add(\"autoclosing-fragment\", \"insertion\", function (state, action, editor, session, text) {\n      if (text == '>') {\n        var position = editor.getSelectionRange().start;\n        var iterator = new TokenIterator(session, position.row, position.column);\n        var token = iterator.getCurrentToken() || iterator.stepBackward();\n        if (!token) return;\n        if (token.value == '<') {\n          return {\n            text: \"></>\",\n            selection: [1, 1]\n          };\n        }\n      }\n    });\n  };\n  oop.inherits(JavaScriptBehaviour, CstyleBehaviour);\n  exports.JavaScriptBehaviour = JavaScriptBehaviour;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Range = require(\"../../range\").Range;\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n      return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n        return range;\n      }\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n        endRow = row;\n      }\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n      var endRow = row;\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/folding/javascript\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/xml\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var XmlFoldMode = require(\"./xml\").FoldMode;\n  var CFoldMode = require(\"./cstyle\").FoldMode;\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n    this.xmlFoldMode = new XmlFoldMode();\n  };\n  oop.inherits(FoldMode, CFoldMode);\n  (function () {\n    this.getFoldWidgetRangeBase = this.getFoldWidgetRange;\n    this.getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var fw = this.getFoldWidgetBase(session, foldStyle, row);\n      if (!fw) {\n        return this.xmlFoldMode.getFoldWidget(session, foldStyle, row);\n      }\n      return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var range = this.getFoldWidgetRangeBase(session, foldStyle, row, forceMultiline);\n      if (range) return range;\n      return this.xmlFoldMode.getFoldWidgetRange(session, foldStyle, row);\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/javascript\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/javascript_highlight_rules\", \"ace/mode/matching_brace_outdent\", \"ace/worker/worker_client\", \"ace/mode/behaviour/javascript\", \"ace/mode/folding/javascript\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var JavaScriptHighlightRules = require(\"./javascript_highlight_rules\").JavaScriptHighlightRules;\n  var MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n  var WorkerClient = require(\"../worker/worker_client\").WorkerClient;\n  var JavaScriptBehaviour = require(\"./behaviour/javascript\").JavaScriptBehaviour;\n  var JavaScriptFoldMode = require(\"./folding/javascript\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = JavaScriptHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new JavaScriptBehaviour();\n    this.foldingRules = new JavaScriptFoldMode();\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\"\n    };\n    this.$quotes = {\n      '\"': '\"',\n      \"'\": \"'\",\n      \"`\": \"`\"\n    };\n    this.$pairQuotesAfter = {\n      \"`\": /\\w/\n    };\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n      var endState = tokenizedLine.state;\n      if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n        return indent;\n      }\n      if (state == \"start\" || state == \"no_regex\") {\n        var match = line.match(/^.*(?:\\bcase\\b.*:|[\\{\\(\\[])\\s*$/);\n        if (match) {\n          indent += tab;\n        }\n      } else if (state == \"doc-start\") {\n        if (endState == \"start\" || endState == \"no_regex\") {\n          return \"\";\n        }\n        var match = line.match(/^\\s*(\\/?)\\*/);\n        if (match) {\n          if (match[1]) {\n            indent += \" \";\n          }\n          indent += \"* \";\n        }\n      }\n      return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n    this.createWorker = function (session) {\n      var worker = new WorkerClient([\"ace\"], \"ace/mode/javascript_worker\", \"JavaScriptWorker\");\n      worker.attachToDocument(session.getDocument());\n      worker.on(\"annotate\", function (results) {\n        session.setAnnotations(results.data);\n      });\n      worker.on(\"terminate\", function () {\n        session.clearAnnotations();\n      });\n      return worker;\n    };\n    this.$id = \"ace/mode/javascript\";\n    this.snippetFileId = \"ace/snippets/javascript\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\nace.define(\"ace/mode/svg_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/javascript_highlight_rules\", \"ace/mode/xml_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var JavaScriptHighlightRules = require(\"./javascript_highlight_rules\").JavaScriptHighlightRules;\n  var XmlHighlightRules = require(\"./xml_highlight_rules\").XmlHighlightRules;\n  var SvgHighlightRules = function () {\n    XmlHighlightRules.call(this);\n    this.embedTagRules(JavaScriptHighlightRules, \"js-\", \"script\");\n    this.normalizeRules();\n  };\n  oop.inherits(SvgHighlightRules, XmlHighlightRules);\n  exports.SvgHighlightRules = SvgHighlightRules;\n});\nace.define(\"ace/mode/folding/mixed\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function (defaultMode, subModes) {\n    this.defaultMode = defaultMode;\n    this.subModes = subModes;\n  };\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.$getMode = function (state) {\n      if (typeof state != \"string\") state = state[0];\n      for (var key in this.subModes) {\n        if (state.indexOf(key) === 0) return this.subModes[key];\n      }\n      return null;\n    };\n    this.$tryMode = function (state, session, foldStyle, row) {\n      var mode = this.$getMode(state);\n      return mode ? mode.getFoldWidget(session, foldStyle, row) : \"\";\n    };\n    this.getFoldWidget = function (session, foldStyle, row) {\n      return this.$tryMode(session.getState(row - 1), session, foldStyle, row) || this.$tryMode(session.getState(row), session, foldStyle, row) || this.defaultMode.getFoldWidget(session, foldStyle, row);\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var mode = this.$getMode(session.getState(row - 1));\n      if (!mode || !mode.getFoldWidget(session, foldStyle, row)) mode = this.$getMode(session.getState(row));\n      if (!mode || !mode.getFoldWidget(session, foldStyle, row)) mode = this.defaultMode;\n      return mode.getFoldWidgetRange(session, foldStyle, row);\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/svg\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/xml\", \"ace/mode/javascript\", \"ace/mode/svg_highlight_rules\", \"ace/mode/folding/mixed\", \"ace/mode/folding/xml\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var XmlMode = require(\"./xml\").Mode;\n  var JavaScriptMode = require(\"./javascript\").Mode;\n  var SvgHighlightRules = require(\"./svg_highlight_rules\").SvgHighlightRules;\n  var MixedFoldMode = require(\"./folding/mixed\").FoldMode;\n  var XmlFoldMode = require(\"./folding/xml\").FoldMode;\n  var CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\n  var Mode = function () {\n    XmlMode.call(this);\n    this.HighlightRules = SvgHighlightRules;\n    this.createModeDelegates({\n      \"js-\": JavaScriptMode\n    });\n    this.foldingRules = new MixedFoldMode(new XmlFoldMode(), {\n      \"js-\": new CStyleFoldMode()\n    });\n  };\n  oop.inherits(Mode, XmlMode);\n  (function () {\n    this.getNextLineIndent = function (state, line, tab) {\n      return this.$getIndent(line);\n    };\n    this.$id = \"ace/mode/svg\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/svg\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}