{"code":"ace.define(\"ace/mode/gherkin_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],(function(e,t,n){var r=e(\"../lib/oop\"),i=e(\"./text_highlight_rules\").TextHighlightRules,o=\"\\\\\\\\(x[0-9A-Fa-f]{2}|[0-7]{3}|[\\\\\\\\abfnrtv'\\\"]|U[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})\",g=function(){var e=[{name:\"en\",labels:\"Feature|Background|Scenario(?: Outline)?|Examples\",keywords:\"Given|When|Then|And|But\"}],t=e.map((function(e){return e.labels})).join(\"|\"),n=e.map((function(e){return e.keywords})).join(\"|\");this.$rules={start:[{token:\"constant.numeric\",regex:\"(?:(?:[1-9]\\\\d*)|(?:0))\"},{token:\"comment\",regex:\"#.*$\"},{token:\"keyword\",regex:\"(?:\"+t+\"):|(?:\"+n+\")\\\\b\"},{token:\"keyword\",regex:\"\\\\*\"},{token:\"string\",regex:'\"{3}',next:\"qqstring3\"},{token:\"string\",regex:'\"',next:\"qqstring\"},{token:\"text\",regex:\"^\\\\s*(?=@[\\\\w])\",next:[{token:\"text\",regex:\"\\\\s+\"},{token:\"variable.parameter\",regex:\"@[\\\\w]+\"},{token:\"empty\",regex:\"\",next:\"start\"}]},{token:\"comment\",regex:\"<[^>]+>\"},{token:\"comment\",regex:\"\\\\|(?=.)\",next:\"table-item\"},{token:\"comment\",regex:\"\\\\|$\",next:\"start\"}],qqstring3:[{token:\"constant.language.escape\",regex:o},{token:\"string\",regex:'\"{3}',next:\"start\"},{defaultToken:\"string\"}],qqstring:[{token:\"constant.language.escape\",regex:o},{token:\"string\",regex:\"\\\\\\\\$\",next:\"qqstring\"},{token:\"string\",regex:'\"|$',next:\"start\"},{defaultToken:\"string\"}],\"table-item\":[{token:\"comment\",regex:/$/,next:\"start\"},{token:\"comment\",regex:/\\|/},{token:\"string\",regex:/\\\\./},{defaultToken:\"string\"}]},this.normalizeRules()};r.inherits(g,i),t.GherkinHighlightRules=g})),ace.define(\"ace/mode/gherkin\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/gherkin_highlight_rules\"],(function(e,t,n){var r=e(\"../lib/oop\"),i=e(\"./text\").Mode,o=e(\"./gherkin_highlight_rules\").GherkinHighlightRules,g=function(){this.HighlightRules=o,this.$behaviour=this.$defaultBehaviour};r.inherits(g,i),function(){this.lineCommentStart=\"#\",this.$id=\"ace/mode/gherkin\",this.getNextLineIndent=function(e,t,n){var r=this.$getIndent(t),i=this.getTokenizer().getLineTokens(t,e).tokens;return t.match(\"[ ]*\\\\|\")&&(r+=\"| \"),i.length&&\"comment\"==i[i.length-1].type||\"start\"==e&&(t.match(\"Scenario:|Feature:|Scenario Outline:|Background:\")||t.match(\"(Given|Then).+(:)$|Examples:\")?r+=\"  \":t.match(\"\\\\*.+\")&&(r+=\"* \")),r}}.call(g.prototype),t.Mode=g})),ace.require([\"ace/mode/gherkin\"],(function(e){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=e)}));","name":"9b033cf5ddcccfc99558b1e74d3d67eb.js","input":"ace.define(\"ace/mode/gherkin_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var stringEscape = \"\\\\\\\\(x[0-9A-Fa-f]{2}|[0-7]{3}|[\\\\\\\\abfnrtv'\\\"]|U[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})\";\n  var GherkinHighlightRules = function () {\n    var languages = [{\n      name: \"en\",\n      labels: \"Feature|Background|Scenario(?: Outline)?|Examples\",\n      keywords: \"Given|When|Then|And|But\"\n    }];\n    var labels = languages.map(function (l) {\n      return l.labels;\n    }).join(\"|\");\n    var keywords = languages.map(function (l) {\n      return l.keywords;\n    }).join(\"|\");\n    this.$rules = {\n      start: [{\n        token: \"constant.numeric\",\n        regex: \"(?:(?:[1-9]\\\\d*)|(?:0))\"\n      }, {\n        token: \"comment\",\n        regex: \"#.*$\"\n      }, {\n        token: \"keyword\",\n        regex: \"(?:\" + labels + \"):|(?:\" + keywords + \")\\\\b\"\n      }, {\n        token: \"keyword\",\n        regex: \"\\\\*\"\n      }, {\n        token: \"string\",\n        // multi line \"\"\" string start\n        regex: '\"{3}',\n        next: \"qqstring3\"\n      }, {\n        token: \"string\",\n        // \" string\n        regex: '\"',\n        next: \"qqstring\"\n      }, {\n        token: \"text\",\n        regex: \"^\\\\s*(?=@[\\\\w])\",\n        next: [{\n          token: \"text\",\n          regex: \"\\\\s+\"\n        }, {\n          token: \"variable.parameter\",\n          regex: \"@[\\\\w]+\"\n        }, {\n          token: \"empty\",\n          regex: \"\",\n          next: \"start\"\n        }]\n      }, {\n        token: \"comment\",\n        regex: \"<[^>]+>\"\n      }, {\n        token: \"comment\",\n        regex: \"\\\\|(?=.)\",\n        next: \"table-item\"\n      }, {\n        token: \"comment\",\n        regex: \"\\\\|$\",\n        next: \"start\"\n      }],\n      \"qqstring3\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        // multi line \"\"\" string end\n        regex: '\"{3}',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"qqstring\": [{\n        token: \"constant.language.escape\",\n        regex: stringEscape\n      }, {\n        token: \"string\",\n        regex: \"\\\\\\\\$\",\n        next: \"qqstring\"\n      }, {\n        token: \"string\",\n        regex: '\"|$',\n        next: \"start\"\n      }, {\n        defaultToken: \"string\"\n      }],\n      \"table-item\": [{\n        token: \"comment\",\n        regex: /$/,\n        next: \"start\"\n      }, {\n        token: \"comment\",\n        regex: /\\|/\n      }, {\n        token: \"string\",\n        regex: /\\\\./\n      }, {\n        defaultToken: \"string\"\n      }]\n    };\n    this.normalizeRules();\n  };\n  oop.inherits(GherkinHighlightRules, TextHighlightRules);\n  exports.GherkinHighlightRules = GherkinHighlightRules;\n});\nace.define(\"ace/mode/gherkin\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/gherkin_highlight_rules\"], function (require, exports, module) {\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var GherkinHighlightRules = require(\"./gherkin_highlight_rules\").GherkinHighlightRules;\n  var Mode = function () {\n    this.HighlightRules = GherkinHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/gherkin\";\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var space2 = \"  \";\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n      if (line.match(\"[ ]*\\\\|\")) {\n        indent += \"| \";\n      }\n      if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n        return indent;\n      }\n      if (state == \"start\") {\n        if (line.match(\"Scenario:|Feature:|Scenario Outline:|Background:\")) {\n          indent += space2;\n        } else if (line.match(\"(Given|Then).+(:)$|Examples:\")) {\n          indent += space2;\n        } else if (line.match(\"\\\\*.+\")) {\n          indent += \"* \";\n        }\n      }\n      return indent;\n    };\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/gherkin\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}