{"code":"ace.define(\"ace/mode/eiffel_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],(function(e,t,r){\"use strict\";var n=e(\"../lib/oop\"),o=e(\"./text_highlight_rules\").TextHighlightRules,i=function(){var e=this.createKeywordMapper({\"constant.language\":\"Void\",\"constant.language.boolean\":\"True|False\",\"variable.language\":\"Current|Result\",\"keyword.operator\":\"and|implies|or|xor\",keyword:\"across|agent|alias|all|attached|as|assign|attribute|check|class|convert|create|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|Precursor|redefine|rename|require|rescue|retry|select|separate|some|then|undefine|until|variant|when\"},\"identifier\",!0),t=/(?:[^\"%\\b\\f\\v]|%[A-DFHLNQR-V%'\"()<>]|%\\/(?:0[xX][\\da-fA-F](?:_*[\\da-fA-F])*|0[cC][0-7](?:_*[0-7])*|0[bB][01](?:_*[01])*|\\d(?:_*\\d)*)\\/)+?/;this.$rules={start:[{token:\"string.quoted.other\",regex:/\"\\[/,next:\"aligned_verbatim_string\"},{token:\"string.quoted.other\",regex:/\"\\{/,next:\"non-aligned_verbatim_string\"},{token:\"string.quoted.double\",regex:/\"(?:[^%\\b\\f\\n\\r\\v]|%[A-DFHLNQR-V%'\"()<>]|%\\/(?:0[xX][\\da-fA-F](?:_*[\\da-fA-F])*|0[cC][0-7](?:_*[0-7])*|0[bB][01](?:_*[01])*|\\d(?:_*\\d)*)\\/)*?\"/},{token:\"comment.line.double-dash\",regex:/--.*/},{token:\"constant.character\",regex:/'(?:[^%\\b\\f\\n\\r\\t\\v]|%[A-DFHLNQR-V%'\"()<>]|%\\/(?:0[xX][\\da-fA-F](?:_*[\\da-fA-F])*|0[cC][0-7](?:_*[0-7])*|0[bB][01](?:_*[01])*|\\d(?:_*\\d)*)\\/)'/},{token:\"constant.numeric\",regex:/\\b0(?:[xX][\\da-fA-F](?:_*[\\da-fA-F])*|[cC][0-7](?:_*[0-7])*|[bB][01](?:_*[01])*)\\b/},{token:\"constant.numeric\",regex:/(?:\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?[eE][+-]?)?\\d(?:_*\\d)*|\\d(?:_*\\d)*\\.?/},{token:\"paren.lparen\",regex:/[\\[({]|<<|\\|\\(/},{token:\"paren.rparen\",regex:/[\\])}]|>>|\\|\\)/},{token:\"keyword.operator\",regex:/:=|->|\\.(?=\\w)|[;,:?]/},{token:\"keyword.operator\",regex:/\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/]?|[><\\/]=?|[-+*^=~]/},{token:function(t){var r=e(t);return\"identifier\"===r&&t===t.toUpperCase()&&(r=\"entity.name.type\"),r},regex:/[a-zA-Z][a-zA-Z\\d_]*\\b/},{token:\"text\",regex:/\\s+/}],aligned_verbatim_string:[{token:\"string\",regex:/]\"/,next:\"start\"},{token:\"string\",regex:t}],\"non-aligned_verbatim_string\":[{token:\"string.quoted.other\",regex:/}\"/,next:\"start\"},{token:\"string.quoted.other\",regex:t}]}};n.inherits(i,o),t.EiffelHighlightRules=i})),ace.define(\"ace/mode/eiffel\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/eiffel_highlight_rules\"],(function(e,t,r){\"use strict\";var n=e(\"../lib/oop\"),o=e(\"./text\").Mode,i=e(\"./eiffel_highlight_rules\").EiffelHighlightRules,a=function(){this.HighlightRules=i,this.$behaviour=this.$defaultBehaviour};n.inherits(a,o),function(){this.lineCommentStart=\"--\",this.$id=\"ace/mode/eiffel\"}.call(a.prototype),t.Mode=a})),ace.require([\"ace/mode/eiffel\"],(function(e){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=e)}));","name":"493c547b5b373ce8b5ad5bb994e2ed79.js","input":"ace.define(\"ace/mode/eiffel_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var EiffelHighlightRules = function () {\n    var keywords = \"across|agent|alias|all|attached|as|assign|attribute|check|\" + \"class|convert|create|debug|deferred|detachable|do|else|elseif|end|\" + \"ensure|expanded|export|external|feature|from|frozen|if|inherit|\" + \"inspect|invariant|like|local|loop|not|note|obsolete|old|once|\" + \"Precursor|redefine|rename|require|rescue|retry|select|separate|\" + \"some|then|undefine|until|variant|when\";\n    var operatorKeywords = \"and|implies|or|xor\";\n    var languageConstants = \"Void\";\n    var booleanConstants = \"True|False\";\n    var languageVariables = \"Current|Result\";\n    var keywordMapper = this.createKeywordMapper({\n      \"constant.language\": languageConstants,\n      \"constant.language.boolean\": booleanConstants,\n      \"variable.language\": languageVariables,\n      \"keyword.operator\": operatorKeywords,\n      \"keyword\": keywords\n    }, \"identifier\", true);\n    var simpleString = /(?:[^\"%\\b\\f\\v]|%[A-DFHLNQR-V%'\"()<>]|%\\/(?:0[xX][\\da-fA-F](?:_*[\\da-fA-F])*|0[cC][0-7](?:_*[0-7])*|0[bB][01](?:_*[01])*|\\d(?:_*\\d)*)\\/)+?/;\n    this.$rules = {\n      \"start\": [{\n        token: \"string.quoted.other\",\n        // Aligned-verbatim-strings (verbatim option not supported)\n        regex: /\"\\[/,\n        next: \"aligned_verbatim_string\"\n      }, {\n        token: \"string.quoted.other\",\n        // Non-aligned-verbatim-strings (verbatim option not supported)\n        regex: /\"\\{/,\n        next: \"non-aligned_verbatim_string\"\n      }, {\n        token: \"string.quoted.double\",\n        regex: /\"(?:[^%\\b\\f\\n\\r\\v]|%[A-DFHLNQR-V%'\"()<>]|%\\/(?:0[xX][\\da-fA-F](?:_*[\\da-fA-F])*|0[cC][0-7](?:_*[0-7])*|0[bB][01](?:_*[01])*|\\d(?:_*\\d)*)\\/)*?\"/\n      }, {\n        token: \"comment.line.double-dash\",\n        regex: /--.*/\n      }, {\n        token: \"constant.character\",\n        regex: /'(?:[^%\\b\\f\\n\\r\\t\\v]|%[A-DFHLNQR-V%'\"()<>]|%\\/(?:0[xX][\\da-fA-F](?:_*[\\da-fA-F])*|0[cC][0-7](?:_*[0-7])*|0[bB][01](?:_*[01])*|\\d(?:_*\\d)*)\\/)'/\n      }, {\n        token: \"constant.numeric\",\n        // hexa | octal | bin\n        regex: /\\b0(?:[xX][\\da-fA-F](?:_*[\\da-fA-F])*|[cC][0-7](?:_*[0-7])*|[bB][01](?:_*[01])*)\\b/\n      }, {\n        token: \"constant.numeric\",\n        regex: /(?:\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?[eE][+-]?)?\\d(?:_*\\d)*|\\d(?:_*\\d)*\\.?/\n      }, {\n        token: \"paren.lparen\",\n        regex: /[\\[({]|<<|\\|\\(/\n      }, {\n        token: \"paren.rparen\",\n        regex: /[\\])}]|>>|\\|\\)/\n      }, {\n        token: \"keyword.operator\",\n        // punctuation\n        regex: /:=|->|\\.(?=\\w)|[;,:?]/\n      }, {\n        token: \"keyword.operator\",\n        regex: /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/]?|[><\\/]=?|[-+*^=~]/\n      }, {\n        token: function (v) {\n          var result = keywordMapper(v);\n          if (result === \"identifier\" && v === v.toUpperCase()) {\n            result = \"entity.name.type\";\n          }\n          return result;\n        },\n        regex: /[a-zA-Z][a-zA-Z\\d_]*\\b/\n      }, {\n        token: \"text\",\n        regex: /\\s+/\n      }],\n      \"aligned_verbatim_string\": [{\n        token: \"string\",\n        regex: /]\"/,\n        next: \"start\"\n      }, {\n        token: \"string\",\n        regex: simpleString\n      }],\n      \"non-aligned_verbatim_string\": [{\n        token: \"string.quoted.other\",\n        regex: /}\"/,\n        next: \"start\"\n      }, {\n        token: \"string.quoted.other\",\n        regex: simpleString\n      }]\n    };\n  };\n  oop.inherits(EiffelHighlightRules, TextHighlightRules);\n  exports.EiffelHighlightRules = EiffelHighlightRules;\n});\nace.define(\"ace/mode/eiffel\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/eiffel_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var EiffelHighlightRules = require(\"./eiffel_highlight_rules\").EiffelHighlightRules;\n  var Mode = function () {\n    this.HighlightRules = EiffelHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"--\";\n    this.$id = \"ace/mode/eiffel\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/eiffel\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}