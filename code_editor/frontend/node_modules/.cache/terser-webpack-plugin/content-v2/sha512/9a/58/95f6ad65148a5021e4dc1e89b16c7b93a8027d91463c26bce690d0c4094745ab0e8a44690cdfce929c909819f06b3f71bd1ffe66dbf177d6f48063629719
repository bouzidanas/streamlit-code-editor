{"code":"ace.define(\"ace/mode/assembly_arm32_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],(function(e,s,t){\"use strict\";var l=e(\"../lib/oop\"),a=e(\"./text_highlight_rules\").TextHighlightRules,r=function(){this.$rules={start:[{token:\"keyword.control.assembly\",regex:\"\\\\b(?:cpsid|cpsie|cps|setend|(?:srs|rfe)(?:ia|ib|da|db|fd|ed|fa|ea)|bkpt|nop|pld|cdp2|mrc2|mrrc2|mcr2|mcrr2|ldc2|stc2|(?:add|adc|sub|sbc|rsb|rsc|mul|mla|umull|umlal|smull|smlal|mvn|and|eor|orr|bic)(?:eq|ne|cs|hs|cc|lo|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al)?s?|(?:(?:q|qd)?(?:add|sub)|umaal|smul(?:b|t)(?:b|t)|smulw(?:b|t)|smla(?:b|t)(?:b|t)|smlaw(?:b|t)|smlal(?:b|t)(?:b|t)|smuadx?|smladx?|smlaldx?|smusdx?|smlsdx?|smlsldx?|smmulr?|smmlar?|smmlsr?|mia|miaph|mia(?:b|t)(?:b|t)|clz|(?:s|q|sh|u|uq|uh)(?:add16|sub16|add8|sub8|addsubx|subaddx)|usad8|usada8|mrs|msr|mra|mar|cpy|tst|teq|cmp|cmn|ssat|ssat16|usat|usat16|pkhbt|pkhtb|sxth|sxtb16|sxtb|uxth|uxtb16|uxtb|sxtah|sxtab16|sxtab|uxtah|uxtab16|uxtab|rev|rev16|revsh|sel|b|bl|bx|blx|bxj|swi|svc|ldrex|strex|cdp|mrc|mrrc|mcr|mcrr|ldc|stc)(?:eq|ne|cs|hs|cc|lo|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al)?|ldr(?:eq|ne|cs|hs|cc|lo|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al)?(?:t|b|bt|sb|h|sh|d)?|str(?:eq|ne|cs|hs|cc|lo|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al)?(?:t|b|bt|h|d)?|(?:ldm|stm)(?:eq|ne|cs|hs|cc|lo|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al)?(?:ia|ib|da|db|fd|ed|fa|ea)|swp(?:eq|ne|cs|hs|cc|lo|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al)?b?|mov(?:t|w)?)\\\\b\",caseInsensitive:!0},{token:\"variable.parameter.register.assembly\",regex:\"\\\\b(?:r0|r1|r2|r3|r4|r5|r6|r7|r8|r9|r10|r11|r12|r13|r14|r15|fp|ip|sp|lr|pc|cpsr|spsr|c|f|s|x|lsl|lsr|asr|ror|rrx)\\\\b\",caseInsensitive:!0},{token:\"constant.character.hexadecimal.assembly\",regex:\"#0x[A-F0-9]+\",caseInsensitive:!0},{token:\"constant.character.decimal.assembly\",regex:\"#[0-9]+\"},{token:\"string.assembly\",regex:/'([^\\\\']|\\\\.)*'/},{token:\"string.assembly\",regex:/\"([^\\\\\"]|\\\\.)*\"/},{token:\"support.function.directive.assembly\",regex:\"(?:.section|.global|.text|.asciz|.asciiz|.ascii|.align|.byte|.end|.data|.equ|.extern|.include)\"},{token:\"entity.name.function.assembly\",regex:\"^\\\\s*%%[\\\\w.]+?:$\"},{token:\"entity.name.function.assembly\",regex:\"^\\\\s*%\\\\$[\\\\w.]+?:$\"},{token:\"entity.name.function.assembly\",regex:\"^[\\\\w.]+?:\"},{token:\"entity.name.function.assembly\",regex:\"^[\\\\w.]+?\\\\b\"},{token:\"comment.assembly\",regex:\"\\\\/\\\\*\",next:\"comment\"},{token:\"comment.assembly\",regex:\"(?:;|//|@).*$\"}],comment:[{token:\"comment.assembly\",regex:\"\\\\*\\\\/\",next:\"start\"},{defaultToken:\"comment\"}]},this.normalizeRules()};r.metaData={fileTypes:[\"s\"],name:\"Assembly ARM32\",scopeName:\"source.assembly\"},l.inherits(r,a),s.AssemblyARM32HighlightRules=r})),ace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"],(function(e,s,t){\"use strict\";var l=e(\"../../lib/oop\"),a=e(\"./fold_mode\").FoldMode,r=e(\"../../range\").Range,i=s.FoldMode=function(){};l.inherits(i,a),function(){this.commentBlock=function(e,s){var t=/\\S/,l=e.getLine(s),a=l.search(t);if(-1!=a&&\"#\"==l[a]){for(var i=l.length,o=e.getLength(),n=s,c=s;++s<o;){var m=(l=e.getLine(s)).search(t);if(-1!=m){if(\"#\"!=l[m])break;c=s}}if(c>n){var d=e.getLine(c).length;return new r(n,i,c,d)}}},this.getFoldWidgetRange=function(e,s,t){var l=this.indentationBlock(e,t);return l||((l=this.commentBlock(e,t))||void 0)},this.getFoldWidget=function(e,s,t){var l=e.getLine(t),a=l.search(/\\S/),r=e.getLine(t+1),i=e.getLine(t-1),o=i.search(/\\S/),n=r.search(/\\S/);if(-1==a)return e.foldWidgets[t-1]=-1!=o&&o<n?\"start\":\"\",\"\";if(-1==o){if(a==n&&\"#\"==l[a]&&\"#\"==r[a])return e.foldWidgets[t-1]=\"\",e.foldWidgets[t+1]=\"\",\"start\"}else if(o==a&&\"#\"==l[a]&&\"#\"==i[a]&&-1==e.getLine(t-2).search(/\\S/))return e.foldWidgets[t-1]=\"start\",e.foldWidgets[t+1]=\"\",\"\";return e.foldWidgets[t-1]=-1!=o&&o<a?\"start\":\"\",a<n?\"start\":\"\"}}.call(i.prototype)})),ace.define(\"ace/mode/assembly_arm32\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/assembly_arm32_highlight_rules\",\"ace/mode/folding/coffee\"],(function(e,s,t){\"use strict\";var l=e(\"../lib/oop\"),a=e(\"./text\").Mode,r=e(\"./assembly_arm32_highlight_rules\").AssemblyARM32HighlightRules,i=e(\"./folding/coffee\").FoldMode,o=function(){this.HighlightRules=r,this.foldingRules=new i,this.$behaviour=this.$defaultBehaviour};l.inherits(o,a),function(){this.lineCommentStart=[\";\"],this.blockComment={start:\"/*\",end:\"*/\"},this.$id=\"ace/mode/assembly_arm32\"}.call(o.prototype),s.Mode=o})),ace.require([\"ace/mode/assembly_arm32\"],(function(e){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=e)}));","name":"a9adacc50e1f0b6fe5283bb8c1bce410.js","input":"ace.define(\"ace/mode/assembly_arm32_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var AssemblyARM32HighlightRules = function () {\n    this.$rules = {\n      start: [{\n        token: 'keyword.control.assembly',\n        regex: '\\\\b(?:cpsid|cpsie|cps|setend|(?:srs|rfe)(?:ia|ib|da|db|fd|ed|fa|ea)|bkpt|nop|pld|cdp2|mrc2|mrrc2|mcr2|mcrr2|ldc2|stc2|(?:add|adc|sub|sbc|rsb|rsc|mul|mla|umull|umlal|smull|smlal|mvn|and|eor|orr|bic)(?:eq|ne|cs|hs|cc|lo|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al)?s?|(?:(?:q|qd)?(?:add|sub)|umaal|smul(?:b|t)(?:b|t)|smulw(?:b|t)|smla(?:b|t)(?:b|t)|smlaw(?:b|t)|smlal(?:b|t)(?:b|t)|smuadx?|smladx?|smlaldx?|smusdx?|smlsdx?|smlsldx?|smmulr?|smmlar?|smmlsr?|mia|miaph|mia(?:b|t)(?:b|t)|clz|(?:s|q|sh|u|uq|uh)(?:add16|sub16|add8|sub8|addsubx|subaddx)|usad8|usada8|mrs|msr|mra|mar|cpy|tst|teq|cmp|cmn|ssat|ssat16|usat|usat16|pkhbt|pkhtb|sxth|sxtb16|sxtb|uxth|uxtb16|uxtb|sxtah|sxtab16|sxtab|uxtah|uxtab16|uxtab|rev|rev16|revsh|sel|b|bl|bx|blx|bxj|swi|svc|ldrex|strex|cdp|mrc|mrrc|mcr|mcrr|ldc|stc)(?:eq|ne|cs|hs|cc|lo|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al)?|ldr(?:eq|ne|cs|hs|cc|lo|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al)?(?:t|b|bt|sb|h|sh|d)?|str(?:eq|ne|cs|hs|cc|lo|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al)?(?:t|b|bt|h|d)?|(?:ldm|stm)(?:eq|ne|cs|hs|cc|lo|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al)?(?:ia|ib|da|db|fd|ed|fa|ea)|swp(?:eq|ne|cs|hs|cc|lo|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al)?b?|mov(?:t|w)?)\\\\b',\n        caseInsensitive: true\n      }, {\n        token: 'variable.parameter.register.assembly',\n        regex: '\\\\b(?:r0|r1|r2|r3|r4|r5|r6|r7|r8|r9|r10|r11|r12|r13|r14|r15|fp|ip|sp|lr|pc|cpsr|spsr|c|f|s|x|lsl|lsr|asr|ror|rrx)\\\\b',\n        caseInsensitive: true\n      }, {\n        token: 'constant.character.hexadecimal.assembly',\n        regex: '#0x[A-F0-9]+',\n        caseInsensitive: true\n      }, {\n        token: 'constant.character.decimal.assembly',\n        regex: '#[0-9]+'\n      }, {\n        token: 'string.assembly',\n        regex: /'([^\\\\']|\\\\.)*'/\n      }, {\n        token: 'string.assembly',\n        regex: /\"([^\\\\\"]|\\\\.)*\"/\n      }, {\n        token: 'support.function.directive.assembly',\n        regex: '(?:\\.section|\\.global|\\.text|\\.asciz|\\.asciiz|\\.ascii|\\.align|\\.byte|\\.end|\\.data|\\.equ|\\.extern|\\.include)'\n      }, {\n        token: 'entity.name.function.assembly',\n        regex: '^\\\\s*%%[\\\\w.]+?:$'\n      }, {\n        token: 'entity.name.function.assembly',\n        regex: '^\\\\s*%\\\\$[\\\\w.]+?:$'\n      }, {\n        token: 'entity.name.function.assembly',\n        regex: '^[\\\\w.]+?:'\n      }, {\n        token: 'entity.name.function.assembly',\n        regex: '^[\\\\w.]+?\\\\b'\n      }, {\n        token: 'comment.assembly',\n        regex: '\\\\/\\\\*',\n        next: 'comment'\n      }, {\n        token: 'comment.assembly',\n        regex: '(?:;|//|@).*$'\n      }],\n      comment: [{\n        token: 'comment.assembly',\n        regex: '\\\\*\\\\/',\n        next: 'start'\n      }, {\n        defaultToken: 'comment'\n      }]\n    };\n    this.normalizeRules();\n  };\n  AssemblyARM32HighlightRules.metaData = {\n    fileTypes: ['s'],\n    name: 'Assembly ARM32',\n    scopeName: 'source.assembly'\n  };\n  oop.inherits(AssemblyARM32HighlightRules, TextHighlightRules);\n  exports.AssemblyARM32HighlightRules = AssemblyARM32HighlightRules;\n});\nace.define(\"ace/mode/folding/coffee\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var Range = require(\"../../range\").Range;\n  var FoldMode = exports.FoldMode = function () {};\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.commentBlock = function (session, row) {\n      var re = /\\S/;\n      var line = session.getLine(row);\n      var startLevel = line.search(re);\n      if (startLevel == -1 || line[startLevel] != \"#\") return;\n      var startColumn = line.length;\n      var maxRow = session.getLength();\n      var startRow = row;\n      var endRow = row;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var level = line.search(re);\n        if (level == -1) continue;\n        if (line[level] != \"#\") break;\n        endRow = row;\n      }\n      if (endRow > startRow) {\n        var endColumn = session.getLine(endRow).length;\n        return new Range(startRow, startColumn, endRow, endColumn);\n      }\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var range = this.indentationBlock(session, row);\n      if (range) return range;\n      range = this.commentBlock(session, row);\n      if (range) return range;\n    };\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var indent = line.search(/\\S/);\n      var next = session.getLine(row + 1);\n      var prev = session.getLine(row - 1);\n      var prevIndent = prev.search(/\\S/);\n      var nextIndent = next.search(/\\S/);\n      if (indent == -1) {\n        session.foldWidgets[row - 1] = prevIndent != -1 && prevIndent < nextIndent ? \"start\" : \"\";\n        return \"\";\n      }\n      if (prevIndent == -1) {\n        if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n          session.foldWidgets[row - 1] = \"\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"start\";\n        }\n      } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n        if (session.getLine(row - 2).search(/\\S/) == -1) {\n          session.foldWidgets[row - 1] = \"start\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"\";\n        }\n      }\n      if (prevIndent != -1 && prevIndent < indent) session.foldWidgets[row - 1] = \"start\";else session.foldWidgets[row - 1] = \"\";\n      if (indent < nextIndent) return \"start\";else return \"\";\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/assembly_arm32\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/assembly_arm32_highlight_rules\", \"ace/mode/folding/coffee\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var AssemblyARM32HighlightRules = require(\"./assembly_arm32_highlight_rules\").AssemblyARM32HighlightRules;\n  var FoldMode = require(\"./folding/coffee\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = AssemblyARM32HighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = [\";\"];\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\"\n    };\n    this.$id = \"ace/mode/assembly_arm32\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/assembly_arm32\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}