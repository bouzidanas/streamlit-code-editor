{"code":"ace.define(\"ace/mode/flix_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],(function(e,t,r){\"use strict\";var o=e(\"../lib/oop\"),n=e(\"./text_highlight_rules\").TextHighlightRules,a=function(){var e=this.createKeywordMapper({keyword:\"use|checked_cast|checked_ecast|unchecked_cast|masked_cast|as|discard|from|into|inject|project|solve|query|where|select|force|import|region|red|deref\",\"keyword.control\":\"choose|debug|do|for|forA|forM|foreach|yield|if|else|case|match|typematch|try|catch|resume|spawn|par|branch|jumpto\",\"keyword.operator\":\"not|and|or|fix\",\"storage.type\":\"eff|def|law|enum|case|type|alias|class|instance|mod|let\",\"storage.modifier\":\"with|without|opaque|lazy|lawful|pub|override|sealed|static\",\"support.type\":\"Unit|Bool|Char|Float32|Float64|Int8|Int16|Int32|Int64|BigInt|String\"},\"identifier\");this.$rules={start:[{token:\"comment.line\",regex:\"\\\\/\\\\/.*$\"},{token:\"comment.block\",regex:\"\\\\/\\\\*\",next:\"comment\"},{token:\"string\",regex:'\"',next:\"string\"},{token:\"string.regexp\",regex:'regex\"',next:\"regex\"},{token:\"constant.character\",regex:\"'\",next:\"char\"},{token:\"constant.numeric\",regex:\"0x[a-fA-F0-9](_*[a-fA-F0-9])*(i8|i16|i32|i64|ii)?\\\\b\"},{token:\"constant.numeric\",regex:\"[0-9](_*[0-9])*\\\\.[0-9](_*[0-9])*(f32|f64)?\\\\b\"},{token:\"constant.numeric\",regex:\"[0-9](_*[0-9])*(i8|i16|i32|i64|ii)?\\\\b\"},{token:\"constant.language.boolean\",regex:\"(true|false)\\\\b\"},{token:\"constant.language\",regex:\"null\\\\b\"},{token:\"keyword.operator\",regex:\"\\\\->|~>|<\\\\-|=>\"},{token:\"storage.modifier\",regex:\"@(Deprecated|Experimental|Internal|ParallelWhenPure|Parallel|LazyWhenPure|Lazy|Skip|Test)\\\\b\"},{token:\"keyword\",regex:\"(\\\\?\\\\?\\\\?|\\\\?[a-zA-Z0-9]+)\"},{token:e,regex:\"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"},{token:\"paren.lparen\",regex:\"[[({]\"},{token:\"paren.rparen\",regex:\"[\\\\])}]\"},{token:\"text\",regex:\"\\\\s+\"}],comment:[{token:\"comment.block\",regex:\"\\\\*\\\\/\",next:\"start\"},{defaultToken:\"comment.block\"}],string:[{token:\"constant.character.escape\",regex:\"\\\\\\\\(u[0-9a-fA-F]{4})\"},{token:\"constant.character.escape\",regex:\"\\\\\\\\.\"},{token:\"string\",regex:'\"',next:\"start\"},{token:\"string\",regex:'[^\"\\\\\\\\]+'}],regex:[{token:\"constant.character.escape\",regex:\"\\\\\\\\(u[0-9a-fA-F]{4})\"},{token:\"constant.character.escape\",regex:\"\\\\\\\\.\"},{token:\"string.regexp\",regex:'\"',next:\"start\"},{token:\"string.regexp\",regex:'[^\"\\\\\\\\]+'}],char:[{token:\"constant.character.escape\",regex:\"\\\\\\\\(u[0-9a-fA-F]{4})\"},{token:\"constant.character.escape\",regex:\"\\\\\\\\.\"},{token:\"constant.character\",regex:\"'\",next:\"start\"},{token:\"constant.character\",regex:\"[^'\\\\\\\\]+\"}]}};o.inherits(a,n),t.FlixHighlightRules=a})),ace.define(\"ace/mode/flix\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/flix_highlight_rules\"],(function(e,t,r){\"use strict\";var o=e(\"../lib/oop\"),n=e(\"./text\").Mode,a=e(\"./flix_highlight_rules\").FlixHighlightRules,c=function(){this.HighlightRules=a};o.inherits(c,n),function(){this.$id=\"ace/mode/flix\"}.call(c.prototype),t.Mode=c})),ace.require([\"ace/mode/flix\"],(function(e){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=e)}));","name":"6e813ddb0a1b8c2dd293919519ab877a.js","input":"ace.define(\"ace/mode/flix_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var FlixHighlightRules = function () {\n    var keywords = \"use|checked_cast|checked_ecast|unchecked_cast|masked_cast|as|discard|from|\" + \"into|inject|project|solve|query|where|select|force|import|region|red|deref\";\n    var controlKeywords = \"choose|debug|do|for|forA|forM|foreach|yield|if|else|case|\" + \"match|typematch|try|catch|resume|spawn|par|branch|jumpto\";\n    var operators = \"not|and|or|fix\";\n    var declarations = \"eff|def|law|enum|case|type|alias|class|instance|mod|let\";\n    var modifiers = \"with|without|opaque|lazy|lawful|pub|override|sealed|static\";\n    var primitives = \"Unit|Bool|Char|Float32|Float64|Int8|Int16|Int32|Int64|BigInt|String\";\n    var keywordMapper = this.createKeywordMapper({\n      \"keyword\": keywords,\n      \"keyword.control\": controlKeywords,\n      \"keyword.operator\": operators,\n      \"storage.type\": declarations,\n      \"storage.modifier\": modifiers,\n      \"support.type\": primitives\n    }, \"identifier\");\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.line\",\n        regex: \"\\\\/\\\\/.*$\"\n      }, {\n        token: \"comment.block\",\n        regex: \"\\\\/\\\\*\",\n        next: \"comment\"\n      }, {\n        token: \"string\",\n        regex: '\"',\n        next: \"string\"\n      }, {\n        token: \"string.regexp\",\n        regex: 'regex\"',\n        next: \"regex\"\n      }, {\n        token: \"constant.character\",\n        regex: \"'\",\n        next: \"char\"\n      }, {\n        token: \"constant.numeric\",\n        // hex\n        regex: \"0x[a-fA-F0-9](_*[a-fA-F0-9])*(i8|i16|i32|i64|ii)?\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: \"[0-9](_*[0-9])*\\\\.[0-9](_*[0-9])*(f32|f64)?\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // integer\n        regex: \"[0-9](_*[0-9])*(i8|i16|i32|i64|ii)?\\\\b\"\n      }, {\n        token: \"constant.language.boolean\",\n        regex: \"(true|false)\\\\b\"\n      }, {\n        token: \"constant.language\",\n        regex: \"null\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"\\\\->|~>|<\\\\-|=>\"\n      }, {\n        token: \"storage.modifier\",\n        regex: \"@(Deprecated|Experimental|Internal|ParallelWhenPure|Parallel|LazyWhenPure|Lazy|Skip|Test)\\\\b\"\n      }, {\n        token: \"keyword\",\n        // hole\n        regex: \"(\\\\?\\\\?\\\\?|\\\\?[a-zA-Z0-9]+)\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      \"comment\": [{\n        token: \"comment.block\",\n        regex: \"\\\\*\\\\/\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment.block\"\n      }],\n      \"string\": [{\n        token: \"constant.character.escape\",\n        // unicode\n        regex: \"\\\\\\\\(u[0-9a-fA-F]{4})\"\n      }, {\n        token: \"constant.character.escape\",\n        regex: '\\\\\\\\.'\n      }, {\n        token: \"string\",\n        regex: '\"',\n        next: \"start\"\n      }, {\n        token: \"string\",\n        regex: '[^\"\\\\\\\\]+'\n      }],\n      \"regex\": [{\n        token: \"constant.character.escape\",\n        // unicode\n        regex: \"\\\\\\\\(u[0-9a-fA-F]{4})\"\n      }, {\n        token: \"constant.character.escape\",\n        regex: '\\\\\\\\.'\n      }, {\n        token: \"string.regexp\",\n        regex: '\"',\n        next: \"start\"\n      }, {\n        token: \"string.regexp\",\n        regex: '[^\"\\\\\\\\]+'\n      }],\n      \"char\": [{\n        token: \"constant.character.escape\",\n        // unicode\n        regex: \"\\\\\\\\(u[0-9a-fA-F]{4})\"\n      }, {\n        token: \"constant.character.escape\",\n        regex: '\\\\\\\\.'\n      }, {\n        token: \"constant.character\",\n        regex: \"'\",\n        next: \"start\"\n      }, {\n        token: \"constant.character\",\n        regex: \"[^'\\\\\\\\]+\"\n      }]\n    };\n  };\n  oop.inherits(FlixHighlightRules, TextHighlightRules);\n  exports.FlixHighlightRules = FlixHighlightRules;\n});\nace.define(\"ace/mode/flix\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/flix_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var FlixHighlightRules = require(\"./flix_highlight_rules\").FlixHighlightRules;\n  var Mode = function () {\n    this.HighlightRules = FlixHighlightRules;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.$id = \"ace/mode/flix\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/flix\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}