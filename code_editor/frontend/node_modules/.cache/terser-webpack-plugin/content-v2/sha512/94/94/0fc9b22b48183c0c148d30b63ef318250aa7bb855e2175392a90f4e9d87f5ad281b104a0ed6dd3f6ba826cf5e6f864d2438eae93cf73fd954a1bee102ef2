{"code":"ace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],(function(e,t,r){\"use strict\";var n=e(\"../lib/oop\"),o=e(\"./text_highlight_rules\").TextHighlightRules,i=function(){this.$rules={start:[{token:\"comment.doc.tag\",regex:\"@\\\\w+(?=\\\\s|$)\"},i.getTagRule(),{defaultToken:\"comment.doc.body\",caseInsensitive:!0}]}};n.inherits(i,o),i.getTagRule=function(e){return{token:\"comment.doc.tag.storage.type\",regex:\"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"}},i.getStartRule=function(e){return{token:\"comment.doc\",regex:/\\/\\*\\*(?!\\/)/,next:e}},i.getEndRule=function(e){return{token:\"comment.doc\",regex:\"\\\\*\\\\/\",next:e}},t.DocCommentHighlightRules=i})),ace.define(\"ace/mode/java_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/doc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"],(function(e,t,r){\"use strict\";var n=e(\"../lib/oop\"),o=e(\"./doc_comment_highlight_rules\").DocCommentHighlightRules,i=e(\"./text_highlight_rules\").TextHighlightRules,a=function(){var e=\"[a-zA-Z_$][a-zA-Z0-9_$]*\",t=this.createKeywordMapper({\"variable.language\":\"this\",\"constant.language\":\"null|Infinity|NaN|undefined\",\"support.function\":\"AbstractMethodError|AssertionError|ClassCircularityError|ClassFormatError|Deprecated|EnumConstantNotPresentException|ExceptionInInitializerError|IllegalAccessError|IllegalThreadStateException|InstantiationError|InternalError|NegativeArraySizeException|NoSuchFieldError|Override|Process|ProcessBuilder|SecurityManager|StringIndexOutOfBoundsException|SuppressWarnings|TypeNotPresentException|UnknownError|UnsatisfiedLinkError|UnsupportedClassVersionError|VerifyError|InstantiationException|IndexOutOfBoundsException|ArrayIndexOutOfBoundsException|CloneNotSupportedException|NoSuchFieldException|IllegalArgumentException|NumberFormatException|SecurityException|Void|InheritableThreadLocal|IllegalStateException|InterruptedException|NoSuchMethodException|IllegalAccessException|UnsupportedOperationException|Enum|StrictMath|Package|Compiler|Readable|Runtime|StringBuilder|Math|IncompatibleClassChangeError|NoSuchMethodError|ThreadLocal|RuntimePermission|ArithmeticException|NullPointerException|Long|Integer|Short|Byte|Double|Number|Float|Character|Boolean|StackTraceElement|Appendable|StringBuffer|Iterable|ThreadGroup|Runnable|Thread|IllegalMonitorStateException|StackOverflowError|OutOfMemoryError|VirtualMachineError|ArrayStoreException|ClassCastException|LinkageError|NoClassDefFoundError|ClassNotFoundException|RuntimeException|Exception|ThreadDeath|Error|Throwable|System|ClassLoader|Cloneable|Class|CharSequence|Comparable|String|Object\"},\"identifier\");this.$rules={start:[{token:\"comment\",regex:\"\\\\/\\\\/.*$\"},o.getStartRule(\"doc-start\"),{token:\"comment\",regex:\"\\\\/\\\\*\",next:\"comment\"},{include:\"multiline-strings\"},{include:\"strings\"},{include:\"constants\"},{regex:\"(open(?:\\\\s+))?module(?=\\\\s*\\\\w)\",token:\"keyword\",next:[{regex:\"{\",token:\"paren.lparen\",next:[{regex:\"}\",token:\"paren.rparen\",next:\"start\"},{regex:\"\\\\b(requires|transitive|exports|opens|to|uses|provides|with)\\\\b\",token:\"keyword\"}]},{token:\"text\",regex:\"\\\\s+\"},{token:\"identifier\",regex:\"\\\\w+\"},{token:\"punctuation.operator\",regex:\".\"},{token:\"text\",regex:\"\\\\s+\"},{regex:\"\",next:\"start\"}]},{include:\"statements\"}],comment:[{token:\"comment\",regex:\"\\\\*\\\\/\",next:\"start\"},{defaultToken:\"comment\"}],strings:[{token:[\"punctuation\",\"string\"],regex:/(\\.)(\")/,push:[{token:\"lparen\",regex:/\\\\\\{/,push:[{token:\"text\",regex:/$/,next:\"start\"},{token:\"rparen\",regex:/}/,next:\"pop\"},{include:\"strings\"},{include:\"constants\"},{include:\"statements\"}]},{token:\"string\",regex:/\"/,next:\"pop\"},{defaultToken:\"string\"}]},{token:\"string\",regex:'[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'},{token:\"string\",regex:\"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"}],\"multiline-strings\":[{token:[\"punctuation\",\"string\"],regex:/(\\.)(\"\"\")/,push:[{token:\"string\",regex:'\"\"\"',next:\"pop\"},{token:\"lparen\",regex:/\\\\\\{/,push:[{token:\"text\",regex:/$/,next:\"start\"},{token:\"rparen\",regex:/}/,next:\"pop\"},{include:\"multiline-strings\"},{include:\"strings\"},{include:\"constants\"},{include:\"statements\"}]},{token:\"constant.language.escape\",regex:/\\\\./},{defaultToken:\"string\"}]},{token:\"string\",regex:'\"\"\"',push:[{token:\"string\",regex:'\"\"\"',next:\"pop\"},{token:\"constant.language.escape\",regex:/\\\\./},{defaultToken:\"string\"}]}],constants:[{token:\"constant.numeric\",regex:/0(?:[xX][0-9a-fA-F][0-9a-fA-F_]*|[bB][01][01_]*)[LlSsDdFfYy]?\\b/},{token:\"constant.numeric\",regex:/[+-]?\\d[\\d_]*(?:(?:\\.[\\d_]*)?(?:[eE][+-]?[\\d_]+)?)?[LlSsDdFfYy]?\\b/},{token:\"constant.language.boolean\",regex:\"(?:true|false)\\\\b\"}],statements:[{token:[\"keyword\",\"text\",\"identifier\"],regex:\"(record)(\\\\s+)(\"+e+\")\\\\b\"},{token:\"keyword\",regex:\"(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while|var|exports|opens|requires|uses|yield|module|permits|(?:non\\\\-)?sealed|var|provides|to|when|open|record|transitive|with)\\\\b\"},{token:\"storage.type.annotation\",regex:\"@\"+e+\"\\\\b\"},{token:\"entity.name.function\",regex:e+\"(?=\\\\()\"},{token:t,regex:e+\"\\\\b\"},{token:\"keyword.operator\",regex:\"!|\\\\$|%|&|\\\\||\\\\^|\\\\*|\\\\/|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?|\\\\:|\\\\*=|\\\\/=|%=|\\\\+=|\\\\-=|&=|\\\\|=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"},{token:\"lparen\",regex:\"[[({]\"},{token:\"rparen\",regex:\"[\\\\])}]\"},{token:\"text\",regex:\"\\\\s+\"}]},this.embedRules(o,\"doc-\",[o.getEndRule(\"start\")]),this.normalizeRules()};n.inherits(a,i),t.JavaHighlightRules=a})),ace.define(\"ace/mode/drools_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\",\"ace/mode/java_highlight_rules\",\"ace/mode/doc_comment_highlight_rules\"],(function(e,t,r){\"use strict\";var n=e(\"../lib/oop\"),o=e(\"./text_highlight_rules\").TextHighlightRules,i=e(\"./java_highlight_rules\").JavaHighlightRules,a=e(\"./doc_comment_highlight_rules\").DocCommentHighlightRules,s=\"[a-zA-Z\\\\$_\\xa1-\\uffff][a-zA-Z\\\\d\\\\$_\\xa1-\\uffff]*\",l=\"[a-zA-Z\\\\$_\\xa1-\\uffff][\\\\.a-zA-Z\\\\d\\\\$_\\xa1-\\uffff]*\",c=function(){var e,t=this.createKeywordMapper({\"variable.language\":\"this\",keyword:\"date|effective|expires|lock|on|active|no|loop|auto|focus|activation|group|agenda|ruleflow|duration|timer|calendars|refract|direct|dialect|salience|enabled|attributes|extends|template|function|contains|matches|eval|excludes|soundslike|memberof|not|in|or|and|exists|forall|over|from|entry|point|accumulate|acc|collect|action|reverse|result|end|init|instanceof|extends|super|boolean|char|byte|short|int|long|float|double|this|void|class|new|case|final|if|else|for|while|do|default|try|catch|finally|switch|synchronized|return|throw|break|continue|assert|modify|static|public|protected|private|abstract|native|transient|volatile|strictfp|throws|interface|enum|implements|type|window|trait|no-loop|str\",\"constant.language\":\"null\",\"support.class\":\"AbstractMethodError|AssertionError|ClassCircularityError|ClassFormatError|Deprecated|EnumConstantNotPresentException|ExceptionInInitializerError|IllegalAccessError|IllegalThreadStateException|InstantiationError|InternalError|NegativeArraySizeException|NoSuchFieldError|Override|Process|ProcessBuilder|SecurityManager|StringIndexOutOfBoundsException|SuppressWarnings|TypeNotPresentException|UnknownError|UnsatisfiedLinkError|UnsupportedClassVersionError|VerifyError|InstantiationException|IndexOutOfBoundsException|ArrayIndexOutOfBoundsException|CloneNotSupportedException|NoSuchFieldException|IllegalArgumentException|NumberFormatException|SecurityException|Void|InheritableThreadLocal|IllegalStateException|InterruptedException|NoSuchMethodException|IllegalAccessException|UnsupportedOperationException|Enum|StrictMath|Package|Compiler|Readable|Runtime|StringBuilder|Math|IncompatibleClassChangeError|NoSuchMethodError|ThreadLocal|RuntimePermission|ArithmeticException|NullPointerException|Long|Integer|Short|Byte|Double|Number|Float|Character|Boolean|StackTraceElement|Appendable|StringBuffer|Iterable|ThreadGroup|Runnable|Thread|IllegalMonitorStateException|StackOverflowError|OutOfMemoryError|VirtualMachineError|ArrayStoreException|ClassCastException|LinkageError|NoClassDefFoundError|ClassNotFoundException|RuntimeException|Exception|ThreadDeath|Error|Throwable|System|ClassLoader|Cloneable|Class|CharSequence|Comparable|String|Object\",\"support.function\":\"retract|update|modify|insert\"},\"identifier\");this.$rules={start:[].concat(function(e){return[{token:\"comment\",regex:\"\\\\/\\\\/.*$\"},a.getStartRule(\"doc-start\"),{token:\"comment\",regex:\"\\\\/\\\\*\",next:e},{token:\"constant.numeric\",regex:\"0[xX][0-9a-fA-F]+\\\\b\"},{token:\"constant.numeric\",regex:\"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"},{token:\"constant.language.boolean\",regex:\"(?:true|false)\\\\b\"}]}(\"block.comment\"),[{token:\"entity.name.type\",regex:\"@[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"},{token:[\"keyword\",\"text\",\"entity.name.type\"],regex:\"(package)(\\\\s+)(\"+l+\")\"},{token:[\"keyword\",\"text\",\"keyword\",\"text\",\"entity.name.type\"],regex:\"(import)(\\\\s+)(function)(\\\\s+)(\"+l+\")\"},{token:[\"keyword\",\"text\",\"entity.name.type\"],regex:\"(import)(\\\\s+)(\"+l+\")\"},{token:[\"keyword\",\"text\",\"entity.name.type\",\"text\",\"variable\"],regex:\"(global)(\\\\s+)(\"+l+\")(\\\\s+)(\"+s+\")\"},{token:[\"keyword\",\"text\",\"keyword\",\"text\",\"entity.name.type\"],regex:\"(declare)(\\\\s+)(trait)(\\\\s+)(\"+s+\")\"},{token:[\"keyword\",\"text\",\"entity.name.type\"],regex:\"(declare)(\\\\s+)(\"+s+\")\"},{token:[\"keyword\",\"text\",\"entity.name.type\"],regex:\"(extends)(\\\\s+)(\"+l+\")\"},{token:[\"keyword\",\"text\"],regex:\"(rule)(\\\\s+)\",next:\"asset.name\"}],[{token:\"string\",regex:'[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'},{token:\"string\",regex:\"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"}],[{token:[\"variable.other\",\"text\",\"text\"],regex:\"(\"+s+\")(\\\\s*)(:)\"},{token:[\"keyword\",\"text\"],regex:\"(query)(\\\\s+)\",next:\"asset.name\"},{token:[\"keyword\",\"text\"],regex:\"(when)(\\\\s*)\"},{token:[\"keyword\",\"text\"],regex:\"(then)(\\\\s*)\",next:\"java-start\"},{token:\"paren.lparen\",regex:/[\\[({]/},{token:\"paren.rparen\",regex:/[\\])}]/}],[{token:t,regex:\"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"},{token:\"keyword.operator\",regex:\"!|\\\\$|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"},{token:\"lparen\",regex:\"[[({]\"},{token:\"rparen\",regex:\"[\\\\])}]\"},{token:\"text\",regex:\"\\\\s+\"}]),\"block.comment\":(e=\"start\",[{token:\"comment.block\",regex:\"\\\\*\\\\/\",next:e},{defaultToken:\"comment.block\"}]),\"asset.name\":[{token:\"entity.name\",regex:'[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'},{token:\"entity.name\",regex:\"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"},{token:\"entity.name\",regex:s},{regex:\"\",token:\"empty\",next:\"start\"}]},this.embedRules(a,\"doc-\",[a.getEndRule(\"start\")]),this.embedRules(i,\"java-\",[{token:\"support.function\",regex:\"\\\\b(insert|modify|retract|update)\\\\b\"},{token:\"keyword\",regex:\"\\\\bend\\\\b\",next:\"start\"}])};n.inherits(c,o),t.DroolsHighlightRules=c})),ace.define(\"ace/mode/folding/drools\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\",\"ace/token_iterator\"],(function(e,t,r){\"use strict\";var n=e(\"../../lib/oop\"),o=e(\"../../range\").Range,i=e(\"./fold_mode\").FoldMode,a=e(\"../../token_iterator\").TokenIterator,s=t.FoldMode=function(){};n.inherits(s,i),function(){this.foldingStartMarker=/\\b(rule|declare|query|when|then)\\b/,this.foldingStopMarker=/\\bend\\b/,this.getFoldWidgetRange=function(e,t,r){var n=e.getLine(r),i=n.match(this.foldingStartMarker);if(i){i.index;if(i[1]){var s={row:r,column:n.length},l=new a(e,s.row,s.column),c=\"end\",u=l.getCurrentToken();for(\"when\"==u.value&&(c=\"then\");u;){if(u.value==c)return o.fromPoints(s,{row:l.getCurrentTokenRow(),column:l.getCurrentTokenColumn()});u=l.stepForward()}}}}}.call(s.prototype)})),ace.define(\"ace/mode/drools\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/drools_highlight_rules\",\"ace/mode/folding/drools\"],(function(e,t,r){\"use strict\";var n=e(\"../lib/oop\"),o=e(\"./text\").Mode,i=e(\"./drools_highlight_rules\").DroolsHighlightRules,a=e(\"./folding/drools\").FoldMode,s=function(){this.HighlightRules=i,this.foldingRules=new a,this.$behaviour=this.$defaultBehaviour};n.inherits(s,o),function(){this.lineCommentStart=\"//\",this.$id=\"ace/mode/drools\",this.snippetFileId=\"ace/snippets/drools\"}.call(s.prototype),t.Mode=s})),ace.require([\"ace/mode/drools\"],(function(e){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=e)}));","name":"09b692bdd107a162d70e85daf94a3fb6.js","input":"ace.define(\"ace/mode/doc_comment_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var DocCommentHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.doc.tag\",\n        regex: \"@\\\\w+(?=\\\\s|$)\"\n      }, DocCommentHighlightRules.getTagRule(), {\n        defaultToken: \"comment.doc.body\",\n        caseInsensitive: true\n      }]\n    };\n  };\n  oop.inherits(DocCommentHighlightRules, TextHighlightRules);\n  DocCommentHighlightRules.getTagRule = function (start) {\n    return {\n      token: \"comment.doc.tag.storage.type\",\n      regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n  };\n  DocCommentHighlightRules.getStartRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // doc comment\n      regex: /\\/\\*\\*(?!\\/)/,\n      next: start\n    };\n  };\n  DocCommentHighlightRules.getEndRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // closing comment\n      regex: \"\\\\*\\\\/\",\n      next: start\n    };\n  };\n  exports.DocCommentHighlightRules = DocCommentHighlightRules;\n});\nace.define(\"ace/mode/java_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/doc_comment_highlight_rules\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var JavaHighlightRules = function () {\n    var identifierRe = \"[a-zA-Z_$][a-zA-Z0-9_$]*\";\n    var keywords = \"abstract|continue|for|new|switch|\" + \"assert|default|goto|package|synchronized|\" + \"boolean|do|if|private|this|\" + \"break|double|implements|protected|throw|\" + \"byte|else|import|public|throws|\" + \"case|enum|instanceof|return|transient|\" + \"catch|extends|int|short|try|\" + \"char|final|interface|static|void|\" + \"class|finally|long|strictfp|volatile|\" + \"const|float|native|super|while|\" + \"var|exports|opens|requires|uses|yield|\" + \"module|permits|(?:non\\\\-)?sealed|var|\" + \"provides|to|when|\" + \"open|record|transitive|with\";\n    var buildinConstants = \"null|Infinity|NaN|undefined\";\n    var langClasses = \"AbstractMethodError|AssertionError|ClassCircularityError|\" + \"ClassFormatError|Deprecated|EnumConstantNotPresentException|\" + \"ExceptionInInitializerError|IllegalAccessError|\" + \"IllegalThreadStateException|InstantiationError|InternalError|\" + \"NegativeArraySizeException|NoSuchFieldError|Override|Process|\" + \"ProcessBuilder|SecurityManager|StringIndexOutOfBoundsException|\" + \"SuppressWarnings|TypeNotPresentException|UnknownError|\" + \"UnsatisfiedLinkError|UnsupportedClassVersionError|VerifyError|\" + \"InstantiationException|IndexOutOfBoundsException|\" + \"ArrayIndexOutOfBoundsException|CloneNotSupportedException|\" + \"NoSuchFieldException|IllegalArgumentException|NumberFormatException|\" + \"SecurityException|Void|InheritableThreadLocal|IllegalStateException|\" + \"InterruptedException|NoSuchMethodException|IllegalAccessException|\" + \"UnsupportedOperationException|Enum|StrictMath|Package|Compiler|\" + \"Readable|Runtime|StringBuilder|Math|IncompatibleClassChangeError|\" + \"NoSuchMethodError|ThreadLocal|RuntimePermission|ArithmeticException|\" + \"NullPointerException|Long|Integer|Short|Byte|Double|Number|Float|\" + \"Character|Boolean|StackTraceElement|Appendable|StringBuffer|\" + \"Iterable|ThreadGroup|Runnable|Thread|IllegalMonitorStateException|\" + \"StackOverflowError|OutOfMemoryError|VirtualMachineError|\" + \"ArrayStoreException|ClassCastException|LinkageError|\" + \"NoClassDefFoundError|ClassNotFoundException|RuntimeException|\" + \"Exception|ThreadDeath|Error|Throwable|System|ClassLoader|\" + \"Cloneable|Class|CharSequence|Comparable|String|Object\";\n    var keywordMapper = this.createKeywordMapper({\n      \"variable.language\": \"this\",\n      \"constant.language\": buildinConstants,\n      \"support.function\": langClasses\n    }, \"identifier\");\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"\\\\/\\\\/.*$\"\n      }, DocCommentHighlightRules.getStartRule(\"doc-start\"), {\n        token: \"comment\",\n        // multi line comment\n        regex: \"\\\\/\\\\*\",\n        next: \"comment\"\n      }, {\n        include: \"multiline-strings\"\n      }, {\n        include: \"strings\"\n      }, {\n        include: \"constants\"\n      }, {\n        regex: \"(open(?:\\\\s+))?module(?=\\\\s*\\\\w)\",\n        token: \"keyword\",\n        next: [{\n          regex: \"{\",\n          token: \"paren.lparen\",\n          next: [{\n            regex: \"}\",\n            token: \"paren.rparen\",\n            next: \"start\"\n          }, {\n            regex: \"\\\\b(requires|transitive|exports|opens|to|uses|provides|with)\\\\b\",\n            token: \"keyword\"\n          }]\n        }, {\n          token: \"text\",\n          regex: \"\\\\s+\"\n        }, {\n          token: \"identifier\",\n          regex: \"\\\\w+\"\n        }, {\n          token: \"punctuation.operator\",\n          regex: \".\"\n        }, {\n          token: \"text\",\n          regex: \"\\\\s+\"\n        }, {\n          regex: \"\",\n          // exit if there is anything else\n          next: \"start\"\n        }]\n      }, {\n        include: \"statements\"\n      }],\n      \"comment\": [{\n        token: \"comment\",\n        // closing comment\n        regex: \"\\\\*\\\\/\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment\"\n      }],\n      \"strings\": [{\n        token: [\"punctuation\", \"string\"],\n        regex: /(\\.)(\")/,\n        push: [{\n          token: \"lparen\",\n          regex: /\\\\\\{/,\n          push: [{\n            token: \"text\",\n            regex: /$/,\n            next: \"start\"\n          }, {\n            token: \"rparen\",\n            regex: /}/,\n            next: \"pop\"\n          }, {\n            include: \"strings\"\n          }, {\n            include: \"constants\"\n          }, {\n            include: \"statements\"\n          }]\n        }, {\n          token: \"string\",\n          regex: /\"/,\n          next: \"pop\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        token: \"string\",\n        // single line\n        regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n      }, {\n        token: \"string\",\n        // single line\n        regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n      }],\n      \"multiline-strings\": [{\n        token: [\"punctuation\", \"string\"],\n        regex: /(\\.)(\"\"\")/,\n        push: [{\n          token: \"string\",\n          regex: '\"\"\"',\n          next: \"pop\"\n        }, {\n          token: \"lparen\",\n          regex: /\\\\\\{/,\n          push: [{\n            token: \"text\",\n            regex: /$/,\n            next: \"start\"\n          }, {\n            token: \"rparen\",\n            regex: /}/,\n            next: \"pop\"\n          }, {\n            include: \"multiline-strings\"\n          }, {\n            include: \"strings\"\n          }, {\n            include: \"constants\"\n          }, {\n            include: \"statements\"\n          }]\n        }, {\n          token: \"constant.language.escape\",\n          regex: /\\\\./\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        token: \"string\",\n        regex: '\"\"\"',\n        push: [{\n          token: \"string\",\n          regex: '\"\"\"',\n          next: \"pop\"\n        }, {\n          token: \"constant.language.escape\",\n          regex: /\\\\./\n        }, {\n          defaultToken: \"string\"\n        }]\n      }],\n      \"constants\": [{\n        token: \"constant.numeric\",\n        // hex\n        regex: /0(?:[xX][0-9a-fA-F][0-9a-fA-F_]*|[bB][01][01_]*)[LlSsDdFfYy]?\\b/\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: /[+-]?\\d[\\d_]*(?:(?:\\.[\\d_]*)?(?:[eE][+-]?[\\d_]+)?)?[LlSsDdFfYy]?\\b/\n      }, {\n        token: \"constant.language.boolean\",\n        regex: \"(?:true|false)\\\\b\"\n      }],\n      \"statements\": [{\n        token: [\"keyword\", \"text\", \"identifier\"],\n        regex: \"(record)(\\\\s+)(\" + identifierRe + \")\\\\b\"\n      }, {\n        token: \"keyword\",\n        regex: \"(?:\" + keywords + \")\\\\b\"\n      }, {\n        token: \"storage.type.annotation\",\n        regex: \"@\" + identifierRe + \"\\\\b\"\n      }, {\n        token: \"entity.name.function\",\n        regex: identifierRe + \"(?=\\\\()\"\n      }, {\n        token: keywordMapper,\n        // TODO: Unicode escape sequences\n        regex: identifierRe + \"\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"!|\\\\$|%|&|\\\\||\\\\^|\\\\*|\\\\/|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?|\\\\:|\\\\*=|\\\\/=|%=|\\\\+=|\\\\-=|&=|\\\\|=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"\n      }, {\n        token: \"lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }]\n    };\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"start\")]);\n    this.normalizeRules();\n  };\n  oop.inherits(JavaHighlightRules, TextHighlightRules);\n  exports.JavaHighlightRules = JavaHighlightRules;\n});\nace.define(\"ace/mode/drools_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\", \"ace/mode/java_highlight_rules\", \"ace/mode/doc_comment_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var JavaHighlightRules = require(\"./java_highlight_rules\").JavaHighlightRules;\n  var DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\n  var identifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\";\n  var packageIdentifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][\\\\.a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\";\n  var DroolsHighlightRules = function () {\n    var keywords = \"date|effective|expires|lock|on|active|no|loop|auto|focus\" + \"|activation|group|agenda|ruleflow|duration|timer|calendars|refract|direct\" + \"|dialect|salience|enabled|attributes|extends|template\" + \"|function|contains|matches|eval|excludes|soundslike\" + \"|memberof|not|in|or|and|exists|forall|over|from|entry|point|accumulate|acc|collect\" + \"|action|reverse|result|end|init|instanceof|extends|super|boolean|char|byte|short\" + \"|int|long|float|double|this|void|class|new|case|final|if|else|for|while|do\" + \"|default|try|catch|finally|switch|synchronized|return|throw|break|continue|assert\" + \"|modify|static|public|protected|private|abstract|native|transient|volatile\" + \"|strictfp|throws|interface|enum|implements|type|window|trait|no-loop|str\";\n    var langClasses = \"AbstractMethodError|AssertionError|ClassCircularityError|\" + \"ClassFormatError|Deprecated|EnumConstantNotPresentException|\" + \"ExceptionInInitializerError|IllegalAccessError|\" + \"IllegalThreadStateException|InstantiationError|InternalError|\" + \"NegativeArraySizeException|NoSuchFieldError|Override|Process|\" + \"ProcessBuilder|SecurityManager|StringIndexOutOfBoundsException|\" + \"SuppressWarnings|TypeNotPresentException|UnknownError|\" + \"UnsatisfiedLinkError|UnsupportedClassVersionError|VerifyError|\" + \"InstantiationException|IndexOutOfBoundsException|\" + \"ArrayIndexOutOfBoundsException|CloneNotSupportedException|\" + \"NoSuchFieldException|IllegalArgumentException|NumberFormatException|\" + \"SecurityException|Void|InheritableThreadLocal|IllegalStateException|\" + \"InterruptedException|NoSuchMethodException|IllegalAccessException|\" + \"UnsupportedOperationException|Enum|StrictMath|Package|Compiler|\" + \"Readable|Runtime|StringBuilder|Math|IncompatibleClassChangeError|\" + \"NoSuchMethodError|ThreadLocal|RuntimePermission|ArithmeticException|\" + \"NullPointerException|Long|Integer|Short|Byte|Double|Number|Float|\" + \"Character|Boolean|StackTraceElement|Appendable|StringBuffer|\" + \"Iterable|ThreadGroup|Runnable|Thread|IllegalMonitorStateException|\" + \"StackOverflowError|OutOfMemoryError|VirtualMachineError|\" + \"ArrayStoreException|ClassCastException|LinkageError|\" + \"NoClassDefFoundError|ClassNotFoundException|RuntimeException|\" + \"Exception|ThreadDeath|Error|Throwable|System|ClassLoader|\" + \"Cloneable|Class|CharSequence|Comparable|String|Object\";\n    var keywordMapper = this.createKeywordMapper({\n      \"variable.language\": \"this\",\n      \"keyword\": keywords,\n      \"constant.language\": \"null\",\n      \"support.class\": langClasses,\n      \"support.function\": \"retract|update|modify|insert\"\n    }, \"identifier\");\n    var stringRules = function () {\n      return [{\n        token: \"string\",\n        // single line\n        regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n      }, {\n        token: \"string\",\n        // single line\n        regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n      }];\n    };\n    var basicPreRules = function (blockCommentRules) {\n      return [{\n        token: \"comment\",\n        regex: \"\\\\/\\\\/.*$\"\n      }, DocCommentHighlightRules.getStartRule(\"doc-start\"), {\n        token: \"comment\",\n        // multi line comment\n        regex: \"\\\\/\\\\*\",\n        next: blockCommentRules\n      }, {\n        token: \"constant.numeric\",\n        // hex\n        regex: \"0[xX][0-9a-fA-F]+\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n      }, {\n        token: \"constant.language.boolean\",\n        regex: \"(?:true|false)\\\\b\"\n      }];\n    };\n    var blockCommentRules = function (returnRule) {\n      return [{\n        token: \"comment.block\",\n        // closing comment\n        regex: \"\\\\*\\\\/\",\n        next: returnRule\n      }, {\n        defaultToken: \"comment.block\"\n      }];\n    };\n    var basicPostRules = function () {\n      return [{\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"!|\\\\$|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"\n      }, {\n        token: \"lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }];\n    };\n    this.$rules = {\n      \"start\": [].concat(basicPreRules(\"block.comment\"), [{\n        token: \"entity.name.type\",\n        regex: \"@[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: [\"keyword\", \"text\", \"entity.name.type\"],\n        regex: \"(package)(\\\\s+)(\" + packageIdentifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\", \"keyword\", \"text\", \"entity.name.type\"],\n        regex: \"(import)(\\\\s+)(function)(\\\\s+)(\" + packageIdentifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\", \"entity.name.type\"],\n        regex: \"(import)(\\\\s+)(\" + packageIdentifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\", \"entity.name.type\", \"text\", \"variable\"],\n        regex: \"(global)(\\\\s+)(\" + packageIdentifierRe + \")(\\\\s+)(\" + identifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\", \"keyword\", \"text\", \"entity.name.type\"],\n        regex: \"(declare)(\\\\s+)(trait)(\\\\s+)(\" + identifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\", \"entity.name.type\"],\n        regex: \"(declare)(\\\\s+)(\" + identifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\", \"entity.name.type\"],\n        regex: \"(extends)(\\\\s+)(\" + packageIdentifierRe + \")\"\n      }, {\n        token: [\"keyword\", \"text\"],\n        regex: \"(rule)(\\\\s+)\",\n        next: \"asset.name\"\n      }], stringRules(), [{\n        token: [\"variable.other\", \"text\", \"text\"],\n        regex: \"(\" + identifierRe + \")(\\\\s*)(:)\"\n      }, {\n        token: [\"keyword\", \"text\"],\n        regex: \"(query)(\\\\s+)\",\n        next: \"asset.name\"\n      }, {\n        token: [\"keyword\", \"text\"],\n        regex: \"(when)(\\\\s*)\"\n      }, {\n        token: [\"keyword\", \"text\"],\n        regex: \"(then)(\\\\s*)\",\n        next: \"java-start\"\n      }, {\n        token: \"paren.lparen\",\n        regex: /[\\[({]/\n      }, {\n        token: \"paren.rparen\",\n        regex: /[\\])}]/\n      }], basicPostRules()),\n      \"block.comment\": blockCommentRules(\"start\"),\n      \"asset.name\": [{\n        token: \"entity.name\",\n        regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n      }, {\n        token: \"entity.name\",\n        regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n      }, {\n        token: \"entity.name\",\n        regex: identifierRe\n      }, {\n        regex: \"\",\n        token: \"empty\",\n        next: \"start\"\n      }]\n    };\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"start\")]);\n    this.embedRules(JavaHighlightRules, \"java-\", [{\n      token: \"support.function\",\n      regex: \"\\\\b(insert|modify|retract|update)\\\\b\"\n    }, {\n      token: \"keyword\",\n      regex: \"\\\\bend\\\\b\",\n      next: \"start\"\n    }]);\n  };\n  oop.inherits(DroolsHighlightRules, TextHighlightRules);\n  exports.DroolsHighlightRules = DroolsHighlightRules;\n});\nace.define(\"ace/mode/folding/drools\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\", \"ace/token_iterator\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Range = require(\"../../range\").Range;\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var TokenIterator = require(\"../../token_iterator\").TokenIterator;\n  var FoldMode = exports.FoldMode = function () {};\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /\\b(rule|declare|query|when|then)\\b/;\n    this.foldingStopMarker = /\\bend\\b/;\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var match = line.match(this.foldingStartMarker);\n      if (match) {\n        var i = match.index;\n        if (match[1]) {\n          var position = {\n            row: row,\n            column: line.length\n          };\n          var iterator = new TokenIterator(session, position.row, position.column);\n          var seek = \"end\";\n          var token = iterator.getCurrentToken();\n          if (token.value == \"when\") {\n            seek = \"then\";\n          }\n          while (token) {\n            if (token.value == seek) {\n              return Range.fromPoints(position, {\n                row: iterator.getCurrentTokenRow(),\n                column: iterator.getCurrentTokenColumn()\n              });\n            }\n            token = iterator.stepForward();\n          }\n        }\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/drools\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/drools_highlight_rules\", \"ace/mode/folding/drools\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var DroolsHighlightRules = require(\"./drools_highlight_rules\").DroolsHighlightRules;\n  var DroolsFoldMode = require(\"./folding/drools\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = DroolsHighlightRules;\n    this.foldingRules = new DroolsFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.$id = \"ace/mode/drools\";\n    this.snippetFileId = \"ace/snippets/drools\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/drools\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}