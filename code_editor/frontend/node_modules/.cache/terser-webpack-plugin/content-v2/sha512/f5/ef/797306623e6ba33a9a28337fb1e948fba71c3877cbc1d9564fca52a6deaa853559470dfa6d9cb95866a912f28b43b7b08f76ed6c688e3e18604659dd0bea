{"code":"ace.define(\"ace/mode/ion_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],(function(e,t,n){\"use strict\";var i=e(\"../lib/oop\"),o=e(\"./text_highlight_rules\").TextHighlightRules,r=function(){var e={token:this.createKeywordMapper({\"constant.language.bool.ion\":\"TRUE|FALSE\",\"constant.language.null.ion\":\"NULL.NULL|NULL.BOOL|NULL.INT|NULL.FLOAT|NULL.DECIMAL|NULL.TIMESTAMP|NULL.STRING|NULL.SYMBOL|NULL.BLOB|NULL.CLOB|NULL.STRUCT|NULL.LIST|NULL.SEXP|NULL\"},\"constant.other.symbol.identifier.ion\",!0),regex:\"\\\\b\\\\w+(?:\\\\.\\\\w+)?\\\\b\"};this.$rules={start:[{include:\"value\"}],value:[{include:\"whitespace\"},{include:\"comment\"},{include:\"annotation\"},{include:\"string\"},{include:\"number\"},{include:\"keywords\"},{include:\"symbol\"},{include:\"clob\"},{include:\"blob\"},{include:\"struct\"},{include:\"list\"},{include:\"sexp\"}],sexp:[{token:\"punctuation.definition.sexp.begin.ion\",regex:\"\\\\(\",push:[{token:\"punctuation.definition.sexp.end.ion\",regex:\"\\\\)\",next:\"pop\"},{include:\"comment\"},{include:\"value\"},{token:\"storage.type.symbol.operator.ion\",regex:\"[\\\\!\\\\#\\\\%\\\\&\\\\*\\\\+\\\\-\\\\./\\\\;\\\\<\\\\=\\\\>\\\\?\\\\@\\\\^\\\\`\\\\|\\\\~]+\"}]}],comment:[{token:\"comment.line.ion\",regex:\"//[^\\\\n]*\"},{token:\"comment.block.ion\",regex:\"/\\\\*\",push:[{token:\"comment.block.ion\",regex:\"[*]/\",next:\"pop\"},{token:\"comment.block.ion\",regex:\"[^*/]+\"},{token:\"comment.block.ion\",regex:\"[*/]+\"}]}],list:[{token:\"punctuation.definition.list.begin.ion\",regex:\"\\\\[\",push:[{token:\"punctuation.definition.list.end.ion\",regex:\"\\\\]\",next:\"pop\"},{include:\"comment\"},{include:\"value\"},{token:\"punctuation.definition.list.separator.ion\",regex:\",\"}]}],struct:[{token:\"punctuation.definition.struct.begin.ion\",regex:\"\\\\{\",push:[{token:\"punctuation.definition.struct.end.ion\",regex:\"\\\\}\",next:\"pop\"},{include:\"comment\"},{include:\"value\"},{token:\"punctuation.definition.struct.separator.ion\",regex:\",|:\"}]}],blob:[{token:[\"punctuation.definition.blob.begin.ion\",\"string.other.blob.ion\",\"punctuation.definition.blob.end.ion\"],regex:'(\\\\{\\\\{)([^\"]*)(\\\\}\\\\})'}],clob:[{token:[\"punctuation.definition.clob.begin.ion\",\"string.other.clob.ion\",\"punctuation.definition.clob.end.ion\"],regex:'(\\\\{\\\\{)(\"[^\"]*\")(\\\\}\\\\})'}],symbol:[{token:\"storage.type.symbol.quoted.ion\",regex:\"(['])((?:(?:\\\\\\\\')|(?:[^']))*?)(['])\"},{token:\"storage.type.symbol.identifier.ion\",regex:\"[\\\\$_a-zA-Z][\\\\$_a-zA-Z0-9]*\"}],number:[{token:\"constant.numeric.timestamp.ion\",regex:\"\\\\d{4}(?:-\\\\d{2})?(?:-\\\\d{2})?T(?:\\\\d{2}:\\\\d{2})(?::\\\\d{2})?(?:\\\\.\\\\d+)?(?:Z|[-+]\\\\d{2}:\\\\d{2})?\"},{token:\"constant.numeric.timestamp.ion\",regex:\"\\\\d{4}-\\\\d{2}-\\\\d{2}T?\"},{token:\"constant.numeric.integer.binary.ion\",regex:\"-?0[bB][01](?:_?[01])*\"},{token:\"constant.numeric.integer.hex.ion\",regex:\"-?0[xX][0-9a-fA-F](?:_?[0-9a-fA-F])*\"},{token:\"constant.numeric.float.ion\",regex:\"-?(?:0|[1-9](?:_?\\\\d)*)(?:\\\\.(?:\\\\d(?:_?\\\\d)*)?)?(?:[eE][+-]?\\\\d+)\"},{token:\"constant.numeric.float.ion\",regex:\"(?:[-+]inf)|(?:nan)\"},{token:\"constant.numeric.decimal.ion\",regex:\"-?(?:0|[1-9](?:_?\\\\d)*)(?:(?:(?:\\\\.(?:\\\\d(?:_?\\\\d)*)?)(?:[dD][+-]?\\\\d+)|\\\\.(?:\\\\d(?:_?\\\\d)*)?)|(?:[dD][+-]?\\\\d+))\"},{token:\"constant.numeric.integer.ion\",regex:\"-?(?:0|[1-9](?:_?\\\\d)*)\"}],string:[{token:[\"punctuation.definition.string.begin.ion\",\"string.quoted.double.ion\",\"punctuation.definition.string.end.ion\"],regex:'([\"])((?:(?:\\\\\\\\\")|(?:[^\"]))*?)([\"])'},{token:\"punctuation.definition.string.begin.ion\",regex:\"'{3}\",push:[{token:\"punctuation.definition.string.end.ion\",regex:\"'{3}\",next:\"pop\"},{token:\"string.quoted.triple.ion\",regex:\"(?:\\\\\\\\'|[^'])+\"},{token:\"string.quoted.triple.ion\",regex:\"'\"}]}],annotation:[{token:[\"variable.language.annotation.ion\",\"punctuation.definition.annotation.ion\"],regex:/('(?:[^'\\\\]|\\\\.)*')\\s*(::)/},{token:[\"variable.language.annotation.ion\",\"punctuation.definition.annotation.ion\"],regex:\"([\\\\$_a-zA-Z][\\\\$_a-zA-Z0-9]*)\\\\s*(::)\"}],whitespace:[{token:\"text.ion\",regex:\"\\\\s+\"}]},this.$rules.keywords=[e],this.normalizeRules()};i.inherits(r,o),t.IonHighlightRules=r})),ace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"],(function(e,t,n){\"use strict\";var i=e(\"../range\").Range,o=function(){};(function(){this.checkOutdent=function(e,t){return!!/^\\s+$/.test(e)&&/^\\s*\\}/.test(t)},this.autoOutdent=function(e,t){var n=e.getLine(t).match(/^(\\s*\\})/);if(!n)return 0;var o=n[1].length,r=e.findMatchingBracket({row:t,column:o});if(!r||r.row==t)return 0;var a=this.$getIndent(e.getLine(r.row));e.replace(new i(t,0,t,o-1),a)},this.$getIndent=function(e){return e.match(/^\\s*/)[0]}}).call(o.prototype),t.MatchingBraceOutdent=o})),ace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"],(function(e,t,n){\"use strict\";var i=e(\"../../lib/oop\"),o=e(\"../../range\").Range,r=e(\"./fold_mode\").FoldMode,a=t.FoldMode=function(e){e&&(this.foldingStartMarker=new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/,\"|\"+e.start)),this.foldingStopMarker=new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/,\"|\"+e.end)))};i.inherits(a,r),function(){this.foldingStartMarker=/([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/,this.foldingStopMarker=/^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/,this.singleLineBlockCommentRe=/^\\s*(\\/\\*).*\\*\\/\\s*$/,this.tripleStarBlockCommentRe=/^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/,this.startRegionRe=/^\\s*(\\/\\*|\\/\\/)#?region\\b/,this._getFoldWidgetBase=this.getFoldWidget,this.getFoldWidget=function(e,t,n){var i=e.getLine(n);if(this.singleLineBlockCommentRe.test(i)&&!this.startRegionRe.test(i)&&!this.tripleStarBlockCommentRe.test(i))return\"\";var o=this._getFoldWidgetBase(e,t,n);return!o&&this.startRegionRe.test(i)?\"start\":o},this.getFoldWidgetRange=function(e,t,n,i){var o,r=e.getLine(n);if(this.startRegionRe.test(r))return this.getCommentRegionBlock(e,r,n);if(o=r.match(this.foldingStartMarker)){var a=o.index;if(o[1])return this.openingBracketBlock(e,o[1],n,a);var s=e.getCommentFoldRange(n,a+o[0].length,1);return s&&!s.isMultiLine()&&(i?s=this.getSectionRange(e,n):\"all\"!=t&&(s=null)),s}if(\"markbegin\"!==t&&(o=r.match(this.foldingStopMarker))){a=o.index+o[0].length;return o[1]?this.closingBracketBlock(e,o[1],n,a):e.getCommentFoldRange(n,a,-1)}},this.getSectionRange=function(e,t){for(var n=e.getLine(t),i=n.search(/\\S/),r=t,a=n.length,s=t+=1,c=e.getLength();++t<c;){var u=(n=e.getLine(t)).search(/\\S/);if(-1!==u){if(i>u)break;var g=this.getFoldWidgetRange(e,\"all\",t);if(g){if(g.start.row<=r)break;if(g.isMultiLine())t=g.end.row;else if(i==u)break}s=t}}return new o(r,a,s,e.getLine(s).length)},this.getCommentRegionBlock=function(e,t,n){for(var i=t.search(/\\s*$/),r=e.getLength(),a=n,s=/^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/,c=1;++n<r;){t=e.getLine(n);var u=s.exec(t);if(u&&(u[1]?c--:c++,!c))break}if(n>a)return new o(a,i,n,t.length)}}.call(a.prototype)})),ace.define(\"ace/mode/ion\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/ion_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/folding/cstyle\"],(function(e,t,n){\"use strict\";var i=e(\"../lib/oop\"),o=e(\"./text\").Mode,r=e(\"./ion_highlight_rules\").IonHighlightRules,a=e(\"./matching_brace_outdent\").MatchingBraceOutdent,s=e(\"./folding/cstyle\").FoldMode,c=function(){this.HighlightRules=r,this.$outdent=new a,this.$behaviour=this.$defaultBehaviour,this.foldingRules=new s};i.inherits(c,o),function(){this.lineCommentStart=\"//\",this.blockComment={start:\"/*\",end:\"*/\"},this.getNextLineIndent=function(e,t,n){var i=this.$getIndent(t);\"start\"==e&&(t.match(/^.*[\\{\\(\\[]\\s*$/)&&(i+=n));return i},this.checkOutdent=function(e,t,n){return this.$outdent.checkOutdent(t,n)},this.autoOutdent=function(e,t,n){this.$outdent.autoOutdent(t,n)},this.$id=\"ace/mode/ion\"}.call(c.prototype),t.Mode=c})),ace.require([\"ace/mode/ion\"],(function(e){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=e)}));","name":"5defc236e9276286e31616c0bb7bf582.js","input":"ace.define(\"ace/mode/ion_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  /*\n  THIS FILE WAS GENERATED BY 'ligand' USING 'mode_highlight_rules.js'\n  */\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var IonHighlightRules = function () {\n    var k_keywords_bool = \"TRUE|FALSE\";\n    var k_bool = k_keywords_bool;\n    var k_keywords_null = \"NULL.NULL|NULL.BOOL|NULL.INT|NULL.FLOAT|NULL.DECIMAL|NULL.TIMESTAMP|NULL.STRING|NULL.SYMBOL|NULL.BLOB|NULL.CLOB|\" + \"NULL.STRUCT|NULL.LIST|NULL.SEXP|NULL\";\n    var k_null = k_keywords_null;\n    var keywordMapper = this.createKeywordMapper({\n      \"constant.language.bool.ion\": k_bool,\n      \"constant.language.null.ion\": k_null\n    }, \"constant.other.symbol.identifier.ion\", true);\n    var keywordMapperRule = {\n      token: keywordMapper,\n      regex: \"\\\\b\\\\w+(?:\\\\.\\\\w+)?\\\\b\"\n    };\n    this.$rules = {\n      \"start\": [{\n        \"include\": \"value\"\n      }],\n      \"value\": [{\n        \"include\": \"whitespace\"\n      }, {\n        \"include\": \"comment\"\n      }, {\n        \"include\": \"annotation\"\n      }, {\n        \"include\": \"string\"\n      }, {\n        \"include\": \"number\"\n      }, {\n        \"include\": \"keywords\"\n      }, {\n        \"include\": \"symbol\"\n      }, {\n        \"include\": \"clob\"\n      }, {\n        \"include\": \"blob\"\n      }, {\n        \"include\": \"struct\"\n      }, {\n        \"include\": \"list\"\n      }, {\n        \"include\": \"sexp\"\n      }],\n      \"sexp\": [{\n        \"token\": \"punctuation.definition.sexp.begin.ion\",\n        \"regex\": \"\\\\(\",\n        \"push\": [{\n          \"token\": \"punctuation.definition.sexp.end.ion\",\n          \"regex\": \"\\\\)\",\n          \"next\": \"pop\"\n        }, {\n          \"include\": \"comment\"\n        }, {\n          \"include\": \"value\"\n        }, {\n          \"token\": \"storage.type.symbol.operator.ion\",\n          \"regex\": \"[\\\\!\\\\#\\\\%\\\\&\\\\*\\\\+\\\\-\\\\./\\\\;\\\\<\\\\=\\\\>\\\\?\\\\@\\\\^\\\\`\\\\|\\\\~]+\"\n        }]\n      }],\n      \"comment\": [{\n        \"token\": \"comment.line.ion\",\n        \"regex\": \"//[^\\\\n]*\"\n      }, {\n        \"token\": \"comment.block.ion\",\n        \"regex\": \"/\\\\*\",\n        \"push\": [{\n          \"token\": \"comment.block.ion\",\n          \"regex\": \"[*]/\",\n          \"next\": \"pop\"\n        }, {\n          \"token\": \"comment.block.ion\",\n          \"regex\": \"[^*/]+\"\n        }, {\n          \"token\": \"comment.block.ion\",\n          \"regex\": \"[*/]+\"\n        }]\n      }],\n      \"list\": [{\n        \"token\": \"punctuation.definition.list.begin.ion\",\n        \"regex\": \"\\\\[\",\n        \"push\": [{\n          \"token\": \"punctuation.definition.list.end.ion\",\n          \"regex\": \"\\\\]\",\n          \"next\": \"pop\"\n        }, {\n          \"include\": \"comment\"\n        }, {\n          \"include\": \"value\"\n        }, {\n          \"token\": \"punctuation.definition.list.separator.ion\",\n          \"regex\": \",\"\n        }]\n      }],\n      \"struct\": [{\n        \"token\": \"punctuation.definition.struct.begin.ion\",\n        \"regex\": \"\\\\{\",\n        \"push\": [{\n          \"token\": \"punctuation.definition.struct.end.ion\",\n          \"regex\": \"\\\\}\",\n          \"next\": \"pop\"\n        }, {\n          \"include\": \"comment\"\n        }, {\n          \"include\": \"value\"\n        }, {\n          \"token\": \"punctuation.definition.struct.separator.ion\",\n          \"regex\": \",|:\"\n        }]\n      }],\n      \"blob\": [{\n        \"token\": [\"punctuation.definition.blob.begin.ion\", \"string.other.blob.ion\", \"punctuation.definition.blob.end.ion\"],\n        \"regex\": \"(\\\\{\\\\{)([^\\\"]*)(\\\\}\\\\})\"\n      }],\n      \"clob\": [{\n        \"token\": [\"punctuation.definition.clob.begin.ion\", \"string.other.clob.ion\", \"punctuation.definition.clob.end.ion\"],\n        \"regex\": \"(\\\\{\\\\{)(\\\"[^\\\"]*\\\")(\\\\}\\\\})\"\n      }],\n      \"symbol\": [{\n        \"token\": \"storage.type.symbol.quoted.ion\",\n        \"regex\": \"(['])((?:(?:\\\\\\\\')|(?:[^']))*?)(['])\"\n      }, {\n        \"token\": \"storage.type.symbol.identifier.ion\",\n        \"regex\": \"[\\\\$_a-zA-Z][\\\\$_a-zA-Z0-9]*\"\n      }],\n      \"number\": [{\n        \"token\": \"constant.numeric.timestamp.ion\",\n        \"regex\": \"\\\\d{4}(?:-\\\\d{2})?(?:-\\\\d{2})?T(?:\\\\d{2}:\\\\d{2})(?::\\\\d{2})?(?:\\\\.\\\\d+)?(?:Z|[-+]\\\\d{2}:\\\\d{2})?\"\n      }, {\n        \"token\": \"constant.numeric.timestamp.ion\",\n        \"regex\": \"\\\\d{4}-\\\\d{2}-\\\\d{2}T?\"\n      }, {\n        \"token\": \"constant.numeric.integer.binary.ion\",\n        \"regex\": \"-?0[bB][01](?:_?[01])*\"\n      }, {\n        \"token\": \"constant.numeric.integer.hex.ion\",\n        \"regex\": \"-?0[xX][0-9a-fA-F](?:_?[0-9a-fA-F])*\"\n      }, {\n        \"token\": \"constant.numeric.float.ion\",\n        \"regex\": \"-?(?:0|[1-9](?:_?\\\\d)*)(?:\\\\.(?:\\\\d(?:_?\\\\d)*)?)?(?:[eE][+-]?\\\\d+)\"\n      }, {\n        \"token\": \"constant.numeric.float.ion\",\n        \"regex\": \"(?:[-+]inf)|(?:nan)\"\n      }, {\n        \"token\": \"constant.numeric.decimal.ion\",\n        \"regex\": \"-?(?:0|[1-9](?:_?\\\\d)*)(?:(?:(?:\\\\.(?:\\\\d(?:_?\\\\d)*)?)(?:[dD][+-]?\\\\d+)|\\\\.(?:\\\\d(?:_?\\\\d)*)?)|(?:[dD][+-]?\\\\d+))\"\n      }, {\n        \"token\": \"constant.numeric.integer.ion\",\n        \"regex\": \"-?(?:0|[1-9](?:_?\\\\d)*)\"\n      }],\n      \"string\": [{\n        \"token\": [\"punctuation.definition.string.begin.ion\", \"string.quoted.double.ion\", \"punctuation.definition.string.end.ion\"],\n        \"regex\": \"([\\\"])((?:(?:\\\\\\\\\\\")|(?:[^\\\"]))*?)([\\\"])\"\n      }, {\n        \"token\": \"punctuation.definition.string.begin.ion\",\n        \"regex\": \"'{3}\",\n        \"push\": [{\n          \"token\": \"punctuation.definition.string.end.ion\",\n          \"regex\": \"'{3}\",\n          \"next\": \"pop\"\n        }, {\n          \"token\": \"string.quoted.triple.ion\",\n          \"regex\": \"(?:\\\\\\\\'|[^'])+\"\n        }, {\n          \"token\": \"string.quoted.triple.ion\",\n          \"regex\": \"'\"\n        }]\n      }],\n      \"annotation\": [{\n        \"token\": [\"variable.language.annotation.ion\", \"punctuation.definition.annotation.ion\"],\n        \"regex\": /('(?:[^'\\\\]|\\\\.)*')\\s*(::)/\n      }, {\n        \"token\": [\"variable.language.annotation.ion\", \"punctuation.definition.annotation.ion\"],\n        \"regex\": \"([\\\\$_a-zA-Z][\\\\$_a-zA-Z0-9]*)\\\\s*(::)\"\n      }],\n      \"whitespace\": [{\n        \"token\": \"text.ion\",\n        \"regex\": \"\\\\s+\"\n      }]\n    };\n    this.$rules[\"keywords\"] = [keywordMapperRule];\n    this.normalizeRules();\n  };\n  oop.inherits(IonHighlightRules, TextHighlightRules);\n  exports.IonHighlightRules = IonHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n  var MatchingBraceOutdent = function () {};\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Range = require(\"../../range\").Range;\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n      return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n        return range;\n      }\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n        endRow = row;\n      }\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n      var endRow = row;\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/ion\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/ion_highlight_rules\", \"ace/mode/matching_brace_outdent\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  /*\n  THIS FILE WAS GENERATED BY 'ligand' USING 'mode.js'\n  */\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var HighlightRules = require(\"./ion_highlight_rules\").IonHighlightRules;\n  var MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n  var CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = HighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = this.$defaultBehaviour;\n    this.foldingRules = new CStyleFoldMode();\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\"\n    };\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      if (state == \"start\") {\n        var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n        if (match) {\n          indent += tab;\n        }\n      }\n      return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n    this.$id = \"ace/mode/ion\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/ion\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}