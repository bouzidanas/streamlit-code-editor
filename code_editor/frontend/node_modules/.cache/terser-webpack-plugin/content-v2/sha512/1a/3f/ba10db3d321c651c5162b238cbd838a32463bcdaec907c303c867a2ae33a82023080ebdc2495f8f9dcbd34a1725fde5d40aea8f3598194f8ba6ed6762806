{"code":"ace.define(\"ace/ext/menu_tools/get_editor_keyboard_shortcuts\",[\"require\",\"exports\",\"module\",\"ace/lib/keys\"],(function(e,t,n){\"use strict\";var i=e(\"../../lib/keys\");n.exports.getEditorKeyboardShortcuts=function(e){i.KEY_MODS;var t=[],n={};return e.keyBinding.$handlers.forEach((function(e){var i=e.commandKeyBinding;for(var o in i){var r=o.replace(/(^|-)\\w/g,(function(e){return e.toUpperCase()})),s=i[o];Array.isArray(s)||(s=[s]),s.forEach((function(e){\"string\"!=typeof e&&(e=e.name),n[e]?n[e].key+=\"|\"+r:(n[e]={key:r,command:e},t.push(n[e]))}))}})),t}})),ace.define(\"ace/autocomplete/popup\",[\"require\",\"exports\",\"module\",\"ace/virtual_renderer\",\"ace/editor\",\"ace/range\",\"ace/lib/event\",\"ace/lib/lang\",\"ace/lib/dom\"],(function(e,t,n){\"use strict\";var i=e(\"../virtual_renderer\").VirtualRenderer,o=e(\"../editor\").Editor,r=e(\"../range\").Range,s=e(\"../lib/event\"),a=e(\"../lib/lang\"),c=e(\"../lib/dom\"),p=e(\"../config\").nls,l=e(\"./../lib/useragent\"),h=function(e){return\"suggest-aria-id:\".concat(e)},u=l.isSafari?\"menu\":\"listbox\",d=l.isSafari?\"menuitem\":\"option\",f=l.isSafari?\"aria-current\":\"aria-selected\",m=function(e){var t=new i(e);t.$maxLines=4;var n=new o(t);return n.setHighlightActiveLine(!1),n.setShowPrintMargin(!1),n.renderer.setShowGutter(!1),n.renderer.setHighlightGutterLine(!1),n.$mouseHandler.$focusTimeout=0,n.$highlightTagPending=!0,n},g=function(e){var t=c.createElement(\"div\"),n=m(t);e&&e.appendChild(t),t.style.display=\"none\",n.renderer.content.style.cursor=\"default\",n.renderer.setStyle(\"ace_autocomplete\"),n.renderer.$textLayer.element.setAttribute(\"role\",u),n.renderer.$textLayer.element.setAttribute(\"aria-roledescription\",p(\"autocomplete.popup.aria-roledescription\",\"Autocomplete suggestions\")),n.renderer.$textLayer.element.setAttribute(\"aria-label\",p(\"autocomplete.popup.aria-label\",\"Autocomplete suggestions\")),n.renderer.textarea.setAttribute(\"aria-hidden\",\"true\"),n.setOption(\"displayIndentGuides\",!1),n.setOption(\"dragDelay\",150);var i,o=function(){};n.focus=o,n.$isFocused=!0,n.renderer.$cursorLayer.restartTimer=o,n.renderer.$cursorLayer.element.style.opacity=\"0\",n.renderer.$maxLines=8,n.renderer.$keepTextAreaAtCursor=!1,n.setHighlightActiveLine(!1),n.session.highlight(\"\"),n.session.$searchHighlight.clazz=\"ace_highlight-marker\",n.on(\"mousedown\",(function(e){var t=e.getDocumentPosition();n.selection.moveToPosition(t),g.start.row=g.end.row=t.row,e.stop()}));var l=new r(-1,0,-1,1/0),g=new r(-1,0,-1,1/0);g.id=n.session.addMarker(g,\"ace_active-line\",\"fullLine\"),n.setSelectOnHover=function(e){e?l.id&&(n.session.removeMarker(l.id),l.id=null):l.id=n.session.addMarker(l,\"ace_line-hover\",\"fullLine\")},n.setSelectOnHover(!1),n.on(\"mousemove\",(function(e){if(i){if(i.x!=e.x||i.y!=e.y){(i=e).scrollTop=n.renderer.scrollTop,n.isMouseOver=!0;var t=i.getDocumentPosition().row;l.start.row!=t&&(l.id||n.setRow(t),b(t))}}else i=e})),n.renderer.on(\"beforeRender\",(function(){if(i&&-1!=l.start.row){i.$pos=null;var e=i.getDocumentPosition().row;l.id||n.setRow(e),b(e,!0)}})),n.renderer.on(\"afterRender\",(function(){var e=n.getRow(),t=n.renderer.$textLayer,i=t.element.childNodes[e-t.config.firstRow],o=document.activeElement;if(i!==n.selectedNode&&n.selectedNode&&(c.removeCssClass(n.selectedNode,\"ace_selected\"),o.removeAttribute(\"aria-activedescendant\"),n.selectedNode.removeAttribute(f),n.selectedNode.removeAttribute(\"id\")),n.selectedNode=i,i){c.addCssClass(i,\"ace_selected\");var r=h(e);i.id=r,t.element.setAttribute(\"aria-activedescendant\",r),o.setAttribute(\"aria-activedescendant\",r),i.setAttribute(\"role\",d),i.setAttribute(\"aria-roledescription\",p(\"autocomplete.popup.item.aria-roledescription\",\"item\")),i.setAttribute(\"aria-label\",n.getData(e).caption||n.getData(e).value),i.setAttribute(\"aria-setsize\",n.data.length),i.setAttribute(\"aria-posinset\",e+1),i.setAttribute(\"aria-describedby\",\"doc-tooltip\"),i.setAttribute(f,\"true\")}}));var v=function(){b(-1)},b=function(e,t){e!==l.start.row&&(l.start.row=l.end.row=e,t||n.session._emit(\"changeBackMarker\"),n._emit(\"changeHoverMarker\"))};n.getHoveredRow=function(){return l.start.row},s.addListener(n.container,\"mouseout\",(function(){n.isMouseOver=!1,v()})),n.on(\"hide\",v),n.on(\"changeSelection\",v),n.session.doc.getLength=function(){return n.data.length},n.session.doc.getLine=function(e){var t=n.data[e];return\"string\"==typeof t?t:t&&t.value||\"\"};var y=n.session.bgTokenizer;return y.$tokenizeRow=function(e){var t=n.data[e],i=[];if(!t)return i;\"string\"==typeof t&&(t={value:t});var o=t.caption||t.value||t.name;function r(e,n){e&&i.push({type:(t.className||\"\")+(n||\"\"),value:e})}for(var s=o.toLowerCase(),a=(n.filterText||\"\").toLowerCase(),c=0,p=0,l=0;l<=a.length;l++)if(l!=p&&(t.matchMask&1<<l||l==a.length)){var h=a.slice(p,l);p=l;var u=s.indexOf(h,c);if(-1==u)continue;r(o.slice(c,u),\"\"),c=u+h.length,r(o.slice(u,c),\"completion-highlight\")}return r(o.slice(c,o.length),\"\"),i.push({type:\"completion-spacer\",value:\" \"}),t.meta&&i.push({type:\"completion-meta\",value:t.meta}),t.message&&i.push({type:\"completion-message\",value:t.message}),i},y.$updateOnChange=o,y.start=o,n.session.$computeWidth=function(){return this.screenWidth=0},n.isOpen=!1,n.isTopdown=!1,n.autoSelect=!0,n.filterText=\"\",n.isMouseOver=!1,n.data=[],n.setData=function(e,t){n.filterText=t||\"\",n.setValue(a.stringRepeat(\"\\n\",e.length),-1),n.data=e||[],n.setRow(0)},n.getData=function(e){return n.data[e]},n.getRow=function(){return g.start.row},n.setRow=function(e){e=Math.max(this.autoSelect?0:-1,Math.min(this.data.length-1,e)),g.start.row!=e&&(n.selection.clearSelection(),g.start.row=g.end.row=e||0,n.session._emit(\"changeBackMarker\"),n.moveCursorTo(e||0,0),n.isOpen&&n._signal(\"select\"))},n.on(\"changeSelection\",(function(){n.isOpen&&n.setRow(n.selection.lead.row),n.renderer.scrollCursorIntoView()})),n.hide=function(){this.container.style.display=\"none\",n.anchorPos=null,n.anchor=null,n.isOpen&&(n.isOpen=!1,this._signal(\"hide\"))},n.tryShow=function(e,t,o,r){if(!r&&n.isOpen&&n.anchorPos&&n.anchor&&n.anchorPos.top===e.top&&n.anchorPos.left===e.left&&n.anchor===o)return!0;var s=this.container,a=window.innerHeight,c=window.innerWidth,p=this.renderer,l=p.$maxLines*t*1.4,h={top:0,bottom:0,left:0},u=a-e.top-3*this.$borderSize-t,d=e.top-3*this.$borderSize;o||(o=d<=u||u>=l?\"bottom\":\"top\"),\"top\"===o?(h.bottom=e.top-this.$borderSize,h.top=h.bottom-l):\"bottom\"===o&&(h.top=e.top+t+this.$borderSize,h.bottom=h.top+l);var f=h.top>=0&&h.bottom<=a;if(!r&&!f)return!1;p.$maxPixelHeight=f?null:\"top\"===o?d:u,\"top\"===o?(s.style.top=\"\",s.style.bottom=a-h.bottom+\"px\",n.isTopdown=!1):(s.style.top=h.top+\"px\",s.style.bottom=\"\",n.isTopdown=!0),s.style.display=\"\";var m=e.left;return m+s.offsetWidth>c&&(m=c-s.offsetWidth),s.style.left=m+\"px\",s.style.right=\"\",n.isOpen||(n.isOpen=!0,this._signal(\"show\"),i=null),n.anchorPos=e,n.anchor=o,!0},n.show=function(e,t,n){this.tryShow(e,t,n?\"bottom\":void 0,!0)},n.goTo=function(e){var t=this.getRow(),n=this.session.getLength()-1;switch(e){case\"up\":t=t<=0?n:t-1;break;case\"down\":t=t>=n?-1:t+1;break;case\"start\":t=0;break;case\"end\":t=n}this.setRow(t)},n.getTextLeftOffset=function(){return this.$borderSize+this.renderer.$padding+this.$imageSize},n.$imageSize=0,n.$borderSize=1,n};c.importCssString('\\n.ace_editor.ace_autocomplete .ace_marker-layer .ace_active-line {\\n    background-color: #CAD6FA;\\n    z-index: 1;\\n}\\n.ace_dark.ace_editor.ace_autocomplete .ace_marker-layer .ace_active-line {\\n    background-color: #3a674e;\\n}\\n.ace_editor.ace_autocomplete .ace_line-hover {\\n    border: 1px solid #abbffe;\\n    margin-top: -1px;\\n    background: rgba(233,233,253,0.4);\\n    position: absolute;\\n    z-index: 2;\\n}\\n.ace_dark.ace_editor.ace_autocomplete .ace_line-hover {\\n    border: 1px solid rgba(109, 150, 13, 0.8);\\n    background: rgba(58, 103, 78, 0.62);\\n}\\n.ace_completion-meta {\\n    opacity: 0.5;\\n    margin-left: 0.9em;\\n}\\n.ace_completion-message {\\n    margin-left: 0.9em;\\n    color: blue;\\n}\\n.ace_editor.ace_autocomplete .ace_completion-highlight{\\n    color: #2d69c7;\\n}\\n.ace_dark.ace_editor.ace_autocomplete .ace_completion-highlight{\\n    color: #93ca12;\\n}\\n.ace_editor.ace_autocomplete {\\n    width: 300px;\\n    z-index: 200000;\\n    border: 1px lightgray solid;\\n    position: fixed;\\n    box-shadow: 2px 3px 5px rgba(0,0,0,.2);\\n    line-height: 1.4;\\n    background: #fefefe;\\n    color: #111;\\n}\\n.ace_dark.ace_editor.ace_autocomplete {\\n    border: 1px #484747 solid;\\n    box-shadow: 2px 3px 5px rgba(0, 0, 0, 0.51);\\n    line-height: 1.4;\\n    background: #25282c;\\n    color: #c1c1c1;\\n}\\n.ace_autocomplete .ace_text-layer  {\\n    width: calc(100% - 8px);\\n}\\n.ace_autocomplete .ace_line {\\n    display: flex;\\n    align-items: center;\\n}\\n.ace_autocomplete .ace_line > * {\\n    min-width: 0;\\n    flex: 0 0 auto;\\n}\\n.ace_autocomplete .ace_line .ace_ {\\n    flex: 0 1 auto;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n}\\n.ace_autocomplete .ace_completion-spacer {\\n    flex: 1;\\n}\\n.ace_autocomplete.ace_loading:after  {\\n    content: \"\";\\n    position: absolute;\\n    top: 0px;\\n    height: 2px;\\n    width: 8%;\\n    background: blue;\\n    z-index: 100;\\n    animation: ace_progress 3s infinite linear;\\n    animation-delay: 300ms;\\n    transform: translateX(-100%) scaleX(1);\\n}\\n@keyframes ace_progress {\\n    0% { transform: translateX(-100%) scaleX(1) }\\n    50% { transform: translateX(625%) scaleX(2) } \\n    100% { transform: translateX(1500%) scaleX(3) } \\n}\\n@media (prefers-reduced-motion) {\\n    .ace_autocomplete.ace_loading:after {\\n        transform: translateX(625%) scaleX(2);\\n        animation: none;\\n     }\\n}\\n',\"autocompletion.css\",!1),t.AcePopup=g,t.$singleLineEditor=m,t.getAriaId=h})),ace.define(\"ace/snippets\",[\"require\",\"exports\",\"module\",\"ace/lib/dom\",\"ace/lib/oop\",\"ace/lib/event_emitter\",\"ace/lib/lang\",\"ace/range\",\"ace/range_list\",\"ace/keyboard/hash_handler\",\"ace/tokenizer\",\"ace/clipboard\",\"ace/editor\"],(function(e,t,n){\"use strict\";var i=e(\"./lib/dom\"),o=e(\"./lib/oop\"),r=e(\"./lib/event_emitter\").EventEmitter,s=e(\"./lib/lang\"),a=e(\"./range\").Range,c=e(\"./range_list\").RangeList,p=e(\"./keyboard/hash_handler\").HashHandler,l=e(\"./tokenizer\").Tokenizer,h=e(\"./clipboard\"),u={CURRENT_WORD:function(e){return e.session.getTextRange(e.session.getWordRange())},SELECTION:function(e,t,n){var i=e.session.getTextRange();return n?i.replace(/\\n\\r?([ \\t]*\\S)/g,\"\\n\"+n+\"$1\"):i},CURRENT_LINE:function(e){return e.session.getLine(e.getCursorPosition().row)},PREV_LINE:function(e){return e.session.getLine(e.getCursorPosition().row-1)},LINE_INDEX:function(e){return e.getCursorPosition().row},LINE_NUMBER:function(e){return e.getCursorPosition().row+1},SOFT_TABS:function(e){return e.session.getUseSoftTabs()?\"YES\":\"NO\"},TAB_SIZE:function(e){return e.session.getTabSize()},CLIPBOARD:function(e){return h.getText&&h.getText()},FILENAME:function(e){return/[^/\\\\]*$/.exec(this.FILEPATH(e))[0]},FILENAME_BASE:function(e){return/[^/\\\\]*$/.exec(this.FILEPATH(e))[0].replace(/\\.[^.]*$/,\"\")},DIRECTORY:function(e){return this.FILEPATH(e).replace(/[^/\\\\]*$/,\"\")},FILEPATH:function(e){return\"/not implemented.txt\"},WORKSPACE_NAME:function(){return\"Unknown\"},FULLNAME:function(){return\"Unknown\"},BLOCK_COMMENT_START:function(e){var t=e.session.$mode||{};return t.blockComment&&t.blockComment.start||\"\"},BLOCK_COMMENT_END:function(e){var t=e.session.$mode||{};return t.blockComment&&t.blockComment.end||\"\"},LINE_COMMENT:function(e){return(e.session.$mode||{}).lineCommentStart||\"\"},CURRENT_YEAR:d.bind(null,{year:\"numeric\"}),CURRENT_YEAR_SHORT:d.bind(null,{year:\"2-digit\"}),CURRENT_MONTH:d.bind(null,{month:\"numeric\"}),CURRENT_MONTH_NAME:d.bind(null,{month:\"long\"}),CURRENT_MONTH_NAME_SHORT:d.bind(null,{month:\"short\"}),CURRENT_DATE:d.bind(null,{day:\"2-digit\"}),CURRENT_DAY_NAME:d.bind(null,{weekday:\"long\"}),CURRENT_DAY_NAME_SHORT:d.bind(null,{weekday:\"short\"}),CURRENT_HOUR:d.bind(null,{hour:\"2-digit\",hour12:!1}),CURRENT_MINUTE:d.bind(null,{minute:\"2-digit\"}),CURRENT_SECOND:d.bind(null,{second:\"2-digit\"})};function d(e){var t=(new Date).toLocaleString(\"en-us\",e);return 1==t.length?\"0\"+t:t}u.SELECTED_TEXT=u.SELECTION;var f=function(){function e(){this.snippetMap={},this.snippetNameMap={},this.variables=u}return e.prototype.getTokenizer=function(){return e.$tokenizer||this.createTokenizer()},e.prototype.createTokenizer=function(){function t(e){return e=e.substr(1),/^\\d+$/.test(e)?[{tabstopId:parseInt(e,10)}]:[{text:e}]}function n(e){return\"(?:[^\\\\\\\\\"+e+\"]|\\\\\\\\.)\"}var i={regex:\"/(\"+n(\"/\")+\"+)/\",onMatch:function(e,t,n){var i=n[0];return i.fmtString=!0,i.guard=e.slice(1,-1),i.flag=\"\",\"\"},next:\"formatString\"};return e.$tokenizer=new l({start:[{regex:/\\\\./,onMatch:function(e,t,n){var i=e[1];return(\"}\"==i&&n.length||-1!=\"`$\\\\\".indexOf(i))&&(e=i),[e]}},{regex:/}/,onMatch:function(e,t,n){return[n.length?n.shift():e]}},{regex:/\\$(?:\\d+|\\w+)/,onMatch:t},{regex:/\\$\\{[\\dA-Z_a-z]+/,onMatch:function(e,n,i){var o=t(e.substr(1));return i.unshift(o[0]),o},next:\"snippetVar\"},{regex:/\\n/,token:\"newline\",merge:!1}],snippetVar:[{regex:\"\\\\|\"+n(\"\\\\|\")+\"*\\\\|\",onMatch:function(e,t,n){var i=e.slice(1,-1).replace(/\\\\[,|\\\\]|,/g,(function(e){return 2==e.length?e[1]:\"\\0\"})).split(\"\\0\").map((function(e){return{value:e}}));return n[0].choices=i,[i[0]]},next:\"start\"},i,{regex:\"([^:}\\\\\\\\]|\\\\\\\\.)*:?\",token:\"\",next:\"start\"}],formatString:[{regex:/:/,onMatch:function(e,t,n){return n.length&&n[0].expectElse?(n[0].expectElse=!1,n[0].ifEnd={elseEnd:n[0]},[n[0].ifEnd]):\":\"}},{regex:/\\\\./,onMatch:function(e,t,n){var i=e[1];return\"}\"==i&&n.length||-1!=\"`$\\\\\".indexOf(i)?e=i:\"n\"==i?e=\"\\n\":\"t\"==i?e=\"\\t\":-1!=\"ulULE\".indexOf(i)&&(e={changeCase:i,local:i>\"a\"}),[e]}},{regex:\"/\\\\w*}\",onMatch:function(e,t,n){var i=n.shift();return i&&(i.flag=e.slice(1,-1)),this.next=i&&i.tabstopId?\"start\":\"\",[i||e]},next:\"start\"},{regex:/\\$(?:\\d+|\\w+)/,onMatch:function(e,t,n){return[{text:e.slice(1)}]}},{regex:/\\${\\w+/,onMatch:function(e,t,n){var i={text:e.slice(2)};return n.unshift(i),[i]},next:\"formatStringVar\"},{regex:/\\n/,token:\"newline\",merge:!1},{regex:/}/,onMatch:function(e,t,n){var i=n.shift();return this.next=i&&i.tabstopId?\"start\":\"\",[i||e]},next:\"start\"}],formatStringVar:[{regex:/:\\/\\w+}/,onMatch:function(e,t,n){return n[0].formatFunction=e.slice(2,-1),[n.shift()]},next:\"formatString\"},i,{regex:/:[\\?\\-+]?/,onMatch:function(e,t,n){\"+\"==e[1]&&(n[0].ifEnd=n[0]),\"?\"==e[1]&&(n[0].expectElse=!0)},next:\"formatString\"},{regex:\"([^:}\\\\\\\\]|\\\\\\\\.)*:?\",token:\"\",next:\"formatString\"}]}),e.$tokenizer},e.prototype.tokenizeTmSnippet=function(e,t){return this.getTokenizer().getLineTokens(e,t).tokens.map((function(e){return e.value||e}))},e.prototype.getVariableValue=function(e,t,n){if(/^\\d+$/.test(t))return(this.variables.__||{})[t]||\"\";if(/^[A-Z]\\d+$/.test(t))return(this.variables[t[0]+\"__\"]||{})[t.substr(1)]||\"\";if(t=t.replace(/^TM_/,\"\"),!this.variables.hasOwnProperty(t))return\"\";var i=this.variables[t];return\"function\"==typeof i&&(i=this.variables[t](e,t,n)),null==i?\"\":i},e.prototype.tmStrFormat=function(e,t,n){if(!t.fmt)return e;var i=t.flag||\"\",o=t.guard;o=new RegExp(o,i.replace(/[^gim]/g,\"\"));var r=\"string\"==typeof t.fmt?this.tokenizeTmSnippet(t.fmt,\"formatString\"):t.fmt,s=this,a=e.replace(o,(function(){var e=s.variables.__;s.variables.__=[].slice.call(arguments);for(var t=s.resolveVariables(r,n),i=\"E\",o=0;o<t.length;o++){var a=t[o];if(\"object\"==typeof a)if(t[o]=\"\",a.changeCase&&a.local){var c=t[o+1];c&&\"string\"==typeof c&&(\"u\"==a.changeCase?t[o]=c[0].toUpperCase():t[o]=c[0].toLowerCase(),t[o+1]=c.substr(1))}else a.changeCase&&(i=a.changeCase);else\"U\"==i?t[o]=a.toUpperCase():\"L\"==i&&(t[o]=a.toLowerCase())}return s.variables.__=e,t.join(\"\")}));return a},e.prototype.tmFormatFunction=function(e,t,n){return\"upcase\"==t.formatFunction?e.toUpperCase():\"downcase\"==t.formatFunction?e.toLowerCase():e},e.prototype.resolveVariables=function(e,t){for(var n=[],i=\"\",o=!0,r=0;r<e.length;r++){var s=e[r];if(\"string\"!=typeof s){if(s){if(o=!1,s.fmtString){var a=e.indexOf(s,r+1);-1==a&&(a=e.length),s.fmt=e.slice(r+1,a),r=a}if(s.text){var c=this.getVariableValue(t,s.text,i)+\"\";s.fmtString&&(c=this.tmStrFormat(c,s,t)),s.formatFunction&&(c=this.tmFormatFunction(c,s,t)),c&&!s.ifEnd?(n.push(c),p(s)):!c&&s.ifEnd&&p(s.ifEnd)}else s.elseEnd?p(s.elseEnd):(null!=s.tabstopId||null!=s.changeCase)&&n.push(s)}}else n.push(s),\"\\n\"==s?(o=!0,i=\"\"):o&&(i=/^\\t*/.exec(s)[0],o=/\\S/.test(s))}function p(t){var n=e.indexOf(t,r+1);-1!=n&&(r=n)}return n},e.prototype.getDisplayTextForSnippet=function(e,t){return m.call(this,e,t).text},e.prototype.insertSnippetForSelection=function(e,t,n){void 0===n&&(n={});var i=m.call(this,e,t,n),o=e.getSelectionRange(),r=e.session.replace(o,i.text),s=new g(e),a=e.inVirtualSelectionMode&&e.selection.index;s.addTabstops(i.tabstops,o.start,r,a)},e.prototype.insertSnippet=function(e,t,n){void 0===n&&(n={});var i=this;if(e.inVirtualSelectionMode)return i.insertSnippetForSelection(e,t,n);e.forEachSelection((function(){i.insertSnippetForSelection(e,t,n)}),null,{keepOrder:!0}),e.tabstopManager&&e.tabstopManager.tabNext()},e.prototype.$getScope=function(e){var t=e.session.$mode.$id||\"\";if(\"html\"===(t=t.split(\"/\").pop())||\"php\"===t){\"php\"!==t||e.session.$mode.inlinePhp||(t=\"html\");var n=e.getCursorPosition(),i=e.session.getState(n.row);\"object\"===typeof i&&(i=i[0]),i.substring&&(\"js-\"==i.substring(0,3)?t=\"javascript\":\"css-\"==i.substring(0,4)?t=\"css\":\"php-\"==i.substring(0,4)&&(t=\"php\"))}return t},e.prototype.getActiveScopes=function(e){var t=this.$getScope(e),n=[t],i=this.snippetMap;return i[t]&&i[t].includeScopes&&n.push.apply(n,i[t].includeScopes),n.push(\"_\"),n},e.prototype.expandWithTab=function(e,t){var n=this,i=e.forEachSelection((function(){return n.expandSnippetForSelection(e,t)}),null,{keepOrder:!0});return i&&e.tabstopManager&&e.tabstopManager.tabNext(),i},e.prototype.expandSnippetForSelection=function(e,t){var n,i=e.getCursorPosition(),o=e.session.getLine(i.row),r=o.substring(0,i.column),s=o.substr(i.column),a=this.snippetMap;return this.getActiveScopes(e).some((function(e){var t=a[e];return t&&(n=this.findMatchingSnippet(t,r,s)),!!n}),this),!!n&&(t&&t.dryRun||(e.session.doc.removeInLine(i.row,i.column-n.replaceBefore.length,i.column+n.replaceAfter.length),this.variables.M__=n.matchBefore,this.variables.T__=n.matchAfter,this.insertSnippetForSelection(e,n.content),this.variables.M__=this.variables.T__=null),!0)},e.prototype.findMatchingSnippet=function(e,t,n){for(var i=e.length;i--;){var o=e[i];if((!o.startRe||o.startRe.test(t))&&((!o.endRe||o.endRe.test(n))&&(o.startRe||o.endRe)))return o.matchBefore=o.startRe?o.startRe.exec(t):[\"\"],o.matchAfter=o.endRe?o.endRe.exec(n):[\"\"],o.replaceBefore=o.triggerRe?o.triggerRe.exec(t)[0]:\"\",o.replaceAfter=o.endTriggerRe?o.endTriggerRe.exec(n)[0]:\"\",o}},e.prototype.register=function(e,t){var n=this.snippetMap,i=this.snippetNameMap,o=this;function r(e){return e&&!/^\\^?\\(.*\\)\\$?$|^\\\\b$/.test(e)&&(e=\"(?:\"+e+\")\"),e||\"\"}function a(e,t,n){return e=r(e),t=r(t),n?(e=t+e)&&\"$\"!=e[e.length-1]&&(e+=\"$\"):(e+=t)&&\"^\"!=e[0]&&(e=\"^\"+e),new RegExp(e)}function c(e){e.scope||(e.scope=t||\"_\"),t=e.scope,n[t]||(n[t]=[],i[t]={});var r=i[t];if(e.name){var c=r[e.name];c&&o.unregister(c),r[e.name]=e}n[t].push(e),e.prefix&&(e.tabTrigger=e.prefix),!e.content&&e.body&&(e.content=Array.isArray(e.body)?e.body.join(\"\\n\"):e.body),e.tabTrigger&&!e.trigger&&(!e.guard&&/^\\w/.test(e.tabTrigger)&&(e.guard=\"\\\\b\"),e.trigger=s.escapeRegExp(e.tabTrigger)),(e.trigger||e.guard||e.endTrigger||e.endGuard)&&(e.startRe=a(e.trigger,e.guard,!0),e.triggerRe=new RegExp(e.trigger),e.endRe=a(e.endTrigger,e.endGuard,!0),e.endTriggerRe=new RegExp(e.endTrigger))}e||(e=[]),Array.isArray(e)?e.forEach(c):Object.keys(e).forEach((function(t){c(e[t])})),this._signal(\"registerSnippets\",{scope:t})},e.prototype.unregister=function(e,t){var n=this.snippetMap,i=this.snippetNameMap;function o(e){var o=i[e.scope||t];if(o&&o[e.name]){delete o[e.name];var r=n[e.scope||t],s=r&&r.indexOf(e);s>=0&&r.splice(s,1)}}e.content?o(e):Array.isArray(e)&&e.forEach(o)},e.prototype.parseSnippetFile=function(e){e=e.replace(/\\r/g,\"\");for(var t,n=[],i={},o=/^#.*|^({[\\s\\S]*})\\s*$|^(\\S+) (.*)$|^((?:\\n*\\t.*)+)/gm;t=o.exec(e);){if(t[1])try{i=JSON.parse(t[1]),n.push(i)}catch(c){}if(t[4])i.content=t[4].replace(/^\\t/gm,\"\"),n.push(i),i={};else{var r=t[2],s=t[3];if(\"regex\"==r){var a=/\\/((?:[^\\/\\\\]|\\\\.)*)|$/g;i.guard=a.exec(s)[1],i.trigger=a.exec(s)[1],i.endTrigger=a.exec(s)[1],i.endGuard=a.exec(s)[1]}else\"snippet\"==r?(i.tabTrigger=s.match(/^\\S*/)[0],i.name||(i.name=s)):r&&(i[r]=s)}}return n},e.prototype.getSnippetByName=function(e,t){var n,i=this.snippetNameMap;return this.getActiveScopes(t).some((function(t){var o=i[t];return o&&(n=o[e]),!!n}),this),n},e}();o.implement(f.prototype,r);var m=function(e,t,n){void 0===n&&(n={});var i=e.getCursorPosition(),o=e.session.getLine(i.row),r=e.session.getTabString(),s=o.match(/^\\s*/)[0];i.column<s.length&&(s=s.slice(0,i.column)),t=t.replace(/\\r/g,\"\");var a=this.tokenizeTmSnippet(t);a=(a=this.resolveVariables(a,e)).map((function(e){return\"\\n\"!=e||n.excludeExtraIndent?\"string\"==typeof e?e.replace(/\\t/g,r):e:e+s}));var c=[];a.forEach((function(e,t){if(\"object\"==typeof e){var n=e.tabstopId,i=c[n];if(i||((i=c[n]=[]).index=n,i.value=\"\",i.parents={}),-1===i.indexOf(e)){e.choices&&!i.choices&&(i.choices=e.choices),i.push(e);var o=a.indexOf(e,t+1);if(-1!==o){var r=a.slice(t+1,o);r.some((function(e){return\"object\"===typeof e}))&&!i.value?i.value=r:!r.length||i.value&&\"string\"===typeof i.value||(i.value=r.join(\"\"))}}}})),c.forEach((function(e){e.length=0}));var p={};function l(e){for(var t=[],n=0;n<e.length;n++){var i=e[n];if(\"object\"==typeof i){if(p[i.tabstopId])continue;i=t[e.lastIndexOf(i,n-1)]||{tabstopId:i.tabstopId}}t[n]=i}return t}for(var h=0;h<a.length;h++){var u=a[h];if(\"object\"==typeof u){var d=u.tabstopId,f=c[d],m=a.indexOf(u,h+1);if(p[d])p[d]===u&&(delete p[d],Object.keys(p).forEach((function(e){f.parents[e]=!0})));else{p[d]=u;var g=f.value;\"string\"!==typeof g?g=l(g):u.fmt&&(g=this.tmStrFormat(g,u,e)),a.splice.apply(a,[h+1,Math.max(0,m-h)].concat(g,u)),-1===f.indexOf(u)&&f.push(u)}}}var v=0,b=0,y=\"\";return a.forEach((function(e){if(\"string\"===typeof e){var t=e.split(\"\\n\");t.length>1?(b=t[t.length-1].length,v+=t.length-1):b+=e.length,y+=e}else e&&(e.start?e.end={row:v,column:b}:e.start={row:v,column:b})})),{text:y,tabstops:c,tokens:a}},g=function(){function e(e){if(this.index=0,this.ranges=[],this.tabstops=[],e.tabstopManager)return e.tabstopManager;e.tabstopManager=this,this.$onChange=this.onChange.bind(this),this.$onChangeSelection=s.delayedCall(this.onChangeSelection.bind(this)).schedule,this.$onChangeSession=this.onChangeSession.bind(this),this.$onAfterExec=this.onAfterExec.bind(this),this.attach(e)}return e.prototype.attach=function(e){this.$openTabstops=null,this.selectedTabstop=null,this.editor=e,this.session=e.session,this.editor.on(\"change\",this.$onChange),this.editor.on(\"changeSelection\",this.$onChangeSelection),this.editor.on(\"changeSession\",this.$onChangeSession),this.editor.commands.on(\"afterExec\",this.$onAfterExec),this.editor.keyBinding.addKeyboardHandler(this.keyboardHandler)},e.prototype.detach=function(){this.tabstops.forEach(this.removeTabstopMarkers,this),this.ranges.length=0,this.tabstops.length=0,this.selectedTabstop=null,this.editor.off(\"change\",this.$onChange),this.editor.off(\"changeSelection\",this.$onChangeSelection),this.editor.off(\"changeSession\",this.$onChangeSession),this.editor.commands.off(\"afterExec\",this.$onAfterExec),this.editor.keyBinding.removeKeyboardHandler(this.keyboardHandler),this.editor.tabstopManager=null,this.session=null,this.editor=null},e.prototype.onChange=function(e){for(var t=\"r\"==e.action[0],n=this.selectedTabstop||{},i=n.parents||{},o=this.tabstops.slice(),r=0;r<o.length;r++){var s=o[r],a=s==n||i[s.index];if(s.rangeList.$bias=a?0:1,\"remove\"==e.action&&s!==n){var c=s.parents&&s.parents[n.index],p=s.rangeList.pointIndex(e.start,c);p=p<0?-p-1:p+1;var l=s.rangeList.pointIndex(e.end,c);l=l<0?-l-1:l-1;for(var h=s.rangeList.ranges.slice(p,l),u=0;u<h.length;u++)this.removeRange(h[u])}s.rangeList.$onChange(e)}var d=this.session;this.$inChange||!t||1!=d.getLength()||d.getValue()||this.detach()},e.prototype.updateLinkedFields=function(){var e=this.selectedTabstop;if(e&&e.hasLinkedRanges&&e.firstNonLinked){this.$inChange=!0;for(var n=this.session,i=n.getTextRange(e.firstNonLinked),o=0;o<e.length;o++){var r=e[o];if(r.linked){var s=r.original,a=t.snippetManager.tmStrFormat(i,s,this.editor);n.replace(r,a)}}this.$inChange=!1}},e.prototype.onAfterExec=function(e){e.command&&!e.command.readOnly&&this.updateLinkedFields()},e.prototype.onChangeSelection=function(){if(this.editor){for(var e=this.editor.selection.lead,t=this.editor.selection.anchor,n=this.editor.selection.isEmpty(),i=0;i<this.ranges.length;i++)if(!this.ranges[i].linked){var o=this.ranges[i].contains(e.row,e.column),r=n||this.ranges[i].contains(t.row,t.column);if(o&&r)return}this.detach()}},e.prototype.onChangeSession=function(){this.detach()},e.prototype.tabNext=function(e){var t=this.tabstops.length,n=this.index+(e||1);(n=Math.min(Math.max(n,1),t))==t&&(n=0),this.selectTabstop(n),this.updateTabstopMarkers(),0===n&&this.detach()},e.prototype.selectTabstop=function(e){this.$openTabstops=null;var t=this.tabstops[this.index];if(t&&this.addTabstopMarkers(t),this.index=e,(t=this.tabstops[this.index])&&t.length){this.selectedTabstop=t;var n=t.firstNonLinked||t;if(t.choices&&(n.cursor=n.start),this.editor.inVirtualSelectionMode)this.editor.selection.fromOrientedRange(n);else{var i=this.editor.multiSelect;i.toSingleRange(n);for(var o=0;o<t.length;o++)t.hasLinkedRanges&&t[o].linked||i.addRange(t[o].clone(),!0)}this.editor.keyBinding.addKeyboardHandler(this.keyboardHandler),this.selectedTabstop&&this.selectedTabstop.choices&&this.editor.execCommand(\"startAutocomplete\",{matches:this.selectedTabstop.choices})}},e.prototype.addTabstops=function(e,t,n){var i=this.useLink||!this.editor.getOption(\"enableMultiselect\");if(this.$openTabstops||(this.$openTabstops=[]),!e[0]){var o=a.fromPoints(n,n);b(o.start,t),b(o.end,t),e[0]=[o],e[0].index=0}var r=[this.index+1,0],s=this.ranges,p=this.snippetId=(this.snippetId||0)+1;e.forEach((function(e,n){var o=this.$openTabstops[n]||e;o.snippetId=p;for(var l=0;l<e.length;l++){var h=e[l],u=a.fromPoints(h.start,h.end||h.start);v(u.start,t),v(u.end,t),u.original=h,u.tabstop=o,s.push(u),o!=e?o.unshift(u):o[l]=u,h.fmtString||o.firstNonLinked&&i?(u.linked=!0,o.hasLinkedRanges=!0):o.firstNonLinked||(o.firstNonLinked=u)}o.firstNonLinked||(o.hasLinkedRanges=!1),o===e&&(r.push(o),this.$openTabstops[n]=o),this.addTabstopMarkers(o),o.rangeList=o.rangeList||new c,o.rangeList.$bias=0,o.rangeList.addList(o)}),this),r.length>2&&(this.tabstops.length&&r.push(r.splice(2,1)[0]),this.tabstops.splice.apply(this.tabstops,r))},e.prototype.addTabstopMarkers=function(e){var t=this.session;e.forEach((function(e){e.markerId||(e.markerId=t.addMarker(e,\"ace_snippet-marker\",\"text\"))}))},e.prototype.removeTabstopMarkers=function(e){var t=this.session;e.forEach((function(e){t.removeMarker(e.markerId),e.markerId=null}))},e.prototype.updateTabstopMarkers=function(){if(this.selectedTabstop){var e=this.selectedTabstop.snippetId;0===this.selectedTabstop.index&&e--,this.tabstops.forEach((function(t){t.snippetId===e?this.addTabstopMarkers(t):this.removeTabstopMarkers(t)}),this)}},e.prototype.removeRange=function(e){var t=e.tabstop.indexOf(e);-1!=t&&e.tabstop.splice(t,1),-1!=(t=this.ranges.indexOf(e))&&this.ranges.splice(t,1),-1!=(t=e.tabstop.rangeList.ranges.indexOf(e))&&e.tabstop.splice(t,1),this.session.removeMarker(e.markerId),e.tabstop.length||(-1!=(t=this.tabstops.indexOf(e.tabstop))&&this.tabstops.splice(t,1),this.tabstops.length||this.detach())},e}();g.prototype.keyboardHandler=new p,g.prototype.keyboardHandler.bindKeys({Tab:function(e){t.snippetManager&&t.snippetManager.expandWithTab(e)||(e.tabstopManager.tabNext(1),e.renderer.scrollCursorIntoView())},\"Shift-Tab\":function(e){e.tabstopManager.tabNext(-1),e.renderer.scrollCursorIntoView()},Esc:function(e){e.tabstopManager.detach()}});var v=function(e,t){0==e.row&&(e.column+=t.column),e.row+=t.row},b=function(e,t){e.row==t.row&&(e.column-=t.column),e.row-=t.row};i.importCssString(\"\\n.ace_snippet-marker {\\n    -moz-box-sizing: border-box;\\n    box-sizing: border-box;\\n    background: rgba(194, 193, 208, 0.09);\\n    border: 1px dotted rgba(211, 208, 235, 0.62);\\n    position: absolute;\\n}\",\"snippets.css\",!1),t.snippetManager=new f;var y=e(\"./editor\").Editor;(function(){this.insertSnippet=function(e,n){return t.snippetManager.insertSnippet(this,e,n)},this.expandSnippet=function(e){return t.snippetManager.expandWithTab(this,e)}}).call(y.prototype)})),ace.define(\"ace/autocomplete/inline_screenreader\",[\"require\",\"exports\",\"module\"],(function(e,t,n){\"use strict\";var i=function(){function e(e){this.editor=e,this.screenReaderDiv=document.createElement(\"div\"),this.screenReaderDiv.classList.add(\"ace_screenreader-only\"),this.editor.container.appendChild(this.screenReaderDiv)}return e.prototype.setScreenReaderContent=function(e){for(!this.popup&&this.editor.completer&&this.editor.completer.popup&&(this.popup=this.editor.completer.popup,this.popup.renderer.on(\"afterRender\",function(){var e=this.popup.getRow(),t=this.popup.renderer.$textLayer,n=t.element.childNodes[e-t.config.firstRow];if(n){for(var i=\"doc-tooltip \",o=0;o<this._lines.length;o++)i+=\"ace-inline-screenreader-line-\".concat(o,\" \");n.setAttribute(\"aria-describedby\",i)}}.bind(this)));this.screenReaderDiv.firstChild;)this.screenReaderDiv.removeChild(this.screenReaderDiv.firstChild);this._lines=e.split(/\\r\\n|\\r|\\n/);var t=this.createCodeBlock();this.screenReaderDiv.appendChild(t)},e.prototype.destroy=function(){this.screenReaderDiv.remove()},e.prototype.createCodeBlock=function(){var e=document.createElement(\"pre\");e.setAttribute(\"id\",\"ace-inline-screenreader\");for(var t=0;t<this._lines.length;t++){var n=document.createElement(\"code\");n.setAttribute(\"id\",\"ace-inline-screenreader-line-\".concat(t));var i=document.createTextNode(this._lines[t]);n.appendChild(i),e.appendChild(n)}return e},e}();t.AceInlineScreenReader=i})),ace.define(\"ace/autocomplete/inline\",[\"require\",\"exports\",\"module\",\"ace/snippets\",\"ace/autocomplete/inline_screenreader\"],(function(e,t,n){\"use strict\";var i=e(\"../snippets\").snippetManager,o=e(\"./inline_screenreader\").AceInlineScreenReader,r=function(){function e(){this.editor=null}return e.prototype.show=function(e,t,n){if(n=n||\"\",e&&this.editor&&this.editor!==e&&(this.hide(),this.editor=null,this.inlineScreenReader=null),!e||!t)return!1;this.inlineScreenReader||(this.inlineScreenReader=new o(e));var r=t.snippet?i.getDisplayTextForSnippet(e,t.snippet):t.value;return!(t.hideInlinePreview||!r||!r.startsWith(n))&&(this.editor=e,this.inlineScreenReader.setScreenReaderContent(r),\"\"===(r=r.slice(n.length))?e.removeGhostText():e.setGhostText(r),!0)},e.prototype.isOpen=function(){return!!this.editor&&!!this.editor.renderer.$ghostText},e.prototype.hide=function(){return!!this.editor&&(this.editor.removeGhostText(),!0)},e.prototype.destroy=function(){this.hide(),this.editor=null,this.inlineScreenReader&&(this.inlineScreenReader.destroy(),this.inlineScreenReader=null)},e}();t.AceInline=r})),ace.define(\"ace/autocomplete/util\",[\"require\",\"exports\",\"module\"],(function(e,t,n){\"use strict\";t.parForEach=function(e,t,n){var i=0,o=e.length;0===o&&n();for(var r=0;r<o;r++)t(e[r],(function(e,t){++i===o&&n(e,t)}))};var i=/[a-zA-Z_0-9\\$\\-\\u00A2-\\u2000\\u2070-\\uFFFF]/;t.retrievePrecedingIdentifier=function(e,t,n){n=n||i;for(var o=[],r=t-1;r>=0&&n.test(e[r]);r--)o.push(e[r]);return o.reverse().join(\"\")},t.retrieveFollowingIdentifier=function(e,t,n){n=n||i;for(var o=[],r=t;r<e.length&&n.test(e[r]);r++)o.push(e[r]);return o},t.getCompletionPrefix=function(e){var t,n=e.getCursorPosition(),i=e.session.getLine(n.row);return e.completers.forEach(function(e){e.identifierRegexps&&e.identifierRegexps.forEach(function(e){!t&&e&&(t=this.retrievePrecedingIdentifier(i,n.column,e))}.bind(this))}.bind(this)),t||this.retrievePrecedingIdentifier(i,n.column)},t.triggerAutocomplete=function(e,t){t=null==t?e.session.getPrecedingCharacter():t;return e.completers.some((function(e){if(e.triggerCharacters&&Array.isArray(e.triggerCharacters))return e.triggerCharacters.includes(t)}))}})),ace.define(\"ace/autocomplete\",[\"require\",\"exports\",\"module\",\"ace/keyboard/hash_handler\",\"ace/autocomplete/popup\",\"ace/autocomplete/inline\",\"ace/autocomplete/popup\",\"ace/autocomplete/util\",\"ace/lib/lang\",\"ace/lib/dom\",\"ace/snippets\",\"ace/config\",\"ace/lib/event\",\"ace/lib/scroll\"],(function(e,t,n){\"use strict\";var i=e(\"./keyboard/hash_handler\").HashHandler,o=e(\"./autocomplete/popup\").AcePopup,r=e(\"./autocomplete/inline\").AceInline,s=e(\"./autocomplete/popup\").getAriaId,a=e(\"./autocomplete/util\"),c=e(\"./lib/lang\"),p=e(\"./lib/dom\"),l=e(\"./snippets\").snippetManager,h=e(\"./config\"),u=e(\"./lib/event\"),d=e(\"./lib/scroll\").preventParentScroll,f=function(e,t){t.completer&&t.completer.destroy()},m=function(){function e(){this.autoInsert=!1,this.autoSelect=!0,this.autoShown=!1,this.exactMatch=!1,this.inlineEnabled=!1,this.keyboardHandler=new i,this.keyboardHandler.bindKeys(this.commands),this.parentNode=null,this.setSelectOnHover=!1,this.hasSeen=new Set,this.showLoadingState=!1,this.stickySelectionDelay=500,this.blurListener=this.blurListener.bind(this),this.changeListener=this.changeListener.bind(this),this.mousedownListener=this.mousedownListener.bind(this),this.mousewheelListener=this.mousewheelListener.bind(this),this.onLayoutChange=this.onLayoutChange.bind(this),this.changeTimer=c.delayedCall(function(){this.updateCompletions(!0)}.bind(this)),this.tooltipTimer=c.delayedCall(this.updateDocTooltip.bind(this),50),this.popupTimer=c.delayedCall(this.$updatePopupPosition.bind(this),50),this.stickySelectionTimer=c.delayedCall(function(){this.stickySelection=!0}.bind(this),this.stickySelectionDelay),this.$firstOpenTimer=c.delayedCall(function(){var t=this.completionProvider&&this.completionProvider.initialPosition;this.autoShown||this.popup&&this.popup.isOpen||!t||0===this.editor.completers.length||(this.completions=new v(e.completionsForLoading),this.openPopup(this.editor,t.prefix,!1),this.popup.renderer.setStyle(\"ace_loading\",!0))}.bind(this),this.stickySelectionDelay)}return Object.defineProperty(e,\"completionsForLoading\",{get:function(){return[{caption:h.nls(\"autocomplete.loading\",\"Loading...\"),value:\"\"}]},enumerable:!1,configurable:!0}),e.prototype.$init=function(){return this.popup=new o(this.parentNode||document.body||document.documentElement),this.popup.on(\"click\",function(e){this.insertMatch(),e.stop()}.bind(this)),this.popup.focus=this.editor.focus.bind(this.editor),this.popup.on(\"show\",this.$onPopupShow.bind(this)),this.popup.on(\"hide\",this.$onHidePopup.bind(this)),this.popup.on(\"select\",this.$onPopupChange.bind(this)),u.addListener(this.popup.container,\"mouseout\",this.mouseOutListener.bind(this)),this.popup.on(\"changeHoverMarker\",this.tooltipTimer.bind(null,null)),this.popup.renderer.on(\"afterRender\",this.$onPopupRender.bind(this)),this.popup},e.prototype.$initInline=function(){if(this.inlineEnabled&&!this.inlineRenderer)return this.inlineRenderer=new r,this.inlineRenderer},e.prototype.getPopup=function(){return this.popup||this.$init()},e.prototype.$onHidePopup=function(){this.inlineRenderer&&this.inlineRenderer.hide(),this.hideDocTooltip(),this.stickySelectionTimer.cancel(),this.popupTimer.cancel(),this.stickySelection=!1},e.prototype.$seen=function(e){!this.hasSeen.has(e)&&e&&e.completer&&e.completer.onSeen&&\"function\"===typeof e.completer.onSeen&&(e.completer.onSeen(this.editor,e),this.hasSeen.add(e))},e.prototype.$onPopupChange=function(e){if(this.inlineRenderer&&this.inlineEnabled){var t=e?null:this.popup.getData(this.popup.getRow());if(this.$updateGhostText(t),this.popup.isMouseOver&&this.setSelectOnHover)return void this.tooltipTimer.call(null,null);this.popupTimer.schedule(),this.tooltipTimer.schedule()}else this.popupTimer.call(null,null),this.tooltipTimer.call(null,null)},e.prototype.$updateGhostText=function(e){var t=this.base.row,n=this.base.column,i=this.editor.getCursorPosition().column,o=this.editor.session.getLine(t).slice(n,i);this.inlineRenderer.show(this.editor,e,o)?this.$seen(e):this.inlineRenderer.hide()},e.prototype.$onPopupRender=function(){var e=this.inlineRenderer&&this.inlineEnabled;if(this.completions&&this.completions.filtered&&this.completions.filtered.length>0)for(var t=this.popup.getFirstVisibleRow();t<=this.popup.getLastVisibleRow();t++){var n=this.popup.getData(t);!n||e&&!n.hideInlinePreview||this.$seen(n)}},e.prototype.$onPopupShow=function(e){this.$onPopupChange(e),this.stickySelection=!1,this.stickySelectionDelay>=0&&this.stickySelectionTimer.schedule(this.stickySelectionDelay)},e.prototype.observeLayoutChanges=function(){if(!this.$elements&&this.editor){window.addEventListener(\"resize\",this.onLayoutChange,{passive:!0}),window.addEventListener(\"wheel\",this.mousewheelListener);for(var e=this.editor.container.parentNode,t=[];e;)t.push(e),e.addEventListener(\"scroll\",this.onLayoutChange,{passive:!0}),e=e.parentNode;this.$elements=t}},e.prototype.unObserveLayoutChanges=function(){var e=this;window.removeEventListener(\"resize\",this.onLayoutChange,{passive:!0}),window.removeEventListener(\"wheel\",this.mousewheelListener),this.$elements&&this.$elements.forEach((function(t){t.removeEventListener(\"scroll\",e.onLayoutChange,{passive:!0})})),this.$elements=null},e.prototype.onLayoutChange=function(){if(!this.popup.isOpen)return this.unObserveLayoutChanges();this.$updatePopupPosition(),this.updateDocTooltip()},e.prototype.$updatePopupPosition=function(){var e=this.editor,t=e.renderer,n=t.layerConfig.lineHeight,i=t.$cursorLayer.getPixelPosition(this.base,!0);i.left-=this.popup.getTextLeftOffset();var o=e.container.getBoundingClientRect();i.top+=o.top-t.layerConfig.offset,i.left+=o.left-e.renderer.scrollLeft,i.left+=t.gutterWidth;var r={top:i.top,left:i.left};t.$ghostText&&t.$ghostTextWidget&&this.base.row===t.$ghostText.position.row&&(r.top+=t.$ghostTextWidget.el.offsetHeight);var s=e.container.getBoundingClientRect().bottom-n,a=s<r.top?{top:s,left:r.left}:r;this.popup.tryShow(a,n,\"bottom\")||this.popup.tryShow(i,n,\"top\")||this.popup.show(i,n)},e.prototype.openPopup=function(e,t,n){this.$firstOpenTimer.cancel(),this.popup||this.$init(),this.inlineEnabled&&!this.inlineRenderer&&this.$initInline(),this.popup.autoSelect=this.autoSelect,this.popup.setSelectOnHover(this.setSelectOnHover);var i,o=this.popup.getRow(),r=this.popup.data[o];this.popup.setData(this.completions.filtered,this.completions.filterText),this.editor.textInput.setAriaOptions&&this.editor.textInput.setAriaOptions({activeDescendant:s(this.popup.getRow()),inline:this.inlineEnabled}),e.keyBinding.addKeyboardHandler(this.keyboardHandler),this.stickySelection&&(i=this.popup.data.indexOf(r)),i&&-1!==i||(i=0),this.popup.setRow(this.autoSelect?i:-1),i===o&&r!==this.completions.filtered[i]&&this.$onPopupChange();var a=this.inlineRenderer&&this.inlineEnabled;if(i===o&&a){var c=this.popup.getData(this.popup.getRow());this.$updateGhostText(c)}n||(this.popup.setTheme(e.getTheme()),this.popup.setFontSize(e.getFontSize()),this.$updatePopupPosition(),this.tooltipNode&&this.updateDocTooltip()),this.changeTimer.cancel(),this.observeLayoutChanges()},e.prototype.detach=function(){this.editor&&(this.editor.keyBinding.removeKeyboardHandler(this.keyboardHandler),this.editor.off(\"changeSelection\",this.changeListener),this.editor.off(\"blur\",this.blurListener),this.editor.off(\"mousedown\",this.mousedownListener),this.editor.off(\"mousewheel\",this.mousewheelListener)),this.$firstOpenTimer.cancel(),this.changeTimer.cancel(),this.hideDocTooltip(),this.completionProvider&&this.completionProvider.detach(),this.popup&&this.popup.isOpen&&this.popup.hide(),this.popup&&this.popup.renderer&&this.popup.renderer.off(\"afterRender\",this.$onPopupRender),this.base&&this.base.detach(),this.activated=!1,this.completionProvider=this.completions=this.base=null,this.unObserveLayoutChanges()},e.prototype.changeListener=function(e){var t=this.editor.selection.lead;(t.row!=this.base.row||t.column<this.base.column)&&this.detach(),this.activated?this.changeTimer.schedule():this.detach()},e.prototype.blurListener=function(e){var t=document.activeElement,n=this.editor.textInput.getElement(),i=e.relatedTarget&&this.tooltipNode&&this.tooltipNode.contains(e.relatedTarget),o=this.popup&&this.popup.container;t==n||t.parentNode==o||i||t==this.tooltipNode||e.relatedTarget==n||this.detach()},e.prototype.mousedownListener=function(e){this.detach()},e.prototype.mousewheelListener=function(e){this.popup&&!this.popup.isMouseOver&&this.detach()},e.prototype.mouseOutListener=function(e){this.popup.isOpen&&this.$updatePopupPosition()},e.prototype.goTo=function(e){this.popup.goTo(e)},e.prototype.insertMatch=function(e,t){if(e||(e=this.popup.getData(this.popup.getRow())),!e)return!1;if(\"\"===e.value)return this.detach();var n=this.completions,i=this.getCompletionProvider().insertMatch(this.editor,e,n.filterText,t);return this.completions==n&&this.detach(),i},e.prototype.showPopup=function(e,t){this.editor&&this.detach(),this.activated=!0,this.editor=e,e.completer!=this&&(e.completer&&e.completer.detach(),e.completer=this),e.on(\"changeSelection\",this.changeListener),e.on(\"blur\",this.blurListener),e.on(\"mousedown\",this.mousedownListener),e.on(\"mousewheel\",this.mousewheelListener),this.updateCompletions(!1,t)},e.prototype.getCompletionProvider=function(e){return this.completionProvider||(this.completionProvider=new g(e)),this.completionProvider},e.prototype.gatherCompletions=function(e,t){return this.getCompletionProvider().gatherCompletions(e,t)},e.prototype.updateCompletions=function(t,n){if(t&&this.base&&this.completions){var i=this.editor.getCursorPosition();if((r=this.editor.session.getTextRange({start:this.base,end:i}))==this.completions.filterText)return;return this.completions.setFilter(r),this.completions.filtered.length?1!=this.completions.filtered.length||this.completions.filtered[0].value!=r||this.completions.filtered[0].snippet?void this.openPopup(this.editor,r,t):this.detach():this.detach()}if(n&&n.matches){i=this.editor.getSelectionRange().start;return this.base=this.editor.session.doc.createAnchor(i.row,i.column),this.base.$insertRight=!0,this.completions=new v(n.matches),this.getCompletionProvider().completions=this.completions,this.openPopup(this.editor,\"\",t)}var o=this.editor.getSession(),r=(i=this.editor.getCursorPosition(),a.getCompletionPrefix(this.editor));this.base=o.doc.createAnchor(i.row,i.column-r.length),this.base.$insertRight=!0;var s={exactMatch:this.exactMatch,ignoreCaption:this.ignoreCaption};this.getCompletionProvider({prefix:r,pos:i}).provideCompletions(this.editor,s,function(n,i,o){var r=i.filtered,s=a.getCompletionPrefix(this.editor);if(this.$firstOpenTimer.cancel(),o){if(!r.length){var c=!this.autoShown&&this.emptyMessage;if(\"function\"==typeof c&&(c=this.emptyMessage(s)),c){var p=[{caption:c,value:\"\"}];return this.completions=new v(p),this.openPopup(this.editor,s,t),this.popup.renderer.setStyle(\"ace_loading\",!1),void this.popup.renderer.setStyle(\"ace_empty-message\",!0)}return this.detach()}if(1==r.length&&r[0].value==s&&!r[0].snippet)return this.detach();if(this.autoInsert&&!this.autoShown&&1==r.length)return this.insertMatch(r[0])}this.completions=!o&&this.showLoadingState?new v(e.completionsForLoading.concat(r),i.filterText):i,this.openPopup(this.editor,s,t),this.popup.renderer.setStyle(\"ace_empty-message\",!1),this.popup.renderer.setStyle(\"ace_loading\",!o)}.bind(this)),!this.showLoadingState||this.autoShown||this.popup&&this.popup.isOpen||this.$firstOpenTimer.delay(this.stickySelectionDelay/2)},e.prototype.cancelContextMenu=function(){this.editor.$mouseHandler.cancelContextMenu()},e.prototype.updateDocTooltip=function(){var e=this.popup,t=this.completions.filtered,n=t&&(t[e.getHoveredRow()]||t[e.getRow()]),i=null;if(!n||!this.editor||!this.popup.isOpen)return this.hideDocTooltip();for(var o=this.editor.completers.length,r=0;r<o;r++){var s=this.editor.completers[r];if(s.getDocTooltip&&n.completerId===s.id){i=s.getDocTooltip(n);break}}if(i||\"string\"==typeof n||(i=n),\"string\"==typeof i&&(i={docText:i}),!i||!i.docHTML&&!i.docText)return this.hideDocTooltip();this.showDocTooltip(i)},e.prototype.showDocTooltip=function(e){this.tooltipNode||(this.tooltipNode=p.createElement(\"div\"),this.tooltipNode.style.margin=\"0\",this.tooltipNode.style.pointerEvents=\"auto\",this.tooltipNode.style.overscrollBehavior=\"contain\",this.tooltipNode.tabIndex=-1,this.tooltipNode.onblur=this.blurListener.bind(this),this.tooltipNode.onclick=this.onTooltipClick.bind(this),this.tooltipNode.id=\"doc-tooltip\",this.tooltipNode.setAttribute(\"role\",\"tooltip\"),this.tooltipNode.addEventListener(\"wheel\",d));var t=this.editor.renderer.theme;this.tooltipNode.className=\"ace_tooltip ace_doc-tooltip \"+(t.isDark?\"ace_dark \":\"\")+(t.cssClass||\"\");var n=this.tooltipNode;e.docHTML?n.innerHTML=e.docHTML:e.docText&&(n.textContent=e.docText),n.parentNode||this.popup.container.appendChild(this.tooltipNode);var i=this.popup,o=i.container.getBoundingClientRect();n.style.top=i.container.style.top,n.style.bottom=i.container.style.bottom,n.style.display=\"block\",window.innerWidth-o.right<320?o.left<320?i.isTopdown?(n.style.top=o.bottom+\"px\",n.style.left=o.left+\"px\",n.style.right=\"\",n.style.bottom=\"\"):(n.style.top=i.container.offsetTop-n.offsetHeight+\"px\",n.style.left=o.left+\"px\",n.style.right=\"\",n.style.bottom=\"\"):(n.style.right=window.innerWidth-o.left+\"px\",n.style.left=\"\"):(n.style.left=o.right+1+\"px\",n.style.right=\"\")},e.prototype.hideDocTooltip=function(){if(this.tooltipTimer.cancel(),this.tooltipNode){var e=this.tooltipNode;this.editor.isFocused()||document.activeElement!=e||this.editor.focus(),this.tooltipNode=null,e.parentNode&&e.parentNode.removeChild(e)}},e.prototype.onTooltipClick=function(e){for(var t=e.target;t&&t!=this.tooltipNode;){if(\"A\"==t.nodeName&&t.href){t.rel=\"noreferrer\",t.target=\"_blank\";break}t=t.parentNode}},e.prototype.destroy=function(){if(this.detach(),this.popup){this.popup.destroy();var e=this.popup.container;e&&e.parentNode&&e.parentNode.removeChild(e)}this.editor&&this.editor.completer==this&&(this.editor.off(\"destroy\",f),this.editor.completer=null),this.inlineRenderer=this.popup=this.editor=null},e}();m.prototype.commands={Up:function(e){e.completer.goTo(\"up\")},Down:function(e){e.completer.goTo(\"down\")},\"Ctrl-Up|Ctrl-Home\":function(e){e.completer.goTo(\"start\")},\"Ctrl-Down|Ctrl-End\":function(e){e.completer.goTo(\"end\")},Esc:function(e){e.completer.detach()},Return:function(e){return e.completer.insertMatch()},\"Shift-Return\":function(e){e.completer.insertMatch(null,{deleteSuffix:!0})},Tab:function(e){var t=e.completer.insertMatch();if(t||e.tabstopManager)return t;e.completer.goTo(\"down\")},Backspace:function(e){e.execCommand(\"backspace\"),!a.getCompletionPrefix(e)&&e.completer&&e.completer.detach()},PageUp:function(e){e.completer.popup.gotoPageUp()},PageDown:function(e){e.completer.popup.gotoPageDown()}},m.for=function(e){return e.completer instanceof m||(e.completer&&(e.completer.destroy(),e.completer=null),h.get(\"sharedPopups\")?(m.$sharedInstance||(m.$sharedInstance=new m),e.completer=m.$sharedInstance):(e.completer=new m,e.once(\"destroy\",f))),e.completer},m.startCommand={name:\"startAutocomplete\",exec:function(e,t){var n=m.for(e);n.autoInsert=!1,n.autoSelect=!0,n.autoShown=!1,n.showPopup(e,t),n.cancelContextMenu()},bindKey:\"Ctrl-Space|Ctrl-Shift-Space|Alt-Space\"};var g=function(){function e(e){this.initialPosition=e,this.active=!0}return e.prototype.insertByIndex=function(e,t,n){return!(!this.completions||!this.completions.filtered)&&this.insertMatch(e,this.completions.filtered[t],n)},e.prototype.insertMatch=function(e,t,n){if(!t)return!1;if(e.startOperation({command:{name:\"insertMatch\"}}),t.completer&&t.completer.insertMatch)t.completer.insertMatch(e,t);else{if(!this.completions)return!1;var i=this.completions.filterText.length,o=0;if(t.range&&t.range.start.row===t.range.end.row&&(i-=this.initialPosition.prefix.length,i+=this.initialPosition.pos.column-t.range.start.column,o+=t.range.end.column-this.initialPosition.pos.column),i||o){var r;r=e.selection.getAllRanges?e.selection.getAllRanges():[e.getSelectionRange()];for(var s,a=0;s=r[a];a++)s.start.column-=i,s.end.column+=o,e.session.remove(s)}t.snippet?l.insertSnippet(e,t.snippet):this.$insertString(e,t),t.completer&&t.completer.onInsert&&\"function\"==typeof t.completer.onInsert&&t.completer.onInsert(e,t),t.command&&\"startAutocomplete\"===t.command&&e.execCommand(t.command)}return e.endOperation(),!0},e.prototype.$insertString=function(e,t){var n=t.value||t;e.execCommand(\"insertstring\",n)},e.prototype.gatherCompletions=function(e,t){var n=e.getSession(),i=e.getCursorPosition(),o=a.getCompletionPrefix(e),r=[];this.completers=e.completers;var s=e.completers.length;return e.completers.forEach((function(c,p){c.getCompletions(e,n,i,o,(function(n,i){c.hideInlinePreview&&(i=i.map((function(e){return Object.assign(e,{hideInlinePreview:c.hideInlinePreview})}))),!n&&i&&(r=r.concat(i)),t(null,{prefix:a.getCompletionPrefix(e),matches:r,finished:0===--s})}))})),!0},e.prototype.provideCompletions=function(e,t,n){var i=function(e){var i=e.prefix,o=e.matches;this.completions=new v(o),t.exactMatch&&(this.completions.exactMatch=!0),t.ignoreCaption&&(this.completions.ignoreCaption=!0),this.completions.setFilter(i),(e.finished||this.completions.filtered.length)&&n(null,this.completions,e.finished)}.bind(this),o=!0,r=null;if(this.gatherCompletions(e,function(e,t){this.active&&(e&&(n(e,[],!0),this.detach()),0===t.prefix.indexOf(t.prefix)&&(o?r=t:i(t)))}.bind(this)),o=!1,r){var s=r;r=null,i(s)}},e.prototype.detach=function(){this.active=!1,this.completers&&this.completers.forEach((function(e){\"function\"===typeof e.cancel&&e.cancel()}))},e}(),v=function(){function e(e,t){this.all=e,this.filtered=e,this.filterText=t||\"\",this.exactMatch=!1,this.ignoreCaption=!1}return e.prototype.setFilter=function(e){if(e.length>this.filterText&&0===e.lastIndexOf(this.filterText,0))var t=this.filtered;else t=this.all;this.filterText=e,t=(t=this.filterCompletions(t,this.filterText)).sort((function(e,t){return t.exactMatch-e.exactMatch||t.$score-e.$score||(e.caption||e.value).localeCompare(t.caption||t.value)}));var n=null;t=t.filter((function(e){var t=e.snippet||e.caption||e.value;return t!==n&&(n=t,!0)})),this.filtered=t},e.prototype.filterCompletions=function(e,t){var n=[],i=t.toUpperCase(),o=t.toLowerCase();e:for(var r,s=0;r=e[s];s++){var a=!this.ignoreCaption&&r.caption||r.value||r.snippet;if(a){var c,p,l=-1,h=0,u=0;if(this.exactMatch){if(t!==a.substr(0,t.length))continue e}else{var d=a.toLowerCase().indexOf(o);if(d>-1)u=d;else for(var f=0;f<t.length;f++){var m=a.indexOf(o[f],l+1),g=a.indexOf(i[f],l+1);if((c=m>=0&&(g<0||m<g)?m:g)<0)continue e;(p=c-l-1)>0&&(-1===l&&(u+=10),u+=p,h|=1<<f),l=c}}r.matchMask=h,r.exactMatch=u?0:1,r.$score=(r.score||0)-u,n.push(r)}}return n},e}();t.Autocomplete=m,t.CompletionProvider=g,t.FilteredList=v})),ace.define(\"ace/ext/menu_tools/settings_menu.css\",[\"require\",\"exports\",\"module\"],(function(e,t,n){n.exports=\"#ace_settingsmenu, #kbshortcutmenu {\\n    background-color: #F7F7F7;\\n    color: black;\\n    box-shadow: -5px 4px 5px rgba(126, 126, 126, 0.55);\\n    padding: 1em 0.5em 2em 1em;\\n    overflow: auto;\\n    position: absolute;\\n    margin: 0;\\n    bottom: 0;\\n    right: 0;\\n    top: 0;\\n    z-index: 9991;\\n    cursor: default;\\n}\\n\\n.ace_dark #ace_settingsmenu, .ace_dark #kbshortcutmenu {\\n    box-shadow: -20px 10px 25px rgba(126, 126, 126, 0.25);\\n    background-color: rgba(255, 255, 255, 0.6);\\n    color: black;\\n}\\n\\n.ace_optionsMenuEntry:hover {\\n    background-color: rgba(100, 100, 100, 0.1);\\n    transition: all 0.3s\\n}\\n\\n.ace_closeButton {\\n    background: rgba(245, 146, 146, 0.5);\\n    border: 1px solid #F48A8A;\\n    border-radius: 50%;\\n    padding: 7px;\\n    position: absolute;\\n    right: -8px;\\n    top: -8px;\\n    z-index: 100000;\\n}\\n.ace_closeButton{\\n    background: rgba(245, 146, 146, 0.9);\\n}\\n.ace_optionsMenuKey {\\n    color: darkslateblue;\\n    font-weight: bold;\\n}\\n.ace_optionsMenuCommand {\\n    color: darkcyan;\\n    font-weight: normal;\\n}\\n.ace_optionsMenuEntry input, .ace_optionsMenuEntry button {\\n    vertical-align: middle;\\n}\\n\\n.ace_optionsMenuEntry button[ace_selected_button=true] {\\n    background: #e7e7e7;\\n    box-shadow: 1px 0px 2px 0px #adadad inset;\\n    border-color: #adadad;\\n}\\n.ace_optionsMenuEntry button {\\n    background: white;\\n    border: 1px solid lightgray;\\n    margin: 0px;\\n}\\n.ace_optionsMenuEntry button:hover{\\n    background: #f0f0f0;\\n}\"})),ace.define(\"ace/ext/menu_tools/overlay_page\",[\"require\",\"exports\",\"module\",\"ace/lib/dom\",\"ace/ext/menu_tools/settings_menu.css\"],(function(e,t,n){\"use strict\";var i=e(\"../../lib/dom\"),o=e(\"./settings_menu.css\");i.importCssString(o,\"settings_menu.css\",!1),n.exports.overlayPage=function(e,t,n){var i=document.createElement(\"div\"),o=!1;function r(e){27===e.keyCode&&s()}function s(){i&&(document.removeEventListener(\"keydown\",r),i.parentNode.removeChild(i),e&&e.focus(),i=null,n&&n())}return i.style.cssText=\"margin: 0; padding: 0; position: fixed; top:0; bottom:0; left:0; right:0;z-index: 9990; \"+(e?\"background-color: rgba(0, 0, 0, 0.3);\":\"\"),i.addEventListener(\"click\",(function(e){o||s()})),document.addEventListener(\"keydown\",r),t.addEventListener(\"click\",(function(e){e.stopPropagation()})),i.appendChild(t),document.body.appendChild(i),e&&e.blur(),{close:s,setIgnoreFocusOut:function(e){o=e,e&&(i.style.pointerEvents=\"none\",t.style.pointerEvents=\"auto\")}}}})),ace.define(\"ace/ext/modelist\",[\"require\",\"exports\",\"module\"],(function(e,t,n){\"use strict\";var i=[];var o=function(){function e(e,t,n){var i;this.name=e,this.caption=t,this.mode=\"ace/mode/\"+e,this.extensions=n,i=/\\^/.test(n)?n.replace(/\\|(\\^)?/g,(function(e,t){return\"$|\"+(t?\"^\":\"^.*\\\\.\")}))+\"$\":\"^.*\\\\.(\"+n+\")$\",this.extRe=new RegExp(i,\"gi\")}return e.prototype.supportsFile=function(e){return e.match(this.extRe)},e}(),r={ABAP:[\"abap\"],ABC:[\"abc\"],ActionScript:[\"as\"],ADA:[\"ada|adb\"],Alda:[\"alda\"],Apache_Conf:[\"^htaccess|^htgroups|^htpasswd|^conf|htaccess|htgroups|htpasswd\"],Apex:[\"apex|cls|trigger|tgr\"],AQL:[\"aql\"],AsciiDoc:[\"asciidoc|adoc\"],ASL:[\"dsl|asl|asl.json\"],Assembly_ARM32:[\"s\"],Assembly_x86:[\"asm|a\"],Astro:[\"astro\"],AutoHotKey:[\"ahk\"],BatchFile:[\"bat|cmd\"],BibTeX:[\"bib\"],C_Cpp:[\"cpp|c|cc|cxx|h|hh|hpp|ino\"],C9Search:[\"c9search_results\"],Cirru:[\"cirru|cr\"],Clojure:[\"clj|cljs\"],Cobol:[\"CBL|COB\"],coffee:[\"coffee|cf|cson|^Cakefile\"],ColdFusion:[\"cfm|cfc\"],Crystal:[\"cr\"],CSharp:[\"cs\"],Csound_Document:[\"csd\"],Csound_Orchestra:[\"orc\"],Csound_Score:[\"sco\"],CSS:[\"css\"],Curly:[\"curly\"],Cuttlefish:[\"conf\"],D:[\"d|di\"],Dart:[\"dart\"],Diff:[\"diff|patch\"],Django:[\"djt|html.djt|dj.html|djhtml\"],Dockerfile:[\"^Dockerfile\"],Dot:[\"dot\"],Drools:[\"drl\"],Edifact:[\"edi\"],Eiffel:[\"e|ge\"],EJS:[\"ejs\"],Elixir:[\"ex|exs\"],Elm:[\"elm\"],Erlang:[\"erl|hrl\"],Flix:[\"flix\"],Forth:[\"frt|fs|ldr|fth|4th\"],Fortran:[\"f|f90\"],FSharp:[\"fsi|fs|ml|mli|fsx|fsscript\"],FSL:[\"fsl\"],FTL:[\"ftl\"],Gcode:[\"gcode\"],Gherkin:[\"feature\"],Gitignore:[\"^.gitignore\"],Glsl:[\"glsl|frag|vert\"],Gobstones:[\"gbs\"],golang:[\"go\"],GraphQLSchema:[\"gql\"],Groovy:[\"groovy\"],HAML:[\"haml\"],Handlebars:[\"hbs|handlebars|tpl|mustache\"],Haskell:[\"hs\"],Haskell_Cabal:[\"cabal\"],haXe:[\"hx\"],Hjson:[\"hjson\"],HTML:[\"html|htm|xhtml|we|wpy\"],HTML_Elixir:[\"eex|html.eex\"],HTML_Ruby:[\"erb|rhtml|html.erb\"],INI:[\"ini|conf|cfg|prefs\"],Io:[\"io\"],Ion:[\"ion\"],Jack:[\"jack\"],Jade:[\"jade|pug\"],Java:[\"java\"],JavaScript:[\"js|jsm|cjs|mjs\"],JEXL:[\"jexl\"],JSON:[\"json\"],JSON5:[\"json5\"],JSONiq:[\"jq\"],JSP:[\"jsp\"],JSSM:[\"jssm|jssm_state\"],JSX:[\"jsx\"],Julia:[\"jl\"],Kotlin:[\"kt|kts\"],LaTeX:[\"tex|latex|ltx|bib\"],Latte:[\"latte\"],LESS:[\"less\"],Liquid:[\"liquid\"],Lisp:[\"lisp\"],LiveScript:[\"ls\"],Log:[\"log\"],LogiQL:[\"logic|lql\"],Logtalk:[\"lgt\"],LSL:[\"lsl\"],Lua:[\"lua\"],LuaPage:[\"lp\"],Lucene:[\"lucene\"],Makefile:[\"^Makefile|^GNUmakefile|^makefile|^OCamlMakefile|make\"],Markdown:[\"md|markdown\"],Mask:[\"mask\"],MATLAB:[\"matlab\"],Maze:[\"mz\"],MediaWiki:[\"wiki|mediawiki\"],MEL:[\"mel\"],MIPS:[\"s|asm\"],MIXAL:[\"mixal\"],MUSHCode:[\"mc|mush\"],MySQL:[\"mysql\"],Nasal:[\"nas\"],Nginx:[\"nginx|conf\"],Nim:[\"nim\"],Nix:[\"nix\"],NSIS:[\"nsi|nsh\"],Nunjucks:[\"nunjucks|nunjs|nj|njk\"],ObjectiveC:[\"m|mm\"],OCaml:[\"ml|mli\"],Odin:[\"odin\"],PartiQL:[\"partiql|pql\"],Pascal:[\"pas|p\"],Perl:[\"pl|pm\"],pgSQL:[\"pgsql\"],PHP:[\"php|inc|phtml|shtml|php3|php4|php5|phps|phpt|aw|ctp|module\"],PHP_Laravel_blade:[\"blade.php\"],Pig:[\"pig\"],PLSQL:[\"plsql\"],Powershell:[\"ps1\"],Praat:[\"praat|praatscript|psc|proc\"],Prisma:[\"prisma\"],Prolog:[\"plg|prolog\"],Properties:[\"properties\"],Protobuf:[\"proto\"],PRQL:[\"prql\"],Puppet:[\"epp|pp\"],Python:[\"py\"],QML:[\"qml\"],R:[\"r\"],Raku:[\"raku|rakumod|rakutest|p6|pl6|pm6\"],Razor:[\"cshtml|asp\"],RDoc:[\"Rd\"],Red:[\"red|reds\"],RHTML:[\"Rhtml\"],Robot:[\"robot|resource\"],RST:[\"rst\"],Ruby:[\"rb|ru|gemspec|rake|^Guardfile|^Rakefile|^Gemfile\"],Rust:[\"rs\"],SaC:[\"sac\"],SASS:[\"sass\"],SCAD:[\"scad\"],Scala:[\"scala|sbt\"],Scheme:[\"scm|sm|rkt|oak|scheme\"],Scrypt:[\"scrypt\"],SCSS:[\"scss\"],SH:[\"sh|bash|^.bashrc\"],SJS:[\"sjs\"],Slim:[\"slim|skim\"],Smarty:[\"smarty|tpl\"],Smithy:[\"smithy\"],snippets:[\"snippets\"],Soy_Template:[\"soy\"],Space:[\"space\"],SPARQL:[\"rq\"],SQL:[\"sql\"],SQLServer:[\"sqlserver\"],Stylus:[\"styl|stylus\"],SVG:[\"svg\"],Swift:[\"swift\"],Tcl:[\"tcl\"],Terraform:[\"tf\",\"tfvars\",\"terragrunt\"],Tex:[\"tex\"],Text:[\"txt\"],Textile:[\"textile\"],Toml:[\"toml\"],TSX:[\"tsx\"],Turtle:[\"ttl\"],Twig:[\"twig|swig\"],Typescript:[\"ts|mts|cts|typescript|str\"],Vala:[\"vala\"],VBScript:[\"vbs|vb\"],Velocity:[\"vm\"],Verilog:[\"v|vh|sv|svh\"],VHDL:[\"vhd|vhdl\"],Visualforce:[\"vfp|component|page\"],Vue:[\"vue\"],Wollok:[\"wlk|wpgm|wtest\"],XML:[\"xml|rdf|rss|wsdl|xslt|atom|mathml|mml|xul|xbl|xaml\"],XQuery:[\"xq\"],YAML:[\"yaml|yml\"],Zeek:[\"zeek|bro\"],Zig:[\"zig\"]},s={ObjectiveC:\"Objective-C\",CSharp:\"C#\",golang:\"Go\",C_Cpp:\"C and C++\",Csound_Document:\"Csound Document\",Csound_Orchestra:\"Csound\",Csound_Score:\"Csound Score\",coffee:\"CoffeeScript\",HTML_Ruby:\"HTML (Ruby)\",HTML_Elixir:\"HTML (Elixir)\",FTL:\"FreeMarker\",PHP_Laravel_blade:\"PHP (Blade Template)\",Perl6:\"Perl 6\",AutoHotKey:\"AutoHotkey / AutoIt\"},a={};for(var c in r){var p=r[c],l=(s[c]||c).replace(/_/g,\" \"),h=c.toLowerCase(),u=new o(h,l,p[0]);a[h]=u,i.push(u)}n.exports={getModeForPath:function(e){for(var t=a.text,n=e.split(/[\\/\\\\]/).pop(),o=0;o<i.length;o++)if(i[o].supportsFile(n)){t=i[o];break}return t},modes:i,modesByName:a}})),ace.define(\"ace/ext/prompt\",[\"require\",\"exports\",\"module\",\"ace/config\",\"ace/range\",\"ace/lib/dom\",\"ace/autocomplete\",\"ace/autocomplete/popup\",\"ace/autocomplete/popup\",\"ace/undomanager\",\"ace/tokenizer\",\"ace/ext/menu_tools/overlay_page\",\"ace/ext/modelist\"],(function(e,t,n){\"use strict\";var i,o=e(\"../config\").nls,r=e(\"../range\").Range,s=e(\"../lib/dom\"),a=e(\"../autocomplete\").FilteredList,c=e(\"../autocomplete/popup\").AcePopup,p=e(\"../autocomplete/popup\").$singleLineEditor,l=e(\"../undomanager\").UndoManager,h=e(\"../tokenizer\").Tokenizer,u=e(\"./menu_tools/overlay_page\").overlayPage,d=e(\"./modelist\");function f(e,t,n,o){if(\"object\"==typeof t)return f(e,\"\",t,n);if(i){var r=i;if(e=r.editor,r.close(),r.name&&r.name==n.name)return}if(n.$type)return f[n.$type](e,o);var a=p();a.session.setUndoManager(new l);var d=s.buildDom([\"div\",{class:\"ace_prompt_container\"+(n.hasDescription?\" input-box-with-description\":\"\")}]),m=u(e,d,S);if(d.appendChild(a.container),e&&(e.cmdLine=a,a.setOption(\"fontSize\",e.getOption(\"fontSize\"))),t&&a.setValue(t,1),n.selection&&a.selection.setRange({start:a.session.doc.indexToPosition(n.selection[0]),end:a.session.doc.indexToPosition(n.selection[1])}),n.getCompletions){var g=new c;g.renderer.setStyle(\"ace_autocomplete_inline\"),g.container.style.display=\"block\",g.container.style.maxWidth=\"600px\",g.container.style.width=\"100%\",g.container.style.marginTop=\"3px\",g.renderer.setScrollMargin(2,2,0,0),g.autoSelect=!1,g.renderer.$maxLines=15,g.setRow(-1),g.on(\"click\",(function(e){var t=g.getData(g.getRow());t.error||(a.setValue(t.value||t.name||t),y(),e.stop())})),d.appendChild(g.container),w()}if(n.$rules){var v=new h(n.$rules);a.session.bgTokenizer.setTokenizer(v)}if(n.placeholder&&a.setOption(\"placeholder\",n.placeholder),n.hasDescription){var b=s.buildDom([\"div\",{class:\"ace_prompt_text_container\"}]);s.buildDom(n.prompt||\"Press 'Enter' to confirm or 'Escape' to cancel\",b),d.appendChild(b)}function y(){var e;e=g&&g.getCursorPosition().row>0?C():a.getValue();var t=g?g.getData(g.getRow()):e;t&&!t.error&&(S(),n.onAccept&&n.onAccept({value:e,item:t},a))}m.setIgnoreFocusOut(n.ignoreFocusOut);var x={Enter:y,\"Esc|Shift-Esc\":function(){n.onCancel&&n.onCancel(a.getValue(),a),S()}};function S(){m.close(),o&&o(),i=null}function w(){if(n.getCompletions){var e;n.getPrefix&&(e=n.getPrefix(a));var t=n.getCompletions(a);g.setData(t,e),g.resize(!0)}}function C(){var e=g.getData(g.getRow());if(e&&!e.error)return e.value||e.caption||e}g&&Object.assign(x,{Up:function(e){g.goTo(\"up\"),C()},Down:function(e){g.goTo(\"down\"),C()},\"Ctrl-Up|Ctrl-Home\":function(e){g.goTo(\"start\"),C()},\"Ctrl-Down|Ctrl-End\":function(e){g.goTo(\"end\"),C()},Tab:function(e){g.goTo(\"down\"),C()},PageUp:function(e){g.gotoPageUp(),C()},PageDown:function(e){g.gotoPageDown(),C()}}),a.commands.bindKeys(x),a.on(\"input\",(function(){n.onInput&&n.onInput(),w()})),a.resize(!0),g&&g.resize(!0),a.focus(),i={close:S,name:n.name,editor:e}}f.gotoLine=function(e,t){var n;f(e,\":\"+(n=e.selection.toJSON(),Array.isArray(n)||(n=[n]),n.map((function(e){var t=e.isBackwards?e.start:e.end,n=e.isBackwards?e.end:e.start,i=n.row+1+\":\"+n.column;return n.row==t.row?n.column!=t.column&&(i+=\">:\"+t.column):i+=\">\"+(t.row+1)+\":\"+t.column,i})).reverse().join(\", \")),{name:\"gotoLine\",selection:[1,Number.MAX_VALUE],onAccept:function(t){var n=t.value,i=f.gotoLine._history;i||(f.gotoLine._history=i=[]),-1!=i.indexOf(n)&&i.splice(i.indexOf(n),1),i.unshift(n),i.length>20&&(i.length=20);var o=e.getCursorPosition(),s=[];n.replace(/^:/,\"\").split(/,/).map((function(t){var n=t.split(/([<>:+-]|c?\\d+)|[^c\\d<>:+-]+/).filter(Boolean),i=0;function a(){var t=n[i++];if(t){if(\"c\"==t[0]){var r=parseInt(t.slice(1))||0;return e.session.doc.indexToPosition(r)}var s=o.row,a=0;return/\\d/.test(t)&&(s=parseInt(t)-1,t=n[i++]),\":\"==t&&(t=n[i++],/\\d/.test(t)&&(a=parseInt(t)||0)),{row:s,column:a}}}o=a();var c=r.fromPoints(o,o);\">\"==n[i]?(i++,c.end=a()):\"<\"==n[i]&&(i++,c.start=a()),s.unshift(c)})),e.selection.fromJSON(s);var a=e.renderer.scrollTop;e.renderer.scrollSelectionIntoView(e.selection.anchor,e.selection.cursor,.5),e.renderer.animateScrolling(a)},history:function(){return f.gotoLine._history?f.gotoLine._history:[]},getCompletions:function(t){var n=t.getValue(),i=n.replace(/^:/,\"\").split(\":\"),o=Math.min(parseInt(i[0])||1,e.session.getLength())-1;return[n+\"  \"+e.session.getLine(o)].concat(this.history())},$rules:{start:[{regex:/\\d+/,token:\"string\"},{regex:/[:,><+\\-c]/,token:\"keyword\"}]}})},f.commands=function(e,t){var n=function(t){var n=[],i={};return e.keyBinding.$handlers.forEach((function(e){var o=e.platform,r=e.byName;for(var s in r){var a=r[s].bindKey;\"string\"!==typeof a&&(a=a&&a[o]||\"\");var c=r[s],p=c.description||(c.name||\"\").replace(/^./,(function(e){return e.toUpperCase(e)})).replace(/[a-z][A-Z]/g,(function(e){return e[0]+\" \"+e[1].toLowerCase(e)}));Array.isArray(c)||(c=[c]),c.forEach((function(e){\"string\"!=typeof e&&(e=e.name),t.find((function(t){return t===e}))||(i[e]?i[e].key+=\"|\"+a:(i[e]={key:a,command:e,description:p},n.push(i[e])))}))}})),n}([\"insertstring\",\"inserttext\",\"setIndentation\",\"paste\"]);n=n.map((function(e){return{value:e.description,meta:e.key,command:e.command}})),f(e,\"\",{name:\"commands\",selection:[0,Number.MAX_VALUE],maxHistoryCount:5,onAccept:function(t){if(t.item){var n=t.item.command;this.addToHistory(t.item),e.execCommand(n)}},addToHistory:function(e){var t=this.history();t.unshift(e),delete e.message;for(var n=1;n<t.length;n++)if(t[n].command==e.command){t.splice(n,1);break}this.maxHistoryCount>0&&t.length>this.maxHistoryCount&&t.splice(t.length-1,1),f.commands.history=t},history:function(){return f.commands.history||[]},getPrefix:function(e){var t=e.getCursorPosition();return e.getValue().substring(0,t.column)},getCompletions:function(e){function t(e,t){var n=JSON.parse(JSON.stringify(e));return new a(n).filterCompletions(n,t)}var i=this.getPrefix(e),r=t(this.history(),i),s=function(e,t){if(!t||!t.length)return e;var n=[];t.forEach((function(e){n.push(e.command)}));var i=[];return e.forEach((function(e){-1===n.indexOf(e.command)&&i.push(e)})),i}(n,r);s=t(s,i),r.length&&s.length&&(r[0].message=o(\"prompt.recently-used\",\"Recently used\"),s[0].message=o(\"prompt.other-commands\",\"Other commands\"));var c=r.concat(s);return c.length>0?c:[{value:o(\"prompt.no-matching-commands\",\"No matching commands\"),error:1}]}})},f.modes=function(e,t){var n=d.modes;n=n.map((function(e){return{value:e.caption,mode:e.name}})),f(e,\"\",{name:\"modes\",selection:[0,Number.MAX_VALUE],onAccept:function(t){if(t.item){var n=\"ace/mode/\"+t.item.mode;e.session.setMode(n)}},getPrefix:function(e){var t=e.getCursorPosition();return e.getValue().substring(0,t.column)},getCompletions:function(e){var t=this.getPrefix(e),i=function(e,t){var n=JSON.parse(JSON.stringify(e));return new a(n).filterCompletions(n,t)}(n,t);return i.length>0?i:[{caption:\"No mode matching\",value:\"No mode matching\",error:1}]}})},s.importCssString(\".ace_prompt_container {\\n    max-width: 603px;\\n    width: 100%;\\n    margin: 20px auto;\\n    padding: 3px;\\n    background: white;\\n    border-radius: 2px;\\n    box-shadow: 0px 2px 3px 0px #555;\\n}\",\"promtp.css\",!1),t.prompt=f})),ace.require([\"ace/ext/prompt\"],(function(e){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=e)}));","name":"021b7834b70164d3cbd6b4bd838d26e7.js","input":"ace.define(\"ace/ext/menu_tools/get_editor_keyboard_shortcuts\", [\"require\", \"exports\", \"module\", \"ace/lib/keys\"], function (require, exports, module) {\n  /*jslint indent: 4, maxerr: 50, white: true, browser: true, vars: true*/\n  \"use strict\";\n\n  var keys = require(\"../../lib/keys\");\n  module.exports.getEditorKeyboardShortcuts = function (editor) {\n    var KEY_MODS = keys.KEY_MODS;\n    var keybindings = [];\n    var commandMap = {};\n    editor.keyBinding.$handlers.forEach(function (handler) {\n      var ckb = handler.commandKeyBinding;\n      for (var i in ckb) {\n        var key = i.replace(/(^|-)\\w/g, function (x) {\n          return x.toUpperCase();\n        });\n        var commands = ckb[i];\n        if (!Array.isArray(commands)) commands = [commands];\n        commands.forEach(function (command) {\n          if (typeof command != \"string\") command = command.name;\n          if (commandMap[command]) {\n            commandMap[command].key += \"|\" + key;\n          } else {\n            commandMap[command] = {\n              key: key,\n              command: command\n            };\n            keybindings.push(commandMap[command]);\n          }\n        });\n      }\n    });\n    return keybindings;\n  };\n});\nace.define(\"ace/autocomplete/popup\", [\"require\", \"exports\", \"module\", \"ace/virtual_renderer\", \"ace/editor\", \"ace/range\", \"ace/lib/event\", \"ace/lib/lang\", \"ace/lib/dom\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Renderer = require(\"../virtual_renderer\").VirtualRenderer;\n  var Editor = require(\"../editor\").Editor;\n  var Range = require(\"../range\").Range;\n  var event = require(\"../lib/event\");\n  var lang = require(\"../lib/lang\");\n  var dom = require(\"../lib/dom\");\n  var nls = require(\"../config\").nls;\n  var userAgent = require(\"./../lib/useragent\");\n  var getAriaId = function (index) {\n    return \"suggest-aria-id:\".concat(index);\n  };\n  var popupAriaRole = userAgent.isSafari ? \"menu\" : \"listbox\";\n  var optionAriaRole = userAgent.isSafari ? \"menuitem\" : \"option\";\n  var ariaActiveState = userAgent.isSafari ? \"aria-current\" : \"aria-selected\";\n  var $singleLineEditor = function (el) {\n    var renderer = new Renderer(el);\n    renderer.$maxLines = 4;\n    var editor = new Editor(renderer);\n    editor.setHighlightActiveLine(false);\n    editor.setShowPrintMargin(false);\n    editor.renderer.setShowGutter(false);\n    editor.renderer.setHighlightGutterLine(false);\n    editor.$mouseHandler.$focusTimeout = 0;\n    editor.$highlightTagPending = true;\n    return editor;\n  };\n  var AcePopup = /** @class */function () {\n    function AcePopup(parentNode) {\n      var el = dom.createElement(\"div\");\n      var popup = $singleLineEditor(el);\n      if (parentNode) {\n        parentNode.appendChild(el);\n      }\n      el.style.display = \"none\";\n      popup.renderer.content.style.cursor = \"default\";\n      popup.renderer.setStyle(\"ace_autocomplete\");\n      popup.renderer.$textLayer.element.setAttribute(\"role\", popupAriaRole);\n      popup.renderer.$textLayer.element.setAttribute(\"aria-roledescription\", nls(\"autocomplete.popup.aria-roledescription\", \"Autocomplete suggestions\"));\n      popup.renderer.$textLayer.element.setAttribute(\"aria-label\", nls(\"autocomplete.popup.aria-label\", \"Autocomplete suggestions\"));\n      popup.renderer.textarea.setAttribute(\"aria-hidden\", \"true\");\n      popup.setOption(\"displayIndentGuides\", false);\n      popup.setOption(\"dragDelay\", 150);\n      var noop = function () {};\n      popup.focus = noop;\n      popup.$isFocused = true;\n      popup.renderer.$cursorLayer.restartTimer = noop;\n      popup.renderer.$cursorLayer.element.style.opacity = \"0\";\n      popup.renderer.$maxLines = 8;\n      popup.renderer.$keepTextAreaAtCursor = false;\n      popup.setHighlightActiveLine(false);\n      popup.session.highlight(\"\");\n      popup.session.$searchHighlight.clazz = \"ace_highlight-marker\";\n      popup.on(\"mousedown\", function (e) {\n        var pos = e.getDocumentPosition();\n        popup.selection.moveToPosition(pos);\n        selectionMarker.start.row = selectionMarker.end.row = pos.row;\n        e.stop();\n      });\n      var lastMouseEvent;\n      var hoverMarker = new Range(-1, 0, -1, Infinity);\n      var selectionMarker = new Range(-1, 0, -1, Infinity);\n      selectionMarker.id = popup.session.addMarker(selectionMarker, \"ace_active-line\", \"fullLine\");\n      popup.setSelectOnHover = function (val) {\n        if (!val) {\n          hoverMarker.id = popup.session.addMarker(hoverMarker, \"ace_line-hover\", \"fullLine\");\n        } else if (hoverMarker.id) {\n          popup.session.removeMarker(hoverMarker.id);\n          hoverMarker.id = null;\n        }\n      };\n      popup.setSelectOnHover(false);\n      popup.on(\"mousemove\", function (e) {\n        if (!lastMouseEvent) {\n          lastMouseEvent = e;\n          return;\n        }\n        if (lastMouseEvent.x == e.x && lastMouseEvent.y == e.y) {\n          return;\n        }\n        lastMouseEvent = e;\n        lastMouseEvent.scrollTop = popup.renderer.scrollTop;\n        popup.isMouseOver = true;\n        var row = lastMouseEvent.getDocumentPosition().row;\n        if (hoverMarker.start.row != row) {\n          if (!hoverMarker.id) popup.setRow(row);\n          setHoverMarker(row);\n        }\n      });\n      popup.renderer.on(\"beforeRender\", function () {\n        if (lastMouseEvent && hoverMarker.start.row != -1) {\n          lastMouseEvent.$pos = null;\n          var row = lastMouseEvent.getDocumentPosition().row;\n          if (!hoverMarker.id) popup.setRow(row);\n          setHoverMarker(row, true);\n        }\n      });\n      popup.renderer.on(\"afterRender\", function () {\n        var row = popup.getRow();\n        var t = popup.renderer.$textLayer;\n        var selected = /** @type {HTMLElement|null} */t.element.childNodes[row - t.config.firstRow];\n        var el = document.activeElement; // Active element is textarea of main editor\n        if (selected !== popup.selectedNode && popup.selectedNode) {\n          dom.removeCssClass(popup.selectedNode, \"ace_selected\");\n          el.removeAttribute(\"aria-activedescendant\");\n          popup.selectedNode.removeAttribute(ariaActiveState);\n          popup.selectedNode.removeAttribute(\"id\");\n        }\n        popup.selectedNode = selected;\n        if (selected) {\n          dom.addCssClass(selected, \"ace_selected\");\n          var ariaId = getAriaId(row);\n          selected.id = ariaId;\n          t.element.setAttribute(\"aria-activedescendant\", ariaId);\n          el.setAttribute(\"aria-activedescendant\", ariaId);\n          selected.setAttribute(\"role\", optionAriaRole);\n          selected.setAttribute(\"aria-roledescription\", nls(\"autocomplete.popup.item.aria-roledescription\", \"item\"));\n          selected.setAttribute(\"aria-label\", popup.getData(row).caption || popup.getData(row).value);\n          selected.setAttribute(\"aria-setsize\", popup.data.length);\n          selected.setAttribute(\"aria-posinset\", row + 1);\n          selected.setAttribute(\"aria-describedby\", \"doc-tooltip\");\n          selected.setAttribute(ariaActiveState, \"true\");\n        }\n      });\n      var hideHoverMarker = function () {\n        setHoverMarker(-1);\n      };\n      var setHoverMarker = function (row, suppressRedraw) {\n        if (row !== hoverMarker.start.row) {\n          hoverMarker.start.row = hoverMarker.end.row = row;\n          if (!suppressRedraw) popup.session._emit(\"changeBackMarker\");\n          popup._emit(\"changeHoverMarker\");\n        }\n      };\n      popup.getHoveredRow = function () {\n        return hoverMarker.start.row;\n      };\n      event.addListener(popup.container, \"mouseout\", function () {\n        popup.isMouseOver = false;\n        hideHoverMarker();\n      });\n      popup.on(\"hide\", hideHoverMarker);\n      popup.on(\"changeSelection\", hideHoverMarker);\n      popup.session.doc.getLength = function () {\n        return popup.data.length;\n      };\n      popup.session.doc.getLine = function (i) {\n        var data = popup.data[i];\n        if (typeof data == \"string\") return data;\n        return data && data.value || \"\";\n      };\n      var bgTokenizer = popup.session.bgTokenizer;\n      bgTokenizer.$tokenizeRow = function (row) {\n        var data = popup.data[row];\n        var tokens = [];\n        if (!data) return tokens;\n        if (typeof data == \"string\") data = {\n          value: data\n        };\n        var caption = data.caption || data.value || data.name;\n        function addToken(value, className) {\n          value && tokens.push({\n            type: (data.className || \"\") + (className || \"\"),\n            value: value\n          });\n        }\n        var lower = caption.toLowerCase();\n        var filterText = (popup.filterText || \"\").toLowerCase();\n        var lastIndex = 0;\n        var lastI = 0;\n        for (var i = 0; i <= filterText.length; i++) {\n          if (i != lastI && (data.matchMask & 1 << i || i == filterText.length)) {\n            var sub = filterText.slice(lastI, i);\n            lastI = i;\n            var index = lower.indexOf(sub, lastIndex);\n            if (index == -1) continue;\n            addToken(caption.slice(lastIndex, index), \"\");\n            lastIndex = index + sub.length;\n            addToken(caption.slice(index, lastIndex), \"completion-highlight\");\n          }\n        }\n        addToken(caption.slice(lastIndex, caption.length), \"\");\n        tokens.push({\n          type: \"completion-spacer\",\n          value: \" \"\n        });\n        if (data.meta) tokens.push({\n          type: \"completion-meta\",\n          value: data.meta\n        });\n        if (data.message) tokens.push({\n          type: \"completion-message\",\n          value: data.message\n        });\n        return tokens;\n      };\n      bgTokenizer.$updateOnChange = noop;\n      bgTokenizer.start = noop;\n      popup.session.$computeWidth = function () {\n        return this.screenWidth = 0;\n      };\n      popup.isOpen = false;\n      popup.isTopdown = false;\n      popup.autoSelect = true;\n      popup.filterText = \"\";\n      popup.isMouseOver = false;\n      popup.data = [];\n      popup.setData = function (list, filterText) {\n        popup.filterText = filterText || \"\";\n        popup.setValue(lang.stringRepeat(\"\\n\", list.length), -1);\n        popup.data = list || [];\n        popup.setRow(0);\n      };\n      popup.getData = function (row) {\n        return popup.data[row];\n      };\n      popup.getRow = function () {\n        return selectionMarker.start.row;\n      };\n      popup.setRow = function (line) {\n        line = Math.max(this.autoSelect ? 0 : -1, Math.min(this.data.length - 1, line));\n        if (selectionMarker.start.row != line) {\n          popup.selection.clearSelection();\n          selectionMarker.start.row = selectionMarker.end.row = line || 0;\n          popup.session._emit(\"changeBackMarker\");\n          popup.moveCursorTo(line || 0, 0);\n          if (popup.isOpen) popup._signal(\"select\");\n        }\n      };\n      popup.on(\"changeSelection\", function () {\n        if (popup.isOpen) popup.setRow(popup.selection.lead.row);\n        popup.renderer.scrollCursorIntoView();\n      });\n      popup.hide = function () {\n        this.container.style.display = \"none\";\n        popup.anchorPos = null;\n        popup.anchor = null;\n        if (popup.isOpen) {\n          popup.isOpen = false;\n          this._signal(\"hide\");\n        }\n      };\n      popup.tryShow = function (pos, lineHeight, anchor, forceShow) {\n        if (!forceShow && popup.isOpen && popup.anchorPos && popup.anchor && popup.anchorPos.top === pos.top && popup.anchorPos.left === pos.left && popup.anchor === anchor) {\n          return true;\n        }\n        var el = this.container;\n        var screenHeight = window.innerHeight;\n        var screenWidth = window.innerWidth;\n        var renderer = this.renderer;\n        var maxH = renderer.$maxLines * lineHeight * 1.4;\n        var dims = {\n          top: 0,\n          bottom: 0,\n          left: 0\n        };\n        var spaceBelow = screenHeight - pos.top - 3 * this.$borderSize - lineHeight;\n        var spaceAbove = pos.top - 3 * this.$borderSize;\n        if (!anchor) {\n          if (spaceAbove <= spaceBelow || spaceBelow >= maxH) {\n            anchor = \"bottom\";\n          } else {\n            anchor = \"top\";\n          }\n        }\n        if (anchor === \"top\") {\n          dims.bottom = pos.top - this.$borderSize;\n          dims.top = dims.bottom - maxH;\n        } else if (anchor === \"bottom\") {\n          dims.top = pos.top + lineHeight + this.$borderSize;\n          dims.bottom = dims.top + maxH;\n        }\n        var fitsX = dims.top >= 0 && dims.bottom <= screenHeight;\n        if (!forceShow && !fitsX) {\n          return false;\n        }\n        if (!fitsX) {\n          if (anchor === \"top\") {\n            renderer.$maxPixelHeight = spaceAbove;\n          } else {\n            renderer.$maxPixelHeight = spaceBelow;\n          }\n        } else {\n          renderer.$maxPixelHeight = null;\n        }\n        if (anchor === \"top\") {\n          el.style.top = \"\";\n          el.style.bottom = screenHeight - dims.bottom + \"px\";\n          popup.isTopdown = false;\n        } else {\n          el.style.top = dims.top + \"px\";\n          el.style.bottom = \"\";\n          popup.isTopdown = true;\n        }\n        el.style.display = \"\";\n        var left = pos.left;\n        if (left + el.offsetWidth > screenWidth) left = screenWidth - el.offsetWidth;\n        el.style.left = left + \"px\";\n        el.style.right = \"\";\n        if (!popup.isOpen) {\n          popup.isOpen = true;\n          this._signal(\"show\");\n          lastMouseEvent = null;\n        }\n        popup.anchorPos = pos;\n        popup.anchor = anchor;\n        return true;\n      };\n      popup.show = function (pos, lineHeight, topdownOnly) {\n        this.tryShow(pos, lineHeight, topdownOnly ? \"bottom\" : undefined, true);\n      };\n      popup.goTo = function (where) {\n        var row = this.getRow();\n        var max = this.session.getLength() - 1;\n        switch (where) {\n          case \"up\":\n            row = row <= 0 ? max : row - 1;\n            break;\n          case \"down\":\n            row = row >= max ? -1 : row + 1;\n            break;\n          case \"start\":\n            row = 0;\n            break;\n          case \"end\":\n            row = max;\n            break;\n        }\n        this.setRow(row);\n      };\n      popup.getTextLeftOffset = function () {\n        return this.$borderSize + this.renderer.$padding + this.$imageSize;\n      };\n      popup.$imageSize = 0;\n      popup.$borderSize = 1;\n      return popup;\n    }\n    return AcePopup;\n  }();\n  dom.importCssString(\"\\n.ace_editor.ace_autocomplete .ace_marker-layer .ace_active-line {\\n    background-color: #CAD6FA;\\n    z-index: 1;\\n}\\n.ace_dark.ace_editor.ace_autocomplete .ace_marker-layer .ace_active-line {\\n    background-color: #3a674e;\\n}\\n.ace_editor.ace_autocomplete .ace_line-hover {\\n    border: 1px solid #abbffe;\\n    margin-top: -1px;\\n    background: rgba(233,233,253,0.4);\\n    position: absolute;\\n    z-index: 2;\\n}\\n.ace_dark.ace_editor.ace_autocomplete .ace_line-hover {\\n    border: 1px solid rgba(109, 150, 13, 0.8);\\n    background: rgba(58, 103, 78, 0.62);\\n}\\n.ace_completion-meta {\\n    opacity: 0.5;\\n    margin-left: 0.9em;\\n}\\n.ace_completion-message {\\n    margin-left: 0.9em;\\n    color: blue;\\n}\\n.ace_editor.ace_autocomplete .ace_completion-highlight{\\n    color: #2d69c7;\\n}\\n.ace_dark.ace_editor.ace_autocomplete .ace_completion-highlight{\\n    color: #93ca12;\\n}\\n.ace_editor.ace_autocomplete {\\n    width: 300px;\\n    z-index: 200000;\\n    border: 1px lightgray solid;\\n    position: fixed;\\n    box-shadow: 2px 3px 5px rgba(0,0,0,.2);\\n    line-height: 1.4;\\n    background: #fefefe;\\n    color: #111;\\n}\\n.ace_dark.ace_editor.ace_autocomplete {\\n    border: 1px #484747 solid;\\n    box-shadow: 2px 3px 5px rgba(0, 0, 0, 0.51);\\n    line-height: 1.4;\\n    background: #25282c;\\n    color: #c1c1c1;\\n}\\n.ace_autocomplete .ace_text-layer  {\\n    width: calc(100% - 8px);\\n}\\n.ace_autocomplete .ace_line {\\n    display: flex;\\n    align-items: center;\\n}\\n.ace_autocomplete .ace_line > * {\\n    min-width: 0;\\n    flex: 0 0 auto;\\n}\\n.ace_autocomplete .ace_line .ace_ {\\n    flex: 0 1 auto;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n}\\n.ace_autocomplete .ace_completion-spacer {\\n    flex: 1;\\n}\\n.ace_autocomplete.ace_loading:after  {\\n    content: \\\"\\\";\\n    position: absolute;\\n    top: 0px;\\n    height: 2px;\\n    width: 8%;\\n    background: blue;\\n    z-index: 100;\\n    animation: ace_progress 3s infinite linear;\\n    animation-delay: 300ms;\\n    transform: translateX(-100%) scaleX(1);\\n}\\n@keyframes ace_progress {\\n    0% { transform: translateX(-100%) scaleX(1) }\\n    50% { transform: translateX(625%) scaleX(2) } \\n    100% { transform: translateX(1500%) scaleX(3) } \\n}\\n@media (prefers-reduced-motion) {\\n    .ace_autocomplete.ace_loading:after {\\n        transform: translateX(625%) scaleX(2);\\n        animation: none;\\n     }\\n}\\n\", \"autocompletion.css\", false);\n  exports.AcePopup = AcePopup;\n  exports.$singleLineEditor = $singleLineEditor;\n  exports.getAriaId = getAriaId;\n});\nace.define(\"ace/snippets\", [\"require\", \"exports\", \"module\", \"ace/lib/dom\", \"ace/lib/oop\", \"ace/lib/event_emitter\", \"ace/lib/lang\", \"ace/range\", \"ace/range_list\", \"ace/keyboard/hash_handler\", \"ace/tokenizer\", \"ace/clipboard\", \"ace/editor\"], function (require, exports, module) {\n  \"use strict\";\n\n  var dom = require(\"./lib/dom\");\n  var oop = require(\"./lib/oop\");\n  var EventEmitter = require(\"./lib/event_emitter\").EventEmitter;\n  var lang = require(\"./lib/lang\");\n  var Range = require(\"./range\").Range;\n  var RangeList = require(\"./range_list\").RangeList;\n  var HashHandler = require(\"./keyboard/hash_handler\").HashHandler;\n  var Tokenizer = require(\"./tokenizer\").Tokenizer;\n  var clipboard = require(\"./clipboard\");\n  var VARIABLES = {\n    CURRENT_WORD: function (editor) {\n      return editor.session.getTextRange(editor.session.getWordRange());\n    },\n    SELECTION: function (editor, name, indentation) {\n      var text = editor.session.getTextRange();\n      if (indentation) return text.replace(/\\n\\r?([ \\t]*\\S)/g, \"\\n\" + indentation + \"$1\");\n      return text;\n    },\n    CURRENT_LINE: function (editor) {\n      return editor.session.getLine(editor.getCursorPosition().row);\n    },\n    PREV_LINE: function (editor) {\n      return editor.session.getLine(editor.getCursorPosition().row - 1);\n    },\n    LINE_INDEX: function (editor) {\n      return editor.getCursorPosition().row;\n    },\n    LINE_NUMBER: function (editor) {\n      return editor.getCursorPosition().row + 1;\n    },\n    SOFT_TABS: function (editor) {\n      return editor.session.getUseSoftTabs() ? \"YES\" : \"NO\";\n    },\n    TAB_SIZE: function (editor) {\n      return editor.session.getTabSize();\n    },\n    CLIPBOARD: function (editor) {\n      return clipboard.getText && clipboard.getText();\n    },\n    FILENAME: function (editor) {\n      return /[^/\\\\]*$/.exec(this.FILEPATH(editor))[0];\n    },\n    FILENAME_BASE: function (editor) {\n      return /[^/\\\\]*$/.exec(this.FILEPATH(editor))[0].replace(/\\.[^.]*$/, \"\");\n    },\n    DIRECTORY: function (editor) {\n      return this.FILEPATH(editor).replace(/[^/\\\\]*$/, \"\");\n    },\n    FILEPATH: function (editor) {\n      return \"/not implemented.txt\";\n    },\n    WORKSPACE_NAME: function () {\n      return \"Unknown\";\n    },\n    FULLNAME: function () {\n      return \"Unknown\";\n    },\n    BLOCK_COMMENT_START: function (editor) {\n      var mode = editor.session.$mode || {};\n      return mode.blockComment && mode.blockComment.start || \"\";\n    },\n    BLOCK_COMMENT_END: function (editor) {\n      var mode = editor.session.$mode || {};\n      return mode.blockComment && mode.blockComment.end || \"\";\n    },\n    LINE_COMMENT: function (editor) {\n      var mode = editor.session.$mode || {};\n      return mode.lineCommentStart || \"\";\n    },\n    CURRENT_YEAR: date.bind(null, {\n      year: \"numeric\"\n    }),\n    CURRENT_YEAR_SHORT: date.bind(null, {\n      year: \"2-digit\"\n    }),\n    CURRENT_MONTH: date.bind(null, {\n      month: \"numeric\"\n    }),\n    CURRENT_MONTH_NAME: date.bind(null, {\n      month: \"long\"\n    }),\n    CURRENT_MONTH_NAME_SHORT: date.bind(null, {\n      month: \"short\"\n    }),\n    CURRENT_DATE: date.bind(null, {\n      day: \"2-digit\"\n    }),\n    CURRENT_DAY_NAME: date.bind(null, {\n      weekday: \"long\"\n    }),\n    CURRENT_DAY_NAME_SHORT: date.bind(null, {\n      weekday: \"short\"\n    }),\n    CURRENT_HOUR: date.bind(null, {\n      hour: \"2-digit\",\n      hour12: false\n    }),\n    CURRENT_MINUTE: date.bind(null, {\n      minute: \"2-digit\"\n    }),\n    CURRENT_SECOND: date.bind(null, {\n      second: \"2-digit\"\n    })\n  };\n  VARIABLES.SELECTED_TEXT = VARIABLES.SELECTION;\n  function date(dateFormat) {\n    var str = new Date().toLocaleString(\"en-us\", dateFormat);\n    return str.length == 1 ? \"0\" + str : str;\n  }\n  var SnippetManager = /** @class */function () {\n    function SnippetManager() {\n      this.snippetMap = {};\n      this.snippetNameMap = {};\n      this.variables = VARIABLES;\n    }\n    SnippetManager.prototype.getTokenizer = function () {\n      return SnippetManager[\"$tokenizer\"] || this.createTokenizer();\n    };\n    SnippetManager.prototype.createTokenizer = function () {\n      function TabstopToken(str) {\n        str = str.substr(1);\n        if (/^\\d+$/.test(str)) return [{\n          tabstopId: parseInt(str, 10)\n        }];\n        return [{\n          text: str\n        }];\n      }\n      function escape(ch) {\n        return \"(?:[^\\\\\\\\\" + ch + \"]|\\\\\\\\.)\";\n      }\n      var formatMatcher = {\n        regex: \"/(\" + escape(\"/\") + \"+)/\",\n        onMatch: function (val, state, stack) {\n          var ts = stack[0];\n          ts.fmtString = true;\n          ts.guard = val.slice(1, -1);\n          ts.flag = \"\";\n          return \"\";\n        },\n        next: \"formatString\"\n      };\n      SnippetManager[\"$tokenizer\"] = new Tokenizer({\n        start: [{\n          regex: /\\\\./,\n          onMatch: function (val, state, stack) {\n            var ch = val[1];\n            if (ch == \"}\" && stack.length) {\n              val = ch;\n            } else if (\"`$\\\\\".indexOf(ch) != -1) {\n              val = ch;\n            }\n            return [val];\n          }\n        }, {\n          regex: /}/,\n          onMatch: function (val, state, stack) {\n            return [stack.length ? stack.shift() : val];\n          }\n        }, {\n          regex: /\\$(?:\\d+|\\w+)/,\n          onMatch: TabstopToken\n        }, {\n          regex: /\\$\\{[\\dA-Z_a-z]+/,\n          onMatch: function (str, state, stack) {\n            var t = TabstopToken(str.substr(1));\n            stack.unshift(t[0]);\n            return t;\n          },\n          next: \"snippetVar\"\n        }, {\n          regex: /\\n/,\n          token: \"newline\",\n          merge: false\n        }],\n        snippetVar: [{\n          regex: \"\\\\|\" + escape(\"\\\\|\") + \"*\\\\|\",\n          onMatch: function (val, state, stack) {\n            var choices = val.slice(1, -1).replace(/\\\\[,|\\\\]|,/g, function (operator) {\n              return operator.length == 2 ? operator[1] : \"\\x00\";\n            }).split(\"\\x00\").map(function (value) {\n              return {\n                value: value\n              };\n            });\n            stack[0].choices = choices;\n            return [choices[0]];\n          },\n          next: \"start\"\n        }, formatMatcher, {\n          regex: \"([^:}\\\\\\\\]|\\\\\\\\.)*:?\",\n          token: \"\",\n          next: \"start\"\n        }],\n        formatString: [{\n          regex: /:/,\n          onMatch: function (val, state, stack) {\n            if (stack.length && stack[0].expectElse) {\n              stack[0].expectElse = false;\n              stack[0].ifEnd = {\n                elseEnd: stack[0]\n              };\n              return [stack[0].ifEnd];\n            }\n            return \":\";\n          }\n        }, {\n          regex: /\\\\./,\n          onMatch: function (val, state, stack) {\n            var ch = val[1];\n            if (ch == \"}\" && stack.length) val = ch;else if (\"`$\\\\\".indexOf(ch) != -1) val = ch;else if (ch == \"n\") val = \"\\n\";else if (ch == \"t\") val = \"\\t\";else if (\"ulULE\".indexOf(ch) != -1) val = {\n              changeCase: ch,\n              local: ch > \"a\"\n            };\n            return [val];\n          }\n        }, {\n          regex: \"/\\\\w*}\",\n          onMatch: function (val, state, stack) {\n            var next = stack.shift();\n            if (next) next.flag = val.slice(1, -1);\n            this.next = next && next.tabstopId ? \"start\" : \"\";\n            return [next || val];\n          },\n          next: \"start\"\n        }, {\n          regex: /\\$(?:\\d+|\\w+)/,\n          onMatch: function (val, state, stack) {\n            return [{\n              text: val.slice(1)\n            }];\n          }\n        }, {\n          regex: /\\${\\w+/,\n          onMatch: function (val, state, stack) {\n            var token = {\n              text: val.slice(2)\n            };\n            stack.unshift(token);\n            return [token];\n          },\n          next: \"formatStringVar\"\n        }, {\n          regex: /\\n/,\n          token: \"newline\",\n          merge: false\n        }, {\n          regex: /}/,\n          onMatch: function (val, state, stack) {\n            var next = stack.shift();\n            this.next = next && next.tabstopId ? \"start\" : \"\";\n            return [next || val];\n          },\n          next: \"start\"\n        }],\n        formatStringVar: [{\n          regex: /:\\/\\w+}/,\n          onMatch: function (val, state, stack) {\n            var ts = stack[0];\n            ts.formatFunction = val.slice(2, -1);\n            return [stack.shift()];\n          },\n          next: \"formatString\"\n        }, formatMatcher, {\n          regex: /:[\\?\\-+]?/,\n          onMatch: function (val, state, stack) {\n            if (val[1] == \"+\") stack[0].ifEnd = stack[0];\n            if (val[1] == \"?\") stack[0].expectElse = true;\n          },\n          next: \"formatString\"\n        }, {\n          regex: \"([^:}\\\\\\\\]|\\\\\\\\.)*:?\",\n          token: \"\",\n          next: \"formatString\"\n        }]\n      });\n      return SnippetManager[\"$tokenizer\"];\n    };\n    SnippetManager.prototype.tokenizeTmSnippet = function (str, startState) {\n      return this.getTokenizer().getLineTokens(str, startState).tokens.map(function (x) {\n        return x.value || x;\n      });\n    };\n    SnippetManager.prototype.getVariableValue = function (editor, name, indentation) {\n      if (/^\\d+$/.test(name)) return (this.variables.__ || {})[name] || \"\";\n      if (/^[A-Z]\\d+$/.test(name)) return (this.variables[name[0] + \"__\"] || {})[name.substr(1)] || \"\";\n      name = name.replace(/^TM_/, \"\");\n      if (!this.variables.hasOwnProperty(name)) return \"\";\n      var value = this.variables[name];\n      if (typeof value == \"function\") value = this.variables[name](editor, name, indentation);\n      return value == null ? \"\" : value;\n    };\n    SnippetManager.prototype.tmStrFormat = function (str, ch, editor) {\n      if (!ch.fmt) return str;\n      var flag = ch.flag || \"\";\n      var re = ch.guard;\n      re = new RegExp(re, flag.replace(/[^gim]/g, \"\"));\n      var fmtTokens = typeof ch.fmt == \"string\" ? this.tokenizeTmSnippet(ch.fmt, \"formatString\") : ch.fmt;\n      var _self = this;\n      var formatted = str.replace(re, function () {\n        var oldArgs = _self.variables.__;\n        _self.variables.__ = [].slice.call(arguments);\n        var fmtParts = _self.resolveVariables(fmtTokens, editor);\n        var gChangeCase = \"E\";\n        for (var i = 0; i < fmtParts.length; i++) {\n          var ch = fmtParts[i];\n          if (typeof ch == \"object\") {\n            fmtParts[i] = \"\";\n            if (ch.changeCase && ch.local) {\n              var next = fmtParts[i + 1];\n              if (next && typeof next == \"string\") {\n                if (ch.changeCase == \"u\") fmtParts[i] = next[0].toUpperCase();else fmtParts[i] = next[0].toLowerCase();\n                fmtParts[i + 1] = next.substr(1);\n              }\n            } else if (ch.changeCase) {\n              gChangeCase = ch.changeCase;\n            }\n          } else if (gChangeCase == \"U\") {\n            fmtParts[i] = ch.toUpperCase();\n          } else if (gChangeCase == \"L\") {\n            fmtParts[i] = ch.toLowerCase();\n          }\n        }\n        _self.variables.__ = oldArgs;\n        return fmtParts.join(\"\");\n      });\n      return formatted;\n    };\n    SnippetManager.prototype.tmFormatFunction = function (str, ch, editor) {\n      if (ch.formatFunction == \"upcase\") return str.toUpperCase();\n      if (ch.formatFunction == \"downcase\") return str.toLowerCase();\n      return str;\n    };\n    SnippetManager.prototype.resolveVariables = function (snippet, editor) {\n      var result = [];\n      var indentation = \"\";\n      var afterNewLine = true;\n      for (var i = 0; i < snippet.length; i++) {\n        var ch = snippet[i];\n        if (typeof ch == \"string\") {\n          result.push(ch);\n          if (ch == \"\\n\") {\n            afterNewLine = true;\n            indentation = \"\";\n          } else if (afterNewLine) {\n            indentation = /^\\t*/.exec(ch)[0];\n            afterNewLine = /\\S/.test(ch);\n          }\n          continue;\n        }\n        if (!ch) continue;\n        afterNewLine = false;\n        if (ch.fmtString) {\n          var j = snippet.indexOf(ch, i + 1);\n          if (j == -1) j = snippet.length;\n          ch.fmt = snippet.slice(i + 1, j);\n          i = j;\n        }\n        if (ch.text) {\n          var value = this.getVariableValue(editor, ch.text, indentation) + \"\";\n          if (ch.fmtString) value = this.tmStrFormat(value, ch, editor);\n          if (ch.formatFunction) value = this.tmFormatFunction(value, ch, editor);\n          if (value && !ch.ifEnd) {\n            result.push(value);\n            gotoNext(ch);\n          } else if (!value && ch.ifEnd) {\n            gotoNext(ch.ifEnd);\n          }\n        } else if (ch.elseEnd) {\n          gotoNext(ch.elseEnd);\n        } else if (ch.tabstopId != null) {\n          result.push(ch);\n        } else if (ch.changeCase != null) {\n          result.push(ch);\n        }\n      }\n      function gotoNext(ch) {\n        var i1 = snippet.indexOf(ch, i + 1);\n        if (i1 != -1) i = i1;\n      }\n      return result;\n    };\n    SnippetManager.prototype.getDisplayTextForSnippet = function (editor, snippetText) {\n      var processedSnippet = processSnippetText.call(this, editor, snippetText);\n      return processedSnippet.text;\n    };\n    SnippetManager.prototype.insertSnippetForSelection = function (editor, snippetText, options) {\n      if (options === void 0) {\n        options = {};\n      }\n      var processedSnippet = processSnippetText.call(this, editor, snippetText, options);\n      var range = editor.getSelectionRange();\n      var end = editor.session.replace(range, processedSnippet.text);\n      var tabstopManager = new TabstopManager(editor);\n      var selectionId = editor.inVirtualSelectionMode && editor.selection.index;\n      tabstopManager.addTabstops(processedSnippet.tabstops, range.start, end, selectionId);\n    };\n    SnippetManager.prototype.insertSnippet = function (editor, snippetText, options) {\n      if (options === void 0) {\n        options = {};\n      }\n      var self = this;\n      if (editor.inVirtualSelectionMode) return self.insertSnippetForSelection(editor, snippetText, options);\n      editor.forEachSelection(function () {\n        self.insertSnippetForSelection(editor, snippetText, options);\n      }, null, {\n        keepOrder: true\n      });\n      if (editor.tabstopManager) editor.tabstopManager.tabNext();\n    };\n    SnippetManager.prototype.$getScope = function (editor) {\n      var scope = editor.session.$mode.$id || \"\";\n      scope = scope.split(\"/\").pop();\n      if (scope === \"html\" || scope === \"php\") {\n        if (scope === \"php\" && !editor.session.$mode.inlinePhp) scope = \"html\";\n        var c = editor.getCursorPosition();\n        var state = editor.session.getState(c.row);\n        if (typeof state === \"object\") {\n          state = state[0];\n        }\n        if (state.substring) {\n          if (state.substring(0, 3) == \"js-\") scope = \"javascript\";else if (state.substring(0, 4) == \"css-\") scope = \"css\";else if (state.substring(0, 4) == \"php-\") scope = \"php\";\n        }\n      }\n      return scope;\n    };\n    SnippetManager.prototype.getActiveScopes = function (editor) {\n      var scope = this.$getScope(editor);\n      var scopes = [scope];\n      var snippetMap = this.snippetMap;\n      if (snippetMap[scope] && snippetMap[scope].includeScopes) {\n        scopes.push.apply(scopes, snippetMap[scope].includeScopes);\n      }\n      scopes.push(\"_\");\n      return scopes;\n    };\n    SnippetManager.prototype.expandWithTab = function (editor, options) {\n      var self = this;\n      var result = editor.forEachSelection(function () {\n        return self.expandSnippetForSelection(editor, options);\n      }, null, {\n        keepOrder: true\n      });\n      if (result && editor.tabstopManager) editor.tabstopManager.tabNext();\n      return result;\n    };\n    SnippetManager.prototype.expandSnippetForSelection = function (editor, options) {\n      var cursor = editor.getCursorPosition();\n      var line = editor.session.getLine(cursor.row);\n      var before = line.substring(0, cursor.column);\n      var after = line.substr(cursor.column);\n      var snippetMap = this.snippetMap;\n      var snippet;\n      this.getActiveScopes(editor).some(function (scope) {\n        var snippets = snippetMap[scope];\n        if (snippets) snippet = this.findMatchingSnippet(snippets, before, after);\n        return !!snippet;\n      }, this);\n      if (!snippet) return false;\n      if (options && options.dryRun) return true;\n      editor.session.doc.removeInLine(cursor.row, cursor.column - snippet.replaceBefore.length, cursor.column + snippet.replaceAfter.length);\n      this.variables.M__ = snippet.matchBefore;\n      this.variables.T__ = snippet.matchAfter;\n      this.insertSnippetForSelection(editor, snippet.content);\n      this.variables.M__ = this.variables.T__ = null;\n      return true;\n    };\n    SnippetManager.prototype.findMatchingSnippet = function (snippetList, before, after) {\n      for (var i = snippetList.length; i--;) {\n        var s = snippetList[i];\n        if (s.startRe && !s.startRe.test(before)) continue;\n        if (s.endRe && !s.endRe.test(after)) continue;\n        if (!s.startRe && !s.endRe) continue;\n        s.matchBefore = s.startRe ? s.startRe.exec(before) : [\"\"];\n        s.matchAfter = s.endRe ? s.endRe.exec(after) : [\"\"];\n        s.replaceBefore = s.triggerRe ? s.triggerRe.exec(before)[0] : \"\";\n        s.replaceAfter = s.endTriggerRe ? s.endTriggerRe.exec(after)[0] : \"\";\n        return s;\n      }\n    };\n    SnippetManager.prototype.register = function (snippets, scope) {\n      var snippetMap = this.snippetMap;\n      var snippetNameMap = this.snippetNameMap;\n      var self = this;\n      if (!snippets) snippets = [];\n      function wrapRegexp(src) {\n        if (src && !/^\\^?\\(.*\\)\\$?$|^\\\\b$/.test(src)) src = \"(?:\" + src + \")\";\n        return src || \"\";\n      }\n      function guardedRegexp(re, guard, opening) {\n        re = wrapRegexp(re);\n        guard = wrapRegexp(guard);\n        if (opening) {\n          re = guard + re;\n          if (re && re[re.length - 1] != \"$\") re = re + \"$\";\n        } else {\n          re = re + guard;\n          if (re && re[0] != \"^\") re = \"^\" + re;\n        }\n        return new RegExp(re);\n      }\n      function addSnippet(s) {\n        if (!s.scope) s.scope = scope || \"_\";\n        scope = s.scope;\n        if (!snippetMap[scope]) {\n          snippetMap[scope] = [];\n          snippetNameMap[scope] = {};\n        }\n        var map = snippetNameMap[scope];\n        if (s.name) {\n          var old = map[s.name];\n          if (old) self.unregister(old);\n          map[s.name] = s;\n        }\n        snippetMap[scope].push(s);\n        if (s.prefix) s.tabTrigger = s.prefix;\n        if (!s.content && s.body) s.content = Array.isArray(s.body) ? s.body.join(\"\\n\") : s.body;\n        if (s.tabTrigger && !s.trigger) {\n          if (!s.guard && /^\\w/.test(s.tabTrigger)) s.guard = \"\\\\b\";\n          s.trigger = lang.escapeRegExp(s.tabTrigger);\n        }\n        if (!s.trigger && !s.guard && !s.endTrigger && !s.endGuard) return;\n        s.startRe = guardedRegexp(s.trigger, s.guard, true);\n        s.triggerRe = new RegExp(s.trigger);\n        s.endRe = guardedRegexp(s.endTrigger, s.endGuard, true);\n        s.endTriggerRe = new RegExp(s.endTrigger);\n      }\n      if (Array.isArray(snippets)) {\n        snippets.forEach(addSnippet);\n      } else {\n        Object.keys(snippets).forEach(function (key) {\n          addSnippet(snippets[key]);\n        });\n      }\n      this._signal(\"registerSnippets\", {\n        scope: scope\n      });\n    };\n    SnippetManager.prototype.unregister = function (snippets, scope) {\n      var snippetMap = this.snippetMap;\n      var snippetNameMap = this.snippetNameMap;\n      function removeSnippet(s) {\n        var nameMap = snippetNameMap[s.scope || scope];\n        if (nameMap && nameMap[s.name]) {\n          delete nameMap[s.name];\n          var map = snippetMap[s.scope || scope];\n          var i = map && map.indexOf(s);\n          if (i >= 0) map.splice(i, 1);\n        }\n      }\n      if (snippets.content) removeSnippet(snippets);else if (Array.isArray(snippets)) snippets.forEach(removeSnippet);\n    };\n    SnippetManager.prototype.parseSnippetFile = function (str) {\n      str = str.replace(/\\r/g, \"\");\n      var list = [],\n        /**@type{Snippet}*/snippet = {};\n      var re = /^#.*|^({[\\s\\S]*})\\s*$|^(\\S+) (.*)$|^((?:\\n*\\t.*)+)/gm;\n      var m;\n      while (m = re.exec(str)) {\n        if (m[1]) {\n          try {\n            snippet = JSON.parse(m[1]);\n            list.push(snippet);\n          } catch (e) {}\n        }\n        if (m[4]) {\n          snippet.content = m[4].replace(/^\\t/gm, \"\");\n          list.push(snippet);\n          snippet = {};\n        } else {\n          var key = m[2],\n            val = m[3];\n          if (key == \"regex\") {\n            var guardRe = /\\/((?:[^\\/\\\\]|\\\\.)*)|$/g;\n            snippet.guard = guardRe.exec(val)[1];\n            snippet.trigger = guardRe.exec(val)[1];\n            snippet.endTrigger = guardRe.exec(val)[1];\n            snippet.endGuard = guardRe.exec(val)[1];\n          } else if (key == \"snippet\") {\n            snippet.tabTrigger = val.match(/^\\S*/)[0];\n            if (!snippet.name) snippet.name = val;\n          } else if (key) {\n            snippet[key] = val;\n          }\n        }\n      }\n      return list;\n    };\n    SnippetManager.prototype.getSnippetByName = function (name, editor) {\n      var snippetMap = this.snippetNameMap;\n      var snippet;\n      this.getActiveScopes(editor).some(function (scope) {\n        var snippets = snippetMap[scope];\n        if (snippets) snippet = snippets[name];\n        return !!snippet;\n      }, this);\n      return snippet;\n    };\n    return SnippetManager;\n  }();\n  oop.implement(SnippetManager.prototype, EventEmitter);\n  var processSnippetText = function (editor, snippetText, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var cursor = editor.getCursorPosition();\n    var line = editor.session.getLine(cursor.row);\n    var tabString = editor.session.getTabString();\n    var indentString = line.match(/^\\s*/)[0];\n    if (cursor.column < indentString.length) indentString = indentString.slice(0, cursor.column);\n    snippetText = snippetText.replace(/\\r/g, \"\");\n    var tokens = this.tokenizeTmSnippet(snippetText);\n    tokens = this.resolveVariables(tokens, editor);\n    tokens = tokens.map(function (x) {\n      if (x == \"\\n\" && !options.excludeExtraIndent) return x + indentString;\n      if (typeof x == \"string\") return x.replace(/\\t/g, tabString);\n      return x;\n    });\n    var tabstops = [];\n    tokens.forEach(function (p, i) {\n      if (typeof p != \"object\") return;\n      var id = p.tabstopId;\n      var ts = tabstops[id];\n      if (!ts) {\n        ts = tabstops[id] = [];\n        ts.index = id;\n        ts.value = \"\";\n        ts.parents = {};\n      }\n      if (ts.indexOf(p) !== -1) return;\n      if (p.choices && !ts.choices) ts.choices = p.choices;\n      ts.push(p);\n      var i1 = tokens.indexOf(p, i + 1);\n      if (i1 === -1) return;\n      var value = tokens.slice(i + 1, i1);\n      var isNested = value.some(function (t) {\n        return typeof t === \"object\";\n      });\n      if (isNested && !ts.value) {\n        ts.value = value;\n      } else if (value.length && (!ts.value || typeof ts.value !== \"string\")) {\n        ts.value = value.join(\"\");\n      }\n    });\n    tabstops.forEach(function (ts) {\n      ts.length = 0;\n    });\n    var expanding = {};\n    function copyValue(val) {\n      var copy = [];\n      for (var i = 0; i < val.length; i++) {\n        var p = val[i];\n        if (typeof p == \"object\") {\n          if (expanding[p.tabstopId]) continue;\n          var j = val.lastIndexOf(p, i - 1);\n          p = copy[j] || {\n            tabstopId: p.tabstopId\n          };\n        }\n        copy[i] = p;\n      }\n      return copy;\n    }\n    for (var i = 0; i < tokens.length; i++) {\n      var p = tokens[i];\n      if (typeof p != \"object\") continue;\n      var id = p.tabstopId;\n      var ts = tabstops[id];\n      var i1 = tokens.indexOf(p, i + 1);\n      if (expanding[id]) {\n        if (expanding[id] === p) {\n          delete expanding[id];\n          Object.keys(expanding).forEach(function (parentId) {\n            ts.parents[parentId] = true;\n          });\n        }\n        continue;\n      }\n      expanding[id] = p;\n      var value = ts.value;\n      if (typeof value !== \"string\") value = copyValue(value);else if (p.fmt) value = this.tmStrFormat(value, p, editor);\n      tokens.splice.apply(tokens, [i + 1, Math.max(0, i1 - i)].concat(value, p));\n      if (ts.indexOf(p) === -1) ts.push(p);\n    }\n    var row = 0,\n      column = 0;\n    var text = \"\";\n    tokens.forEach(function (t) {\n      if (typeof t === \"string\") {\n        var lines = t.split(\"\\n\");\n        if (lines.length > 1) {\n          column = lines[lines.length - 1].length;\n          row += lines.length - 1;\n        } else column += t.length;\n        text += t;\n      } else if (t) {\n        if (!t.start) t.start = {\n          row: row,\n          column: column\n        };else t.end = {\n          row: row,\n          column: column\n        };\n      }\n    });\n    return {\n      text: text,\n      tabstops: tabstops,\n      tokens: tokens\n    };\n  };\n  var TabstopManager = /** @class */function () {\n    function TabstopManager(editor) {\n      this.index = 0;\n      this.ranges = [];\n      this.tabstops = [];\n      if (editor.tabstopManager) return editor.tabstopManager;\n      editor.tabstopManager = this;\n      this.$onChange = this.onChange.bind(this);\n      this.$onChangeSelection = lang.delayedCall(this.onChangeSelection.bind(this)).schedule;\n      this.$onChangeSession = this.onChangeSession.bind(this);\n      this.$onAfterExec = this.onAfterExec.bind(this);\n      this.attach(editor);\n    }\n    TabstopManager.prototype.attach = function (editor) {\n      this.$openTabstops = null;\n      this.selectedTabstop = null;\n      this.editor = editor;\n      this.session = editor.session;\n      this.editor.on(\"change\", this.$onChange);\n      this.editor.on(\"changeSelection\", this.$onChangeSelection);\n      this.editor.on(\"changeSession\", this.$onChangeSession);\n      this.editor.commands.on(\"afterExec\", this.$onAfterExec);\n      this.editor.keyBinding.addKeyboardHandler(this.keyboardHandler);\n    };\n    TabstopManager.prototype.detach = function () {\n      this.tabstops.forEach(this.removeTabstopMarkers, this);\n      this.ranges.length = 0;\n      this.tabstops.length = 0;\n      this.selectedTabstop = null;\n      this.editor.off(\"change\", this.$onChange);\n      this.editor.off(\"changeSelection\", this.$onChangeSelection);\n      this.editor.off(\"changeSession\", this.$onChangeSession);\n      this.editor.commands.off(\"afterExec\", this.$onAfterExec);\n      this.editor.keyBinding.removeKeyboardHandler(this.keyboardHandler);\n      this.editor.tabstopManager = null;\n      this.session = null;\n      this.editor = null;\n    };\n    TabstopManager.prototype.onChange = function (delta) {\n      var isRemove = delta.action[0] == \"r\";\n      var selectedTabstop = this.selectedTabstop || {};\n      var parents = selectedTabstop.parents || {};\n      var tabstops = this.tabstops.slice();\n      for (var i = 0; i < tabstops.length; i++) {\n        var ts = tabstops[i];\n        var active = ts == selectedTabstop || parents[ts.index];\n        ts.rangeList.$bias = active ? 0 : 1;\n        if (delta.action == \"remove\" && ts !== selectedTabstop) {\n          var parentActive = ts.parents && ts.parents[selectedTabstop.index];\n          var startIndex = ts.rangeList.pointIndex(delta.start, parentActive);\n          startIndex = startIndex < 0 ? -startIndex - 1 : startIndex + 1;\n          var endIndex = ts.rangeList.pointIndex(delta.end, parentActive);\n          endIndex = endIndex < 0 ? -endIndex - 1 : endIndex - 1;\n          var toRemove = ts.rangeList.ranges.slice(startIndex, endIndex);\n          for (var j = 0; j < toRemove.length; j++) this.removeRange(toRemove[j]);\n        }\n        ts.rangeList.$onChange(delta);\n      }\n      var session = this.session;\n      if (!this.$inChange && isRemove && session.getLength() == 1 && !session.getValue()) this.detach();\n    };\n    TabstopManager.prototype.updateLinkedFields = function () {\n      var ts = this.selectedTabstop;\n      if (!ts || !ts.hasLinkedRanges || !ts.firstNonLinked) return;\n      this.$inChange = true;\n      var session = this.session;\n      var text = session.getTextRange(ts.firstNonLinked);\n      for (var i = 0; i < ts.length; i++) {\n        var range = ts[i];\n        if (!range.linked) continue;\n        var original = range.original;\n        var fmt = exports.snippetManager.tmStrFormat(text, original, this.editor);\n        session.replace(range, fmt);\n      }\n      this.$inChange = false;\n    };\n    TabstopManager.prototype.onAfterExec = function (e) {\n      if (e.command && !e.command.readOnly) this.updateLinkedFields();\n    };\n    TabstopManager.prototype.onChangeSelection = function () {\n      if (!this.editor) return;\n      var lead = this.editor.selection.lead;\n      var anchor = this.editor.selection.anchor;\n      var isEmpty = this.editor.selection.isEmpty();\n      for (var i = 0; i < this.ranges.length; i++) {\n        if (this.ranges[i].linked) continue;\n        var containsLead = this.ranges[i].contains(lead.row, lead.column);\n        var containsAnchor = isEmpty || this.ranges[i].contains(anchor.row, anchor.column);\n        if (containsLead && containsAnchor) return;\n      }\n      this.detach();\n    };\n    TabstopManager.prototype.onChangeSession = function () {\n      this.detach();\n    };\n    TabstopManager.prototype.tabNext = function (dir) {\n      var max = this.tabstops.length;\n      var index = this.index + (dir || 1);\n      index = Math.min(Math.max(index, 1), max);\n      if (index == max) index = 0;\n      this.selectTabstop(index);\n      this.updateTabstopMarkers();\n      if (index === 0) {\n        this.detach();\n      }\n    };\n    TabstopManager.prototype.selectTabstop = function (index) {\n      this.$openTabstops = null;\n      var ts = this.tabstops[this.index];\n      if (ts) this.addTabstopMarkers(ts);\n      this.index = index;\n      ts = this.tabstops[this.index];\n      if (!ts || !ts.length) return;\n      this.selectedTabstop = ts;\n      var range = ts.firstNonLinked || ts;\n      if (ts.choices) range.cursor = range.start;\n      if (!this.editor.inVirtualSelectionMode) {\n        var sel = this.editor.multiSelect;\n        sel.toSingleRange(range);\n        for (var i = 0; i < ts.length; i++) {\n          if (ts.hasLinkedRanges && ts[i].linked) continue;\n          sel.addRange(ts[i].clone(), true);\n        }\n      } else {\n        this.editor.selection.fromOrientedRange(range);\n      }\n      this.editor.keyBinding.addKeyboardHandler(this.keyboardHandler);\n      if (this.selectedTabstop && this.selectedTabstop.choices) this.editor.execCommand(\"startAutocomplete\", {\n        matches: this.selectedTabstop.choices\n      });\n    };\n    TabstopManager.prototype.addTabstops = function (tabstops, start, end) {\n      var useLink = this.useLink || !this.editor.getOption(\"enableMultiselect\");\n      if (!this.$openTabstops) this.$openTabstops = [];\n      if (!tabstops[0]) {\n        var p = Range.fromPoints(end, end);\n        moveRelative(p.start, start);\n        moveRelative(p.end, start);\n        tabstops[0] = [p];\n        tabstops[0].index = 0;\n      }\n      var i = this.index;\n      var arg = [i + 1, 0];\n      var ranges = this.ranges;\n      var snippetId = this.snippetId = (this.snippetId || 0) + 1;\n      tabstops.forEach(function (ts, index) {\n        var dest = this.$openTabstops[index] || ts;\n        dest.snippetId = snippetId;\n        for (var i = 0; i < ts.length; i++) {\n          var p = ts[i];\n          var range = Range.fromPoints(p.start, p.end || p.start);\n          movePoint(range.start, start);\n          movePoint(range.end, start);\n          range.original = p;\n          range.tabstop = dest;\n          ranges.push(range);\n          if (dest != ts) dest.unshift(range);else dest[i] = range;\n          if (p.fmtString || dest.firstNonLinked && useLink) {\n            range.linked = true;\n            dest.hasLinkedRanges = true;\n          } else if (!dest.firstNonLinked) dest.firstNonLinked = range;\n        }\n        if (!dest.firstNonLinked) dest.hasLinkedRanges = false;\n        if (dest === ts) {\n          arg.push(dest);\n          this.$openTabstops[index] = dest;\n        }\n        this.addTabstopMarkers(dest);\n        dest.rangeList = dest.rangeList || new RangeList();\n        dest.rangeList.$bias = 0;\n        dest.rangeList.addList(dest);\n      }, this);\n      if (arg.length > 2) {\n        if (this.tabstops.length) arg.push(arg.splice(2, 1)[0]);\n        this.tabstops.splice.apply(this.tabstops, arg);\n      }\n    };\n    TabstopManager.prototype.addTabstopMarkers = function (ts) {\n      var session = this.session;\n      ts.forEach(function (range) {\n        if (!range.markerId) range.markerId = session.addMarker(range, \"ace_snippet-marker\", \"text\");\n      });\n    };\n    TabstopManager.prototype.removeTabstopMarkers = function (ts) {\n      var session = this.session;\n      ts.forEach(function (range) {\n        session.removeMarker(range.markerId);\n        range.markerId = null;\n      });\n    };\n    TabstopManager.prototype.updateTabstopMarkers = function () {\n      if (!this.selectedTabstop) return;\n      var currentSnippetId = this.selectedTabstop.snippetId;\n      if (this.selectedTabstop.index === 0) {\n        currentSnippetId--;\n      }\n      this.tabstops.forEach(function (ts) {\n        if (ts.snippetId === currentSnippetId) this.addTabstopMarkers(ts);else this.removeTabstopMarkers(ts);\n      }, this);\n    };\n    TabstopManager.prototype.removeRange = function (range) {\n      var i = range.tabstop.indexOf(range);\n      if (i != -1) range.tabstop.splice(i, 1);\n      i = this.ranges.indexOf(range);\n      if (i != -1) this.ranges.splice(i, 1);\n      i = range.tabstop.rangeList.ranges.indexOf(range);\n      if (i != -1) range.tabstop.splice(i, 1);\n      this.session.removeMarker(range.markerId);\n      if (!range.tabstop.length) {\n        i = this.tabstops.indexOf(range.tabstop);\n        if (i != -1) this.tabstops.splice(i, 1);\n        if (!this.tabstops.length) this.detach();\n      }\n    };\n    return TabstopManager;\n  }();\n  TabstopManager.prototype.keyboardHandler = new HashHandler();\n  TabstopManager.prototype.keyboardHandler.bindKeys({\n    \"Tab\": function (editor) {\n      if (exports.snippetManager && exports.snippetManager.expandWithTab(editor)) return;\n      editor.tabstopManager.tabNext(1);\n      editor.renderer.scrollCursorIntoView();\n    },\n    \"Shift-Tab\": function (editor) {\n      editor.tabstopManager.tabNext(-1);\n      editor.renderer.scrollCursorIntoView();\n    },\n    \"Esc\": function (editor) {\n      editor.tabstopManager.detach();\n    }\n  });\n  var movePoint = function (point, diff) {\n    if (point.row == 0) point.column += diff.column;\n    point.row += diff.row;\n  };\n  var moveRelative = function (point, start) {\n    if (point.row == start.row) point.column -= start.column;\n    point.row -= start.row;\n  };\n  dom.importCssString(\"\\n.ace_snippet-marker {\\n    -moz-box-sizing: border-box;\\n    box-sizing: border-box;\\n    background: rgba(194, 193, 208, 0.09);\\n    border: 1px dotted rgba(211, 208, 235, 0.62);\\n    position: absolute;\\n}\", \"snippets.css\", false);\n  exports.snippetManager = new SnippetManager();\n  var Editor = require(\"./editor\").Editor;\n  (function () {\n    this.insertSnippet = function (content, options) {\n      return exports.snippetManager.insertSnippet(this, content, options);\n    };\n    this.expandSnippet = function (options) {\n      return exports.snippetManager.expandWithTab(this, options);\n    };\n  }).call(Editor.prototype);\n});\nace.define(\"ace/autocomplete/inline_screenreader\", [\"require\", \"exports\", \"module\"], function (require, exports, module) {\n  \"use strict\";\n\n  var AceInlineScreenReader = /** @class */function () {\n    function AceInlineScreenReader(editor) {\n      this.editor = editor;\n      this.screenReaderDiv = document.createElement(\"div\");\n      this.screenReaderDiv.classList.add(\"ace_screenreader-only\");\n      this.editor.container.appendChild(this.screenReaderDiv);\n    }\n    AceInlineScreenReader.prototype.setScreenReaderContent = function (content) {\n      if (!this.popup && this.editor.completer && /**@type{import(\"../autocomplete\").Autocomplete}*/this.editor.completer.popup) {\n        this.popup = /**@type{import(\"../autocomplete\").Autocomplete}*/this.editor.completer.popup;\n        this.popup.renderer.on(\"afterRender\", function () {\n          var row = this.popup.getRow();\n          var t = this.popup.renderer.$textLayer;\n          var selected = t.element.childNodes[row - t.config.firstRow];\n          if (selected) {\n            var idString = \"doc-tooltip \";\n            for (var lineIndex = 0; lineIndex < this._lines.length; lineIndex++) {\n              idString += \"ace-inline-screenreader-line-\".concat(lineIndex, \" \");\n            }\n            selected.setAttribute(\"aria-describedby\", idString);\n          }\n        }.bind(this));\n      }\n      while (this.screenReaderDiv.firstChild) {\n        this.screenReaderDiv.removeChild(this.screenReaderDiv.firstChild);\n      }\n      this._lines = content.split(/\\r\\n|\\r|\\n/);\n      var codeElement = this.createCodeBlock();\n      this.screenReaderDiv.appendChild(codeElement);\n    };\n    AceInlineScreenReader.prototype.destroy = function () {\n      this.screenReaderDiv.remove();\n    };\n    AceInlineScreenReader.prototype.createCodeBlock = function () {\n      var container = document.createElement(\"pre\");\n      container.setAttribute(\"id\", \"ace-inline-screenreader\");\n      for (var lineIndex = 0; lineIndex < this._lines.length; lineIndex++) {\n        var codeElement = document.createElement(\"code\");\n        codeElement.setAttribute(\"id\", \"ace-inline-screenreader-line-\".concat(lineIndex));\n        var line = document.createTextNode(this._lines[lineIndex]);\n        codeElement.appendChild(line);\n        container.appendChild(codeElement);\n      }\n      return container;\n    };\n    return AceInlineScreenReader;\n  }();\n  exports.AceInlineScreenReader = AceInlineScreenReader;\n});\nace.define(\"ace/autocomplete/inline\", [\"require\", \"exports\", \"module\", \"ace/snippets\", \"ace/autocomplete/inline_screenreader\"], function (require, exports, module) {\n  \"use strict\";\n\n  var snippetManager = require(\"../snippets\").snippetManager;\n  var AceInlineScreenReader = require(\"./inline_screenreader\").AceInlineScreenReader;\n  var AceInline = /** @class */function () {\n    function AceInline() {\n      this.editor = null;\n    }\n    AceInline.prototype.show = function (editor, completion, prefix) {\n      prefix = prefix || \"\";\n      if (editor && this.editor && this.editor !== editor) {\n        this.hide();\n        this.editor = null;\n        this.inlineScreenReader = null;\n      }\n      if (!editor || !completion) {\n        return false;\n      }\n      if (!this.inlineScreenReader) {\n        this.inlineScreenReader = new AceInlineScreenReader(editor);\n      }\n      var displayText = completion.snippet ? snippetManager.getDisplayTextForSnippet(editor, completion.snippet) : completion.value;\n      if (completion.hideInlinePreview || !displayText || !displayText.startsWith(prefix)) {\n        return false;\n      }\n      this.editor = editor;\n      this.inlineScreenReader.setScreenReaderContent(displayText);\n      displayText = displayText.slice(prefix.length);\n      if (displayText === \"\") {\n        editor.removeGhostText();\n      } else {\n        editor.setGhostText(displayText);\n      }\n      return true;\n    };\n    AceInline.prototype.isOpen = function () {\n      if (!this.editor) {\n        return false;\n      }\n      return !!this.editor.renderer.$ghostText;\n    };\n    AceInline.prototype.hide = function () {\n      if (!this.editor) {\n        return false;\n      }\n      this.editor.removeGhostText();\n      return true;\n    };\n    AceInline.prototype.destroy = function () {\n      this.hide();\n      this.editor = null;\n      if (this.inlineScreenReader) {\n        this.inlineScreenReader.destroy();\n        this.inlineScreenReader = null;\n      }\n    };\n    return AceInline;\n  }();\n  exports.AceInline = AceInline;\n});\nace.define(\"ace/autocomplete/util\", [\"require\", \"exports\", \"module\"], function (require, exports, module) {\n  \"use strict\";\n\n  exports.parForEach = function (array, fn, callback) {\n    var completed = 0;\n    var arLength = array.length;\n    if (arLength === 0) callback();\n    for (var i = 0; i < arLength; i++) {\n      fn(array[i], function (result, err) {\n        completed++;\n        if (completed === arLength) callback(result, err);\n      });\n    }\n  };\n  var ID_REGEX = /[a-zA-Z_0-9\\$\\-\\u00A2-\\u2000\\u2070-\\uFFFF]/;\n  exports.retrievePrecedingIdentifier = function (text, pos, regex) {\n    regex = regex || ID_REGEX;\n    var buf = [];\n    for (var i = pos - 1; i >= 0; i--) {\n      if (regex.test(text[i])) buf.push(text[i]);else break;\n    }\n    return buf.reverse().join(\"\");\n  };\n  exports.retrieveFollowingIdentifier = function (text, pos, regex) {\n    regex = regex || ID_REGEX;\n    var buf = [];\n    for (var i = pos; i < text.length; i++) {\n      if (regex.test(text[i])) buf.push(text[i]);else break;\n    }\n    return buf;\n  };\n  exports.getCompletionPrefix = function (editor) {\n    var pos = editor.getCursorPosition();\n    var line = editor.session.getLine(pos.row);\n    var prefix;\n    editor.completers.forEach(function (completer) {\n      if (completer.identifierRegexps) {\n        completer.identifierRegexps.forEach(function (identifierRegex) {\n          if (!prefix && identifierRegex) prefix = this.retrievePrecedingIdentifier(line, pos.column, identifierRegex);\n        }.bind(this));\n      }\n    }.bind(this));\n    return prefix || this.retrievePrecedingIdentifier(line, pos.column);\n  };\n  exports.triggerAutocomplete = function (editor, previousChar) {\n    var previousChar = previousChar == null ? editor.session.getPrecedingCharacter() : previousChar;\n    return editor.completers.some(function (completer) {\n      if (completer.triggerCharacters && Array.isArray(completer.triggerCharacters)) {\n        return completer.triggerCharacters.includes(previousChar);\n      }\n    });\n  };\n});\nace.define(\"ace/autocomplete\", [\"require\", \"exports\", \"module\", \"ace/keyboard/hash_handler\", \"ace/autocomplete/popup\", \"ace/autocomplete/inline\", \"ace/autocomplete/popup\", \"ace/autocomplete/util\", \"ace/lib/lang\", \"ace/lib/dom\", \"ace/snippets\", \"ace/config\", \"ace/lib/event\", \"ace/lib/scroll\"], function (require, exports, module) {\n  \"use strict\";\n\n  var HashHandler = require(\"./keyboard/hash_handler\").HashHandler;\n  var AcePopup = require(\"./autocomplete/popup\").AcePopup;\n  var AceInline = require(\"./autocomplete/inline\").AceInline;\n  var getAriaId = require(\"./autocomplete/popup\").getAriaId;\n  var util = require(\"./autocomplete/util\");\n  var lang = require(\"./lib/lang\");\n  var dom = require(\"./lib/dom\");\n  var snippetManager = require(\"./snippets\").snippetManager;\n  var config = require(\"./config\");\n  var event = require(\"./lib/event\");\n  var preventParentScroll = require(\"./lib/scroll\").preventParentScroll;\n  var destroyCompleter = function (e, editor) {\n    editor.completer && editor.completer.destroy();\n  };\n  var Autocomplete = /** @class */function () {\n    function Autocomplete() {\n      this.autoInsert = false;\n      this.autoSelect = true;\n      this.autoShown = false;\n      this.exactMatch = false;\n      this.inlineEnabled = false;\n      this.keyboardHandler = new HashHandler();\n      this.keyboardHandler.bindKeys(this.commands);\n      this.parentNode = null;\n      this.setSelectOnHover = false;\n      this.hasSeen = new Set();\n      this.showLoadingState = false;\n      this.stickySelectionDelay = 500;\n      this.blurListener = this.blurListener.bind(this);\n      this.changeListener = this.changeListener.bind(this);\n      this.mousedownListener = this.mousedownListener.bind(this);\n      this.mousewheelListener = this.mousewheelListener.bind(this);\n      this.onLayoutChange = this.onLayoutChange.bind(this);\n      this.changeTimer = lang.delayedCall(function () {\n        this.updateCompletions(true);\n      }.bind(this));\n      this.tooltipTimer = lang.delayedCall(this.updateDocTooltip.bind(this), 50);\n      this.popupTimer = lang.delayedCall(this.$updatePopupPosition.bind(this), 50);\n      this.stickySelectionTimer = lang.delayedCall(function () {\n        this.stickySelection = true;\n      }.bind(this), this.stickySelectionDelay);\n      this.$firstOpenTimer = lang.delayedCall( /**@this{Autocomplete}*/function () {\n        var initialPosition = this.completionProvider && this.completionProvider.initialPosition;\n        if (this.autoShown || this.popup && this.popup.isOpen || !initialPosition || this.editor.completers.length === 0) return;\n        this.completions = new FilteredList(Autocomplete.completionsForLoading);\n        this.openPopup(this.editor, initialPosition.prefix, false);\n        this.popup.renderer.setStyle(\"ace_loading\", true);\n      }.bind(this), this.stickySelectionDelay);\n    }\n    Object.defineProperty(Autocomplete, \"completionsForLoading\", {\n      get: function () {\n        return [{\n          caption: config.nls(\"autocomplete.loading\", \"Loading...\"),\n          value: \"\"\n        }];\n      },\n      enumerable: false,\n      configurable: true\n    });\n    Autocomplete.prototype.$init = function () {\n      this.popup = new AcePopup(this.parentNode || document.body || document.documentElement);\n      this.popup.on(\"click\", function (e) {\n        this.insertMatch();\n        e.stop();\n      }.bind(this));\n      this.popup.focus = this.editor.focus.bind(this.editor);\n      this.popup.on(\"show\", this.$onPopupShow.bind(this));\n      this.popup.on(\"hide\", this.$onHidePopup.bind(this));\n      this.popup.on(\"select\", this.$onPopupChange.bind(this));\n      event.addListener(this.popup.container, \"mouseout\", this.mouseOutListener.bind(this));\n      this.popup.on(\"changeHoverMarker\", this.tooltipTimer.bind(null, null));\n      this.popup.renderer.on(\"afterRender\", this.$onPopupRender.bind(this));\n      return this.popup;\n    };\n    Autocomplete.prototype.$initInline = function () {\n      if (!this.inlineEnabled || this.inlineRenderer) return;\n      this.inlineRenderer = new AceInline();\n      return this.inlineRenderer;\n    };\n    Autocomplete.prototype.getPopup = function () {\n      return this.popup || this.$init();\n    };\n    Autocomplete.prototype.$onHidePopup = function () {\n      if (this.inlineRenderer) {\n        this.inlineRenderer.hide();\n      }\n      this.hideDocTooltip();\n      this.stickySelectionTimer.cancel();\n      this.popupTimer.cancel();\n      this.stickySelection = false;\n    };\n    Autocomplete.prototype.$seen = function (completion) {\n      if (!this.hasSeen.has(completion) && completion && completion.completer && completion.completer.onSeen && typeof completion.completer.onSeen === \"function\") {\n        completion.completer.onSeen(this.editor, completion);\n        this.hasSeen.add(completion);\n      }\n    };\n    Autocomplete.prototype.$onPopupChange = function (hide) {\n      if (this.inlineRenderer && this.inlineEnabled) {\n        var completion = hide ? null : this.popup.getData(this.popup.getRow());\n        this.$updateGhostText(completion);\n        if (this.popup.isMouseOver && this.setSelectOnHover) {\n          this.tooltipTimer.call(null, null);\n          return;\n        }\n        this.popupTimer.schedule();\n        this.tooltipTimer.schedule();\n      } else {\n        this.popupTimer.call(null, null);\n        this.tooltipTimer.call(null, null);\n      }\n    };\n    Autocomplete.prototype.$updateGhostText = function (completion) {\n      var row = this.base.row;\n      var column = this.base.column;\n      var cursorColumn = this.editor.getCursorPosition().column;\n      var prefix = this.editor.session.getLine(row).slice(column, cursorColumn);\n      if (!this.inlineRenderer.show(this.editor, completion, prefix)) {\n        this.inlineRenderer.hide();\n      } else {\n        this.$seen(completion);\n      }\n    };\n    Autocomplete.prototype.$onPopupRender = function () {\n      var inlineEnabled = this.inlineRenderer && this.inlineEnabled;\n      if (this.completions && this.completions.filtered && this.completions.filtered.length > 0) {\n        for (var i = this.popup.getFirstVisibleRow(); i <= this.popup.getLastVisibleRow(); i++) {\n          var completion = this.popup.getData(i);\n          if (completion && (!inlineEnabled || completion.hideInlinePreview)) {\n            this.$seen(completion);\n          }\n        }\n      }\n    };\n    Autocomplete.prototype.$onPopupShow = function (hide) {\n      this.$onPopupChange(hide);\n      this.stickySelection = false;\n      if (this.stickySelectionDelay >= 0) this.stickySelectionTimer.schedule(this.stickySelectionDelay);\n    };\n    Autocomplete.prototype.observeLayoutChanges = function () {\n      if (this.$elements || !this.editor) return;\n      window.addEventListener(\"resize\", this.onLayoutChange, {\n        passive: true\n      });\n      window.addEventListener(\"wheel\", this.mousewheelListener);\n      var el = this.editor.container.parentNode;\n      var elements = [];\n      while (el) {\n        elements.push(el);\n        el.addEventListener(\"scroll\", this.onLayoutChange, {\n          passive: true\n        });\n        el = el.parentNode;\n      }\n      this.$elements = elements;\n    };\n    Autocomplete.prototype.unObserveLayoutChanges = function () {\n      var _this = this;\n      window.removeEventListener(\"resize\", this.onLayoutChange, {\n        passive: true\n      });\n      window.removeEventListener(\"wheel\", this.mousewheelListener);\n      this.$elements && this.$elements.forEach(function (el) {\n        el.removeEventListener(\"scroll\", _this.onLayoutChange, {\n          passive: true\n        });\n      });\n      this.$elements = null;\n    };\n    Autocomplete.prototype.onLayoutChange = function () {\n      if (!this.popup.isOpen) return this.unObserveLayoutChanges();\n      this.$updatePopupPosition();\n      this.updateDocTooltip();\n    };\n    Autocomplete.prototype.$updatePopupPosition = function () {\n      var editor = this.editor;\n      var renderer = editor.renderer;\n      var lineHeight = renderer.layerConfig.lineHeight;\n      var pos = renderer.$cursorLayer.getPixelPosition(this.base, true);\n      pos.left -= this.popup.getTextLeftOffset();\n      var rect = editor.container.getBoundingClientRect();\n      pos.top += rect.top - renderer.layerConfig.offset;\n      pos.left += rect.left - editor.renderer.scrollLeft;\n      pos.left += renderer.gutterWidth;\n      var posGhostText = {\n        top: pos.top,\n        left: pos.left\n      };\n      if (renderer.$ghostText && renderer.$ghostTextWidget) {\n        if (this.base.row === renderer.$ghostText.position.row) {\n          posGhostText.top += renderer.$ghostTextWidget.el.offsetHeight;\n        }\n      }\n      var editorContainerBottom = editor.container.getBoundingClientRect().bottom - lineHeight;\n      var lowestPosition = editorContainerBottom < posGhostText.top ? {\n        top: editorContainerBottom,\n        left: posGhostText.left\n      } : posGhostText;\n      if (this.popup.tryShow(lowestPosition, lineHeight, \"bottom\")) {\n        return;\n      }\n      if (this.popup.tryShow(pos, lineHeight, \"top\")) {\n        return;\n      }\n      this.popup.show(pos, lineHeight);\n    };\n    Autocomplete.prototype.openPopup = function (editor, prefix, keepPopupPosition) {\n      this.$firstOpenTimer.cancel();\n      if (!this.popup) this.$init();\n      if (this.inlineEnabled && !this.inlineRenderer) this.$initInline();\n      this.popup.autoSelect = this.autoSelect;\n      this.popup.setSelectOnHover(this.setSelectOnHover);\n      var oldRow = this.popup.getRow();\n      var previousSelectedItem = this.popup.data[oldRow];\n      this.popup.setData(this.completions.filtered, this.completions.filterText);\n      if (this.editor.textInput.setAriaOptions) {\n        this.editor.textInput.setAriaOptions({\n          activeDescendant: getAriaId(this.popup.getRow()),\n          inline: this.inlineEnabled\n        });\n      }\n      editor.keyBinding.addKeyboardHandler(this.keyboardHandler);\n      var newRow;\n      if (this.stickySelection) newRow = this.popup.data.indexOf(previousSelectedItem);\n      if (!newRow || newRow === -1) newRow = 0;\n      this.popup.setRow(this.autoSelect ? newRow : -1);\n      if (newRow === oldRow && previousSelectedItem !== this.completions.filtered[newRow]) this.$onPopupChange();\n      var inlineEnabled = this.inlineRenderer && this.inlineEnabled;\n      if (newRow === oldRow && inlineEnabled) {\n        var completion = this.popup.getData(this.popup.getRow());\n        this.$updateGhostText(completion);\n      }\n      if (!keepPopupPosition) {\n        this.popup.setTheme(editor.getTheme());\n        this.popup.setFontSize(editor.getFontSize());\n        this.$updatePopupPosition();\n        if (this.tooltipNode) {\n          this.updateDocTooltip();\n        }\n      }\n      this.changeTimer.cancel();\n      this.observeLayoutChanges();\n    };\n    Autocomplete.prototype.detach = function () {\n      if (this.editor) {\n        this.editor.keyBinding.removeKeyboardHandler(this.keyboardHandler);\n        this.editor.off(\"changeSelection\", this.changeListener);\n        this.editor.off(\"blur\", this.blurListener);\n        this.editor.off(\"mousedown\", this.mousedownListener);\n        this.editor.off(\"mousewheel\", this.mousewheelListener);\n      }\n      this.$firstOpenTimer.cancel();\n      this.changeTimer.cancel();\n      this.hideDocTooltip();\n      if (this.completionProvider) {\n        this.completionProvider.detach();\n      }\n      if (this.popup && this.popup.isOpen) this.popup.hide();\n      if (this.popup && this.popup.renderer) {\n        this.popup.renderer.off(\"afterRender\", this.$onPopupRender);\n      }\n      if (this.base) this.base.detach();\n      this.activated = false;\n      this.completionProvider = this.completions = this.base = null;\n      this.unObserveLayoutChanges();\n    };\n    Autocomplete.prototype.changeListener = function (e) {\n      var cursor = this.editor.selection.lead;\n      if (cursor.row != this.base.row || cursor.column < this.base.column) {\n        this.detach();\n      }\n      if (this.activated) this.changeTimer.schedule();else this.detach();\n    };\n    Autocomplete.prototype.blurListener = function (e) {\n      var el = document.activeElement;\n      var text = this.editor.textInput.getElement();\n      var fromTooltip = e.relatedTarget && this.tooltipNode && this.tooltipNode.contains(e.relatedTarget);\n      var container = this.popup && this.popup.container;\n      if (el != text && el.parentNode != container && !fromTooltip && el != this.tooltipNode && e.relatedTarget != text) {\n        this.detach();\n      }\n    };\n    Autocomplete.prototype.mousedownListener = function (e) {\n      this.detach();\n    };\n    Autocomplete.prototype.mousewheelListener = function (e) {\n      if (this.popup && !this.popup.isMouseOver) this.detach();\n    };\n    Autocomplete.prototype.mouseOutListener = function (e) {\n      if (this.popup.isOpen) this.$updatePopupPosition();\n    };\n    Autocomplete.prototype.goTo = function (where) {\n      this.popup.goTo(where);\n    };\n    Autocomplete.prototype.insertMatch = function (data, options) {\n      if (!data) data = this.popup.getData(this.popup.getRow());\n      if (!data) return false;\n      if (data.value === \"\")\n        // Explicitly given nothing to insert, e.g. \"No suggestion state\"\n        return this.detach();\n      var completions = this.completions;\n      var result = this.getCompletionProvider().insertMatch(this.editor, data, completions.filterText, options);\n      if (this.completions == completions) this.detach();\n      return result;\n    };\n    Autocomplete.prototype.showPopup = function (editor, options) {\n      if (this.editor) this.detach();\n      this.activated = true;\n      this.editor = editor;\n      if (editor.completer != this) {\n        if (editor.completer) editor.completer.detach();\n        editor.completer = this;\n      }\n      editor.on(\"changeSelection\", this.changeListener);\n      editor.on(\"blur\", this.blurListener);\n      editor.on(\"mousedown\", this.mousedownListener);\n      editor.on(\"mousewheel\", this.mousewheelListener);\n      this.updateCompletions(false, options);\n    };\n    Autocomplete.prototype.getCompletionProvider = function (initialPosition) {\n      if (!this.completionProvider) this.completionProvider = new CompletionProvider(initialPosition);\n      return this.completionProvider;\n    };\n    Autocomplete.prototype.gatherCompletions = function (editor, callback) {\n      return this.getCompletionProvider().gatherCompletions(editor, callback);\n    };\n    Autocomplete.prototype.updateCompletions = function (keepPopupPosition, options) {\n      if (keepPopupPosition && this.base && this.completions) {\n        var pos = this.editor.getCursorPosition();\n        var prefix = this.editor.session.getTextRange({\n          start: this.base,\n          end: pos\n        });\n        if (prefix == this.completions.filterText) return;\n        this.completions.setFilter(prefix);\n        if (!this.completions.filtered.length) return this.detach();\n        if (this.completions.filtered.length == 1 && this.completions.filtered[0].value == prefix && !this.completions.filtered[0].snippet) return this.detach();\n        this.openPopup(this.editor, prefix, keepPopupPosition);\n        return;\n      }\n      if (options && options.matches) {\n        var pos = this.editor.getSelectionRange().start;\n        this.base = this.editor.session.doc.createAnchor(pos.row, pos.column);\n        this.base.$insertRight = true;\n        this.completions = new FilteredList(options.matches);\n        this.getCompletionProvider().completions = this.completions;\n        return this.openPopup(this.editor, \"\", keepPopupPosition);\n      }\n      var session = this.editor.getSession();\n      var pos = this.editor.getCursorPosition();\n      var prefix = util.getCompletionPrefix(this.editor);\n      this.base = session.doc.createAnchor(pos.row, pos.column - prefix.length);\n      this.base.$insertRight = true;\n      var completionOptions = {\n        exactMatch: this.exactMatch,\n        ignoreCaption: this.ignoreCaption\n      };\n      this.getCompletionProvider({\n        prefix: prefix,\n        pos: pos\n      }).provideCompletions(this.editor, completionOptions, function (err, completions, finished) {\n        var filtered = completions.filtered;\n        var prefix = util.getCompletionPrefix(this.editor);\n        this.$firstOpenTimer.cancel();\n        if (finished) {\n          if (!filtered.length) {\n            var emptyMessage = !this.autoShown && this.emptyMessage;\n            if (typeof emptyMessage == \"function\") emptyMessage = this.emptyMessage(prefix);\n            if (emptyMessage) {\n              var completionsForEmpty = [{\n                caption: emptyMessage,\n                value: \"\"\n              }];\n              this.completions = new FilteredList(completionsForEmpty);\n              this.openPopup(this.editor, prefix, keepPopupPosition);\n              this.popup.renderer.setStyle(\"ace_loading\", false);\n              this.popup.renderer.setStyle(\"ace_empty-message\", true);\n              return;\n            }\n            return this.detach();\n          }\n          if (filtered.length == 1 && filtered[0].value == prefix && !filtered[0].snippet) return this.detach();\n          if (this.autoInsert && !this.autoShown && filtered.length == 1) return this.insertMatch(filtered[0]);\n        }\n        this.completions = !finished && this.showLoadingState ? new FilteredList(Autocomplete.completionsForLoading.concat(filtered), completions.filterText) : completions;\n        this.openPopup(this.editor, prefix, keepPopupPosition);\n        this.popup.renderer.setStyle(\"ace_empty-message\", false);\n        this.popup.renderer.setStyle(\"ace_loading\", !finished);\n      }.bind(this));\n      if (this.showLoadingState && !this.autoShown && !(this.popup && this.popup.isOpen)) {\n        this.$firstOpenTimer.delay(this.stickySelectionDelay / 2);\n      }\n    };\n    Autocomplete.prototype.cancelContextMenu = function () {\n      this.editor.$mouseHandler.cancelContextMenu();\n    };\n    Autocomplete.prototype.updateDocTooltip = function () {\n      var popup = this.popup;\n      var all = this.completions.filtered;\n      var selected = all && (all[popup.getHoveredRow()] || all[popup.getRow()]);\n      var doc = null;\n      if (!selected || !this.editor || !this.popup.isOpen) return this.hideDocTooltip();\n      var completersLength = this.editor.completers.length;\n      for (var i = 0; i < completersLength; i++) {\n        var completer = this.editor.completers[i];\n        if (completer.getDocTooltip && selected.completerId === completer.id) {\n          doc = completer.getDocTooltip(selected);\n          break;\n        }\n      }\n      if (!doc && typeof selected != \"string\") doc = selected;\n      if (typeof doc == \"string\") doc = {\n        docText: doc\n      };\n      if (!doc || !(doc.docHTML || doc.docText)) return this.hideDocTooltip();\n      this.showDocTooltip(doc);\n    };\n    Autocomplete.prototype.showDocTooltip = function (item) {\n      if (!this.tooltipNode) {\n        this.tooltipNode = dom.createElement(\"div\");\n        this.tooltipNode.style.margin = \"0\";\n        this.tooltipNode.style.pointerEvents = \"auto\";\n        this.tooltipNode.style.overscrollBehavior = \"contain\";\n        this.tooltipNode.tabIndex = -1;\n        this.tooltipNode.onblur = this.blurListener.bind(this);\n        this.tooltipNode.onclick = this.onTooltipClick.bind(this);\n        this.tooltipNode.id = \"doc-tooltip\";\n        this.tooltipNode.setAttribute(\"role\", \"tooltip\");\n        this.tooltipNode.addEventListener(\"wheel\", preventParentScroll);\n      }\n      var theme = this.editor.renderer.theme;\n      this.tooltipNode.className = \"ace_tooltip ace_doc-tooltip \" + (theme.isDark ? \"ace_dark \" : \"\") + (theme.cssClass || \"\");\n      var tooltipNode = this.tooltipNode;\n      if (item.docHTML) {\n        tooltipNode.innerHTML = item.docHTML;\n      } else if (item.docText) {\n        tooltipNode.textContent = item.docText;\n      }\n      if (!tooltipNode.parentNode) this.popup.container.appendChild(this.tooltipNode);\n      var popup = this.popup;\n      var rect = popup.container.getBoundingClientRect();\n      tooltipNode.style.top = popup.container.style.top;\n      tooltipNode.style.bottom = popup.container.style.bottom;\n      tooltipNode.style.display = \"block\";\n      if (window.innerWidth - rect.right < 320) {\n        if (rect.left < 320) {\n          if (popup.isTopdown) {\n            tooltipNode.style.top = rect.bottom + \"px\";\n            tooltipNode.style.left = rect.left + \"px\";\n            tooltipNode.style.right = \"\";\n            tooltipNode.style.bottom = \"\";\n          } else {\n            tooltipNode.style.top = popup.container.offsetTop - tooltipNode.offsetHeight + \"px\";\n            tooltipNode.style.left = rect.left + \"px\";\n            tooltipNode.style.right = \"\";\n            tooltipNode.style.bottom = \"\";\n          }\n        } else {\n          tooltipNode.style.right = window.innerWidth - rect.left + \"px\";\n          tooltipNode.style.left = \"\";\n        }\n      } else {\n        tooltipNode.style.left = rect.right + 1 + \"px\";\n        tooltipNode.style.right = \"\";\n      }\n    };\n    Autocomplete.prototype.hideDocTooltip = function () {\n      this.tooltipTimer.cancel();\n      if (!this.tooltipNode) return;\n      var el = this.tooltipNode;\n      if (!this.editor.isFocused() && document.activeElement == el) this.editor.focus();\n      this.tooltipNode = null;\n      if (el.parentNode) el.parentNode.removeChild(el);\n    };\n    Autocomplete.prototype.onTooltipClick = function (e) {\n      var a = e.target;\n      while (a && a != this.tooltipNode) {\n        if (a.nodeName == \"A\" && a.href) {\n          a.rel = \"noreferrer\";\n          a.target = \"_blank\";\n          break;\n        }\n        a = a.parentNode;\n      }\n    };\n    Autocomplete.prototype.destroy = function () {\n      this.detach();\n      if (this.popup) {\n        this.popup.destroy();\n        var el = this.popup.container;\n        if (el && el.parentNode) el.parentNode.removeChild(el);\n      }\n      if (this.editor && this.editor.completer == this) {\n        this.editor.off(\"destroy\", destroyCompleter);\n        this.editor.completer = null;\n      }\n      this.inlineRenderer = this.popup = this.editor = null;\n    };\n    return Autocomplete;\n  }();\n  Autocomplete.prototype.commands = {\n    \"Up\": function (editor) {\n      editor.completer.goTo(\"up\");\n    },\n    \"Down\": function (editor) {\n      editor.completer.goTo(\"down\");\n    },\n    \"Ctrl-Up|Ctrl-Home\": function (editor) {\n      editor.completer.goTo(\"start\");\n    },\n    \"Ctrl-Down|Ctrl-End\": function (editor) {\n      editor.completer.goTo(\"end\");\n    },\n    \"Esc\": function (editor) {\n      editor.completer.detach();\n    },\n    \"Return\": function (editor) {\n      return editor.completer.insertMatch();\n    },\n    \"Shift-Return\": function (editor) {\n      editor.completer.insertMatch(null, {\n        deleteSuffix: true\n      });\n    },\n    \"Tab\": function (editor) {\n      var result = editor.completer.insertMatch();\n      if (!result && !editor.tabstopManager) editor.completer.goTo(\"down\");else return result;\n    },\n    \"Backspace\": function (editor) {\n      editor.execCommand(\"backspace\");\n      var prefix = util.getCompletionPrefix(editor);\n      if (!prefix && editor.completer) editor.completer.detach();\n    },\n    \"PageUp\": function (editor) {\n      editor.completer.popup.gotoPageUp();\n    },\n    \"PageDown\": function (editor) {\n      editor.completer.popup.gotoPageDown();\n    }\n  };\n  Autocomplete.for = function (editor) {\n    if (editor.completer instanceof Autocomplete) {\n      return editor.completer;\n    }\n    if (editor.completer) {\n      editor.completer.destroy();\n      editor.completer = null;\n    }\n    if (config.get(\"sharedPopups\")) {\n      if (!Autocomplete[\"$sharedInstance\"]) Autocomplete[\"$sharedInstance\"] = new Autocomplete();\n      editor.completer = Autocomplete[\"$sharedInstance\"];\n    } else {\n      editor.completer = new Autocomplete();\n      editor.once(\"destroy\", destroyCompleter);\n    }\n    return editor.completer;\n  };\n  Autocomplete.startCommand = {\n    name: \"startAutocomplete\",\n    exec: function (editor, options) {\n      var completer = Autocomplete.for(editor);\n      completer.autoInsert = false;\n      completer.autoSelect = true;\n      completer.autoShown = false;\n      completer.showPopup(editor, options);\n      completer.cancelContextMenu();\n    },\n    bindKey: \"Ctrl-Space|Ctrl-Shift-Space|Alt-Space\"\n  };\n  var CompletionProvider = /** @class */function () {\n    function CompletionProvider(initialPosition) {\n      this.initialPosition = initialPosition;\n      this.active = true;\n    }\n    CompletionProvider.prototype.insertByIndex = function (editor, index, options) {\n      if (!this.completions || !this.completions.filtered) {\n        return false;\n      }\n      return this.insertMatch(editor, this.completions.filtered[index], options);\n    };\n    CompletionProvider.prototype.insertMatch = function (editor, data, options) {\n      if (!data) return false;\n      editor.startOperation({\n        command: {\n          name: \"insertMatch\"\n        }\n      });\n      if (data.completer && data.completer.insertMatch) {\n        data.completer.insertMatch(editor, data);\n      } else {\n        if (!this.completions) return false;\n        var replaceBefore = this.completions.filterText.length;\n        var replaceAfter = 0;\n        if (data.range && data.range.start.row === data.range.end.row) {\n          replaceBefore -= this.initialPosition.prefix.length;\n          replaceBefore += this.initialPosition.pos.column - data.range.start.column;\n          replaceAfter += data.range.end.column - this.initialPosition.pos.column;\n        }\n        if (replaceBefore || replaceAfter) {\n          var ranges;\n          if (editor.selection.getAllRanges) {\n            ranges = editor.selection.getAllRanges();\n          } else {\n            ranges = [editor.getSelectionRange()];\n          }\n          for (var i = 0, range; range = ranges[i]; i++) {\n            range.start.column -= replaceBefore;\n            range.end.column += replaceAfter;\n            editor.session.remove(range);\n          }\n        }\n        if (data.snippet) {\n          snippetManager.insertSnippet(editor, data.snippet);\n        } else {\n          this.$insertString(editor, data);\n        }\n        if (data.completer && data.completer.onInsert && typeof data.completer.onInsert == \"function\") {\n          data.completer.onInsert(editor, data);\n        }\n        if (data.command && data.command === \"startAutocomplete\") {\n          editor.execCommand(data.command);\n        }\n      }\n      editor.endOperation();\n      return true;\n    };\n    CompletionProvider.prototype.$insertString = function (editor, data) {\n      var text = data.value || data;\n      editor.execCommand(\"insertstring\", text);\n    };\n    CompletionProvider.prototype.gatherCompletions = function (editor, callback) {\n      var session = editor.getSession();\n      var pos = editor.getCursorPosition();\n      var prefix = util.getCompletionPrefix(editor);\n      var matches = [];\n      this.completers = editor.completers;\n      var total = editor.completers.length;\n      editor.completers.forEach(function (completer, i) {\n        completer.getCompletions(editor, session, pos, prefix, function (err, results) {\n          if (completer.hideInlinePreview) results = results.map(function (result) {\n            return Object.assign(result, {\n              hideInlinePreview: completer.hideInlinePreview\n            });\n          });\n          if (!err && results) matches = matches.concat(results);\n          callback(null, {\n            prefix: util.getCompletionPrefix(editor),\n            matches: matches,\n            finished: --total === 0\n          });\n        });\n      });\n      return true;\n    };\n    CompletionProvider.prototype.provideCompletions = function (editor, options, callback) {\n      var processResults = function (results) {\n        var prefix = results.prefix;\n        var matches = results.matches;\n        this.completions = new FilteredList(matches);\n        if (options.exactMatch) this.completions.exactMatch = true;\n        if (options.ignoreCaption) this.completions.ignoreCaption = true;\n        this.completions.setFilter(prefix);\n        if (results.finished || this.completions.filtered.length) callback(null, this.completions, results.finished);\n      }.bind(this);\n      var isImmediate = true;\n      var immediateResults = null;\n      this.gatherCompletions(editor, function (err, results) {\n        if (!this.active) {\n          return;\n        }\n        if (err) {\n          callback(err, [], true);\n          this.detach();\n        }\n        var prefix = results.prefix;\n        if (prefix.indexOf(results.prefix) !== 0) return;\n        if (isImmediate) {\n          immediateResults = results;\n          return;\n        }\n        processResults(results);\n      }.bind(this));\n      isImmediate = false;\n      if (immediateResults) {\n        var results = immediateResults;\n        immediateResults = null;\n        processResults(results);\n      }\n    };\n    CompletionProvider.prototype.detach = function () {\n      this.active = false;\n      this.completers && this.completers.forEach(function (completer) {\n        if (typeof completer.cancel === \"function\") {\n          completer.cancel();\n        }\n      });\n    };\n    return CompletionProvider;\n  }();\n  var FilteredList = /** @class */function () {\n    function FilteredList(array, filterText) {\n      this.all = array;\n      this.filtered = array;\n      this.filterText = filterText || \"\";\n      this.exactMatch = false;\n      this.ignoreCaption = false;\n    }\n    FilteredList.prototype.setFilter = function (str) {\n      if (str.length > this.filterText && str.lastIndexOf(this.filterText, 0) === 0) var matches = this.filtered;else var matches = this.all;\n      this.filterText = str;\n      matches = this.filterCompletions(matches, this.filterText);\n      matches = matches.sort(function (a, b) {\n        return b.exactMatch - a.exactMatch || b.$score - a.$score || (a.caption || a.value).localeCompare(b.caption || b.value);\n      });\n      var prev = null;\n      matches = matches.filter(function (item) {\n        var caption = item.snippet || item.caption || item.value;\n        if (caption === prev) return false;\n        prev = caption;\n        return true;\n      });\n      this.filtered = matches;\n    };\n    FilteredList.prototype.filterCompletions = function (items, needle) {\n      var results = [];\n      var upper = needle.toUpperCase();\n      var lower = needle.toLowerCase();\n      loop: for (var i = 0, item; item = items[i]; i++) {\n        var caption = !this.ignoreCaption && item.caption || item.value || item.snippet;\n        if (!caption) continue;\n        var lastIndex = -1;\n        var matchMask = 0;\n        var penalty = 0;\n        var index, distance;\n        if (this.exactMatch) {\n          if (needle !== caption.substr(0, needle.length)) continue loop;\n        } else {\n          var fullMatchIndex = caption.toLowerCase().indexOf(lower);\n          if (fullMatchIndex > -1) {\n            penalty = fullMatchIndex;\n          } else {\n            for (var j = 0; j < needle.length; j++) {\n              var i1 = caption.indexOf(lower[j], lastIndex + 1);\n              var i2 = caption.indexOf(upper[j], lastIndex + 1);\n              index = i1 >= 0 ? i2 < 0 || i1 < i2 ? i1 : i2 : i2;\n              if (index < 0) continue loop;\n              distance = index - lastIndex - 1;\n              if (distance > 0) {\n                if (lastIndex === -1) penalty += 10;\n                penalty += distance;\n                matchMask = matchMask | 1 << j;\n              }\n              lastIndex = index;\n            }\n          }\n        }\n        item.matchMask = matchMask;\n        item.exactMatch = penalty ? 0 : 1;\n        item.$score = (item.score || 0) - penalty;\n        results.push(item);\n      }\n      return results;\n    };\n    return FilteredList;\n  }();\n  exports.Autocomplete = Autocomplete;\n  exports.CompletionProvider = CompletionProvider;\n  exports.FilteredList = FilteredList;\n});\nace.define(\"ace/ext/menu_tools/settings_menu.css\", [\"require\", \"exports\", \"module\"], function (require, exports, module) {\n  module.exports = \"#ace_settingsmenu, #kbshortcutmenu {\\n    background-color: #F7F7F7;\\n    color: black;\\n    box-shadow: -5px 4px 5px rgba(126, 126, 126, 0.55);\\n    padding: 1em 0.5em 2em 1em;\\n    overflow: auto;\\n    position: absolute;\\n    margin: 0;\\n    bottom: 0;\\n    right: 0;\\n    top: 0;\\n    z-index: 9991;\\n    cursor: default;\\n}\\n\\n.ace_dark #ace_settingsmenu, .ace_dark #kbshortcutmenu {\\n    box-shadow: -20px 10px 25px rgba(126, 126, 126, 0.25);\\n    background-color: rgba(255, 255, 255, 0.6);\\n    color: black;\\n}\\n\\n.ace_optionsMenuEntry:hover {\\n    background-color: rgba(100, 100, 100, 0.1);\\n    transition: all 0.3s\\n}\\n\\n.ace_closeButton {\\n    background: rgba(245, 146, 146, 0.5);\\n    border: 1px solid #F48A8A;\\n    border-radius: 50%;\\n    padding: 7px;\\n    position: absolute;\\n    right: -8px;\\n    top: -8px;\\n    z-index: 100000;\\n}\\n.ace_closeButton{\\n    background: rgba(245, 146, 146, 0.9);\\n}\\n.ace_optionsMenuKey {\\n    color: darkslateblue;\\n    font-weight: bold;\\n}\\n.ace_optionsMenuCommand {\\n    color: darkcyan;\\n    font-weight: normal;\\n}\\n.ace_optionsMenuEntry input, .ace_optionsMenuEntry button {\\n    vertical-align: middle;\\n}\\n\\n.ace_optionsMenuEntry button[ace_selected_button=true] {\\n    background: #e7e7e7;\\n    box-shadow: 1px 0px 2px 0px #adadad inset;\\n    border-color: #adadad;\\n}\\n.ace_optionsMenuEntry button {\\n    background: white;\\n    border: 1px solid lightgray;\\n    margin: 0px;\\n}\\n.ace_optionsMenuEntry button:hover{\\n    background: #f0f0f0;\\n}\";\n});\nace.define(\"ace/ext/menu_tools/overlay_page\", [\"require\", \"exports\", \"module\", \"ace/lib/dom\", \"ace/ext/menu_tools/settings_menu.css\"], function (require, exports, module) {\n  /*jslint indent: 4, maxerr: 50, white: true, browser: true, vars: true*/\n  'use strict';\n\n  var dom = require(\"../../lib/dom\");\n  var cssText = require(\"./settings_menu.css\");\n  dom.importCssString(cssText, \"settings_menu.css\", false);\n  module.exports.overlayPage = function overlayPage(editor, contentElement, callback) {\n    var closer = document.createElement('div');\n    var ignoreFocusOut = false;\n    function documentEscListener(e) {\n      if (e.keyCode === 27) {\n        close();\n      }\n    }\n    function close() {\n      if (!closer) return;\n      document.removeEventListener('keydown', documentEscListener);\n      closer.parentNode.removeChild(closer);\n      if (editor) {\n        editor.focus();\n      }\n      closer = null;\n      callback && callback();\n    }\n    function setIgnoreFocusOut(ignore) {\n      ignoreFocusOut = ignore;\n      if (ignore) {\n        closer.style.pointerEvents = \"none\";\n        contentElement.style.pointerEvents = \"auto\";\n      }\n    }\n    closer.style.cssText = 'margin: 0; padding: 0; ' + 'position: fixed; top:0; bottom:0; left:0; right:0;' + 'z-index: 9990; ' + (editor ? 'background-color: rgba(0, 0, 0, 0.3);' : '');\n    closer.addEventListener('click', function (e) {\n      if (!ignoreFocusOut) {\n        close();\n      }\n    });\n    document.addEventListener('keydown', documentEscListener);\n    contentElement.addEventListener('click', function (e) {\n      e.stopPropagation();\n    });\n    closer.appendChild(contentElement);\n    document.body.appendChild(closer);\n    if (editor) {\n      editor.blur();\n    }\n    return {\n      close: close,\n      setIgnoreFocusOut: setIgnoreFocusOut\n    };\n  };\n});\nace.define(\"ace/ext/modelist\", [\"require\", \"exports\", \"module\"], function (require, exports, module) {\n  \"use strict\";\n\n  var modes = [];\n  function getModeForPath(path) {\n    var mode = modesByName.text;\n    var fileName = path.split(/[\\/\\\\]/).pop();\n    for (var i = 0; i < modes.length; i++) {\n      if (modes[i].supportsFile(fileName)) {\n        mode = modes[i];\n        break;\n      }\n    }\n    return mode;\n  }\n  var Mode = /** @class */function () {\n    function Mode(name, caption, extensions) {\n      this.name = name;\n      this.caption = caption;\n      this.mode = \"ace/mode/\" + name;\n      this.extensions = extensions;\n      var re;\n      if (/\\^/.test(extensions)) {\n        re = extensions.replace(/\\|(\\^)?/g, function (a, b) {\n          return \"$|\" + (b ? \"^\" : \"^.*\\\\.\");\n        }) + \"$\";\n      } else {\n        re = \"^.*\\\\.(\" + extensions + \")$\";\n      }\n      this.extRe = new RegExp(re, \"gi\");\n    }\n    Mode.prototype.supportsFile = function (filename) {\n      return filename.match(this.extRe);\n    };\n    return Mode;\n  }();\n  var supportedModes = {\n    ABAP: [\"abap\"],\n    ABC: [\"abc\"],\n    ActionScript: [\"as\"],\n    ADA: [\"ada|adb\"],\n    Alda: [\"alda\"],\n    Apache_Conf: [\"^htaccess|^htgroups|^htpasswd|^conf|htaccess|htgroups|htpasswd\"],\n    Apex: [\"apex|cls|trigger|tgr\"],\n    AQL: [\"aql\"],\n    AsciiDoc: [\"asciidoc|adoc\"],\n    ASL: [\"dsl|asl|asl.json\"],\n    Assembly_ARM32: [\"s\"],\n    Assembly_x86: [\"asm|a\"],\n    Astro: [\"astro\"],\n    AutoHotKey: [\"ahk\"],\n    BatchFile: [\"bat|cmd\"],\n    BibTeX: [\"bib\"],\n    C_Cpp: [\"cpp|c|cc|cxx|h|hh|hpp|ino\"],\n    C9Search: [\"c9search_results\"],\n    Cirru: [\"cirru|cr\"],\n    Clojure: [\"clj|cljs\"],\n    Cobol: [\"CBL|COB\"],\n    coffee: [\"coffee|cf|cson|^Cakefile\"],\n    ColdFusion: [\"cfm|cfc\"],\n    Crystal: [\"cr\"],\n    CSharp: [\"cs\"],\n    Csound_Document: [\"csd\"],\n    Csound_Orchestra: [\"orc\"],\n    Csound_Score: [\"sco\"],\n    CSS: [\"css\"],\n    Curly: [\"curly\"],\n    Cuttlefish: [\"conf\"],\n    D: [\"d|di\"],\n    Dart: [\"dart\"],\n    Diff: [\"diff|patch\"],\n    Django: [\"djt|html.djt|dj.html|djhtml\"],\n    Dockerfile: [\"^Dockerfile\"],\n    Dot: [\"dot\"],\n    Drools: [\"drl\"],\n    Edifact: [\"edi\"],\n    Eiffel: [\"e|ge\"],\n    EJS: [\"ejs\"],\n    Elixir: [\"ex|exs\"],\n    Elm: [\"elm\"],\n    Erlang: [\"erl|hrl\"],\n    Flix: [\"flix\"],\n    Forth: [\"frt|fs|ldr|fth|4th\"],\n    Fortran: [\"f|f90\"],\n    FSharp: [\"fsi|fs|ml|mli|fsx|fsscript\"],\n    FSL: [\"fsl\"],\n    FTL: [\"ftl\"],\n    Gcode: [\"gcode\"],\n    Gherkin: [\"feature\"],\n    Gitignore: [\"^.gitignore\"],\n    Glsl: [\"glsl|frag|vert\"],\n    Gobstones: [\"gbs\"],\n    golang: [\"go\"],\n    GraphQLSchema: [\"gql\"],\n    Groovy: [\"groovy\"],\n    HAML: [\"haml\"],\n    Handlebars: [\"hbs|handlebars|tpl|mustache\"],\n    Haskell: [\"hs\"],\n    Haskell_Cabal: [\"cabal\"],\n    haXe: [\"hx\"],\n    Hjson: [\"hjson\"],\n    HTML: [\"html|htm|xhtml|we|wpy\"],\n    HTML_Elixir: [\"eex|html.eex\"],\n    HTML_Ruby: [\"erb|rhtml|html.erb\"],\n    INI: [\"ini|conf|cfg|prefs\"],\n    Io: [\"io\"],\n    Ion: [\"ion\"],\n    Jack: [\"jack\"],\n    Jade: [\"jade|pug\"],\n    Java: [\"java\"],\n    JavaScript: [\"js|jsm|cjs|mjs\"],\n    JEXL: [\"jexl\"],\n    JSON: [\"json\"],\n    JSON5: [\"json5\"],\n    JSONiq: [\"jq\"],\n    JSP: [\"jsp\"],\n    JSSM: [\"jssm|jssm_state\"],\n    JSX: [\"jsx\"],\n    Julia: [\"jl\"],\n    Kotlin: [\"kt|kts\"],\n    LaTeX: [\"tex|latex|ltx|bib\"],\n    Latte: [\"latte\"],\n    LESS: [\"less\"],\n    Liquid: [\"liquid\"],\n    Lisp: [\"lisp\"],\n    LiveScript: [\"ls\"],\n    Log: [\"log\"],\n    LogiQL: [\"logic|lql\"],\n    Logtalk: [\"lgt\"],\n    LSL: [\"lsl\"],\n    Lua: [\"lua\"],\n    LuaPage: [\"lp\"],\n    Lucene: [\"lucene\"],\n    Makefile: [\"^Makefile|^GNUmakefile|^makefile|^OCamlMakefile|make\"],\n    Markdown: [\"md|markdown\"],\n    Mask: [\"mask\"],\n    MATLAB: [\"matlab\"],\n    Maze: [\"mz\"],\n    MediaWiki: [\"wiki|mediawiki\"],\n    MEL: [\"mel\"],\n    MIPS: [\"s|asm\"],\n    MIXAL: [\"mixal\"],\n    MUSHCode: [\"mc|mush\"],\n    MySQL: [\"mysql\"],\n    Nasal: [\"nas\"],\n    Nginx: [\"nginx|conf\"],\n    Nim: [\"nim\"],\n    Nix: [\"nix\"],\n    NSIS: [\"nsi|nsh\"],\n    Nunjucks: [\"nunjucks|nunjs|nj|njk\"],\n    ObjectiveC: [\"m|mm\"],\n    OCaml: [\"ml|mli\"],\n    Odin: [\"odin\"],\n    PartiQL: [\"partiql|pql\"],\n    Pascal: [\"pas|p\"],\n    Perl: [\"pl|pm\"],\n    pgSQL: [\"pgsql\"],\n    PHP: [\"php|inc|phtml|shtml|php3|php4|php5|phps|phpt|aw|ctp|module\"],\n    PHP_Laravel_blade: [\"blade.php\"],\n    Pig: [\"pig\"],\n    PLSQL: [\"plsql\"],\n    Powershell: [\"ps1\"],\n    Praat: [\"praat|praatscript|psc|proc\"],\n    Prisma: [\"prisma\"],\n    Prolog: [\"plg|prolog\"],\n    Properties: [\"properties\"],\n    Protobuf: [\"proto\"],\n    PRQL: [\"prql\"],\n    Puppet: [\"epp|pp\"],\n    Python: [\"py\"],\n    QML: [\"qml\"],\n    R: [\"r\"],\n    Raku: [\"raku|rakumod|rakutest|p6|pl6|pm6\"],\n    Razor: [\"cshtml|asp\"],\n    RDoc: [\"Rd\"],\n    Red: [\"red|reds\"],\n    RHTML: [\"Rhtml\"],\n    Robot: [\"robot|resource\"],\n    RST: [\"rst\"],\n    Ruby: [\"rb|ru|gemspec|rake|^Guardfile|^Rakefile|^Gemfile\"],\n    Rust: [\"rs\"],\n    SaC: [\"sac\"],\n    SASS: [\"sass\"],\n    SCAD: [\"scad\"],\n    Scala: [\"scala|sbt\"],\n    Scheme: [\"scm|sm|rkt|oak|scheme\"],\n    Scrypt: [\"scrypt\"],\n    SCSS: [\"scss\"],\n    SH: [\"sh|bash|^.bashrc\"],\n    SJS: [\"sjs\"],\n    Slim: [\"slim|skim\"],\n    Smarty: [\"smarty|tpl\"],\n    Smithy: [\"smithy\"],\n    snippets: [\"snippets\"],\n    Soy_Template: [\"soy\"],\n    Space: [\"space\"],\n    SPARQL: [\"rq\"],\n    SQL: [\"sql\"],\n    SQLServer: [\"sqlserver\"],\n    Stylus: [\"styl|stylus\"],\n    SVG: [\"svg\"],\n    Swift: [\"swift\"],\n    Tcl: [\"tcl\"],\n    Terraform: [\"tf\", \"tfvars\", \"terragrunt\"],\n    Tex: [\"tex\"],\n    Text: [\"txt\"],\n    Textile: [\"textile\"],\n    Toml: [\"toml\"],\n    TSX: [\"tsx\"],\n    Turtle: [\"ttl\"],\n    Twig: [\"twig|swig\"],\n    Typescript: [\"ts|mts|cts|typescript|str\"],\n    Vala: [\"vala\"],\n    VBScript: [\"vbs|vb\"],\n    Velocity: [\"vm\"],\n    Verilog: [\"v|vh|sv|svh\"],\n    VHDL: [\"vhd|vhdl\"],\n    Visualforce: [\"vfp|component|page\"],\n    Vue: [\"vue\"],\n    Wollok: [\"wlk|wpgm|wtest\"],\n    XML: [\"xml|rdf|rss|wsdl|xslt|atom|mathml|mml|xul|xbl|xaml\"],\n    XQuery: [\"xq\"],\n    YAML: [\"yaml|yml\"],\n    Zeek: [\"zeek|bro\"],\n    Zig: [\"zig\"]\n  };\n  var nameOverrides = {\n    ObjectiveC: \"Objective-C\",\n    CSharp: \"C#\",\n    golang: \"Go\",\n    C_Cpp: \"C and C++\",\n    Csound_Document: \"Csound Document\",\n    Csound_Orchestra: \"Csound\",\n    Csound_Score: \"Csound Score\",\n    coffee: \"CoffeeScript\",\n    HTML_Ruby: \"HTML (Ruby)\",\n    HTML_Elixir: \"HTML (Elixir)\",\n    FTL: \"FreeMarker\",\n    PHP_Laravel_blade: \"PHP (Blade Template)\",\n    Perl6: \"Perl 6\",\n    AutoHotKey: \"AutoHotkey / AutoIt\"\n  };\n  var modesByName = {};\n  for (var name in supportedModes) {\n    var data = supportedModes[name];\n    var displayName = (nameOverrides[name] || name).replace(/_/g, \" \");\n    var filename = name.toLowerCase();\n    var mode = new Mode(filename, displayName, data[0]);\n    modesByName[filename] = mode;\n    modes.push(mode);\n  }\n  module.exports = {\n    getModeForPath: getModeForPath,\n    modes: modes,\n    modesByName: modesByName\n  };\n});\nace.define(\"ace/ext/prompt\", [\"require\", \"exports\", \"module\", \"ace/config\", \"ace/range\", \"ace/lib/dom\", \"ace/autocomplete\", \"ace/autocomplete/popup\", \"ace/autocomplete/popup\", \"ace/undomanager\", \"ace/tokenizer\", \"ace/ext/menu_tools/overlay_page\", \"ace/ext/modelist\"], function (require, exports, module) {\n  /**\n  * @typedef {import(\"../editor\").Editor} Editor\n  */\n  \"use strict\";\n\n  var nls = require(\"../config\").nls;\n  var Range = require(\"../range\").Range;\n  var dom = require(\"../lib/dom\");\n  var FilteredList = require(\"../autocomplete\").FilteredList;\n  var AcePopup = require('../autocomplete/popup').AcePopup;\n  var $singleLineEditor = require('../autocomplete/popup').$singleLineEditor;\n  var UndoManager = require(\"../undomanager\").UndoManager;\n  var Tokenizer = require(\"../tokenizer\").Tokenizer;\n  var overlayPage = require(\"./menu_tools/overlay_page\").overlayPage;\n  var modelist = require(\"./modelist\");\n  var openPrompt;\n  function prompt(editor, message, options, callback) {\n    if (typeof message == \"object\") {\n      return prompt(editor, \"\", message, options);\n    }\n    if (openPrompt) {\n      var lastPrompt = openPrompt;\n      editor = lastPrompt.editor;\n      lastPrompt.close();\n      if (lastPrompt.name && lastPrompt.name == options.name) return;\n    }\n    if (options.$type) return prompt[options.$type](editor, callback);\n    var cmdLine = $singleLineEditor();\n    cmdLine.session.setUndoManager(new UndoManager());\n    var el = dom.buildDom([\"div\", {\n      class: \"ace_prompt_container\" + (options.hasDescription ? \" input-box-with-description\" : \"\")\n    }]);\n    var overlay = overlayPage(editor, el, done);\n    el.appendChild(cmdLine.container);\n    if (editor) {\n      editor.cmdLine = cmdLine;\n      cmdLine.setOption(\"fontSize\", editor.getOption(\"fontSize\"));\n    }\n    if (message) {\n      cmdLine.setValue(message, 1);\n    }\n    if (options.selection) {\n      cmdLine.selection.setRange({\n        start: cmdLine.session.doc.indexToPosition(options.selection[0]),\n        end: cmdLine.session.doc.indexToPosition(options.selection[1])\n      });\n    }\n    if (options.getCompletions) {\n      var popup = new AcePopup();\n      popup.renderer.setStyle(\"ace_autocomplete_inline\");\n      popup.container.style.display = \"block\";\n      popup.container.style.maxWidth = \"600px\";\n      popup.container.style.width = \"100%\";\n      popup.container.style.marginTop = \"3px\";\n      popup.renderer.setScrollMargin(2, 2, 0, 0);\n      popup.autoSelect = false;\n      popup.renderer.$maxLines = 15;\n      popup.setRow(-1);\n      popup.on(\"click\", function (e) {\n        var data = popup.getData(popup.getRow());\n        if (!data[\"error\"]) {\n          cmdLine.setValue(data.value || data[\"name\"] || data);\n          accept();\n          e.stop();\n        }\n      });\n      el.appendChild(popup.container);\n      updateCompletions();\n    }\n    if (options.$rules) {\n      var tokenizer = new Tokenizer(options.$rules);\n      cmdLine.session.bgTokenizer.setTokenizer(tokenizer);\n    }\n    if (options.placeholder) {\n      cmdLine.setOption(\"placeholder\", options.placeholder);\n    }\n    if (options.hasDescription) {\n      var promptTextContainer = dom.buildDom([\"div\", {\n        class: \"ace_prompt_text_container\"\n      }]);\n      dom.buildDom(options.prompt || \"Press 'Enter' to confirm or 'Escape' to cancel\", promptTextContainer);\n      el.appendChild(promptTextContainer);\n    }\n    overlay.setIgnoreFocusOut(options.ignoreFocusOut);\n    function accept() {\n      var val;\n      if (popup && popup.getCursorPosition().row > 0) {\n        val = valueFromRecentList();\n      } else {\n        val = cmdLine.getValue();\n      }\n      var curData = popup ? popup.getData(popup.getRow()) : val;\n      if (curData && !curData[\"error\"]) {\n        done();\n        options.onAccept && options.onAccept({\n          value: val,\n          item: curData\n        }, cmdLine);\n      }\n    }\n    var keys = {\n      \"Enter\": accept,\n      \"Esc|Shift-Esc\": function () {\n        options.onCancel && options.onCancel(cmdLine.getValue(), cmdLine);\n        done();\n      }\n    };\n    if (popup) {\n      Object.assign(keys, {\n        \"Up\": function (editor) {\n          popup.goTo(\"up\");\n          valueFromRecentList();\n        },\n        \"Down\": function (editor) {\n          popup.goTo(\"down\");\n          valueFromRecentList();\n        },\n        \"Ctrl-Up|Ctrl-Home\": function (editor) {\n          popup.goTo(\"start\");\n          valueFromRecentList();\n        },\n        \"Ctrl-Down|Ctrl-End\": function (editor) {\n          popup.goTo(\"end\");\n          valueFromRecentList();\n        },\n        \"Tab\": function (editor) {\n          popup.goTo(\"down\");\n          valueFromRecentList();\n        },\n        \"PageUp\": function (editor) {\n          popup.gotoPageUp();\n          valueFromRecentList();\n        },\n        \"PageDown\": function (editor) {\n          popup.gotoPageDown();\n          valueFromRecentList();\n        }\n      });\n    }\n    cmdLine.commands.bindKeys(keys);\n    function done() {\n      overlay.close();\n      callback && callback();\n      openPrompt = null;\n    }\n    cmdLine.on(\"input\", function () {\n      options.onInput && options.onInput();\n      updateCompletions();\n    });\n    function updateCompletions() {\n      if (options.getCompletions) {\n        var prefix;\n        if (options.getPrefix) {\n          prefix = options.getPrefix(cmdLine);\n        }\n        var completions = options.getCompletions(cmdLine);\n        popup.setData(completions, prefix);\n        popup.resize(true);\n      }\n    }\n    function valueFromRecentList() {\n      var current = popup.getData(popup.getRow());\n      if (current && !current[\"error\"]) return current.value || current.caption || current;\n    }\n    cmdLine.resize(true);\n    if (popup) {\n      popup.resize(true);\n    }\n    cmdLine.focus();\n    openPrompt = {\n      close: done,\n      name: options.name,\n      editor: editor\n    };\n  }\n  prompt.gotoLine = function (editor, callback) {\n    function stringifySelection(selection) {\n      if (!Array.isArray(selection)) selection = [selection];\n      return selection.map(function (r) {\n        var cursor = r.isBackwards ? r.start : r.end;\n        var anchor = r.isBackwards ? r.end : r.start;\n        var row = anchor.row;\n        var s = row + 1 + \":\" + anchor.column;\n        if (anchor.row == cursor.row) {\n          if (anchor.column != cursor.column) s += \">\" + \":\" + cursor.column;\n        } else {\n          s += \">\" + (cursor.row + 1) + \":\" + cursor.column;\n        }\n        return s;\n      }).reverse().join(\", \");\n    }\n    prompt(editor, \":\" + stringifySelection(editor.selection.toJSON()), {\n      name: \"gotoLine\",\n      selection: [1, Number.MAX_VALUE],\n      onAccept: function (data) {\n        var value = data.value;\n        var _history = prompt.gotoLine[\"_history\"];\n        if (!_history) prompt.gotoLine[\"_history\"] = _history = [];\n        if (_history.indexOf(value) != -1) _history.splice(_history.indexOf(value), 1);\n        _history.unshift(value);\n        if (_history.length > 20) _history.length = 20;\n        var pos = editor.getCursorPosition();\n        var ranges = [];\n        value.replace(/^:/, \"\").split(/,/).map(function (str) {\n          var parts = str.split(/([<>:+-]|c?\\d+)|[^c\\d<>:+-]+/).filter(Boolean);\n          var i = 0;\n          function readPosition() {\n            var c = parts[i++];\n            if (!c) return;\n            if (c[0] == \"c\") {\n              var index = parseInt(c.slice(1)) || 0;\n              return editor.session.doc.indexToPosition(index);\n            }\n            var row = pos.row;\n            var column = 0;\n            if (/\\d/.test(c)) {\n              row = parseInt(c) - 1;\n              c = parts[i++];\n            }\n            if (c == \":\") {\n              c = parts[i++];\n              if (/\\d/.test(c)) {\n                column = parseInt(c) || 0;\n              }\n            }\n            return {\n              row: row,\n              column: column\n            };\n          }\n          pos = readPosition();\n          var range = Range.fromPoints(pos, pos);\n          if (parts[i] == \">\") {\n            i++;\n            range.end = readPosition();\n          } else if (parts[i] == \"<\") {\n            i++;\n            range.start = readPosition();\n          }\n          ranges.unshift(range);\n        });\n        editor.selection.fromJSON(ranges);\n        var scrollTop = editor.renderer.scrollTop;\n        editor.renderer.scrollSelectionIntoView(editor.selection.anchor, editor.selection.cursor, 0.5);\n        editor.renderer.animateScrolling(scrollTop);\n      },\n      history: function () {\n        if (!prompt.gotoLine[\"_history\"]) return [];\n        return prompt.gotoLine[\"_history\"];\n      },\n      getCompletions: function (cmdLine) {\n        var value = cmdLine.getValue();\n        var m = value.replace(/^:/, \"\").split(\":\");\n        var row = Math.min(parseInt(m[0]) || 1, editor.session.getLength()) - 1;\n        var line = editor.session.getLine(row);\n        var current = value + \"  \" + line;\n        return [current].concat(this.history());\n      },\n      $rules: {\n        start: [{\n          regex: /\\d+/,\n          token: \"string\"\n        }, {\n          regex: /[:,><+\\-c]/,\n          token: \"keyword\"\n        }]\n      }\n    });\n  };\n  prompt.commands = function (editor, callback) {\n    function normalizeName(name) {\n      return (name || \"\").replace(/^./, function (x) {\n        return x.toUpperCase(x);\n      }).replace(/[a-z][A-Z]/g, function (x) {\n        return x[0] + \" \" + x[1].toLowerCase(x);\n      });\n    }\n    function getEditorCommandsByName(excludeCommands) {\n      var commandsByName = [];\n      var commandMap = {};\n      editor.keyBinding.$handlers.forEach(function (handler) {\n        var platform = handler[\"platform\"];\n        var cbn = handler[\"byName\"];\n        for (var i in cbn) {\n          var key = cbn[i].bindKey;\n          if (typeof key !== \"string\") {\n            key = key && key[platform] || \"\";\n          }\n          var commands = cbn[i];\n          var description = commands.description || normalizeName(commands.name);\n          if (!Array.isArray(commands)) commands = [commands];\n          commands.forEach(function (command) {\n            if (typeof command != \"string\") command = command.name;\n            var needle = excludeCommands.find(function (el) {\n              return el === command;\n            });\n            if (!needle) {\n              if (commandMap[command]) {\n                commandMap[command].key += \"|\" + key;\n              } else {\n                commandMap[command] = {\n                  key: key,\n                  command: command,\n                  description: description\n                };\n                commandsByName.push(commandMap[command]);\n              }\n            }\n          });\n        }\n      });\n      return commandsByName;\n    }\n    var excludeCommandsList = [\"insertstring\", \"inserttext\", \"setIndentation\", \"paste\"];\n    var shortcutsArray = getEditorCommandsByName(excludeCommandsList);\n    shortcutsArray = shortcutsArray.map(function (item) {\n      return {\n        value: item.description,\n        meta: item.key,\n        command: item.command\n      };\n    });\n    prompt(editor, \"\", {\n      name: \"commands\",\n      selection: [0, Number.MAX_VALUE],\n      maxHistoryCount: 5,\n      onAccept: function (data) {\n        if (data.item) {\n          var commandName = data.item.command;\n          this.addToHistory(data.item);\n          editor.execCommand(commandName);\n        }\n      },\n      addToHistory: function (item) {\n        var history = this.history();\n        history.unshift(item);\n        delete item.message;\n        for (var i = 1; i < history.length; i++) {\n          if (history[i][\"command\"] == item.command) {\n            history.splice(i, 1);\n            break;\n          }\n        }\n        if (this.maxHistoryCount > 0 && history.length > this.maxHistoryCount) {\n          history.splice(history.length - 1, 1);\n        }\n        prompt.commands[\"history\"] = history;\n      },\n      history: function () {\n        return prompt.commands[\"history\"] || [];\n      },\n      getPrefix: function (cmdLine) {\n        var currentPos = cmdLine.getCursorPosition();\n        var filterValue = cmdLine.getValue();\n        return filterValue.substring(0, currentPos.column);\n      },\n      getCompletions: function (cmdLine) {\n        function getFilteredCompletions(commands, prefix) {\n          var resultCommands = JSON.parse(JSON.stringify(commands));\n          var filtered = new FilteredList(resultCommands);\n          return filtered.filterCompletions(resultCommands, prefix);\n        }\n        function getUniqueCommandList(commands, usedCommands) {\n          if (!usedCommands || !usedCommands.length) {\n            return commands;\n          }\n          var excludeCommands = [];\n          usedCommands.forEach(function (item) {\n            excludeCommands.push(item.command);\n          });\n          var resultCommands = [];\n          commands.forEach(function (item) {\n            if (excludeCommands.indexOf(item.command) === -1) {\n              resultCommands.push(item);\n            }\n          });\n          return resultCommands;\n        }\n        var prefix = this.getPrefix(cmdLine);\n        var recentlyUsedCommands = getFilteredCompletions(this.history(), prefix);\n        var otherCommands = getUniqueCommandList(shortcutsArray, recentlyUsedCommands);\n        otherCommands = getFilteredCompletions(otherCommands, prefix);\n        if (recentlyUsedCommands.length && otherCommands.length) {\n          recentlyUsedCommands[0].message = nls(\"prompt.recently-used\", \"Recently used\");\n          otherCommands[0].message = nls(\"prompt.other-commands\", \"Other commands\");\n        }\n        var completions = recentlyUsedCommands.concat(otherCommands);\n        return completions.length > 0 ? completions : [{\n          value: nls(\"prompt.no-matching-commands\", \"No matching commands\"),\n          error: 1\n        }];\n      }\n    });\n  };\n  prompt.modes = function (editor, callback) {\n    var modesArray = modelist.modes;\n    modesArray = modesArray.map(function (item) {\n      return {\n        value: item.caption,\n        mode: item.name\n      };\n    });\n    prompt(editor, \"\", {\n      name: \"modes\",\n      selection: [0, Number.MAX_VALUE],\n      onAccept: function (data) {\n        if (data.item) {\n          var modeName = \"ace/mode/\" + data.item.mode;\n          editor.session.setMode(modeName);\n        }\n      },\n      getPrefix: function (cmdLine) {\n        var currentPos = cmdLine.getCursorPosition();\n        var filterValue = cmdLine.getValue();\n        return filterValue.substring(0, currentPos.column);\n      },\n      getCompletions: function (cmdLine) {\n        function getFilteredCompletions(modes, prefix) {\n          var resultCommands = JSON.parse(JSON.stringify(modes));\n          var filtered = new FilteredList(resultCommands);\n          return filtered.filterCompletions(resultCommands, prefix);\n        }\n        var prefix = this.getPrefix(cmdLine);\n        var completions = getFilteredCompletions(modesArray, prefix);\n        return completions.length > 0 ? completions : [{\n          \"caption\": \"No mode matching\",\n          \"value\": \"No mode matching\",\n          \"error\": 1\n        }];\n      }\n    });\n  };\n  dom.importCssString(\".ace_prompt_container {\\n    max-width: 603px;\\n    width: 100%;\\n    margin: 20px auto;\\n    padding: 3px;\\n    background: white;\\n    border-radius: 2px;\\n    box-shadow: 0px 2px 3px 0px #555;\\n}\", \"promtp.css\", false);\n  exports.prompt = prompt;\n});\n(function () {\n  ace.require([\"ace/ext/prompt\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}