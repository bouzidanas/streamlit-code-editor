{"code":"ace.define(\"ace/ext/menu_tools/settings_menu.css\",[\"require\",\"exports\",\"module\"],(function(e,n,o){o.exports=\"#ace_settingsmenu, #kbshortcutmenu {\\n    background-color: #F7F7F7;\\n    color: black;\\n    box-shadow: -5px 4px 5px rgba(126, 126, 126, 0.55);\\n    padding: 1em 0.5em 2em 1em;\\n    overflow: auto;\\n    position: absolute;\\n    margin: 0;\\n    bottom: 0;\\n    right: 0;\\n    top: 0;\\n    z-index: 9991;\\n    cursor: default;\\n}\\n\\n.ace_dark #ace_settingsmenu, .ace_dark #kbshortcutmenu {\\n    box-shadow: -20px 10px 25px rgba(126, 126, 126, 0.25);\\n    background-color: rgba(255, 255, 255, 0.6);\\n    color: black;\\n}\\n\\n.ace_optionsMenuEntry:hover {\\n    background-color: rgba(100, 100, 100, 0.1);\\n    transition: all 0.3s\\n}\\n\\n.ace_closeButton {\\n    background: rgba(245, 146, 146, 0.5);\\n    border: 1px solid #F48A8A;\\n    border-radius: 50%;\\n    padding: 7px;\\n    position: absolute;\\n    right: -8px;\\n    top: -8px;\\n    z-index: 100000;\\n}\\n.ace_closeButton{\\n    background: rgba(245, 146, 146, 0.9);\\n}\\n.ace_optionsMenuKey {\\n    color: darkslateblue;\\n    font-weight: bold;\\n}\\n.ace_optionsMenuCommand {\\n    color: darkcyan;\\n    font-weight: normal;\\n}\\n.ace_optionsMenuEntry input, .ace_optionsMenuEntry button {\\n    vertical-align: middle;\\n}\\n\\n.ace_optionsMenuEntry button[ace_selected_button=true] {\\n    background: #e7e7e7;\\n    box-shadow: 1px 0px 2px 0px #adadad inset;\\n    border-color: #adadad;\\n}\\n.ace_optionsMenuEntry button {\\n    background: white;\\n    border: 1px solid lightgray;\\n    margin: 0px;\\n}\\n.ace_optionsMenuEntry button:hover{\\n    background: #f0f0f0;\\n}\"})),ace.define(\"ace/ext/menu_tools/overlay_page\",[\"require\",\"exports\",\"module\",\"ace/lib/dom\",\"ace/ext/menu_tools/settings_menu.css\"],(function(e,n,o){\"use strict\";var t=e(\"../../lib/dom\"),r=e(\"./settings_menu.css\");t.importCssString(r,\"settings_menu.css\",!1),o.exports.overlayPage=function(e,n,o){var t=document.createElement(\"div\"),r=!1;function a(e){27===e.keyCode&&i()}function i(){t&&(document.removeEventListener(\"keydown\",a),t.parentNode.removeChild(t),e&&e.focus(),t=null,o&&o())}return t.style.cssText=\"margin: 0; padding: 0; position: fixed; top:0; bottom:0; left:0; right:0;z-index: 9990; \"+(e?\"background-color: rgba(0, 0, 0, 0.3);\":\"\"),t.addEventListener(\"click\",(function(e){r||i()})),document.addEventListener(\"keydown\",a),n.addEventListener(\"click\",(function(e){e.stopPropagation()})),t.appendChild(n),document.body.appendChild(t),e&&e.blur(),{close:i,setIgnoreFocusOut:function(e){r=e,e&&(t.style.pointerEvents=\"none\",n.style.pointerEvents=\"auto\")}}}})),ace.define(\"ace/ext/menu_tools/get_editor_keyboard_shortcuts\",[\"require\",\"exports\",\"module\",\"ace/lib/keys\"],(function(e,n,o){\"use strict\";var t=e(\"../../lib/keys\");o.exports.getEditorKeyboardShortcuts=function(e){t.KEY_MODS;var n=[],o={};return e.keyBinding.$handlers.forEach((function(e){var t=e.commandKeyBinding;for(var r in t){var a=r.replace(/(^|-)\\w/g,(function(e){return e.toUpperCase()})),i=t[r];Array.isArray(i)||(i=[i]),i.forEach((function(e){\"string\"!=typeof e&&(e=e.name),o[e]?o[e].key+=\"|\"+a:(o[e]={key:a,command:e},n.push(o[e]))}))}})),n}})),ace.define(\"ace/ext/keybinding_menu\",[\"require\",\"exports\",\"module\",\"ace/editor\",\"ace/ext/menu_tools/overlay_page\",\"ace/ext/menu_tools/get_editor_keyboard_shortcuts\"],(function(e,n,o){\"use strict\";var t=e(\"../editor\").Editor;o.exports.init=function(n){t.prototype.showKeyboardShortcuts=function(){!function(n){if(!document.getElementById(\"kbshortcutmenu\")){var o=e(\"./menu_tools/overlay_page\").overlayPage,t=(0,e(\"./menu_tools/get_editor_keyboard_shortcuts\").getEditorKeyboardShortcuts)(n),r=document.createElement(\"div\"),a=t.reduce((function(e,n){return e+'<div class=\"ace_optionsMenuEntry\"><span class=\"ace_optionsMenuCommand\">'+n.command+'</span> : <span class=\"ace_optionsMenuKey\">'+n.key+\"</span></div>\"}),\"\");r.id=\"kbshortcutmenu\",r.innerHTML=\"<h1>Keyboard Shortcuts</h1>\"+a+\"</div>\",o(n,r)}}(this)},n.commands.addCommands([{name:\"showKeyboardShortcuts\",bindKey:{win:\"Ctrl-Alt-h\",mac:\"Command-Alt-h\"},exec:function(e,n){e.showKeyboardShortcuts()}}])}})),ace.require([\"ace/ext/keybinding_menu\"],(function(e){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=e)}));","name":"47dd20a18ff371536ed4a7bd1240ee2b.js","input":"ace.define(\"ace/ext/menu_tools/settings_menu.css\", [\"require\", \"exports\", \"module\"], function (require, exports, module) {\n  module.exports = \"#ace_settingsmenu, #kbshortcutmenu {\\n    background-color: #F7F7F7;\\n    color: black;\\n    box-shadow: -5px 4px 5px rgba(126, 126, 126, 0.55);\\n    padding: 1em 0.5em 2em 1em;\\n    overflow: auto;\\n    position: absolute;\\n    margin: 0;\\n    bottom: 0;\\n    right: 0;\\n    top: 0;\\n    z-index: 9991;\\n    cursor: default;\\n}\\n\\n.ace_dark #ace_settingsmenu, .ace_dark #kbshortcutmenu {\\n    box-shadow: -20px 10px 25px rgba(126, 126, 126, 0.25);\\n    background-color: rgba(255, 255, 255, 0.6);\\n    color: black;\\n}\\n\\n.ace_optionsMenuEntry:hover {\\n    background-color: rgba(100, 100, 100, 0.1);\\n    transition: all 0.3s\\n}\\n\\n.ace_closeButton {\\n    background: rgba(245, 146, 146, 0.5);\\n    border: 1px solid #F48A8A;\\n    border-radius: 50%;\\n    padding: 7px;\\n    position: absolute;\\n    right: -8px;\\n    top: -8px;\\n    z-index: 100000;\\n}\\n.ace_closeButton{\\n    background: rgba(245, 146, 146, 0.9);\\n}\\n.ace_optionsMenuKey {\\n    color: darkslateblue;\\n    font-weight: bold;\\n}\\n.ace_optionsMenuCommand {\\n    color: darkcyan;\\n    font-weight: normal;\\n}\\n.ace_optionsMenuEntry input, .ace_optionsMenuEntry button {\\n    vertical-align: middle;\\n}\\n\\n.ace_optionsMenuEntry button[ace_selected_button=true] {\\n    background: #e7e7e7;\\n    box-shadow: 1px 0px 2px 0px #adadad inset;\\n    border-color: #adadad;\\n}\\n.ace_optionsMenuEntry button {\\n    background: white;\\n    border: 1px solid lightgray;\\n    margin: 0px;\\n}\\n.ace_optionsMenuEntry button:hover{\\n    background: #f0f0f0;\\n}\";\n});\nace.define(\"ace/ext/menu_tools/overlay_page\", [\"require\", \"exports\", \"module\", \"ace/lib/dom\", \"ace/ext/menu_tools/settings_menu.css\"], function (require, exports, module) {\n  /*jslint indent: 4, maxerr: 50, white: true, browser: true, vars: true*/\n  'use strict';\n\n  var dom = require(\"../../lib/dom\");\n  var cssText = require(\"./settings_menu.css\");\n  dom.importCssString(cssText, \"settings_menu.css\", false);\n  module.exports.overlayPage = function overlayPage(editor, contentElement, callback) {\n    var closer = document.createElement('div');\n    var ignoreFocusOut = false;\n    function documentEscListener(e) {\n      if (e.keyCode === 27) {\n        close();\n      }\n    }\n    function close() {\n      if (!closer) return;\n      document.removeEventListener('keydown', documentEscListener);\n      closer.parentNode.removeChild(closer);\n      if (editor) {\n        editor.focus();\n      }\n      closer = null;\n      callback && callback();\n    }\n    function setIgnoreFocusOut(ignore) {\n      ignoreFocusOut = ignore;\n      if (ignore) {\n        closer.style.pointerEvents = \"none\";\n        contentElement.style.pointerEvents = \"auto\";\n      }\n    }\n    closer.style.cssText = 'margin: 0; padding: 0; ' + 'position: fixed; top:0; bottom:0; left:0; right:0;' + 'z-index: 9990; ' + (editor ? 'background-color: rgba(0, 0, 0, 0.3);' : '');\n    closer.addEventListener('click', function (e) {\n      if (!ignoreFocusOut) {\n        close();\n      }\n    });\n    document.addEventListener('keydown', documentEscListener);\n    contentElement.addEventListener('click', function (e) {\n      e.stopPropagation();\n    });\n    closer.appendChild(contentElement);\n    document.body.appendChild(closer);\n    if (editor) {\n      editor.blur();\n    }\n    return {\n      close: close,\n      setIgnoreFocusOut: setIgnoreFocusOut\n    };\n  };\n});\nace.define(\"ace/ext/menu_tools/get_editor_keyboard_shortcuts\", [\"require\", \"exports\", \"module\", \"ace/lib/keys\"], function (require, exports, module) {\n  /*jslint indent: 4, maxerr: 50, white: true, browser: true, vars: true*/\n  \"use strict\";\n\n  var keys = require(\"../../lib/keys\");\n  module.exports.getEditorKeyboardShortcuts = function (editor) {\n    var KEY_MODS = keys.KEY_MODS;\n    var keybindings = [];\n    var commandMap = {};\n    editor.keyBinding.$handlers.forEach(function (handler) {\n      var ckb = handler[\"commandKeyBinding\"];\n      for (var i in ckb) {\n        var key = i.replace(/(^|-)\\w/g, function (x) {\n          return x.toUpperCase();\n        });\n        var commands = ckb[i];\n        if (!Array.isArray(commands)) commands = [commands];\n        commands.forEach(function (command) {\n          if (typeof command != \"string\") command = command.name;\n          if (commandMap[command]) {\n            commandMap[command].key += \"|\" + key;\n          } else {\n            commandMap[command] = {\n              key: key,\n              command: command\n            };\n            keybindings.push(commandMap[command]);\n          }\n        });\n      }\n    });\n    return keybindings;\n  };\n});\nace.define(\"ace/ext/keybinding_menu\", [\"require\", \"exports\", \"module\", \"ace/editor\", \"ace/ext/menu_tools/overlay_page\", \"ace/ext/menu_tools/get_editor_keyboard_shortcuts\"], function (require, exports, module) {\n  /*jslint indent: 4, maxerr: 50, white: true, browser: true, vars: true*/\n  \"use strict\";\n\n  var Editor = require(\"../editor\").Editor;\n  function showKeyboardShortcuts(editor) {\n    if (!document.getElementById('kbshortcutmenu')) {\n      var overlayPage = require('./menu_tools/overlay_page').overlayPage;\n      var getEditorKeyboardShortcuts = require('./menu_tools/get_editor_keyboard_shortcuts').getEditorKeyboardShortcuts;\n      var kb = getEditorKeyboardShortcuts(editor);\n      var el = document.createElement('div');\n      var commands = kb.reduce(function (previous, current) {\n        return previous + '<div class=\"ace_optionsMenuEntry\"><span class=\"ace_optionsMenuCommand\">' + current.command + '</span> : ' + '<span class=\"ace_optionsMenuKey\">' + current.key + '</span></div>';\n      }, '');\n      el.id = 'kbshortcutmenu';\n      el.innerHTML = '<h1>Keyboard Shortcuts</h1>' + commands + '</div>';\n      overlayPage(editor, el);\n    }\n  }\n  module.exports.init = function (editor) {\n    Editor.prototype.showKeyboardShortcuts = function () {\n      showKeyboardShortcuts(this);\n    };\n    editor.commands.addCommands([{\n      name: \"showKeyboardShortcuts\",\n      bindKey: {\n        win: \"Ctrl-Alt-h\",\n        mac: \"Command-Alt-h\"\n      },\n      exec: function (editor, line) {\n        editor.showKeyboardShortcuts();\n      }\n    }]);\n  };\n});\n(function () {\n  ace.require([\"ace/ext/keybinding_menu\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}