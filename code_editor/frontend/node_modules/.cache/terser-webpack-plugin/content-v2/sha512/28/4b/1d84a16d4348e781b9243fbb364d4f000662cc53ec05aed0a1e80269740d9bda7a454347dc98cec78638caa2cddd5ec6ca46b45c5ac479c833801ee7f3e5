{"code":"!function(e){if((\"undefined\"==typeof e.window||!e.document)&&(!e.require||!e.define)){e.console||(e.console=function(){var e=Array.prototype.slice.call(arguments,0);postMessage({type:\"log\",data:e})},e.console.error=e.console.warn=e.console.log=e.console.trace=e.console),e.window=e,e.ace=e,e.onerror=function(e,t,r,n,i){postMessage({type:\"error\",data:{message:e,data:i&&i.data,file:t,line:r,col:n,stack:i&&i.stack}})},e.normalizeModule=function(t,r){if(-1!==r.indexOf(\"!\")){var n=r.split(\"!\");return e.normalizeModule(t,n[0])+\"!\"+e.normalizeModule(t,n[1])}if(\".\"==r.charAt(0)){var i=t.split(\"/\").slice(0,-1).join(\"/\");for(r=(i?i+\"/\":\"\")+r;-1!==r.indexOf(\".\")&&o!=r;){var o=r;r=r.replace(/^\\.\\//,\"\").replace(/\\/\\.\\//,\"/\").replace(/[^\\/]+\\/\\.\\.\\//,\"\")}}return r},e.require=function(t,r){if(r||(r=t,t=null),!r.charAt)throw new Error(\"worker.js require() accepts only (parentId, id) as arguments\");r=e.normalizeModule(t,r);var n=e.require.modules[r];if(n)return n.initialized||(n.initialized=!0,n.exports=n.factory().exports),n.exports;if(!e.require.tlns)return console.log(\"unable to load \"+r);var i=function(e,t){var r=e,n=\"\";for(;r;){var i=t[r];if(\"string\"==typeof i)return i+n;if(i)return i.location.replace(/\\/*$/,\"/\")+(n||i.main||i.name);if(!1===i)return\"\";var o=r.lastIndexOf(\"/\");if(-1===o)break;n=r.substr(o)+n,r=r.slice(0,o)}return e}(r,e.require.tlns);return\".js\"!=i.slice(-3)&&(i+=\".js\"),e.require.id=r,e.require.modules[r]={},importScripts(i),e.require(t,r)},e.require.modules={},e.require.tlns={},e.define=function(t,r,n){if(2==arguments.length?(n=r,\"string\"!=typeof t&&(r=t,t=e.require.id)):1==arguments.length&&(n=t,r=[],t=e.require.id),\"function\"==typeof n){r.length||(r=[\"require\",\"exports\",\"module\"]);var i=function(r){return e.require(t,r)};e.require.modules[t]={exports:{},factory:function(){var e=this,t=n.apply(this,r.slice(0,n.length).map((function(t){switch(t){case\"require\":return i;case\"exports\":return e.exports;case\"module\":return e;default:return i(t)}})));return t&&(e.exports=t),e}}}else e.require.modules[t]={exports:n,initialized:!0}},e.define.amd={},e.require.tlns={},e.initBaseUrls=function(e){for(var t in e)this.require.tlns[t]=e[t]},e.initSender=function(){var t=e.require(\"ace/lib/event_emitter\").EventEmitter,r=e.require(\"ace/lib/oop\"),n=function(){};return function(){r.implement(this,t),this.callback=function(e,t){postMessage({type:\"call\",id:t,data:e})},this.emit=function(e,t){postMessage({type:\"event\",name:e,data:t})}}.call(n.prototype),new n};var t=e.main=null,r=e.sender=null;e.onmessage=function(n){var i=n.data;if(i.event&&r)r._signal(i.event,i.data);else if(i.command)if(t[i.command])t[i.command].apply(t,i.args);else{if(!e[i.command])throw new Error(\"Unknown command:\"+i.command);e[i.command].apply(e,i.args)}else if(i.init){e.initBaseUrls(i.tlns),r=e.sender=e.initSender();var o=this.require(i.module)[i.classname];t=e.main=new o(r)}}}}(this),ace.define(\"ace/lib/oop\",[],(function(e,t,r){\"use strict\";t.inherits=function(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})},t.mixin=function(e,t){for(var r in t)e[r]=t[r];return e},t.implement=function(e,r){t.mixin(e,r)}})),ace.define(\"ace/lib/deep_copy\",[],(function(e,t,r){t.deepCopy=function e(t){if(\"object\"!==typeof t||!t)return t;var r;if(Array.isArray(t)){r=[];for(var n=0;n<t.length;n++)r[n]=e(t[n]);return r}if(\"[object Object]\"!==Object.prototype.toString.call(t))return t;for(var n in r={},t)r[n]=e(t[n]);return r}})),ace.define(\"ace/lib/lang\",[],(function(e,t,r){\"use strict\";t.last=function(e){return e[e.length-1]},t.stringReverse=function(e){return e.split(\"\").reverse().join(\"\")},t.stringRepeat=function(e,t){for(var r=\"\";t>0;)1&t&&(r+=e),(t>>=1)&&(e+=e);return r};var n=/^\\s\\s*/,i=/\\s\\s*$/;t.stringTrimLeft=function(e){return e.replace(n,\"\")},t.stringTrimRight=function(e){return e.replace(i,\"\")},t.copyObject=function(e){var t={};for(var r in e)t[r]=e[r];return t},t.copyArray=function(e){for(var t=[],r=0,n=e.length;r<n;r++)e[r]&&\"object\"==typeof e[r]?t[r]=this.copyObject(e[r]):t[r]=e[r];return t},t.deepCopy=e(\"./deep_copy\").deepCopy,t.arrayToMap=function(e){for(var t={},r=0;r<e.length;r++)t[e[r]]=1;return t},t.createMap=function(e){var t=Object.create(null);for(var r in e)t[r]=e[r];return t},t.arrayRemove=function(e,t){for(var r=0;r<=e.length;r++)t===e[r]&&e.splice(r,1)},t.escapeRegExp=function(e){return e.replace(/([.*+?^${}()|[\\]\\/\\\\])/g,\"\\\\$1\")},t.escapeHTML=function(e){return(\"\"+e).replace(/&/g,\"&#38;\").replace(/\"/g,\"&#34;\").replace(/'/g,\"&#39;\").replace(/</g,\"&#60;\")},t.getMatchOffsets=function(e,t){var r=[];return e.replace(t,(function(e){r.push({offset:arguments[arguments.length-2],length:e.length})})),r},t.deferredCall=function(e){var t=null,r=function(){t=null,e()},n=function(e){return n.cancel(),t=setTimeout(r,e||0),n};return n.schedule=n,n.call=function(){return this.cancel(),e(),n},n.cancel=function(){return clearTimeout(t),t=null,n},n.isPending=function(){return t},n},t.delayedCall=function(e,t){var r=null,n=function(){r=null,e()},i=function(e){null==r&&(r=setTimeout(n,e||t))};return i.delay=function(e){r&&clearTimeout(r),r=setTimeout(n,e||t)},i.schedule=i,i.call=function(){this.cancel(),e()},i.cancel=function(){r&&clearTimeout(r),r=null},i.isPending=function(){return r},i},t.supportsLookbehind=function(){try{new RegExp(\"(?<=.)\")}catch(e){return!1}return!0},t.skipEmptyMatch=function(e,t,r){return r&&e.codePointAt(t)>65535?2:1}})),ace.define(\"ace/apply_delta\",[],(function(e,t,r){\"use strict\";t.applyDelta=function(e,t,r){var n=t.start.row,i=t.start.column,o=e[n]||\"\";switch(t.action){case\"insert\":if(1===t.lines.length)e[n]=o.substring(0,i)+t.lines[0]+o.substring(i);else{var a=[n,1].concat(t.lines);e.splice.apply(e,a),e[n]=o.substring(0,i)+e[n],e[n+t.lines.length-1]+=o.substring(i)}break;case\"remove\":var s=t.end.column,l=t.end.row;n===l?e[n]=o.substring(0,i)+o.substring(s):e.splice(n,l-n+1,o.substring(0,i)+e[l].substring(s))}}})),ace.define(\"ace/lib/event_emitter\",[],(function(e,t,r){\"use strict\";var n={},i=function(){this.propagationStopped=!0},o=function(){this.defaultPrevented=!0};n._emit=n._dispatchEvent=function(e,t){this._eventRegistry||(this._eventRegistry={}),this._defaultHandlers||(this._defaultHandlers={});var r=this._eventRegistry[e]||[],n=this._defaultHandlers[e];if(r.length||n){\"object\"==typeof t&&t||(t={}),t.type||(t.type=e),t.stopPropagation||(t.stopPropagation=i),t.preventDefault||(t.preventDefault=o),r=r.slice();for(var a=0;a<r.length&&(r[a](t,this),!t.propagationStopped);a++);return n&&!t.defaultPrevented?n(t,this):void 0}},n._signal=function(e,t){var r=(this._eventRegistry||{})[e];if(r){r=r.slice();for(var n=0;n<r.length;n++)r[n](t,this)}},n.once=function(e,t){var r=this;if(this.on(e,(function n(){r.off(e,n),t.apply(null,arguments)})),!t)return new Promise((function(e){t=e}))},n.setDefaultHandler=function(e,t){var r=this._defaultHandlers;if(r||(r=this._defaultHandlers={_disabled_:{}}),r[e]){var n=r[e],i=r._disabled_[e];i||(r._disabled_[e]=i=[]),i.push(n);var o=i.indexOf(t);-1!=o&&i.splice(o,1)}r[e]=t},n.removeDefaultHandler=function(e,t){var r=this._defaultHandlers;if(r){var n=r._disabled_[e];if(r[e]==t)n&&this.setDefaultHandler(e,n.pop());else if(n){var i=n.indexOf(t);-1!=i&&n.splice(i,1)}}},n.on=n.addEventListener=function(e,t,r){this._eventRegistry=this._eventRegistry||{};var n=this._eventRegistry[e];return n||(n=this._eventRegistry[e]=[]),-1==n.indexOf(t)&&n[r?\"unshift\":\"push\"](t),t},n.off=n.removeListener=n.removeEventListener=function(e,t){this._eventRegistry=this._eventRegistry||{};var r=this._eventRegistry[e];if(r){var n=r.indexOf(t);-1!==n&&r.splice(n,1)}},n.removeAllListeners=function(e){e||(this._eventRegistry=this._defaultHandlers=void 0),this._eventRegistry&&(this._eventRegistry[e]=void 0),this._defaultHandlers&&(this._defaultHandlers[e]=void 0)},t.EventEmitter=n})),ace.define(\"ace/range\",[],(function(e,t,r){\"use strict\";var n=function(){function e(e,t,r,n){this.start={row:e,column:t},this.end={row:r,column:n}}return e.prototype.isEqual=function(e){return this.start.row===e.start.row&&this.end.row===e.end.row&&this.start.column===e.start.column&&this.end.column===e.end.column},e.prototype.toString=function(){return\"Range: [\"+this.start.row+\"/\"+this.start.column+\"] -> [\"+this.end.row+\"/\"+this.end.column+\"]\"},e.prototype.contains=function(e,t){return 0==this.compare(e,t)},e.prototype.compareRange=function(e){var t,r=e.end,n=e.start;return 1==(t=this.compare(r.row,r.column))?1==(t=this.compare(n.row,n.column))?2:0==t?1:0:-1==t?-2:-1==(t=this.compare(n.row,n.column))?-1:1==t?42:0},e.prototype.comparePoint=function(e){return this.compare(e.row,e.column)},e.prototype.containsRange=function(e){return 0==this.comparePoint(e.start)&&0==this.comparePoint(e.end)},e.prototype.intersects=function(e){var t=this.compareRange(e);return-1==t||0==t||1==t},e.prototype.isEnd=function(e,t){return this.end.row==e&&this.end.column==t},e.prototype.isStart=function(e,t){return this.start.row==e&&this.start.column==t},e.prototype.setStart=function(e,t){\"object\"==typeof e?(this.start.column=e.column,this.start.row=e.row):(this.start.row=e,this.start.column=t)},e.prototype.setEnd=function(e,t){\"object\"==typeof e?(this.end.column=e.column,this.end.row=e.row):(this.end.row=e,this.end.column=t)},e.prototype.inside=function(e,t){return 0==this.compare(e,t)&&(!this.isEnd(e,t)&&!this.isStart(e,t))},e.prototype.insideStart=function(e,t){return 0==this.compare(e,t)&&!this.isEnd(e,t)},e.prototype.insideEnd=function(e,t){return 0==this.compare(e,t)&&!this.isStart(e,t)},e.prototype.compare=function(e,t){return this.isMultiLine()||e!==this.start.row?e<this.start.row?-1:e>this.end.row?1:this.start.row===e?t>=this.start.column?0:-1:this.end.row===e?t<=this.end.column?0:1:0:t<this.start.column?-1:t>this.end.column?1:0},e.prototype.compareStart=function(e,t){return this.start.row==e&&this.start.column==t?-1:this.compare(e,t)},e.prototype.compareEnd=function(e,t){return this.end.row==e&&this.end.column==t?1:this.compare(e,t)},e.prototype.compareInside=function(e,t){return this.end.row==e&&this.end.column==t?1:this.start.row==e&&this.start.column==t?-1:this.compare(e,t)},e.prototype.clipRows=function(t,r){if(this.end.row>r)var n={row:r+1,column:0};else if(this.end.row<t)n={row:t,column:0};if(this.start.row>r)var i={row:r+1,column:0};else if(this.start.row<t)i={row:t,column:0};return e.fromPoints(i||this.start,n||this.end)},e.prototype.extend=function(t,r){var n=this.compare(t,r);if(0==n)return this;if(-1==n)var i={row:t,column:r};else var o={row:t,column:r};return e.fromPoints(i||this.start,o||this.end)},e.prototype.isEmpty=function(){return this.start.row===this.end.row&&this.start.column===this.end.column},e.prototype.isMultiLine=function(){return this.start.row!==this.end.row},e.prototype.clone=function(){return e.fromPoints(this.start,this.end)},e.prototype.collapseRows=function(){return 0==this.end.column?new e(this.start.row,0,Math.max(this.start.row,this.end.row-1),0):new e(this.start.row,0,this.end.row,0)},e.prototype.toScreenRange=function(t){var r=t.documentToScreenPosition(this.start),n=t.documentToScreenPosition(this.end);return new e(r.row,r.column,n.row,n.column)},e.prototype.moveBy=function(e,t){this.start.row+=e,this.start.column+=t,this.end.row+=e,this.end.column+=t},e}();n.fromPoints=function(e,t){return new n(e.row,e.column,t.row,t.column)},n.comparePoints=function(e,t){return e.row-t.row||e.column-t.column},t.Range=n})),ace.define(\"ace/anchor\",[],(function(e,t,r){\"use strict\";var n=e(\"./lib/oop\"),i=e(\"./lib/event_emitter\").EventEmitter,o=function(){function e(e,t,r){this.$onChange=this.onChange.bind(this),this.attach(e),\"number\"!=typeof t?this.setPosition(t.row,t.column):this.setPosition(t,r)}return e.prototype.getPosition=function(){return this.$clipPositionToDocument(this.row,this.column)},e.prototype.getDocument=function(){return this.document},e.prototype.onChange=function(e){if((e.start.row!=e.end.row||e.start.row==this.row)&&!(e.start.row>this.row)){var t=function(e,t,r){var n=\"insert\"==e.action,i=(n?1:-1)*(e.end.row-e.start.row),o=(n?1:-1)*(e.end.column-e.start.column),s=e.start,l=n?s:e.end;if(a(t,s,r))return{row:t.row,column:t.column};if(a(l,t,!r))return{row:t.row+i,column:t.column+(t.row==l.row?o:0)};return{row:s.row,column:s.column}}(e,{row:this.row,column:this.column},this.$insertRight);this.setPosition(t.row,t.column,!0)}},e.prototype.setPosition=function(e,t,r){var n;if(n=r?{row:e,column:t}:this.$clipPositionToDocument(e,t),this.row!=n.row||this.column!=n.column){var i={row:this.row,column:this.column};this.row=n.row,this.column=n.column,this._signal(\"change\",{old:i,value:n})}},e.prototype.detach=function(){this.document.off(\"change\",this.$onChange)},e.prototype.attach=function(e){this.document=e||this.document,this.document.on(\"change\",this.$onChange)},e.prototype.$clipPositionToDocument=function(e,t){var r={};return e>=this.document.getLength()?(r.row=Math.max(0,this.document.getLength()-1),r.column=this.document.getLine(r.row).length):e<0?(r.row=0,r.column=0):(r.row=e,r.column=Math.min(this.document.getLine(r.row).length,Math.max(0,t))),t<0&&(r.column=0),r},e}();function a(e,t,r){var n=r?e.column<=t.column:e.column<t.column;return e.row<t.row||e.row==t.row&&n}o.prototype.$insertRight=!1,n.implement(o.prototype,i),t.Anchor=o})),ace.define(\"ace/document\",[],(function(e,t,r){\"use strict\";var n=e(\"./lib/oop\"),i=e(\"./apply_delta\").applyDelta,o=e(\"./lib/event_emitter\").EventEmitter,a=e(\"./range\").Range,s=e(\"./anchor\").Anchor,l=function(){function e(e){this.$lines=[\"\"],0===e.length?this.$lines=[\"\"]:Array.isArray(e)?this.insertMergedLines({row:0,column:0},e):this.insert({row:0,column:0},e)}return e.prototype.setValue=function(e){var t=this.getLength()-1;this.remove(new a(0,0,t,this.getLine(t).length)),this.insert({row:0,column:0},e||\"\")},e.prototype.getValue=function(){return this.getAllLines().join(this.getNewLineCharacter())},e.prototype.createAnchor=function(e,t){return new s(this,e,t)},e.prototype.$detectNewLine=function(e){var t=e.match(/^.*?(\\r\\n|\\r|\\n)/m);this.$autoNewLine=t?t[1]:\"\\n\",this._signal(\"changeNewLineMode\")},e.prototype.getNewLineCharacter=function(){switch(this.$newLineMode){case\"windows\":return\"\\r\\n\";case\"unix\":return\"\\n\";default:return this.$autoNewLine||\"\\n\"}},e.prototype.setNewLineMode=function(e){this.$newLineMode!==e&&(this.$newLineMode=e,this._signal(\"changeNewLineMode\"))},e.prototype.getNewLineMode=function(){return this.$newLineMode},e.prototype.isNewLine=function(e){return\"\\r\\n\"==e||\"\\r\"==e||\"\\n\"==e},e.prototype.getLine=function(e){return this.$lines[e]||\"\"},e.prototype.getLines=function(e,t){return this.$lines.slice(e,t+1)},e.prototype.getAllLines=function(){return this.getLines(0,this.getLength())},e.prototype.getLength=function(){return this.$lines.length},e.prototype.getTextRange=function(e){return this.getLinesForRange(e).join(this.getNewLineCharacter())},e.prototype.getLinesForRange=function(e){var t;if(e.start.row===e.end.row)t=[this.getLine(e.start.row).substring(e.start.column,e.end.column)];else{(t=this.getLines(e.start.row,e.end.row))[0]=(t[0]||\"\").substring(e.start.column);var r=t.length-1;e.end.row-e.start.row==r&&(t[r]=t[r].substring(0,e.end.column))}return t},e.prototype.insertLines=function(e,t){return console.warn(\"Use of document.insertLines is deprecated. Use the insertFullLines method instead.\"),this.insertFullLines(e,t)},e.prototype.removeLines=function(e,t){return console.warn(\"Use of document.removeLines is deprecated. Use the removeFullLines method instead.\"),this.removeFullLines(e,t)},e.prototype.insertNewLine=function(e){return console.warn(\"Use of document.insertNewLine is deprecated. Use insertMergedLines(position, ['', '']) instead.\"),this.insertMergedLines(e,[\"\",\"\"])},e.prototype.insert=function(e,t){return this.getLength()<=1&&this.$detectNewLine(t),this.insertMergedLines(e,this.$split(t))},e.prototype.insertInLine=function(e,t){var r=this.clippedPos(e.row,e.column),n=this.pos(e.row,e.column+t.length);return this.applyDelta({start:r,end:n,action:\"insert\",lines:[t]},!0),this.clonePos(n)},e.prototype.clippedPos=function(e,t){var r=this.getLength();void 0===e?e=r:e<0?e=0:e>=r&&(e=r-1,t=void 0);var n=this.getLine(e);return void 0==t&&(t=n.length),{row:e,column:t=Math.min(Math.max(t,0),n.length)}},e.prototype.clonePos=function(e){return{row:e.row,column:e.column}},e.prototype.pos=function(e,t){return{row:e,column:t}},e.prototype.$clipPosition=function(e){var t=this.getLength();return e.row>=t?(e.row=Math.max(0,t-1),e.column=this.getLine(t-1).length):(e.row=Math.max(0,e.row),e.column=Math.min(Math.max(e.column,0),this.getLine(e.row).length)),e},e.prototype.insertFullLines=function(e,t){var r=0;(e=Math.min(Math.max(e,0),this.getLength()))<this.getLength()?(t=t.concat([\"\"]),r=0):(t=[\"\"].concat(t),e--,r=this.$lines[e].length),this.insertMergedLines({row:e,column:r},t)},e.prototype.insertMergedLines=function(e,t){var r=this.clippedPos(e.row,e.column),n={row:r.row+t.length-1,column:(1==t.length?r.column:0)+t[t.length-1].length};return this.applyDelta({start:r,end:n,action:\"insert\",lines:t}),this.clonePos(n)},e.prototype.remove=function(e){var t=this.clippedPos(e.start.row,e.start.column),r=this.clippedPos(e.end.row,e.end.column);return this.applyDelta({start:t,end:r,action:\"remove\",lines:this.getLinesForRange({start:t,end:r})}),this.clonePos(t)},e.prototype.removeInLine=function(e,t,r){var n=this.clippedPos(e,t),i=this.clippedPos(e,r);return this.applyDelta({start:n,end:i,action:\"remove\",lines:this.getLinesForRange({start:n,end:i})},!0),this.clonePos(n)},e.prototype.removeFullLines=function(e,t){e=Math.min(Math.max(0,e),this.getLength()-1);var r=(t=Math.min(Math.max(0,t),this.getLength()-1))==this.getLength()-1&&e>0,n=t<this.getLength()-1,i=r?e-1:e,o=r?this.getLine(i).length:0,s=n?t+1:t,l=n?0:this.getLine(s).length,u=new a(i,o,s,l),c=this.$lines.slice(e,t+1);return this.applyDelta({start:u.start,end:u.end,action:\"remove\",lines:this.getLinesForRange(u)}),c},e.prototype.removeNewLine=function(e){e<this.getLength()-1&&e>=0&&this.applyDelta({start:this.pos(e,this.getLine(e).length),end:this.pos(e+1,0),action:\"remove\",lines:[\"\",\"\"]})},e.prototype.replace=function(e,t){return e instanceof a||(e=a.fromPoints(e.start,e.end)),0===t.length&&e.isEmpty()?e.start:t==this.getTextRange(e)?e.end:(this.remove(e),t?this.insert(e.start,t):e.start)},e.prototype.applyDeltas=function(e){for(var t=0;t<e.length;t++)this.applyDelta(e[t])},e.prototype.revertDeltas=function(e){for(var t=e.length-1;t>=0;t--)this.revertDelta(e[t])},e.prototype.applyDelta=function(e,t){var r=\"insert\"==e.action;(r?e.lines.length<=1&&!e.lines[0]:!a.comparePoints(e.start,e.end))||(r&&e.lines.length>2e4?this.$splitAndapplyLargeDelta(e,2e4):(i(this.$lines,e,t),this._signal(\"change\",e)))},e.prototype.$safeApplyDelta=function(e){var t=this.$lines.length;(\"remove\"==e.action&&e.start.row<t&&e.end.row<t||\"insert\"==e.action&&e.start.row<=t)&&this.applyDelta(e)},e.prototype.$splitAndapplyLargeDelta=function(e,t){for(var r=e.lines,n=r.length-t+1,i=e.start.row,o=e.start.column,a=0,s=0;a<n;a=s){s+=t-1;var l=r.slice(a,s);l.push(\"\"),this.applyDelta({start:this.pos(i+a,o),end:this.pos(i+s,o=0),action:e.action,lines:l},!0)}e.lines=r.slice(a),e.start.row=i+a,e.start.column=o,this.applyDelta(e,!0)},e.prototype.revertDelta=function(e){this.$safeApplyDelta({start:this.clonePos(e.start),end:this.clonePos(e.end),action:\"insert\"==e.action?\"remove\":\"insert\",lines:e.lines.slice()})},e.prototype.indexToPosition=function(e,t){for(var r=this.$lines||this.getAllLines(),n=this.getNewLineCharacter().length,i=t||0,o=r.length;i<o;i++)if((e-=r[i].length+n)<0)return{row:i,column:e+r[i].length+n};return{row:o-1,column:e+r[o-1].length+n}},e.prototype.positionToIndex=function(e,t){for(var r=this.$lines||this.getAllLines(),n=this.getNewLineCharacter().length,i=0,o=Math.min(e.row,r.length),a=t||0;a<o;++a)i+=r[a].length+n;return i+e.column},e.prototype.$split=function(e){return e.split(/\\r\\n|\\r|\\n/)},e}();l.prototype.$autoNewLine=\"\",l.prototype.$newLineMode=\"auto\",n.implement(l.prototype,o),t.Document=l})),ace.define(\"ace/worker/mirror\",[],(function(e,t,r){\"use strict\";var n=e(\"../document\").Document,i=e(\"../lib/lang\"),o=t.Mirror=function(e){this.sender=e;var t=this.doc=new n(\"\"),r=this.deferredUpdate=i.delayedCall(this.onUpdate.bind(this)),o=this;e.on(\"change\",(function(e){var n=e.data;if(n[0].start)t.applyDeltas(n);else for(var i=0;i<n.length;i+=2){var a,s;if((\"insert\"==(a=Array.isArray(n[i+1])?{action:\"insert\",start:n[i],lines:n[i+1]}:{action:\"remove\",start:n[i],end:n[i+1]}).action?a.start:a.end).row>=t.$lines.length)throw(s=new Error(\"Invalid delta\")).data={path:o.$path,linesLength:t.$lines.length,start:a.start,end:a.end},s;t.applyDelta(a,!0)}if(o.$timeout)return r.schedule(o.$timeout);o.onUpdate()}))};(function(){this.$timeout=500,this.setTimeout=function(e){this.$timeout=e},this.setValue=function(e){this.doc.setValue(e),this.deferredUpdate.schedule(this.$timeout)},this.getValue=function(e){this.sender.callback(this.doc.getValue(),e)},this.onUpdate=function(){},this.isPending=function(){return this.deferredUpdate.isPending()}}).call(o.prototype)})),ace.define(\"ace/mode/css/csslint\",[],(function(e,t,r){var n=function(){var e=e||{},t=function(){var e;return e=function t(r,n,i){function o(s,l){if(!n[s]){if(!r[s]){var u=\"function\"==typeof e&&e;if(!l&&u)return u(s,!0);if(a)return a(s,!0);var c=new Error(\"Cannot find module '\"+s+\"'\");throw c.code=\"MODULE_NOT_FOUND\",c}var h=n[s]={exports:{}};r[s][0].call(h.exports,(function(e){return o(r[s][1][e]||e)}),h,h.exports,t,r,n,i)}return n[s].exports}for(var a=\"function\"==typeof e&&e,s=0;s<i.length;s++)o(i[s]);return o}({1:[function(e,t,r){\"use strict\";t.exports={__proto__:null,aliceblue:\"#f0f8ff\",antiquewhite:\"#faebd7\",aqua:\"#00ffff\",aquamarine:\"#7fffd4\",azure:\"#f0ffff\",beige:\"#f5f5dc\",bisque:\"#ffe4c4\",black:\"#000000\",blanchedalmond:\"#ffebcd\",blue:\"#0000ff\",blueviolet:\"#8a2be2\",brown:\"#a52a2a\",burlywood:\"#deb887\",cadetblue:\"#5f9ea0\",chartreuse:\"#7fff00\",chocolate:\"#d2691e\",coral:\"#ff7f50\",cornflowerblue:\"#6495ed\",cornsilk:\"#fff8dc\",crimson:\"#dc143c\",cyan:\"#00ffff\",darkblue:\"#00008b\",darkcyan:\"#008b8b\",darkgoldenrod:\"#b8860b\",darkgray:\"#a9a9a9\",darkgreen:\"#006400\",darkgrey:\"#a9a9a9\",darkkhaki:\"#bdb76b\",darkmagenta:\"#8b008b\",darkolivegreen:\"#556b2f\",darkorange:\"#ff8c00\",darkorchid:\"#9932cc\",darkred:\"#8b0000\",darksalmon:\"#e9967a\",darkseagreen:\"#8fbc8f\",darkslateblue:\"#483d8b\",darkslategray:\"#2f4f4f\",darkslategrey:\"#2f4f4f\",darkturquoise:\"#00ced1\",darkviolet:\"#9400d3\",deeppink:\"#ff1493\",deepskyblue:\"#00bfff\",dimgray:\"#696969\",dimgrey:\"#696969\",dodgerblue:\"#1e90ff\",firebrick:\"#b22222\",floralwhite:\"#fffaf0\",forestgreen:\"#228b22\",fuchsia:\"#ff00ff\",gainsboro:\"#dcdcdc\",ghostwhite:\"#f8f8ff\",gold:\"#ffd700\",goldenrod:\"#daa520\",gray:\"#808080\",green:\"#008000\",greenyellow:\"#adff2f\",grey:\"#808080\",honeydew:\"#f0fff0\",hotpink:\"#ff69b4\",indianred:\"#cd5c5c\",indigo:\"#4b0082\",ivory:\"#fffff0\",khaki:\"#f0e68c\",lavender:\"#e6e6fa\",lavenderblush:\"#fff0f5\",lawngreen:\"#7cfc00\",lemonchiffon:\"#fffacd\",lightblue:\"#add8e6\",lightcoral:\"#f08080\",lightcyan:\"#e0ffff\",lightgoldenrodyellow:\"#fafad2\",lightgray:\"#d3d3d3\",lightgreen:\"#90ee90\",lightgrey:\"#d3d3d3\",lightpink:\"#ffb6c1\",lightsalmon:\"#ffa07a\",lightseagreen:\"#20b2aa\",lightskyblue:\"#87cefa\",lightslategray:\"#778899\",lightslategrey:\"#778899\",lightsteelblue:\"#b0c4de\",lightyellow:\"#ffffe0\",lime:\"#00ff00\",limegreen:\"#32cd32\",linen:\"#faf0e6\",magenta:\"#ff00ff\",maroon:\"#800000\",mediumaquamarine:\"#66cdaa\",mediumblue:\"#0000cd\",mediumorchid:\"#ba55d3\",mediumpurple:\"#9370db\",mediumseagreen:\"#3cb371\",mediumslateblue:\"#7b68ee\",mediumspringgreen:\"#00fa9a\",mediumturquoise:\"#48d1cc\",mediumvioletred:\"#c71585\",midnightblue:\"#191970\",mintcream:\"#f5fffa\",mistyrose:\"#ffe4e1\",moccasin:\"#ffe4b5\",navajowhite:\"#ffdead\",navy:\"#000080\",oldlace:\"#fdf5e6\",olive:\"#808000\",olivedrab:\"#6b8e23\",orange:\"#ffa500\",orangered:\"#ff4500\",orchid:\"#da70d6\",palegoldenrod:\"#eee8aa\",palegreen:\"#98fb98\",paleturquoise:\"#afeeee\",palevioletred:\"#db7093\",papayawhip:\"#ffefd5\",peachpuff:\"#ffdab9\",peru:\"#cd853f\",pink:\"#ffc0cb\",plum:\"#dda0dd\",powderblue:\"#b0e0e6\",purple:\"#800080\",rebeccapurple:\"#663399\",red:\"#ff0000\",rosybrown:\"#bc8f8f\",royalblue:\"#4169e1\",saddlebrown:\"#8b4513\",salmon:\"#fa8072\",sandybrown:\"#f4a460\",seagreen:\"#2e8b57\",seashell:\"#fff5ee\",sienna:\"#a0522d\",silver:\"#c0c0c0\",skyblue:\"#87ceeb\",slateblue:\"#6a5acd\",slategray:\"#708090\",slategrey:\"#708090\",snow:\"#fffafa\",springgreen:\"#00ff7f\",steelblue:\"#4682b4\",tan:\"#d2b48c\",teal:\"#008080\",thistle:\"#d8bfd8\",tomato:\"#ff6347\",turquoise:\"#40e0d0\",violet:\"#ee82ee\",wheat:\"#f5deb3\",white:\"#ffffff\",whitesmoke:\"#f5f5f5\",yellow:\"#ffff00\",yellowgreen:\"#9acd32\",currentColor:\"The value of the 'color' property.\",activeborder:\"Active window border.\",activecaption:\"Active window caption.\",appworkspace:\"Background color of multiple document interface.\",background:\"Desktop background.\",buttonface:\"The face background color for 3-D elements that appear 3-D due to one layer of surrounding border.\",buttonhighlight:\"The color of the border facing the light source for 3-D elements that appear 3-D due to one layer of surrounding border.\",buttonshadow:\"The color of the border away from the light source for 3-D elements that appear 3-D due to one layer of surrounding border.\",buttontext:\"Text on push buttons.\",captiontext:\"Text in caption, size box, and scrollbar arrow box.\",graytext:\"Grayed (disabled) text. This color is set to #000 if the current display driver does not support a solid gray color.\",greytext:\"Greyed (disabled) text. This color is set to #000 if the current display driver does not support a solid grey color.\",highlight:\"Item(s) selected in a control.\",highlighttext:\"Text of item(s) selected in a control.\",inactiveborder:\"Inactive window border.\",inactivecaption:\"Inactive window caption.\",inactivecaptiontext:\"Color of text in an inactive caption.\",infobackground:\"Background color for tooltip controls.\",infotext:\"Text color for tooltip controls.\",menu:\"Menu background.\",menutext:\"Text in menus.\",scrollbar:\"Scroll bar gray area.\",threeddarkshadow:\"The color of the darker (generally outer) of the two borders away from the light source for 3-D elements that appear 3-D due to two concentric layers of surrounding border.\",threedface:\"The face background color for 3-D elements that appear 3-D due to two concentric layers of surrounding border.\",threedhighlight:\"The color of the lighter (generally outer) of the two borders facing the light source for 3-D elements that appear 3-D due to two concentric layers of surrounding border.\",threedlightshadow:\"The color of the darker (generally inner) of the two borders facing the light source for 3-D elements that appear 3-D due to two concentric layers of surrounding border.\",threedshadow:\"The color of the lighter (generally inner) of the two borders away from the light source for 3-D elements that appear 3-D due to two concentric layers of surrounding border.\",window:\"Window background.\",windowframe:\"Window frame.\",windowtext:\"Text in windows.\"}},{}],2:[function(e,t,r){\"use strict\";t.exports=o;var n=e(\"../util/SyntaxUnit\"),i=e(\"./Parser\");function o(e,t,r){n.call(this,e,t,r,i.COMBINATOR_TYPE),this.type=\"unknown\",/^\\s+$/.test(e)?this.type=\"descendant\":\">\"===e?this.type=\"child\":\"+\"===e?this.type=\"adjacent-sibling\":\"~\"===e&&(this.type=\"sibling\")}o.prototype=new n,o.prototype.constructor=o},{\"../util/SyntaxUnit\":26,\"./Parser\":6}],3:[function(e,t,r){\"use strict\";t.exports=o;var n=e(\"../util/StringReader\"),i=e(\"../util/SyntaxError\");function o(e,t){this.match=function(t){var r;return t.mark(),(r=e(t))?t.drop():t.restore(),r},this.toString=\"function\"===typeof t?t:function(){return t}}o.prec={MOD:5,SEQ:4,ANDAND:3,OROR:2,ALT:1},o.parse=function(e){var t,r,a,s,l,u,c,h,d;if(t=new n(e),r=function(e){var r=t.readMatch(e);if(null===r)throw new i(\"Expected \"+e,t.getLine(),t.getCol());return r},a=function(){for(var e=[s()];null!==t.readMatch(\" | \");)e.push(s());return 1===e.length?e[0]:o.alt.apply(o,e)},s=function(){for(var e=[l()];null!==t.readMatch(\" || \");)e.push(l());return 1===e.length?e[0]:o.oror.apply(o,e)},l=function(){for(var e=[u()];null!==t.readMatch(\" && \");)e.push(u());return 1===e.length?e[0]:o.andand.apply(o,e)},u=function(){for(var e=[c()];null!==t.readMatch(/^ (?![&|\\]])/);)e.push(c());return 1===e.length?e[0]:o.seq.apply(o,e)},c=function(){var e=h();if(null!==t.readMatch(\"?\"))return e.question();if(null!==t.readMatch(\"*\"))return e.star();if(null!==t.readMatch(\"+\"))return e.plus();if(null!==t.readMatch(\"#\"))return e.hash();if(null!==t.readMatch(/^\\{\\s*/)){var n=r(/^\\d+/);r(/^\\s*,\\s*/);var i=r(/^\\d+/);return r(/^\\s*\\}/),e.braces(Number(n),Number(i))}return e},h=function(){if(null!==t.readMatch(\"[ \")){var e=a();return r(\" ]\"),e}return o.fromType(r(/^[^ ?*+#{]+/))},d=a(),!t.eof())throw new i(\"Expected end of string\",t.getLine(),t.getCol());return d},o.cast=function(e){return e instanceof o?e:o.parse(e)},o.fromType=function(t){var r=e(\"./ValidationTypes\");return new o((function(e){return e.hasNext()&&r.isType(e,t)}),t)},o.seq=function(){var e=Array.prototype.slice.call(arguments).map(o.cast);return 1===e.length?e[0]:new o((function(t){var r,n=!0;for(r=0;n&&r<e.length;r++)n=e[r].match(t);return n}),(function(t){var r=o.prec.SEQ,n=e.map((function(e){return e.toString(r)})).join(\" \");return t>r&&(n=\"[ \"+n+\" ]\"),n}))},o.alt=function(){var e=Array.prototype.slice.call(arguments).map(o.cast);return 1===e.length?e[0]:new o((function(t){var r,n=!1;for(r=0;!n&&r<e.length;r++)n=e[r].match(t);return n}),(function(t){var r=o.prec.ALT,n=e.map((function(e){return e.toString(r)})).join(\" | \");return t>r&&(n=\"[ \"+n+\" ]\"),n}))},o.many=function(t){var r=Array.prototype.slice.call(arguments,1).reduce((function(t,r){if(r.expand){var n=e(\"./ValidationTypes\");t.push.apply(t,n.complex[r.expand].options)}else t.push(o.cast(r));return t}),[]);!0===t&&(t=r.map((function(){return!0})));var n=new o((function(e){var n=[],i=0,o=0,a=function(s){for(var l=0;l<r.length;l++)if(!n[l])if(e.mark(),r[l].match(e)){if(n[l]=!0,a(s+(!1===t||t[l]?1:0)))return e.drop(),!0;e.restore(),n[l]=!1}else e.drop();return function(e){return 0===o?(i=Math.max(e,i),e===r.length):e===i}(s)};if(a(0)||(o++,a(0)),!1===t)return i>0;for(var s=0;s<r.length;s++)if(t[s]&&!n[s])return!1;return!0}),(function(e){var n=!1===t?o.prec.OROR:o.prec.ANDAND,i=r.map((function(e,r){return!1===t||t[r]?e.toString(n):e.toString(o.prec.MOD)+\"?\"})).join(!1===t?\" || \":\" && \");return e>n&&(i=\"[ \"+i+\" ]\"),i}));return n.options=r,n},o.andand=function(){var e=Array.prototype.slice.call(arguments);return e.unshift(!0),o.many.apply(o,e)},o.oror=function(){var e=Array.prototype.slice.call(arguments);return e.unshift(!1),o.many.apply(o,e)},o.prototype={constructor:o,match:function(){throw new Error(\"unimplemented\")},toString:function(){throw new Error(\"unimplemented\")},func:function(){return this.match.bind(this)},then:function(e){return o.seq(this,e)},or:function(e){return o.alt(this,e)},andand:function(e){return o.many(!0,this,e)},oror:function(e){return o.many(!1,this,e)},star:function(){return this.braces(0,1/0,\"*\")},plus:function(){return this.braces(1,1/0,\"+\")},question:function(){return this.braces(0,1,\"?\")},hash:function(){return this.braces(1,1/0,\"#\",o.cast(\",\"))},braces:function(e,t,r,n){var i=this,a=n?n.then(this):this;return r||(r=\"{\"+e+\",\"+t+\"}\"),new o((function(r){var o;for(o=0;o<t&&(o>0&&n?a.match(r):i.match(r));o++);return o>=e}),(function(){return i.toString(o.prec.MOD)+r}))}}},{\"../util/StringReader\":24,\"../util/SyntaxError\":25,\"./ValidationTypes\":21}],4:[function(e,t,r){\"use strict\";t.exports=o;var n=e(\"../util/SyntaxUnit\"),i=e(\"./Parser\");function o(e,t){n.call(this,\"(\"+e+(null!==t?\":\"+t:\"\")+\")\",e.startLine,e.startCol,i.MEDIA_FEATURE_TYPE),this.name=e,this.value=t}o.prototype=new n,o.prototype.constructor=o},{\"../util/SyntaxUnit\":26,\"./Parser\":6}],5:[function(e,t,r){\"use strict\";t.exports=o;var n=e(\"../util/SyntaxUnit\"),i=e(\"./Parser\");function o(e,t,r,o,a){n.call(this,(e?e+\" \":\"\")+(t||\"\")+(t&&r.length>0?\" and \":\"\")+r.join(\" and \"),o,a,i.MEDIA_QUERY_TYPE),this.modifier=e,this.mediaType=t,this.features=r}o.prototype=new n,o.prototype.constructor=o},{\"../util/SyntaxUnit\":26,\"./Parser\":6}],6:[function(e,t,r){\"use strict\";t.exports=w;var n=e(\"../util/EventTarget\"),i=e(\"../util/SyntaxError\"),o=e(\"../util/SyntaxUnit\"),a=e(\"./Combinator\"),s=e(\"./MediaFeature\"),l=e(\"./MediaQuery\"),u=e(\"./PropertyName\"),c=e(\"./PropertyValue\"),h=e(\"./PropertyValuePart\"),d=e(\"./Selector\"),p=e(\"./SelectorPart\"),f=e(\"./SelectorSubPart\"),m=e(\"./TokenStream\"),g=e(\"./Tokens\"),b=e(\"./Validation\");function w(e){n.call(this),this.options=e||{},this._tokenStream=null}w.DEFAULT_TYPE=0,w.COMBINATOR_TYPE=1,w.MEDIA_FEATURE_TYPE=2,w.MEDIA_QUERY_TYPE=3,w.PROPERTY_NAME_TYPE=4,w.PROPERTY_VALUE_TYPE=5,w.PROPERTY_VALUE_PART_TYPE=6,w.SELECTOR_TYPE=7,w.SELECTOR_PART_TYPE=8,w.SELECTOR_SUB_PART_TYPE=9,w.prototype=function(){var e,t=new n,r={__proto__:null,constructor:w,DEFAULT_TYPE:0,COMBINATOR_TYPE:1,MEDIA_FEATURE_TYPE:2,MEDIA_QUERY_TYPE:3,PROPERTY_NAME_TYPE:4,PROPERTY_VALUE_TYPE:5,PROPERTY_VALUE_PART_TYPE:6,SELECTOR_TYPE:7,SELECTOR_PART_TYPE:8,SELECTOR_SUB_PART_TYPE:9,_stylesheet:function(){var e,t,r,n=this._tokenStream;for(this.fire(\"startstylesheet\"),this._charset(),this._skipCruft();n.peek()===g.IMPORT_SYM;)this._import(),this._skipCruft();for(;n.peek()===g.NAMESPACE_SYM;)this._namespace(),this._skipCruft();for(r=n.peek();r>g.EOF;){try{switch(r){case g.MEDIA_SYM:this._media(),this._skipCruft();break;case g.PAGE_SYM:this._page(),this._skipCruft();break;case g.FONT_FACE_SYM:this._font_face(),this._skipCruft();break;case g.KEYFRAMES_SYM:this._keyframes(),this._skipCruft();break;case g.VIEWPORT_SYM:this._viewport(),this._skipCruft();break;case g.DOCUMENT_SYM:this._document(),this._skipCruft();break;case g.SUPPORTS_SYM:this._supports(),this._skipCruft();break;case g.UNKNOWN_SYM:if(n.get(),this.options.strict)throw new i(\"Unknown @ rule.\",n.LT(0).startLine,n.LT(0).startCol);for(this.fire({type:\"error\",error:null,message:\"Unknown @ rule: \"+n.LT(0).value+\".\",line:n.LT(0).startLine,col:n.LT(0).startCol}),e=0;n.advance([g.LBRACE,g.RBRACE])===g.LBRACE;)e++;for(;e;)n.advance([g.RBRACE]),e--;break;case g.S:this._readWhitespace();break;default:if(!this._ruleset())switch(r){case g.CHARSET_SYM:throw t=n.LT(1),this._charset(!1),new i(\"@charset not allowed here.\",t.startLine,t.startCol);case g.IMPORT_SYM:throw t=n.LT(1),this._import(!1),new i(\"@import not allowed here.\",t.startLine,t.startCol);case g.NAMESPACE_SYM:throw t=n.LT(1),this._namespace(!1),new i(\"@namespace not allowed here.\",t.startLine,t.startCol);default:n.get(),this._unexpectedToken(n.token())}}}catch(o){if(!(o instanceof i)||this.options.strict)throw o;this.fire({type:\"error\",error:o,message:o.message,line:o.line,col:o.col})}r=n.peek()}r!==g.EOF&&this._unexpectedToken(n.token()),this.fire(\"endstylesheet\")},_charset:function(e){var t,r,n,i=this._tokenStream;i.match(g.CHARSET_SYM)&&(r=i.token().startLine,n=i.token().startCol,this._readWhitespace(),i.mustMatch(g.STRING),t=i.token().value,this._readWhitespace(),i.mustMatch(g.SEMICOLON),!1!==e&&this.fire({type:\"charset\",charset:t,line:r,col:n}))},_import:function(e){var t,r,n,i=this._tokenStream;i.mustMatch(g.IMPORT_SYM),r=i.token(),this._readWhitespace(),i.mustMatch([g.STRING,g.URI]),t=i.token().value.replace(/^(?:url\\()?[\"']?([^\"']+?)[\"']?\\)?$/,\"$1\"),this._readWhitespace(),n=this._media_query_list(),i.mustMatch(g.SEMICOLON),this._readWhitespace(),!1!==e&&this.fire({type:\"import\",uri:t,media:n,line:r.startLine,col:r.startCol})},_namespace:function(e){var t,r,n,i,o=this._tokenStream;o.mustMatch(g.NAMESPACE_SYM),t=o.token().startLine,r=o.token().startCol,this._readWhitespace(),o.match(g.IDENT)&&(n=o.token().value,this._readWhitespace()),o.mustMatch([g.STRING,g.URI]),i=o.token().value.replace(/(?:url\\()?[\"']([^\"']+)[\"']\\)?/,\"$1\"),this._readWhitespace(),o.mustMatch(g.SEMICOLON),this._readWhitespace(),!1!==e&&this.fire({type:\"namespace\",prefix:n,uri:i,line:t,col:r})},_supports:function(e){var t,r,n=this._tokenStream;if(n.match(g.SUPPORTS_SYM)){for(t=n.token().startLine,r=n.token().startCol,this._readWhitespace(),this._supports_condition(),this._readWhitespace(),n.mustMatch(g.LBRACE),this._readWhitespace(),!1!==e&&this.fire({type:\"startsupports\",line:t,col:r});this._ruleset(););n.mustMatch(g.RBRACE),this._readWhitespace(),this.fire({type:\"endsupports\",line:t,col:r})}},_supports_condition:function(){var e,t=this._tokenStream;if(t.match(g.IDENT))\"not\"===(e=t.token().value.toLowerCase())?(t.mustMatch(g.S),this._supports_condition_in_parens()):t.unget();else for(this._supports_condition_in_parens(),this._readWhitespace();t.peek()===g.IDENT;)\"and\"!==(e=t.LT(1).value.toLowerCase())&&\"or\"!==e||(t.mustMatch(g.IDENT),this._readWhitespace(),this._supports_condition_in_parens(),this._readWhitespace())},_supports_condition_in_parens:function(){var e=this._tokenStream;e.match(g.LPAREN)?(this._readWhitespace(),e.match(g.IDENT)?\"not\"===e.token().value.toLowerCase()?(this._readWhitespace(),this._supports_condition(),this._readWhitespace(),e.mustMatch(g.RPAREN)):(e.unget(),this._supports_declaration_condition(!1)):(this._supports_condition(),this._readWhitespace(),e.mustMatch(g.RPAREN))):this._supports_declaration_condition()},_supports_declaration_condition:function(e){var t=this._tokenStream;!1!==e&&t.mustMatch(g.LPAREN),this._readWhitespace(),this._declaration(),t.mustMatch(g.RPAREN)},_media:function(){var e,t,r,n=this._tokenStream;for(n.mustMatch(g.MEDIA_SYM),e=n.token().startLine,t=n.token().startCol,this._readWhitespace(),r=this._media_query_list(),n.mustMatch(g.LBRACE),this._readWhitespace(),this.fire({type:\"startmedia\",media:r,line:e,col:t});;)if(n.peek()===g.PAGE_SYM)this._page();else if(n.peek()===g.FONT_FACE_SYM)this._font_face();else if(n.peek()===g.VIEWPORT_SYM)this._viewport();else if(n.peek()===g.DOCUMENT_SYM)this._document();else if(n.peek()===g.SUPPORTS_SYM)this._supports();else if(n.peek()===g.MEDIA_SYM)this._media();else if(!this._ruleset())break;n.mustMatch(g.RBRACE),this._readWhitespace(),this.fire({type:\"endmedia\",media:r,line:e,col:t})},_media_query_list:function(){var e=this._tokenStream,t=[];for(this._readWhitespace(),e.peek()!==g.IDENT&&e.peek()!==g.LPAREN||t.push(this._media_query());e.match(g.COMMA);)this._readWhitespace(),t.push(this._media_query());return t},_media_query:function(){var e=this._tokenStream,t=null,r=null,n=null,i=[];if(e.match(g.IDENT)&&(\"only\"!==(r=e.token().value.toLowerCase())&&\"not\"!==r?(e.unget(),r=null):n=e.token()),this._readWhitespace(),e.peek()===g.IDENT?(t=this._media_type(),null===n&&(n=e.token())):e.peek()===g.LPAREN&&(null===n&&(n=e.LT(1)),i.push(this._media_expression())),null===t&&0===i.length)return null;for(this._readWhitespace();e.match(g.IDENT);)\"and\"!==e.token().value.toLowerCase()&&this._unexpectedToken(e.token()),this._readWhitespace(),i.push(this._media_expression());return new l(r,t,i,n.startLine,n.startCol)},_media_type:function(){return this._media_feature()},_media_expression:function(){var e,t,r=this._tokenStream,n=null;return r.mustMatch(g.LPAREN),this._readWhitespace(),e=this._media_feature(),this._readWhitespace(),r.match(g.COLON)&&(this._readWhitespace(),t=r.LT(1),n=this._expression()),r.mustMatch(g.RPAREN),this._readWhitespace(),new s(e,n?new o(n,t.startLine,t.startCol):null)},_media_feature:function(){var e=this._tokenStream;return this._readWhitespace(),e.mustMatch(g.IDENT),o.fromToken(e.token())},_page:function(){var e,t,r=this._tokenStream,n=null,i=null;r.mustMatch(g.PAGE_SYM),e=r.token().startLine,t=r.token().startCol,this._readWhitespace(),r.match(g.IDENT)&&\"auto\"===(n=r.token().value).toLowerCase()&&this._unexpectedToken(r.token()),r.peek()===g.COLON&&(i=this._pseudo_page()),this._readWhitespace(),this.fire({type:\"startpage\",id:n,pseudo:i,line:e,col:t}),this._readDeclarations(!0,!0),this.fire({type:\"endpage\",id:n,pseudo:i,line:e,col:t})},_margin:function(){var e,t,r=this._tokenStream,n=this._margin_sym();return!!n&&(e=r.token().startLine,t=r.token().startCol,this.fire({type:\"startpagemargin\",margin:n,line:e,col:t}),this._readDeclarations(!0),this.fire({type:\"endpagemargin\",margin:n,line:e,col:t}),!0)},_margin_sym:function(){var e=this._tokenStream;return e.match([g.TOPLEFTCORNER_SYM,g.TOPLEFT_SYM,g.TOPCENTER_SYM,g.TOPRIGHT_SYM,g.TOPRIGHTCORNER_SYM,g.BOTTOMLEFTCORNER_SYM,g.BOTTOMLEFT_SYM,g.BOTTOMCENTER_SYM,g.BOTTOMRIGHT_SYM,g.BOTTOMRIGHTCORNER_SYM,g.LEFTTOP_SYM,g.LEFTMIDDLE_SYM,g.LEFTBOTTOM_SYM,g.RIGHTTOP_SYM,g.RIGHTMIDDLE_SYM,g.RIGHTBOTTOM_SYM])?o.fromToken(e.token()):null},_pseudo_page:function(){var e=this._tokenStream;return e.mustMatch(g.COLON),e.mustMatch(g.IDENT),e.token().value},_font_face:function(){var e,t,r=this._tokenStream;r.mustMatch(g.FONT_FACE_SYM),e=r.token().startLine,t=r.token().startCol,this._readWhitespace(),this.fire({type:\"startfontface\",line:e,col:t}),this._readDeclarations(!0),this.fire({type:\"endfontface\",line:e,col:t})},_viewport:function(){var e,t,r=this._tokenStream;r.mustMatch(g.VIEWPORT_SYM),e=r.token().startLine,t=r.token().startCol,this._readWhitespace(),this.fire({type:\"startviewport\",line:e,col:t}),this._readDeclarations(!0),this.fire({type:\"endviewport\",line:e,col:t})},_document:function(){var e,t=this._tokenStream,r=[],n=\"\";for(t.mustMatch(g.DOCUMENT_SYM),e=t.token(),/^@-([^-]+)-/.test(e.value)&&(n=RegExp.$1),this._readWhitespace(),r.push(this._document_function());t.match(g.COMMA);)this._readWhitespace(),r.push(this._document_function());t.mustMatch(g.LBRACE),this._readWhitespace(),this.fire({type:\"startdocument\",functions:r,prefix:n,line:e.startLine,col:e.startCol});for(var i=!0;i;)switch(t.peek()){case g.PAGE_SYM:this._page();break;case g.FONT_FACE_SYM:this._font_face();break;case g.VIEWPORT_SYM:this._viewport();break;case g.MEDIA_SYM:this._media();break;case g.KEYFRAMES_SYM:this._keyframes();break;case g.DOCUMENT_SYM:this._document();break;default:i=Boolean(this._ruleset())}t.mustMatch(g.RBRACE),e=t.token(),this._readWhitespace(),this.fire({type:\"enddocument\",functions:r,prefix:n,line:e.startLine,col:e.startCol})},_document_function:function(){var e,t=this._tokenStream;return t.match(g.URI)?(e=t.token().value,this._readWhitespace()):e=this._function(),e},_operator:function(e){var t=this._tokenStream,r=null;return(t.match([g.SLASH,g.COMMA])||e&&t.match([g.PLUS,g.STAR,g.MINUS]))&&(r=t.token(),this._readWhitespace()),r?h.fromToken(r):null},_combinator:function(){var e,t=this._tokenStream,r=null;return t.match([g.PLUS,g.GREATER,g.TILDE])&&(e=t.token(),r=new a(e.value,e.startLine,e.startCol),this._readWhitespace()),r},_unary_operator:function(){var e=this._tokenStream;return e.match([g.MINUS,g.PLUS])?e.token().value:null},_property:function(){var e,t,r,n=this._tokenStream,i=null,o=null,a=\"\";if(n.peek()===g.STAR&&this.options.starHack&&(n.get(),o=(e=n.token()).value,t=e.startLine,r=e.startCol),n.peek()===g.MINUS&&(n.get(),a=(e=n.token()).value,t=e.startLine,r=e.startCol),n.match(g.IDENT))\"_\"===(a+=(e=n.token()).value).charAt(0)&&this.options.underscoreHack&&(o=\"_\",a=a.substring(1)),i=new u(a,o,t||e.startLine,r||e.startCol),this._readWhitespace();else{var s=n.peek();s!==g.EOF&&s!==g.RBRACE&&this._unexpectedToken(n.LT(1))}return i},_ruleset:function(){var e,t=this._tokenStream;try{e=this._selectors_group()}catch(r){if(!(r instanceof i)||this.options.strict)throw r;if(this.fire({type:\"error\",error:r,message:r.message,line:r.line,col:r.col}),t.advance([g.RBRACE])!==g.RBRACE)throw r;return!0}return e&&(this.fire({type:\"startrule\",selectors:e,line:e[0].line,col:e[0].col}),this._readDeclarations(!0),this.fire({type:\"endrule\",selectors:e,line:e[0].line,col:e[0].col})),e},_selectors_group:function(){var e,t=this._tokenStream,r=[];if(null!==(e=this._selector()))for(r.push(e);t.match(g.COMMA);)this._readWhitespace(),null!==(e=this._selector())?r.push(e):this._unexpectedToken(t.LT(1));return r.length?r:null},_selector:function(){var e=this._tokenStream,t=[],r=null,n=null,i=null;if(null===(r=this._simple_selector_sequence()))return null;for(t.push(r);;)if(null!==(n=this._combinator()))t.push(n),null===(r=this._simple_selector_sequence())?this._unexpectedToken(e.LT(1)):t.push(r);else{if(!this._readWhitespace())break;i=new a(e.token().value,e.token().startLine,e.token().startCol),n=this._combinator(),null===(r=this._simple_selector_sequence())?null!==n&&this._unexpectedToken(e.LT(1)):(null!==n?t.push(n):t.push(i),t.push(r))}return new d(t,t[0].line,t[0].col)},_simple_selector_sequence:function(){var e,t,r=this._tokenStream,n=null,i=[],o=\"\",a=[function(){return r.match(g.HASH)?new f(r.token().value,\"id\",r.token().startLine,r.token().startCol):null},this._class,this._attrib,this._pseudo,this._negation],s=0,l=a.length,u=null;for(e=r.LT(1).startLine,t=r.LT(1).startCol,(n=this._type_selector())||(n=this._universal()),null!==n&&(o+=n);r.peek()!==g.S;){for(;s<l&&null===u;)u=a[s++].call(this);if(null===u){if(\"\"===o)return null;break}s=0,i.push(u),o+=u.toString(),u=null}return\"\"!==o?new p(n,i,o,e,t):null},_type_selector:function(){var e=this._tokenStream,t=this._namespace_prefix(),r=this._element_name();return r?(t&&(r.text=t+r.text,r.col-=t.length),r):(t&&(e.unget(),t.length>1&&e.unget()),null)},_class:function(){var e,t=this._tokenStream;return t.match(g.DOT)?(t.mustMatch(g.IDENT),e=t.token(),new f(\".\"+e.value,\"class\",e.startLine,e.startCol-1)):null},_element_name:function(){var e,t=this._tokenStream;return t.match(g.IDENT)?(e=t.token(),new f(e.value,\"elementName\",e.startLine,e.startCol)):null},_namespace_prefix:function(){var e=this._tokenStream,t=\"\";return e.LA(1)!==g.PIPE&&e.LA(2)!==g.PIPE||(e.match([g.IDENT,g.STAR])&&(t+=e.token().value),e.mustMatch(g.PIPE),t+=\"|\"),t.length?t:null},_universal:function(){var e,t=this._tokenStream,r=\"\";return(e=this._namespace_prefix())&&(r+=e),t.match(g.STAR)&&(r+=\"*\"),r.length?r:null},_attrib:function(){var e,t,r=this._tokenStream,n=null;return r.match(g.LBRACKET)?(n=(t=r.token()).value,n+=this._readWhitespace(),(e=this._namespace_prefix())&&(n+=e),r.mustMatch(g.IDENT),n+=r.token().value,n+=this._readWhitespace(),r.match([g.PREFIXMATCH,g.SUFFIXMATCH,g.SUBSTRINGMATCH,g.EQUALS,g.INCLUDES,g.DASHMATCH])&&(n+=r.token().value,n+=this._readWhitespace(),r.mustMatch([g.IDENT,g.STRING]),n+=r.token().value,n+=this._readWhitespace()),r.mustMatch(g.RBRACKET),new f(n+\"]\",\"attribute\",t.startLine,t.startCol)):null},_pseudo:function(){var e,t,r=this._tokenStream,n=null,o=\":\";if(r.match(g.COLON)){if(r.match(g.COLON)&&(o+=\":\"),r.match(g.IDENT)?(n=r.token().value,e=r.token().startLine,t=r.token().startCol-o.length):r.peek()===g.FUNCTION&&(e=r.LT(1).startLine,t=r.LT(1).startCol-o.length,n=this._functional_pseudo()),!n){var a=r.LT(1).startLine,s=r.LT(0).startCol;throw new i(\"Expected a `FUNCTION` or `IDENT` after colon at line \"+a+\", col \"+s+\".\",a,s)}n=new f(o+n,\"pseudo\",e,t)}return n},_functional_pseudo:function(){var e=this._tokenStream,t=null;return e.match(g.FUNCTION)&&(t=e.token().value,t+=this._readWhitespace(),t+=this._expression(),e.mustMatch(g.RPAREN),t+=\")\"),t},_expression:function(){for(var e=this._tokenStream,t=\"\";e.match([g.PLUS,g.MINUS,g.DIMENSION,g.NUMBER,g.STRING,g.IDENT,g.LENGTH,g.FREQ,g.ANGLE,g.TIME,g.RESOLUTION,g.SLASH]);)t+=e.token().value,t+=this._readWhitespace();return t.length?t:null},_negation:function(){var e,t,r,n=this._tokenStream,i=\"\",o=null;return n.match(g.NOT)&&(i=n.token().value,e=n.token().startLine,t=n.token().startCol,i+=this._readWhitespace(),i+=r=this._negation_arg(),i+=this._readWhitespace(),n.match(g.RPAREN),i+=n.token().value,(o=new f(i,\"not\",e,t)).args.push(r)),o},_negation_arg:function(){var e,t,r=this._tokenStream,n=[this._type_selector,this._universal,function(){return r.match(g.HASH)?new f(r.token().value,\"id\",r.token().startLine,r.token().startCol):null},this._class,this._attrib,this._pseudo],i=null,o=0,a=n.length;for(e=r.LT(1).startLine,t=r.LT(1).startCol;o<a&&null===i;)i=n[o].call(this),o++;return null===i&&this._unexpectedToken(r.LT(1)),\"elementName\"===i.type?new p(i,[],i.toString(),e,t):new p(null,[i],i.toString(),e,t)},_declaration:function(){var e=this._tokenStream,t=null,r=null,n=null,i=null,o=\"\";if(null!==(t=this._property())){e.mustMatch(g.COLON),this._readWhitespace(),(r=this._expr())&&0!==r.length||this._unexpectedToken(e.LT(1)),n=this._prio(),o=t.toString(),(this.options.starHack&&\"*\"===t.hack||this.options.underscoreHack&&\"_\"===t.hack)&&(o=t.text);try{this._validateProperty(o,r)}catch(a){i=a}return this.fire({type:\"property\",property:t,value:r,important:n,line:t.line,col:t.col,invalid:i}),!0}return!1},_prio:function(){var e=this._tokenStream.match(g.IMPORTANT_SYM);return this._readWhitespace(),e},_expr:function(e){var t=[],r=null,n=null;if(null!==(r=this._term(e)))for(t.push(r);;){if((n=this._operator(e))&&t.push(n),null===(r=this._term(e)))break;t.push(r)}return t.length>0?new c(t,t[0].line,t[0].col):null},_term:function(e){var t,r,n,i,o=this._tokenStream,a=null,s=null,l=null;return null!==(t=this._unary_operator())&&(n=o.token().startLine,i=o.token().startCol),o.peek()===g.IE_FUNCTION&&this.options.ieFilters?(a=this._ie_function(),null===t&&(n=o.token().startLine,i=o.token().startCol)):e&&o.match([g.LPAREN,g.LBRACE,g.LBRACKET])?(s=(r=o.token()).endChar,a=r.value+this._expr(e).text,null===t&&(n=o.token().startLine,i=o.token().startCol),o.mustMatch(g.type(s)),a+=s,this._readWhitespace()):o.match([g.NUMBER,g.PERCENTAGE,g.LENGTH,g.ANGLE,g.TIME,g.FREQ,g.STRING,g.IDENT,g.URI,g.UNICODE_RANGE])?(a=o.token().value,null===t&&(n=o.token().startLine,i=o.token().startCol,l=h.fromToken(o.token())),this._readWhitespace()):null===(r=this._hexcolor())?(null===t&&(n=o.LT(1).startLine,i=o.LT(1).startCol),null===a&&(a=o.LA(3)===g.EQUALS&&this.options.ieFilters?this._ie_function():this._function())):(a=r.value,null===t&&(n=r.startLine,i=r.startCol)),null!==l?l:null!==a?new h(null!==t?t+a:a,n,i):null},_function:function(){var e,t=this._tokenStream,r=null;if(t.match(g.FUNCTION)){if(r=t.token().value,this._readWhitespace(),r+=this._expr(!0),this.options.ieFilters&&t.peek()===g.EQUALS)do{for(this._readWhitespace()&&(r+=t.token().value),t.LA(0)===g.COMMA&&(r+=t.token().value),t.match(g.IDENT),r+=t.token().value,t.match(g.EQUALS),r+=t.token().value,e=t.peek();e!==g.COMMA&&e!==g.S&&e!==g.RPAREN;)t.get(),r+=t.token().value,e=t.peek()}while(t.match([g.COMMA,g.S]));t.match(g.RPAREN),r+=\")\",this._readWhitespace()}return r},_ie_function:function(){var e,t=this._tokenStream,r=null;if(t.match([g.IE_FUNCTION,g.FUNCTION])){r=t.token().value;do{for(this._readWhitespace()&&(r+=t.token().value),t.LA(0)===g.COMMA&&(r+=t.token().value),t.match(g.IDENT),r+=t.token().value,t.match(g.EQUALS),r+=t.token().value,e=t.peek();e!==g.COMMA&&e!==g.S&&e!==g.RPAREN;)t.get(),r+=t.token().value,e=t.peek()}while(t.match([g.COMMA,g.S]));t.match(g.RPAREN),r+=\")\",this._readWhitespace()}return r},_hexcolor:function(){var e,t=this._tokenStream,r=null;if(t.match(g.HASH)){if(e=(r=t.token()).value,!/#[a-f0-9]{3,6}/i.test(e))throw new i(\"Expected a hex color but found '\"+e+\"' at line \"+r.startLine+\", col \"+r.startCol+\".\",r.startLine,r.startCol);this._readWhitespace()}return r},_keyframes:function(){var e,t,r,n=this._tokenStream,i=\"\";for(n.mustMatch(g.KEYFRAMES_SYM),e=n.token(),/^@-([^-]+)-/.test(e.value)&&(i=RegExp.$1),this._readWhitespace(),r=this._keyframe_name(),this._readWhitespace(),n.mustMatch(g.LBRACE),this.fire({type:\"startkeyframes\",name:r,prefix:i,line:e.startLine,col:e.startCol}),this._readWhitespace(),t=n.peek();t===g.IDENT||t===g.PERCENTAGE;)this._keyframe_rule(),this._readWhitespace(),t=n.peek();this.fire({type:\"endkeyframes\",name:r,prefix:i,line:e.startLine,col:e.startCol}),this._readWhitespace(),n.mustMatch(g.RBRACE),this._readWhitespace()},_keyframe_name:function(){var e=this._tokenStream;return e.mustMatch([g.IDENT,g.STRING]),o.fromToken(e.token())},_keyframe_rule:function(){var e=this._key_list();this.fire({type:\"startkeyframerule\",keys:e,line:e[0].line,col:e[0].col}),this._readDeclarations(!0),this.fire({type:\"endkeyframerule\",keys:e,line:e[0].line,col:e[0].col})},_key_list:function(){var e=this._tokenStream,t=[];for(t.push(this._key()),this._readWhitespace();e.match(g.COMMA);)this._readWhitespace(),t.push(this._key()),this._readWhitespace();return t},_key:function(){var e,t=this._tokenStream;if(t.match(g.PERCENTAGE))return o.fromToken(t.token());if(t.match(g.IDENT)){if(e=t.token(),/from|to/i.test(e.value))return o.fromToken(e);t.unget()}this._unexpectedToken(t.LT(1))},_skipCruft:function(){for(;this._tokenStream.match([g.S,g.CDO,g.CDC]););},_readDeclarations:function(e,t){var r,n=this._tokenStream;this._readWhitespace(),e&&n.mustMatch(g.LBRACE),this._readWhitespace();try{for(;;){if(n.match(g.SEMICOLON)||t&&this._margin());else{if(!this._declaration())break;if(!n.match(g.SEMICOLON))break}this._readWhitespace()}n.mustMatch(g.RBRACE),this._readWhitespace()}catch(o){if(!(o instanceof i)||this.options.strict)throw o;if(this.fire({type:\"error\",error:o,message:o.message,line:o.line,col:o.col}),(r=n.advance([g.SEMICOLON,g.RBRACE]))===g.SEMICOLON)this._readDeclarations(!1,t);else if(r!==g.EOF&&r!==g.RBRACE)throw o}},_readWhitespace:function(){for(var e=this._tokenStream,t=\"\";e.match(g.S);)t+=e.token().value;return t},_unexpectedToken:function(e){throw new i(\"Unexpected token '\"+e.value+\"' at line \"+e.startLine+\", col \"+e.startCol+\".\",e.startLine,e.startCol)},_verifyEnd:function(){this._tokenStream.LA(1)!==g.EOF&&this._unexpectedToken(this._tokenStream.LT(1))},_validateProperty:function(e,t){b.validate(e,t)},parse:function(e){this._tokenStream=new m(e,g),this._stylesheet()},parseStyleSheet:function(e){return this.parse(e)},parseMediaQuery:function(e){this._tokenStream=new m(e,g);var t=this._media_query();return this._verifyEnd(),t},parsePropertyValue:function(e){this._tokenStream=new m(e,g),this._readWhitespace();var t=this._expr();return this._readWhitespace(),this._verifyEnd(),t},parseRule:function(e){this._tokenStream=new m(e,g),this._readWhitespace();var t=this._ruleset();return this._readWhitespace(),this._verifyEnd(),t},parseSelector:function(e){this._tokenStream=new m(e,g),this._readWhitespace();var t=this._selector();return this._readWhitespace(),this._verifyEnd(),t},parseStyleAttribute:function(e){e+=\"}\",this._tokenStream=new m(e,g),this._readDeclarations()}};for(e in r)Object.prototype.hasOwnProperty.call(r,e)&&(t[e]=r[e]);return t}()},{\"../util/EventTarget\":23,\"../util/SyntaxError\":25,\"../util/SyntaxUnit\":26,\"./Combinator\":2,\"./MediaFeature\":4,\"./MediaQuery\":5,\"./PropertyName\":8,\"./PropertyValue\":9,\"./PropertyValuePart\":11,\"./Selector\":13,\"./SelectorPart\":14,\"./SelectorSubPart\":15,\"./TokenStream\":17,\"./Tokens\":18,\"./Validation\":19}],7:[function(e,t,r){\"use strict\";t.exports={__proto__:null,\"align-items\":\"flex-start | flex-end | center | baseline | stretch\",\"align-content\":\"flex-start | flex-end | center | space-between | space-around | stretch\",\"align-self\":\"auto | flex-start | flex-end | center | baseline | stretch\",all:\"initial | inherit | unset\",\"-webkit-align-items\":\"flex-start | flex-end | center | baseline | stretch\",\"-webkit-align-content\":\"flex-start | flex-end | center | space-between | space-around | stretch\",\"-webkit-align-self\":\"auto | flex-start | flex-end | center | baseline | stretch\",\"alignment-adjust\":\"auto | baseline | before-edge | text-before-edge | middle | central | after-edge | text-after-edge | ideographic | alphabetic | hanging | mathematical | <percentage> | <length>\",\"alignment-baseline\":\"auto | baseline | use-script | before-edge | text-before-edge | after-edge | text-after-edge | central | middle | ideographic | alphabetic | hanging | mathematical\",animation:1,\"animation-delay\":\"<time>#\",\"animation-direction\":\"<single-animation-direction>#\",\"animation-duration\":\"<time>#\",\"animation-fill-mode\":\"[ none | forwards | backwards | both ]#\",\"animation-iteration-count\":\"[ <number> | infinite ]#\",\"animation-name\":\"[ none | <single-animation-name> ]#\",\"animation-play-state\":\"[ running | paused ]#\",\"animation-timing-function\":1,\"-moz-animation-delay\":\"<time>#\",\"-moz-animation-direction\":\"[ normal | alternate ]#\",\"-moz-animation-duration\":\"<time>#\",\"-moz-animation-iteration-count\":\"[ <number> | infinite ]#\",\"-moz-animation-name\":\"[ none | <single-animation-name> ]#\",\"-moz-animation-play-state\":\"[ running | paused ]#\",\"-ms-animation-delay\":\"<time>#\",\"-ms-animation-direction\":\"[ normal | alternate ]#\",\"-ms-animation-duration\":\"<time>#\",\"-ms-animation-iteration-count\":\"[ <number> | infinite ]#\",\"-ms-animation-name\":\"[ none | <single-animation-name> ]#\",\"-ms-animation-play-state\":\"[ running | paused ]#\",\"-webkit-animation-delay\":\"<time>#\",\"-webkit-animation-direction\":\"[ normal | alternate ]#\",\"-webkit-animation-duration\":\"<time>#\",\"-webkit-animation-fill-mode\":\"[ none | forwards | backwards | both ]#\",\"-webkit-animation-iteration-count\":\"[ <number> | infinite ]#\",\"-webkit-animation-name\":\"[ none | <single-animation-name> ]#\",\"-webkit-animation-play-state\":\"[ running | paused ]#\",\"-o-animation-delay\":\"<time>#\",\"-o-animation-direction\":\"[ normal | alternate ]#\",\"-o-animation-duration\":\"<time>#\",\"-o-animation-iteration-count\":\"[ <number> | infinite ]#\",\"-o-animation-name\":\"[ none | <single-animation-name> ]#\",\"-o-animation-play-state\":\"[ running | paused ]#\",appearance:\"none | auto\",\"-moz-appearance\":\"none | button | button-arrow-down | button-arrow-next | button-arrow-previous | button-arrow-up | button-bevel | button-focus | caret | checkbox | checkbox-container | checkbox-label | checkmenuitem | dualbutton | groupbox | listbox | listitem | menuarrow | menubar | menucheckbox | menuimage | menuitem | menuitemtext | menulist | menulist-button | menulist-text | menulist-textfield | menupopup | menuradio | menuseparator | meterbar | meterchunk | progressbar | progressbar-vertical | progresschunk | progresschunk-vertical | radio | radio-container | radio-label | radiomenuitem | range | range-thumb | resizer | resizerpanel | scale-horizontal | scalethumbend | scalethumb-horizontal | scalethumbstart | scalethumbtick | scalethumb-vertical | scale-vertical | scrollbarbutton-down | scrollbarbutton-left | scrollbarbutton-right | scrollbarbutton-up | scrollbarthumb-horizontal | scrollbarthumb-vertical | scrollbartrack-horizontal | scrollbartrack-vertical | searchfield | separator | sheet | spinner | spinner-downbutton | spinner-textfield | spinner-upbutton | splitter | statusbar | statusbarpanel | tab | tabpanel | tabpanels | tab-scroll-arrow-back | tab-scroll-arrow-forward | textfield | textfield-multiline | toolbar | toolbarbutton | toolbarbutton-dropdown | toolbargripper | toolbox | tooltip | treeheader | treeheadercell | treeheadersortarrow | treeitem | treeline | treetwisty | treetwistyopen | treeview | -moz-mac-unified-toolbar | -moz-win-borderless-glass | -moz-win-browsertabbar-toolbox | -moz-win-communicationstext | -moz-win-communications-toolbox | -moz-win-exclude-glass | -moz-win-glass | -moz-win-mediatext | -moz-win-media-toolbox | -moz-window-button-box | -moz-window-button-box-maximized | -moz-window-button-close | -moz-window-button-maximize | -moz-window-button-minimize | -moz-window-button-restore | -moz-window-frame-bottom | -moz-window-frame-left | -moz-window-frame-right | -moz-window-titlebar | -moz-window-titlebar-maximized\",\"-ms-appearance\":\"none | icon | window | desktop | workspace | document | tooltip | dialog | button | push-button | hyperlink | radio | radio-button | checkbox | menu-item | tab | menu | menubar | pull-down-menu | pop-up-menu | list-menu | radio-group | checkbox-group | outline-tree | range | field | combo-box | signature | password | normal\",\"-webkit-appearance\":\"none | button | button-bevel | caps-lock-indicator | caret | checkbox | default-button | listbox | listitem | media-fullscreen-button | media-mute-button | media-play-button | media-seek-back-button | media-seek-forward-button | media-slider | media-sliderthumb | menulist | menulist-button | menulist-text | menulist-textfield | push-button | radio | searchfield | searchfield-cancel-button | searchfield-decoration | searchfield-results-button | searchfield-results-decoration | slider-horizontal | slider-vertical | sliderthumb-horizontal | sliderthumb-vertical | square-button | textarea | textfield | scrollbarbutton-down | scrollbarbutton-left | scrollbarbutton-right | scrollbarbutton-up | scrollbargripper-horizontal | scrollbargripper-vertical | scrollbarthumb-horizontal | scrollbarthumb-vertical | scrollbartrack-horizontal | scrollbartrack-vertical\",\"-o-appearance\":\"none | window | desktop | workspace | document | tooltip | dialog | button | push-button | hyperlink | radio | radio-button | checkbox | menu-item | tab | menu | menubar | pull-down-menu | pop-up-menu | list-menu | radio-group | checkbox-group | outline-tree | range | field | combo-box | signature | password | normal\",azimuth:\"<azimuth>\",\"backface-visibility\":\"visible | hidden\",background:1,\"background-attachment\":\"<attachment>#\",\"background-clip\":\"<box>#\",\"background-color\":\"<color>\",\"background-image\":\"<bg-image>#\",\"background-origin\":\"<box>#\",\"background-position\":\"<bg-position>\",\"background-repeat\":\"<repeat-style>#\",\"background-size\":\"<bg-size>#\",\"baseline-shift\":\"baseline | sub | super | <percentage> | <length>\",behavior:1,binding:1,bleed:\"<length>\",\"bookmark-label\":\"<content> | <attr> | <string>\",\"bookmark-level\":\"none | <integer>\",\"bookmark-state\":\"open | closed\",\"bookmark-target\":\"none | <uri> | <attr>\",border:\"<border-width> || <border-style> || <color>\",\"border-bottom\":\"<border-width> || <border-style> || <color>\",\"border-bottom-color\":\"<color>\",\"border-bottom-left-radius\":\"<x-one-radius>\",\"border-bottom-right-radius\":\"<x-one-radius>\",\"border-bottom-style\":\"<border-style>\",\"border-bottom-width\":\"<border-width>\",\"border-collapse\":\"collapse | separate\",\"border-color\":\"<color>{1,4}\",\"border-image\":1,\"border-image-outset\":\"[ <length> | <number> ]{1,4}\",\"border-image-repeat\":\"[ stretch | repeat | round | space ]{1,2}\",\"border-image-slice\":\"<border-image-slice>\",\"border-image-source\":\"<image> | none\",\"border-image-width\":\"[ <length> | <percentage> | <number> | auto ]{1,4}\",\"border-left\":\"<border-width> || <border-style> || <color>\",\"border-left-color\":\"<color>\",\"border-left-style\":\"<border-style>\",\"border-left-width\":\"<border-width>\",\"border-radius\":\"<border-radius>\",\"border-right\":\"<border-width> || <border-style> || <color>\",\"border-right-color\":\"<color>\",\"border-right-style\":\"<border-style>\",\"border-right-width\":\"<border-width>\",\"border-spacing\":\"<length>{1,2}\",\"border-style\":\"<border-style>{1,4}\",\"border-top\":\"<border-width> || <border-style> || <color>\",\"border-top-color\":\"<color>\",\"border-top-left-radius\":\"<x-one-radius>\",\"border-top-right-radius\":\"<x-one-radius>\",\"border-top-style\":\"<border-style>\",\"border-top-width\":\"<border-width>\",\"border-width\":\"<border-width>{1,4}\",bottom:\"<margin-width>\",\"-moz-box-align\":\"start | end | center | baseline | stretch\",\"-moz-box-decoration-break\":\"slice | clone\",\"-moz-box-direction\":\"normal | reverse\",\"-moz-box-flex\":\"<number>\",\"-moz-box-flex-group\":\"<integer>\",\"-moz-box-lines\":\"single | multiple\",\"-moz-box-ordinal-group\":\"<integer>\",\"-moz-box-orient\":\"horizontal | vertical | inline-axis | block-axis\",\"-moz-box-pack\":\"start | end | center | justify\",\"-o-box-decoration-break\":\"slice | clone\",\"-webkit-box-align\":\"start | end | center | baseline | stretch\",\"-webkit-box-decoration-break\":\"slice | clone\",\"-webkit-box-direction\":\"normal | reverse\",\"-webkit-box-flex\":\"<number>\",\"-webkit-box-flex-group\":\"<integer>\",\"-webkit-box-lines\":\"single | multiple\",\"-webkit-box-ordinal-group\":\"<integer>\",\"-webkit-box-orient\":\"horizontal | vertical | inline-axis | block-axis\",\"-webkit-box-pack\":\"start | end | center | justify\",\"box-decoration-break\":\"slice | clone\",\"box-shadow\":\"<box-shadow>\",\"box-sizing\":\"content-box | border-box\",\"break-after\":\"auto | always | avoid | left | right | page | column | avoid-page | avoid-column\",\"break-before\":\"auto | always | avoid | left | right | page | column | avoid-page | avoid-column\",\"break-inside\":\"auto | avoid | avoid-page | avoid-column\",\"caption-side\":\"top | bottom\",clear:\"none | right | left | both\",clip:\"<shape> | auto\",\"-webkit-clip-path\":\"<clip-source> | <clip-path> | none\",\"clip-path\":\"<clip-source> | <clip-path> | none\",\"clip-rule\":\"nonzero | evenodd\",color:\"<color>\",\"color-interpolation\":\"auto | sRGB | linearRGB\",\"color-interpolation-filters\":\"auto | sRGB | linearRGB\",\"color-profile\":1,\"color-rendering\":\"auto | optimizeSpeed | optimizeQuality\",\"column-count\":\"<integer> | auto\",\"column-fill\":\"auto | balance\",\"column-gap\":\"<length> | normal\",\"column-rule\":\"<border-width> || <border-style> || <color>\",\"column-rule-color\":\"<color>\",\"column-rule-style\":\"<border-style>\",\"column-rule-width\":\"<border-width>\",\"column-span\":\"none | all\",\"column-width\":\"<length> | auto\",columns:1,content:1,\"counter-increment\":1,\"counter-reset\":1,crop:\"<shape> | auto\",cue:\"cue-after | cue-before\",\"cue-after\":1,\"cue-before\":1,cursor:1,direction:\"ltr | rtl\",display:\"inline | block | list-item | inline-block | table | inline-table | table-row-group | table-header-group | table-footer-group | table-row | table-column-group | table-column | table-cell | table-caption | grid | inline-grid | run-in | ruby | ruby-base | ruby-text | ruby-base-container | ruby-text-container | contents | none | -moz-box | -moz-inline-block | -moz-inline-box | -moz-inline-grid | -moz-inline-stack | -moz-inline-table | -moz-grid | -moz-grid-group | -moz-grid-line | -moz-groupbox | -moz-deck | -moz-popup | -moz-stack | -moz-marker | -webkit-box | -webkit-inline-box | -ms-flexbox | -ms-inline-flexbox | flex | -webkit-flex | inline-flex | -webkit-inline-flex\",\"dominant-baseline\":\"auto | use-script | no-change | reset-size | ideographic | alphabetic | hanging | mathematical | central | middle | text-after-edge | text-before-edge\",\"drop-initial-after-adjust\":\"central | middle | after-edge | text-after-edge | ideographic | alphabetic | mathematical | <percentage> | <length>\",\"drop-initial-after-align\":\"baseline | use-script | before-edge | text-before-edge | after-edge | text-after-edge | central | middle | ideographic | alphabetic | hanging | mathematical\",\"drop-initial-before-adjust\":\"before-edge | text-before-edge | central | middle | hanging | mathematical | <percentage> | <length>\",\"drop-initial-before-align\":\"caps-height | baseline | use-script | before-edge | text-before-edge | after-edge | text-after-edge | central | middle | ideographic | alphabetic | hanging | mathematical\",\"drop-initial-size\":\"auto | line | <length> | <percentage>\",\"drop-initial-value\":\"<integer>\",elevation:\"<angle> | below | level | above | higher | lower\",\"empty-cells\":\"show | hide\",\"enable-background\":1,fill:\"<paint>\",\"fill-opacity\":\"<opacity-value>\",\"fill-rule\":\"nonzero | evenodd\",filter:\"<filter-function-list> | none\",fit:\"fill | hidden | meet | slice\",\"fit-position\":1,flex:\"<flex>\",\"flex-basis\":\"<width>\",\"flex-direction\":\"row | row-reverse | column | column-reverse\",\"flex-flow\":\"<flex-direction> || <flex-wrap>\",\"flex-grow\":\"<number>\",\"flex-shrink\":\"<number>\",\"flex-wrap\":\"nowrap | wrap | wrap-reverse\",\"-webkit-flex\":\"<flex>\",\"-webkit-flex-basis\":\"<width>\",\"-webkit-flex-direction\":\"row | row-reverse | column | column-reverse\",\"-webkit-flex-flow\":\"<flex-direction> || <flex-wrap>\",\"-webkit-flex-grow\":\"<number>\",\"-webkit-flex-shrink\":\"<number>\",\"-webkit-flex-wrap\":\"nowrap | wrap | wrap-reverse\",\"-ms-flex\":\"<flex>\",\"-ms-flex-align\":\"start | end | center | stretch | baseline\",\"-ms-flex-direction\":\"row | row-reverse | column | column-reverse\",\"-ms-flex-order\":\"<number>\",\"-ms-flex-pack\":\"start | end | center | justify | distribute\",\"-ms-flex-wrap\":\"nowrap | wrap | wrap-reverse\",float:\"left | right | none\",\"float-offset\":1,\"flood-color\":1,\"flood-opacity\":\"<opacity-value>\",font:\"<font-shorthand> | caption | icon | menu | message-box | small-caption | status-bar\",\"font-family\":\"<font-family>\",\"font-feature-settings\":\"<feature-tag-value> | normal\",\"font-kerning\":\"auto | normal | none\",\"font-size\":\"<font-size>\",\"font-size-adjust\":\"<number> | none\",\"font-stretch\":\"<font-stretch>\",\"font-style\":\"<font-style>\",\"font-variant\":\"<font-variant> | normal | none\",\"font-variant-alternates\":\"<font-variant-alternates> | normal\",\"font-variant-caps\":\"<font-variant-caps> | normal\",\"font-variant-east-asian\":\"<font-variant-east-asian> | normal\",\"font-variant-ligatures\":\"<font-variant-ligatures> | normal | none\",\"font-variant-numeric\":\"<font-variant-numeric> | normal\",\"font-variant-position\":\"normal | sub | super\",\"font-weight\":\"<font-weight>\",gap:\"[ <length> | <percentage> ]{1,2}\",\"glyph-orientation-horizontal\":\"<glyph-angle>\",\"glyph-orientation-vertical\":\"auto | <glyph-angle>\",grid:1,\"grid-area\":1,\"grid-auto-columns\":1,\"grid-auto-flow\":1,\"grid-auto-position\":1,\"grid-auto-rows\":1,\"grid-cell-stacking\":\"columns | rows | layer\",\"grid-column\":1,\"grid-columns\":1,\"grid-column-align\":\"start | end | center | stretch\",\"grid-column-sizing\":1,\"grid-column-start\":1,\"grid-column-end\":1,\"grid-column-span\":\"<integer>\",\"grid-flow\":\"none | rows | columns\",\"grid-gap\":\"[ <length> | <percentage> ]{1,2}\",\"grid-layer\":\"<integer>\",\"grid-row\":1,\"grid-rows\":1,\"grid-row-align\":\"start | end | center | stretch\",\"grid-row-gap\":1,\"grid-row-start\":1,\"grid-row-end\":1,\"grid-row-span\":\"<integer>\",\"grid-row-sizing\":1,\"grid-template\":1,\"grid-template-areas\":1,\"grid-template-columns\":1,\"grid-template-rows\":1,\"hanging-punctuation\":1,height:\"<margin-width> | <content-sizing>\",\"hyphenate-after\":\"<integer> | auto\",\"hyphenate-before\":\"<integer> | auto\",\"hyphenate-character\":\"<string> | auto\",\"hyphenate-lines\":\"no-limit | <integer>\",\"hyphenate-resource\":1,hyphens:\"none | manual | auto\",icon:1,\"image-orientation\":\"angle | auto\",\"image-rendering\":\"auto | optimizeSpeed | optimizeQuality\",\"image-resolution\":1,\"ime-mode\":\"auto | normal | active | inactive | disabled\",\"inline-box-align\":\"last | <integer>\",\"justify-content\":\"flex-start | flex-end | center | space-between | space-around | space-evenly | stretch\",\"-webkit-justify-content\":\"flex-start | flex-end | center | space-between | space-around | space-evenly | stretch\",kerning:\"auto | <length>\",left:\"<margin-width>\",\"letter-spacing\":\"<length> | normal\",\"line-height\":\"<line-height>\",\"line-break\":\"auto | loose | normal | strict\",\"line-stacking\":1,\"line-stacking-ruby\":\"exclude-ruby | include-ruby\",\"line-stacking-shift\":\"consider-shifts | disregard-shifts\",\"line-stacking-strategy\":\"inline-line-height | block-line-height | max-height | grid-height\",\"list-style\":1,\"list-style-image\":\"<uri> | none\",\"list-style-position\":\"inside | outside\",\"list-style-type\":\"disc | circle | square | decimal | decimal-leading-zero | lower-roman | upper-roman | lower-greek | lower-latin | upper-latin | armenian | georgian | lower-alpha | upper-alpha | none\",margin:\"<margin-width>{1,4}\",\"margin-bottom\":\"<margin-width>\",\"margin-left\":\"<margin-width>\",\"margin-right\":\"<margin-width>\",\"margin-top\":\"<margin-width>\",mark:1,\"mark-after\":1,\"mark-before\":1,marker:1,\"marker-end\":1,\"marker-mid\":1,\"marker-start\":1,marks:1,\"marquee-direction\":1,\"marquee-play-count\":1,\"marquee-speed\":1,\"marquee-style\":1,mask:1,\"max-height\":\"<length> | <percentage> | <content-sizing> | none\",\"max-width\":\"<length> | <percentage> | <content-sizing> | none\",\"min-height\":\"<length> | <percentage> | <content-sizing> | contain-floats | -moz-contain-floats | -webkit-contain-floats\",\"min-width\":\"<length> | <percentage> | <content-sizing> | contain-floats | -moz-contain-floats | -webkit-contain-floats\",\"mix-blend-mode\":\"<blend-mode>\",\"move-to\":1,\"nav-down\":1,\"nav-index\":1,\"nav-left\":1,\"nav-right\":1,\"nav-up\":1,\"object-fit\":\"fill | contain | cover | none | scale-down\",\"object-position\":\"<position>\",opacity:\"<opacity-value>\",order:\"<integer>\",\"-webkit-order\":\"<integer>\",orphans:\"<integer>\",outline:1,\"outline-color\":\"<color> | invert\",\"outline-offset\":1,\"outline-style\":\"<border-style>\",\"outline-width\":\"<border-width>\",overflow:\"visible | hidden | scroll | auto\",\"overflow-style\":1,\"overflow-wrap\":\"normal | break-word\",\"overflow-x\":1,\"overflow-y\":1,padding:\"<padding-width>{1,4}\",\"padding-bottom\":\"<padding-width>\",\"padding-left\":\"<padding-width>\",\"padding-right\":\"<padding-width>\",\"padding-top\":\"<padding-width>\",page:1,\"page-break-after\":\"auto | always | avoid | left | right\",\"page-break-before\":\"auto | always | avoid | left | right\",\"page-break-inside\":\"auto | avoid\",\"page-policy\":1,pause:1,\"pause-after\":1,\"pause-before\":1,perspective:1,\"perspective-origin\":1,phonemes:1,pitch:1,\"pitch-range\":1,\"play-during\":1,\"pointer-events\":\"auto | none | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all\",position:\"static | relative | absolute | fixed | sticky | -webkit-sticky\",\"presentation-level\":1,\"punctuation-trim\":1,quotes:1,\"rendering-intent\":1,resize:1,rest:1,\"rest-after\":1,\"rest-before\":1,richness:1,right:\"<margin-width>\",rotation:1,\"rotation-point\":1,\"ruby-align\":1,\"ruby-overhang\":1,\"ruby-position\":1,\"ruby-span\":1,\"shape-rendering\":\"auto | optimizeSpeed | crispEdges | geometricPrecision\",size:1,speak:\"normal | none | spell-out\",\"speak-header\":\"once | always\",\"speak-numeral\":\"digits | continuous\",\"speak-punctuation\":\"code | none\",\"speech-rate\":1,src:1,\"stop-color\":1,\"stop-opacity\":\"<opacity-value>\",stress:1,\"string-set\":1,stroke:\"<paint>\",\"stroke-dasharray\":\"none | <dasharray>\",\"stroke-dashoffset\":\"<percentage> | <length>\",\"stroke-linecap\":\"butt | round | square\",\"stroke-linejoin\":\"miter | round | bevel\",\"stroke-miterlimit\":\"<miterlimit>\",\"stroke-opacity\":\"<opacity-value>\",\"stroke-width\":\"<percentage> | <length>\",\"table-layout\":\"auto | fixed\",\"tab-size\":\"<integer> | <length>\",target:1,\"target-name\":1,\"target-new\":1,\"target-position\":1,\"text-align\":\"left | right | center | justify | match-parent | start | end\",\"text-align-last\":1,\"text-anchor\":\"start | middle | end\",\"text-decoration\":\"<text-decoration-line> || <text-decoration-style> || <text-decoration-color>\",\"text-decoration-color\":\"<text-decoration-color>\",\"text-decoration-line\":\"<text-decoration-line>\",\"text-decoration-style\":\"<text-decoration-style>\",\"text-decoration-skip\":\"none | [ objects || spaces || ink || edges || box-decoration ]\",\"-webkit-text-decoration-skip\":\"none | [ objects || spaces || ink || edges || box-decoration ]\",\"text-underline-position\":\"auto | [ under || [ left | right ] ]\",\"text-emphasis\":1,\"text-height\":1,\"text-indent\":\"<length> | <percentage>\",\"text-justify\":\"auto | none | inter-word | inter-ideograph | inter-cluster | distribute | kashida\",\"text-outline\":1,\"text-overflow\":1,\"text-rendering\":\"auto | optimizeSpeed | optimizeLegibility | geometricPrecision\",\"text-shadow\":1,\"text-transform\":\"capitalize | uppercase | lowercase | none\",\"text-wrap\":\"normal | none | avoid\",top:\"<margin-width>\",\"-ms-touch-action\":\"auto | none | pan-x | pan-y | pan-left | pan-right | pan-up | pan-down | manipulation\",\"touch-action\":\"auto | none | pan-x | pan-y | pan-left | pan-right | pan-up | pan-down | manipulation\",transform:1,\"transform-origin\":1,\"transform-style\":1,transition:1,\"transition-delay\":1,\"transition-duration\":1,\"transition-property\":1,\"transition-timing-function\":1,\"unicode-bidi\":\"normal | embed | isolate | bidi-override | isolate-override | plaintext\",\"user-modify\":\"read-only | read-write | write-only\",\"user-select\":\"auto | text | none | contain | all\",\"vertical-align\":\"auto | use-script | baseline | sub | super | top | text-top | central | middle | bottom | text-bottom | <percentage> | <length>\",visibility:\"visible | hidden | collapse\",\"voice-balance\":1,\"voice-duration\":1,\"voice-family\":1,\"voice-pitch\":1,\"voice-pitch-range\":1,\"voice-rate\":1,\"voice-stress\":1,\"voice-volume\":1,volume:1,\"white-space\":\"normal | pre | nowrap | pre-wrap | pre-line | -pre-wrap | -o-pre-wrap | -moz-pre-wrap | -hp-pre-wrap\",\"white-space-collapse\":1,widows:\"<integer>\",width:\"<length> | <percentage> | <content-sizing> | auto\",\"will-change\":\"<will-change>\",\"word-break\":\"normal | keep-all | break-all | break-word\",\"word-spacing\":\"<length> | normal\",\"word-wrap\":\"normal | break-word\",\"writing-mode\":\"horizontal-tb | vertical-rl | vertical-lr | lr-tb | rl-tb | tb-rl | bt-rl | tb-lr | bt-lr | lr-bt | rl-bt | lr | rl | tb\",\"z-index\":\"<integer> | auto\",zoom:\"<number> | <percentage> | normal\"}},{}],8:[function(e,t,r){\"use strict\";t.exports=o;var n=e(\"../util/SyntaxUnit\"),i=e(\"./Parser\");function o(e,t,r,o){n.call(this,e,r,o,i.PROPERTY_NAME_TYPE),this.hack=t}o.prototype=new n,o.prototype.constructor=o,o.prototype.toString=function(){return(this.hack?this.hack:\"\")+this.text}},{\"../util/SyntaxUnit\":26,\"./Parser\":6}],9:[function(e,t,r){\"use strict\";t.exports=o;var n=e(\"../util/SyntaxUnit\"),i=e(\"./Parser\");function o(e,t,r){n.call(this,e.join(\" \"),t,r,i.PROPERTY_VALUE_TYPE),this.parts=e}o.prototype=new n,o.prototype.constructor=o},{\"../util/SyntaxUnit\":26,\"./Parser\":6}],10:[function(e,t,r){\"use strict\";function n(e){this._i=0,this._parts=e.parts,this._marks=[],this.value=e}t.exports=n,n.prototype.count=function(){return this._parts.length},n.prototype.isFirst=function(){return 0===this._i},n.prototype.hasNext=function(){return this._i<this._parts.length},n.prototype.mark=function(){this._marks.push(this._i)},n.prototype.peek=function(e){return this.hasNext()?this._parts[this._i+(e||0)]:null},n.prototype.next=function(){return this.hasNext()?this._parts[this._i++]:null},n.prototype.previous=function(){return this._i>0?this._parts[--this._i]:null},n.prototype.restore=function(){this._marks.length&&(this._i=this._marks.pop())},n.prototype.drop=function(){this._marks.pop()}},{}],11:[function(e,t,r){\"use strict\";t.exports=s;var n=e(\"../util/SyntaxUnit\"),i=e(\"./Colors\"),o=e(\"./Parser\"),a=e(\"./Tokens\");function s(e,t,r,a){var l,u=a||{};if(n.call(this,e,t,r,o.PROPERTY_VALUE_PART_TYPE),this.type=\"unknown\",/^([+-]?[\\d.]+)([a-z]+)$/i.test(e))switch(this.type=\"dimension\",this.value=Number(RegExp.$1),this.units=RegExp.$2,this.units.toLowerCase()){case\"em\":case\"rem\":case\"ex\":case\"px\":case\"cm\":case\"mm\":case\"in\":case\"pt\":case\"pc\":case\"ch\":case\"vh\":case\"vw\":case\"vmax\":case\"vmin\":this.type=\"length\";break;case\"fr\":this.type=\"grid\";break;case\"deg\":case\"rad\":case\"grad\":case\"turn\":this.type=\"angle\";break;case\"ms\":case\"s\":this.type=\"time\";break;case\"hz\":case\"khz\":this.type=\"frequency\";break;case\"dpi\":case\"dpcm\":this.type=\"resolution\"}else/^([+-]?[\\d.]+)%$/i.test(e)?(this.type=\"percentage\",this.value=Number(RegExp.$1)):/^([+-]?\\d+)$/i.test(e)?(this.type=\"integer\",this.value=Number(RegExp.$1)):/^([+-]?[\\d.]+)$/i.test(e)?(this.type=\"number\",this.value=Number(RegExp.$1)):/^#([a-f0-9]{3,6})/i.test(e)?(this.type=\"color\",3===(l=RegExp.$1).length?(this.red=parseInt(l.charAt(0)+l.charAt(0),16),this.green=parseInt(l.charAt(1)+l.charAt(1),16),this.blue=parseInt(l.charAt(2)+l.charAt(2),16)):(this.red=parseInt(l.substring(0,2),16),this.green=parseInt(l.substring(2,4),16),this.blue=parseInt(l.substring(4,6),16))):/^rgb\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)/i.test(e)?(this.type=\"color\",this.red=Number(RegExp.$1),this.green=Number(RegExp.$2),this.blue=Number(RegExp.$3)):/^rgb\\(\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*\\)/i.test(e)?(this.type=\"color\",this.red=255*Number(RegExp.$1)/100,this.green=255*Number(RegExp.$2)/100,this.blue=255*Number(RegExp.$3)/100):/^rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([\\d.]+)\\s*\\)/i.test(e)?(this.type=\"color\",this.red=Number(RegExp.$1),this.green=Number(RegExp.$2),this.blue=Number(RegExp.$3),this.alpha=Number(RegExp.$4)):/^rgba\\(\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*,\\s*([\\d.]+)\\s*\\)/i.test(e)?(this.type=\"color\",this.red=255*Number(RegExp.$1)/100,this.green=255*Number(RegExp.$2)/100,this.blue=255*Number(RegExp.$3)/100,this.alpha=Number(RegExp.$4)):/^hsl\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*\\)/i.test(e)?(this.type=\"color\",this.hue=Number(RegExp.$1),this.saturation=Number(RegExp.$2)/100,this.lightness=Number(RegExp.$3)/100):/^hsla\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*,\\s*([\\d.]+)\\s*\\)/i.test(e)?(this.type=\"color\",this.hue=Number(RegExp.$1),this.saturation=Number(RegExp.$2)/100,this.lightness=Number(RegExp.$3)/100,this.alpha=Number(RegExp.$4)):/^url\\((\"([^\\\\\"]|\\.)*\")\\)/i.test(e)?(this.type=\"uri\",this.uri=s.parseString(RegExp.$1)):/^([^(]+)\\(/i.test(e)?(this.type=\"function\",this.name=RegExp.$1,this.value=e):/^\"([^\\n\\r\\f\\\\\"]|\\\\\\r\\n|\\\\[^\\r0-9a-f]|\\\\[0-9a-f]{1,6}(\\r\\n|[ \\n\\r\\t\\f])?)*\"/i.test(e)||/^'([^\\n\\r\\f\\\\']|\\\\\\r\\n|\\\\[^\\r0-9a-f]|\\\\[0-9a-f]{1,6}(\\r\\n|[ \\n\\r\\t\\f])?)*'/i.test(e)?(this.type=\"string\",this.value=s.parseString(e)):i[e.toLowerCase()]?(this.type=\"color\",l=i[e.toLowerCase()].substring(1),this.red=parseInt(l.substring(0,2),16),this.green=parseInt(l.substring(2,4),16),this.blue=parseInt(l.substring(4,6),16)):/^[,/]$/.test(e)?(this.type=\"operator\",this.value=e):/^-?[a-z_\\u00A0-\\uFFFF][a-z0-9\\-_\\u00A0-\\uFFFF]*$/i.test(e)&&(this.type=\"identifier\",this.value=e);this.wasIdent=Boolean(u.ident)}s.prototype=new n,s.prototype.constructor=s,s.parseString=function(e){return(e=e.slice(1,-1)).replace(/\\\\(\\r\\n|[^\\r0-9a-f]|[0-9a-f]{1,6}(\\r\\n|[ \\n\\r\\t\\f])?)/gi,(function(e,t){if(/^(\\n|\\r\\n|\\r|\\f)$/.test(t))return\"\";var r=/^[0-9a-f]{1,6}/i.exec(t);if(r){var n=parseInt(r[0],16);return String.fromCodePoint?String.fromCodePoint(n):String.fromCharCode(n)}return t}))},s.serializeString=function(e){return'\"'+e.replace(/[\"\\r\\n\\f]/g,(function(e,t){return'\"'===t?\"\\\\\"+t:\"\\\\\"+(String.codePointAt?String.codePointAt(0):String.charCodeAt(0)).toString(16)+\" \"}))+'\"'},s.fromToken=function(e){return new s(e.value,e.startLine,e.startCol,{ident:e.type===a.IDENT})}},{\"../util/SyntaxUnit\":26,\"./Colors\":1,\"./Parser\":6,\"./Tokens\":18}],12:[function(e,t,r){\"use strict\";var n=t.exports={__proto__:null,\":first-letter\":1,\":first-line\":1,\":before\":1,\":after\":1};n.ELEMENT=1,n.CLASS=2,n.isElement=function(e){return 0===e.indexOf(\"::\")||n[e.toLowerCase()]===n.ELEMENT}},{}],13:[function(e,t,r){\"use strict\";t.exports=a;var n=e(\"../util/SyntaxUnit\"),i=e(\"./Parser\"),o=e(\"./Specificity\");function a(e,t,r){n.call(this,e.join(\" \"),t,r,i.SELECTOR_TYPE),this.parts=e,this.specificity=o.calculate(this)}a.prototype=new n,a.prototype.constructor=a},{\"../util/SyntaxUnit\":26,\"./Parser\":6,\"./Specificity\":16}],14:[function(e,t,r){\"use strict\";t.exports=o;var n=e(\"../util/SyntaxUnit\"),i=e(\"./Parser\");function o(e,t,r,o,a){n.call(this,r,o,a,i.SELECTOR_PART_TYPE),this.elementName=e,this.modifiers=t}o.prototype=new n,o.prototype.constructor=o},{\"../util/SyntaxUnit\":26,\"./Parser\":6}],15:[function(e,t,r){\"use strict\";t.exports=o;var n=e(\"../util/SyntaxUnit\"),i=e(\"./Parser\");function o(e,t,r,o){n.call(this,e,r,o,i.SELECTOR_SUB_PART_TYPE),this.type=t,this.args=[]}o.prototype=new n,o.prototype.constructor=o},{\"../util/SyntaxUnit\":26,\"./Parser\":6}],16:[function(e,t,r){\"use strict\";t.exports=o;var n=e(\"./Pseudos\"),i=e(\"./SelectorPart\");function o(e,t,r,n){this.a=e,this.b=t,this.c=r,this.d=n}o.prototype={constructor:o,compare:function(e){var t,r,n=[\"a\",\"b\",\"c\",\"d\"];for(t=0,r=n.length;t<r;t++){if(this[n[t]]<e[n[t]])return-1;if(this[n[t]]>e[n[t]])return 1}return 0},valueOf:function(){return 1e3*this.a+100*this.b+10*this.c+this.d},toString:function(){return this.a+\",\"+this.b+\",\"+this.c+\",\"+this.d}},o.calculate=function(e){var t,r,a,s=0,l=0,u=0;function c(e){var t,r,i,o,a,h=e.elementName?e.elementName.text:\"\";for(h&&\"*\"!==h.charAt(h.length-1)&&u++,t=0,i=e.modifiers.length;t<i;t++)switch((a=e.modifiers[t]).type){case\"class\":case\"attribute\":l++;break;case\"id\":s++;break;case\"pseudo\":n.isElement(a.text)?u++:l++;break;case\"not\":for(r=0,o=a.args.length;r<o;r++)c(a.args[r])}}for(t=0,r=e.parts.length;t<r;t++)(a=e.parts[t])instanceof i&&c(a);return new o(0,s,l,u)}},{\"./Pseudos\":12,\"./SelectorPart\":14}],17:[function(e,t,r){\"use strict\";t.exports=b;var n=e(\"../util/TokenStreamBase\"),i=e(\"./PropertyValuePart\"),o=e(\"./Tokens\"),a=/^[0-9a-fA-F]$/,s=/^[\\u00A0-\\uFFFF]$/,l=/\\n|\\r\\n|\\r|\\f/,u=/\\u0009|\\u000a|\\u000c|\\u000d|\\u0020/;function c(e){return null!=e&&a.test(e)}function h(e){return null!=e&&/\\d/.test(e)}function d(e){return null!=e&&u.test(e)}function p(e){return null!=e&&l.test(e)}function f(e){return null!=e&&/[a-z_\\u00A0-\\uFFFF\\\\]/i.test(e)}function m(e){return null!=e&&(f(e)||/[0-9\\-\\\\]/.test(e))}function g(e){return\"string\"===typeof e&&(h(e[0])||\".\"===e[0]&&h(e[1]))}function b(e){n.call(this,e,o)}b.prototype=function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}(new n,{_getToken:function(){var e,t=this._reader,r=null,n=t.getLine(),i=t.getCol();for(e=t.read();e;){switch(e){case\"/\":r=\"*\"===t.peek()?this.commentToken(e,n,i):this.charToken(e,n,i);break;case\"|\":case\"~\":case\"^\":case\"$\":case\"*\":r=\"=\"===t.peek()?this.comparisonToken(e,n,i):this.charToken(e,n,i);break;case'\"':case\"'\":r=this.stringToken(e,n,i);break;case\"#\":r=m(t.peek())?this.hashToken(e,n,i):this.charToken(e,n,i);break;case\".\":r=h(t.peek())?this.numberToken(e,n,i):this.charToken(e,n,i);break;case\"-\":if(g(t.peekCount(2))){r=this.numberToken(e,n,i);break}r=\"->\"===t.peekCount(2)?this.htmlCommentEndToken(e,n,i):this._getDefaultToken(e,n,i);break;case\"+\":r=g(t.peekCount(2))?this.numberToken(e,n,i):this.charToken(e,n,i);break;case\"!\":r=this.importantToken(e,n,i);break;case\"@\":r=this.atRuleToken(e,n,i);break;case\":\":r=this.notToken(e,n,i);break;case\"<\":r=this.htmlCommentStartToken(e,n,i);break;case\"\\\\\":r=/[^\\r\\n\\f]/.test(t.peek())?this.identOrFunctionToken(this.readEscape(e,!0),n,i):this.charToken(e,n,i);break;case\"U\":case\"u\":r=\"+\"===t.peek()?this.unicodeRangeToken(e,n,i):this._getDefaultToken(e,n,i);break;default:r=this._getDefaultToken(e,n,i)}break}return r||null!==e||(r=this.createToken(o.EOF,null,n,i)),r},_getDefaultToken:function(e,t,r){var n,i=this._reader,o=null;return h(e)?o=this.numberToken(e,t,r):d(e)?o=this.whitespaceToken(e,t,r):o=\"string\"===typeof(n=e+i.peekCount(1))&&(\"-\"===n[0]&&f(n[1])||f(n[0]))?this.identOrFunctionToken(e,t,r):this.charToken(e,t,r),o},createToken:function(e,t,r,n,i){var o=this._reader;return{value:t,type:e,channel:(i=i||{}).channel,endChar:i.endChar,hide:i.hide||!1,startLine:r,startCol:n,endLine:o.getLine(),endCol:o.getCol()}},atRuleToken:function(e,t,r){var n=e,i=this._reader,a=o.CHAR;return i.mark(),n=e+this.readName(),(a=o.type(n.toLowerCase()))!==o.CHAR&&a!==o.UNKNOWN||(n.length>1?a=o.UNKNOWN_SYM:(a=o.CHAR,n=e,i.reset())),this.createToken(a,n,t,r)},charToken:function(e,t,r){var n=o.type(e),i={};return-1===n?n=o.CHAR:i.endChar=o[n].endChar,this.createToken(n,e,t,r,i)},commentToken:function(e,t,r){var n=this.readComment(e);return this.createToken(o.COMMENT,n,t,r)},comparisonToken:function(e,t,r){var n=e+this._reader.read(),i=o.type(n)||o.CHAR;return this.createToken(i,n,t,r)},hashToken:function(e,t,r){var n=this.readName(e);return this.createToken(o.HASH,n,t,r)},htmlCommentStartToken:function(e,t,r){var n=this._reader,i=e;return n.mark(),\"\\x3c!--\"===(i+=n.readCount(3))?this.createToken(o.CDO,i,t,r):(n.reset(),this.charToken(e,t,r))},htmlCommentEndToken:function(e,t,r){var n=this._reader,i=e;return n.mark(),\"--\\x3e\"===(i+=n.readCount(2))?this.createToken(o.CDC,i,t,r):(n.reset(),this.charToken(e,t,r))},identOrFunctionToken:function(e,t,r){var n,i=this._reader,a=this.readName(e),s=o.IDENT;return\"(\"===i.peek()?(a+=i.read(),[\"url(\",\"url-prefix(\",\"domain(\"].indexOf(a.toLowerCase())>-1?(i.mark(),null===(n=this.readURI(a))?(i.reset(),s=o.FUNCTION):(s=o.URI,a=n)):s=o.FUNCTION):\":\"===i.peek()&&\"progid\"===a.toLowerCase()&&(a+=i.readTo(\"(\"),s=o.IE_FUNCTION),this.createToken(s,a,t,r)},importantToken:function(e,t,r){var n,i,a=this._reader,s=e,l=o.CHAR;for(a.mark(),i=a.read();i;){if(\"/\"===i){if(\"*\"!==a.peek())break;if(\"\"===(n=this.readComment(i)))break}else{if(!d(i)){if(/i/i.test(i)){n=a.readCount(8),/mportant/i.test(n)&&(s+=i+n,l=o.IMPORTANT_SYM);break}break}s+=i+this.readWhitespace()}i=a.read()}return l===o.CHAR?(a.reset(),this.charToken(e,t,r)):this.createToken(l,s,t,r)},notToken:function(e,t,r){var n=this._reader,i=e;return n.mark(),\":not(\"===(i+=n.readCount(4)).toLowerCase()?this.createToken(o.NOT,i,t,r):(n.reset(),this.charToken(e,t,r))},numberToken:function(e,t,r){var n,i=this._reader,a=this.readNumber(e),s=o.NUMBER,l=i.peek();return!function(e){return null!=e&&(f(e)||/-\\\\/.test(e))}(l)?\"%\"===l&&(a+=i.read(),s=o.PERCENTAGE):(a+=n=this.readName(i.read()),s=/^em$|^ex$|^px$|^gd$|^rem$|^vw$|^vh$|^fr$|^vmax$|^vmin$|^ch$|^cm$|^mm$|^in$|^pt$|^pc$/i.test(n)?o.LENGTH:/^deg|^rad$|^grad$|^turn$/i.test(n)?o.ANGLE:/^ms$|^s$/i.test(n)?o.TIME:/^hz$|^khz$/i.test(n)?o.FREQ:/^dpi$|^dpcm$/i.test(n)?o.RESOLUTION:o.DIMENSION),this.createToken(s,a,t,r)},stringToken:function(e,t,r){for(var n,i=e,a=e,s=this._reader,l=o.STRING,u=s.read();u;){if(a+=u,\"\\\\\"===u){if(null===(u=s.read()))break;if(/[^\\r\\n\\f0-9a-f]/i.test(u))a+=u;else{for(n=0;c(u)&&n<6;n++)a+=u,u=s.read();if(\"\\r\"===u&&\"\\n\"===s.peek()&&(a+=u,u=s.read()),!d(u))continue;a+=u}}else{if(u===i)break;if(p(s.peek())){l=o.INVALID;break}}u=s.read()}return null===u&&(l=o.INVALID),this.createToken(l,a,t,r)},unicodeRangeToken:function(e,t,r){var n,i=this._reader,a=e,s=o.CHAR;return\"+\"===i.peek()&&(i.mark(),a+=i.read(),2===(a+=this.readUnicodeRangePart(!0)).length?i.reset():(s=o.UNICODE_RANGE,-1===a.indexOf(\"?\")&&\"-\"===i.peek()&&(i.mark(),n=i.read(),1===(n+=this.readUnicodeRangePart(!1)).length?i.reset():a+=n))),this.createToken(s,a,t,r)},whitespaceToken:function(e,t,r){var n=e+this.readWhitespace();return this.createToken(o.S,n,t,r)},readUnicodeRangePart:function(e){for(var t=this._reader,r=\"\",n=t.peek();c(n)&&r.length<6;)t.read(),r+=n,n=t.peek();if(e)for(;\"?\"===n&&r.length<6;)t.read(),r+=n,n=t.peek();return r},readWhitespace:function(){for(var e=this._reader,t=\"\",r=e.peek();d(r);)e.read(),t+=r,r=e.peek();return t},readNumber:function(e){for(var t=this._reader,r=e,n=\".\"===e,i=t.peek();i;){if(h(i))r+=t.read();else{if(\".\"!==i)break;if(n)break;n=!0,r+=t.read()}i=t.peek()}return r},readString:function(){var e=this.stringToken(this._reader.read(),0,0);return e.type===o.INVALID?null:e.value},readURI:function(e){for(var t=this._reader,r=e,n=\"\",o=t.peek();o&&d(o);)t.read(),o=t.peek();for(\"'\"===o||'\"'===o?null!==(n=this.readString())&&(n=i.parseString(n)):n=this.readUnquotedURL(),o=t.peek();o&&d(o);)t.read(),o=t.peek();return null===n||\")\"!==o?r=null:r+=i.serializeString(n)+t.read(),r},readUnquotedURL:function(e){var t,r=this._reader,n=e||\"\";for(t=r.peek();t;t=r.peek())if(s.test(t)||/^[-!#$%&*-[\\]-~]$/.test(t))n+=t,r.read();else{if(\"\\\\\"!==t)break;if(!/^[^\\r\\n\\f]$/.test(r.peek(2)))break;n+=this.readEscape(r.read(),!0)}return n},readName:function(e){var t,r=this._reader,n=e||\"\";for(t=r.peek();t;t=r.peek())if(\"\\\\\"===t){if(!/^[^\\r\\n\\f]$/.test(r.peek(2)))break;n+=this.readEscape(r.read(),!0)}else{if(!m(t))break;n+=r.read()}return n},readEscape:function(e,t){var r=this._reader,n=e||\"\",i=0,o=r.peek();if(c(o))do{n+=r.read(),o=r.peek()}while(o&&c(o)&&++i<6);if(1===n.length){if(!/^[^\\r\\n\\f0-9a-f]$/.test(o))throw new Error(\"Bad escape sequence.\");if(r.read(),t)return o}else\"\\r\"===o?(r.read(),\"\\n\"===r.peek()&&(o+=r.read())):/^[ \\t\\n\\f]$/.test(o)?r.read():o=\"\";if(t){var a=parseInt(n.slice(e.length),16);return String.fromCodePoint?String.fromCodePoint(a):String.fromCharCode(a)}return n+o},readComment:function(e){var t=this._reader,r=e||\"\",n=t.read();if(\"*\"===n){for(;n;){if((r+=n).length>2&&\"*\"===n&&\"/\"===t.peek()){r+=t.read();break}n=t.read()}return r}return\"\"}})},{\"../util/TokenStreamBase\":27,\"./PropertyValuePart\":11,\"./Tokens\":18}],18:[function(e,t,r){\"use strict\";var n=t.exports=[{name:\"CDO\"},{name:\"CDC\"},{name:\"S\",whitespace:!0},{name:\"COMMENT\",comment:!0,hide:!0,channel:\"comment\"},{name:\"INCLUDES\",text:\"~=\"},{name:\"DASHMATCH\",text:\"|=\"},{name:\"PREFIXMATCH\",text:\"^=\"},{name:\"SUFFIXMATCH\",text:\"$=\"},{name:\"SUBSTRINGMATCH\",text:\"*=\"},{name:\"STRING\"},{name:\"IDENT\"},{name:\"HASH\"},{name:\"IMPORT_SYM\",text:\"@import\"},{name:\"PAGE_SYM\",text:\"@page\"},{name:\"MEDIA_SYM\",text:\"@media\"},{name:\"FONT_FACE_SYM\",text:\"@font-face\"},{name:\"CHARSET_SYM\",text:\"@charset\"},{name:\"NAMESPACE_SYM\",text:\"@namespace\"},{name:\"SUPPORTS_SYM\",text:\"@supports\"},{name:\"VIEWPORT_SYM\",text:[\"@viewport\",\"@-ms-viewport\",\"@-o-viewport\"]},{name:\"DOCUMENT_SYM\",text:[\"@document\",\"@-moz-document\"]},{name:\"UNKNOWN_SYM\"},{name:\"KEYFRAMES_SYM\",text:[\"@keyframes\",\"@-webkit-keyframes\",\"@-moz-keyframes\",\"@-o-keyframes\"]},{name:\"IMPORTANT_SYM\"},{name:\"LENGTH\"},{name:\"ANGLE\"},{name:\"TIME\"},{name:\"FREQ\"},{name:\"DIMENSION\"},{name:\"PERCENTAGE\"},{name:\"NUMBER\"},{name:\"URI\"},{name:\"FUNCTION\"},{name:\"UNICODE_RANGE\"},{name:\"INVALID\"},{name:\"PLUS\",text:\"+\"},{name:\"GREATER\",text:\">\"},{name:\"COMMA\",text:\",\"},{name:\"TILDE\",text:\"~\"},{name:\"NOT\"},{name:\"TOPLEFTCORNER_SYM\",text:\"@top-left-corner\"},{name:\"TOPLEFT_SYM\",text:\"@top-left\"},{name:\"TOPCENTER_SYM\",text:\"@top-center\"},{name:\"TOPRIGHT_SYM\",text:\"@top-right\"},{name:\"TOPRIGHTCORNER_SYM\",text:\"@top-right-corner\"},{name:\"BOTTOMLEFTCORNER_SYM\",text:\"@bottom-left-corner\"},{name:\"BOTTOMLEFT_SYM\",text:\"@bottom-left\"},{name:\"BOTTOMCENTER_SYM\",text:\"@bottom-center\"},{name:\"BOTTOMRIGHT_SYM\",text:\"@bottom-right\"},{name:\"BOTTOMRIGHTCORNER_SYM\",text:\"@bottom-right-corner\"},{name:\"LEFTTOP_SYM\",text:\"@left-top\"},{name:\"LEFTMIDDLE_SYM\",text:\"@left-middle\"},{name:\"LEFTBOTTOM_SYM\",text:\"@left-bottom\"},{name:\"RIGHTTOP_SYM\",text:\"@right-top\"},{name:\"RIGHTMIDDLE_SYM\",text:\"@right-middle\"},{name:\"RIGHTBOTTOM_SYM\",text:\"@right-bottom\"},{name:\"RESOLUTION\",state:\"media\"},{name:\"IE_FUNCTION\"},{name:\"CHAR\"},{name:\"PIPE\",text:\"|\"},{name:\"SLASH\",text:\"/\"},{name:\"MINUS\",text:\"-\"},{name:\"STAR\",text:\"*\"},{name:\"LBRACE\",endChar:\"}\",text:\"{\"},{name:\"RBRACE\",text:\"}\"},{name:\"LBRACKET\",endChar:\"]\",text:\"[\"},{name:\"RBRACKET\",text:\"]\"},{name:\"EQUALS\",text:\"=\"},{name:\"COLON\",text:\":\"},{name:\"SEMICOLON\",text:\";\"},{name:\"LPAREN\",endChar:\")\",text:\"(\"},{name:\"RPAREN\",text:\")\"},{name:\"DOT\",text:\".\"}];!function(){var e=[],t=Object.create(null);n.UNKNOWN=-1,n.unshift({name:\"EOF\"});for(var r=0,i=n.length;r<i;r++)if(e.push(n[r].name),n[n[r].name]=r,n[r].text)if(n[r].text instanceof Array)for(var o=0;o<n[r].text.length;o++)t[n[r].text[o]]=r;else t[n[r].text]=r;n.name=function(t){return e[t]},n.type=function(e){return t[e]||-1}}()},{}],19:[function(e,t,r){\"use strict\";var n=e(\"./Matcher\"),i=e(\"./Properties\"),o=e(\"./ValidationTypes\"),a=e(\"./ValidationError\"),s=e(\"./PropertyValueIterator\");t.exports={validate:function(e,t){var r,n=e.toString().toLowerCase(),l=new s(t),u=i[n];if(u){if(\"number\"!==typeof u){if(o.isAny(l,\"inherit | initial | unset\")){if(l.hasNext())throw r=l.next(),new a(\"Expected end of value but found '\"+r+\"'.\",r.line,r.col);return}this.singleProperty(u,l)}}else if(0!==n.indexOf(\"-\"))throw new a(\"Unknown property '\"+e+\"'.\",e.line,e.col)},singleProperty:function(e,t){var r,i=t.value;if(!n.parse(e).match(t))throw t.hasNext()&&!t.isFirst()?(r=t.peek(),new a(\"Expected end of value but found '\"+r+\"'.\",r.line,r.col)):new a(\"Expected (\"+o.describe(e)+\") but found '\"+i+\"'.\",i.line,i.col);if(t.hasNext())throw r=t.next(),new a(\"Expected end of value but found '\"+r+\"'.\",r.line,r.col)}}},{\"./Matcher\":3,\"./Properties\":7,\"./PropertyValueIterator\":10,\"./ValidationError\":20,\"./ValidationTypes\":21}],20:[function(e,t,r){\"use strict\";function n(e,t,r){this.col=r,this.line=t,this.message=e}t.exports=n,n.prototype=new Error},{}],21:[function(e,t,r){\"use strict\";var n,i,o=t.exports,a=e(\"./Matcher\");n=o,i={isLiteral:function(e,t){var r,n,i=e.text.toString().toLowerCase(),o=t.split(\" | \"),a=!1;for(r=0,n=o.length;r<n&&!a;r++)\"<\"===o[r].charAt(0)?a=this.simple[o[r]](e):\"()\"===o[r].slice(-2)?a=\"function\"===e.type&&e.name===o[r].slice(0,-2):i===o[r].toLowerCase()&&(a=!0);return a},isSimple:function(e){return Boolean(this.simple[e])},isComplex:function(e){return Boolean(this.complex[e])},describe:function(e){return this.complex[e]instanceof a?this.complex[e].toString(0):e},isAny:function(e,t){var r,n,i=t.split(\" | \"),o=!1;for(r=0,n=i.length;r<n&&!o&&e.hasNext();r++)o=this.isType(e,i[r]);return o},isAnyOfGroup:function(e,t){var r,n,i=t.split(\" || \"),o=!1;for(r=0,n=i.length;r<n&&!o;r++)o=this.isType(e,i[r]);return!!o&&i[r-1]},isType:function(e,t){var r=e.peek(),n=!1;return\"<\"!==t.charAt(0)?(n=this.isLiteral(r,t))&&e.next():this.simple[t]?(n=this.simple[t](r))&&e.next():n=this.complex[t]instanceof a?this.complex[t].match(e):this.complex[t](e),n},simple:{__proto__:null,\"<absolute-size>\":\"xx-small | x-small | small | medium | large | x-large | xx-large\",\"<animateable-feature>\":\"scroll-position | contents | <animateable-feature-name>\",\"<animateable-feature-name>\":function(e){return this[\"<ident>\"](e)&&!/^(unset|initial|inherit|will-change|auto|scroll-position|contents)$/i.test(e)},\"<angle>\":function(e){return\"angle\"===e.type},\"<attachment>\":\"scroll | fixed | local\",\"<attr>\":\"attr()\",\"<basic-shape>\":\"inset() | circle() | ellipse() | polygon()\",\"<bg-image>\":\"<image> | <gradient> | none\",\"<border-style>\":\"none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset\",\"<border-width>\":\"<length> | thin | medium | thick\",\"<box>\":\"padding-box | border-box | content-box\",\"<clip-source>\":\"<uri>\",\"<color>\":function(e){return\"color\"===e.type||\"transparent\"===String(e)||\"currentColor\"===String(e)},\"<color-svg>\":function(e){return\"color\"===e.type},\"<content>\":\"content()\",\"<content-sizing>\":\"fill-available | -moz-available | -webkit-fill-available | max-content | -moz-max-content | -webkit-max-content | min-content | -moz-min-content | -webkit-min-content | fit-content | -moz-fit-content | -webkit-fit-content\",\"<feature-tag-value>\":function(e){return\"function\"===e.type&&/^[A-Z0-9]{4}$/i.test(e)},\"<filter-function>\":\"blur() | brightness() | contrast() | custom() | drop-shadow() | grayscale() | hue-rotate() | invert() | opacity() | saturate() | sepia()\",\"<flex-basis>\":\"<width>\",\"<flex-direction>\":\"row | row-reverse | column | column-reverse\",\"<flex-grow>\":\"<number>\",\"<flex-shrink>\":\"<number>\",\"<flex-wrap>\":\"nowrap | wrap | wrap-reverse\",\"<font-size>\":\"<absolute-size> | <relative-size> | <length> | <percentage>\",\"<font-stretch>\":\"normal | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded\",\"<font-style>\":\"normal | italic | oblique\",\"<font-variant-caps>\":\"small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps\",\"<font-variant-css21>\":\"normal | small-caps\",\"<font-weight>\":\"normal | bold | bolder | lighter | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900\",\"<generic-family>\":\"serif | sans-serif | cursive | fantasy | monospace\",\"<geometry-box>\":\"<shape-box> | fill-box | stroke-box | view-box\",\"<glyph-angle>\":function(e){return\"angle\"===e.type&&\"deg\"===e.units},\"<gradient>\":function(e){return\"function\"===e.type&&/^(?:-(?:ms|moz|o|webkit)-)?(?:repeating-)?(?:radial-|linear-)?gradient/i.test(e)},\"<icccolor>\":\"cielab() | cielch() | cielchab() | icc-color() | icc-named-color()\",\"<ident>\":function(e){return\"identifier\"===e.type||e.wasIdent},\"<ident-not-generic-family>\":function(e){return this[\"<ident>\"](e)&&!this[\"<generic-family>\"](e)},\"<image>\":\"<uri>\",\"<integer>\":function(e){return\"integer\"===e.type},\"<length>\":function(e){return!(\"function\"!==e.type||!/^(?:-(?:ms|moz|o|webkit)-)?calc/i.test(e))||\"length\"===e.type||\"number\"===e.type||\"integer\"===e.type||\"0\"===String(e)},\"<line>\":function(e){return\"integer\"===e.type},\"<line-height>\":\"<number> | <length> | <percentage> | normal\",\"<margin-width>\":\"<length> | <percentage> | auto\",\"<miterlimit>\":function(e){return this[\"<number>\"](e)&&e.value>=1},\"<nonnegative-length-or-percentage>\":function(e){return(this[\"<length>\"](e)||this[\"<percentage>\"](e))&&(\"0\"===String(e)||\"function\"===e.type||e.value>=0)},\"<nonnegative-number-or-percentage>\":function(e){return(this[\"<number>\"](e)||this[\"<percentage>\"](e))&&(\"0\"===String(e)||\"function\"===e.type||e.value>=0)},\"<number>\":function(e){return\"number\"===e.type||this[\"<integer>\"](e)},\"<opacity-value>\":function(e){return this[\"<number>\"](e)&&e.value>=0&&e.value<=1},\"<padding-width>\":\"<nonnegative-length-or-percentage>\",\"<percentage>\":function(e){return\"percentage\"===e.type||\"0\"===String(e)},\"<relative-size>\":\"smaller | larger\",\"<shape>\":\"rect() | inset-rect()\",\"<shape-box>\":\"<box> | margin-box\",\"<single-animation-direction>\":\"normal | reverse | alternate | alternate-reverse\",\"<single-animation-name>\":function(e){return this[\"<ident>\"](e)&&/^-?[a-z_][-a-z0-9_]+$/i.test(e)&&!/^(none|unset|initial|inherit)$/i.test(e)},\"<string>\":function(e){return\"string\"===e.type},\"<time>\":function(e){return\"time\"===e.type},\"<uri>\":function(e){return\"uri\"===e.type},\"<width>\":\"<margin-width>\"},complex:{__proto__:null,\"<azimuth>\":\"<angle> | [ [ left-side | far-left | left | center-left | center | center-right | right | far-right | right-side ] || behind ] | leftwards | rightwards\",\"<bg-position>\":\"<position>#\",\"<bg-size>\":\"[ <length> | <percentage> | auto ]{1,2} | cover | contain\",\"<blend-mode>\":\"normal | multiply | screen | overlay | darken | lighten | color-dodge | color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity\",\"<border-image-slice>\":a.many([!0],a.cast(\"<nonnegative-number-or-percentage>\"),a.cast(\"<nonnegative-number-or-percentage>\"),a.cast(\"<nonnegative-number-or-percentage>\"),a.cast(\"<nonnegative-number-or-percentage>\"),\"fill\"),\"<border-radius>\":\"<nonnegative-length-or-percentage>{1,4} [ / <nonnegative-length-or-percentage>{1,4} ]?\",\"<box-shadow>\":\"none | <shadow>#\",\"<clip-path>\":\"<basic-shape> || <geometry-box>\",\"<dasharray>\":a.cast(\"<nonnegative-length-or-percentage>\").braces(1,1/0,\"#\",a.cast(\",\").question()),\"<family-name>\":\"<string> | <ident-not-generic-family> <ident>*\",\"<filter-function-list>\":\"[ <filter-function> | <uri> ]+\",\"<flex>\":\"none | [ <flex-grow> <flex-shrink>? || <flex-basis> ]\",\"<font-family>\":\"[ <generic-family> | <family-name> ]#\",\"<font-shorthand>\":\"[ <font-style> || <font-variant-css21> || <font-weight> || <font-stretch> ]? <font-size> [ / <line-height> ]? <font-family>\",\"<font-variant-alternates>\":\"stylistic() || historical-forms || styleset() || character-variant() || swash() || ornaments() || annotation()\",\"<font-variant-ligatures>\":\"[ common-ligatures | no-common-ligatures ] || [ discretionary-ligatures | no-discretionary-ligatures ] || [ historical-ligatures | no-historical-ligatures ] || [ contextual | no-contextual ]\",\"<font-variant-numeric>\":\"[ lining-nums | oldstyle-nums ] || [ proportional-nums | tabular-nums ] || [ diagonal-fractions | stacked-fractions ] || ordinal || slashed-zero\",\"<font-variant-east-asian>\":\"[ jis78 | jis83 | jis90 | jis04 | simplified | traditional ] || [ full-width | proportional-width ] || ruby\",\"<paint>\":\"<paint-basic> | <uri> <paint-basic>?\",\"<paint-basic>\":\"none | currentColor | <color-svg> <icccolor>?\",\"<position>\":\"[ center | [ left | right ] [ <percentage> | <length> ]? ] && [ center | [ top | bottom ] [ <percentage> | <length> ]? ] | [ left | center | right | <percentage> | <length> ] [ top | center | bottom | <percentage> | <length> ] | [ left | center | right | top | bottom | <percentage> | <length> ]\",\"<repeat-style>\":\"repeat-x | repeat-y | [ repeat | space | round | no-repeat ]{1,2}\",\"<shadow>\":a.many([!0],a.cast(\"<length>\").braces(2,4),\"inset\",\"<color>\"),\"<text-decoration-color>\":\"<color>\",\"<text-decoration-line>\":\"none | [ underline || overline || line-through || blink ]\",\"<text-decoration-style>\":\"solid | double | dotted | dashed | wavy\",\"<will-change>\":\"auto | <animateable-feature>#\",\"<x-one-radius>\":\"[ <length> | <percentage> ]{1,2}\"}},Object.keys(i).forEach((function(e){n[e]=i[e]})),Object.keys(o.simple).forEach((function(e){var t=o.simple[e];\"string\"===typeof t&&(o.simple[e]=function(e){return o.isLiteral(e,t)})})),Object.keys(o.complex).forEach((function(e){var t=o.complex[e];\"string\"===typeof t&&(o.complex[e]=a.parse(t))})),o.complex[\"<font-variant>\"]=a.oror({expand:\"<font-variant-ligatures>\"},{expand:\"<font-variant-alternates>\"},\"<font-variant-caps>\",{expand:\"<font-variant-numeric>\"},{expand:\"<font-variant-east-asian>\"})},{\"./Matcher\":3}],22:[function(e,t,r){\"use strict\";t.exports={Colors:e(\"./Colors\"),Combinator:e(\"./Combinator\"),Parser:e(\"./Parser\"),PropertyName:e(\"./PropertyName\"),PropertyValue:e(\"./PropertyValue\"),PropertyValuePart:e(\"./PropertyValuePart\"),Matcher:e(\"./Matcher\"),MediaFeature:e(\"./MediaFeature\"),MediaQuery:e(\"./MediaQuery\"),Selector:e(\"./Selector\"),SelectorPart:e(\"./SelectorPart\"),SelectorSubPart:e(\"./SelectorSubPart\"),Specificity:e(\"./Specificity\"),TokenStream:e(\"./TokenStream\"),Tokens:e(\"./Tokens\"),ValidationError:e(\"./ValidationError\")}},{\"./Colors\":1,\"./Combinator\":2,\"./Matcher\":3,\"./MediaFeature\":4,\"./MediaQuery\":5,\"./Parser\":6,\"./PropertyName\":8,\"./PropertyValue\":9,\"./PropertyValuePart\":11,\"./Selector\":13,\"./SelectorPart\":14,\"./SelectorSubPart\":15,\"./Specificity\":16,\"./TokenStream\":17,\"./Tokens\":18,\"./ValidationError\":20}],23:[function(e,t,r){\"use strict\";function n(){this._listeners=Object.create(null)}t.exports=n,n.prototype={constructor:n,addListener:function(e,t){this._listeners[e]||(this._listeners[e]=[]),this._listeners[e].push(t)},fire:function(e){if(\"string\"===typeof e&&(e={type:e}),\"undefined\"!==typeof e.target&&(e.target=this),\"undefined\"===typeof e.type)throw new Error(\"Event object missing 'type' property.\");if(this._listeners[e.type])for(var t=this._listeners[e.type].concat(),r=0,n=t.length;r<n;r++)t[r].call(this,e)},removeListener:function(e,t){if(this._listeners[e])for(var r=this._listeners[e],n=0,i=r.length;n<i;n++)if(r[n]===t){r.splice(n,1);break}}}},{}],24:[function(e,t,r){\"use strict\";function n(e){this._input=e.replace(/(\\r\\n?|\\n)/g,\"\\n\"),this._line=1,this._col=1,this._cursor=0}t.exports=n,n.prototype={constructor:n,getCol:function(){return this._col},getLine:function(){return this._line},eof:function(){return this._cursor===this._input.length},peek:function(e){var t=null;return e=\"undefined\"===typeof e?1:e,this._cursor<this._input.length&&(t=this._input.charAt(this._cursor+e-1)),t},read:function(){var e=null;return this._cursor<this._input.length&&(\"\\n\"===this._input.charAt(this._cursor)?(this._line++,this._col=1):this._col++,e=this._input.charAt(this._cursor++)),e},mark:function(){this._bookmark={cursor:this._cursor,line:this._line,col:this._col}},reset:function(){this._bookmark&&(this._cursor=this._bookmark.cursor,this._line=this._bookmark.line,this._col=this._bookmark.col,delete this._bookmark)},peekCount:function(e){return e=\"undefined\"===typeof e?1:Math.max(e,0),this._input.substring(this._cursor,this._cursor+e)},readTo:function(e){for(var t,r=\"\";r.length<e.length||r.lastIndexOf(e)!==r.length-e.length;){if(!(t=this.read()))throw new Error('Expected \"'+e+'\" at line '+this._line+\", col \"+this._col+\".\");r+=t}return r},readWhile:function(e){for(var t=\"\",r=this.peek();null!==r&&e(r);)t+=this.read(),r=this.peek();return t},readMatch:function(e){var t=this._input.substring(this._cursor),r=null;return\"string\"===typeof e?t.slice(0,e.length)===e&&(r=this.readCount(e.length)):e instanceof RegExp&&e.test(t)&&(r=this.readCount(RegExp.lastMatch.length)),r},readCount:function(e){for(var t=\"\";e--;)t+=this.read();return t}}},{}],25:[function(e,t,r){\"use strict\";function n(e,t,r){Error.call(this),this.name=this.constructor.name,this.col=r,this.line=t,this.message=e}t.exports=n,n.prototype=Object.create(Error.prototype),n.prototype.constructor=n},{}],26:[function(e,t,r){\"use strict\";function n(e,t,r,n){this.col=r,this.line=t,this.text=e,this.type=n}t.exports=n,n.fromToken=function(e){return new n(e.value,e.startLine,e.startCol)},n.prototype={constructor:n,valueOf:function(){return this.toString()},toString:function(){return this.text}}},{}],27:[function(e,t,r){\"use strict\";t.exports=o;var n=e(\"./StringReader\"),i=e(\"./SyntaxError\");function o(e,t){this._reader=new n(e?e.toString():\"\"),this._token=null,this._tokenData=t,this._lt=[],this._ltIndex=0,this._ltIndexCache=[]}o.createTokenData=function(e){var t=[],r=Object.create(null),n=e.concat([]),i=0,o=n.length+1;for(n.UNKNOWN=-1,n.unshift({name:\"EOF\"});i<o;i++)t.push(n[i].name),n[n[i].name]=i,n[i].text&&(r[n[i].text]=i);return n.name=function(e){return t[e]},n.type=function(e){return r[e]},n},o.prototype={constructor:o,match:function(e,t){e instanceof Array||(e=[e]);for(var r=this.get(t),n=0,i=e.length;n<i;)if(r===e[n++])return!0;return this.unget(),!1},mustMatch:function(e){var t;if(e instanceof Array||(e=[e]),!this.match.apply(this,arguments))throw t=this.LT(1),new i(\"Expected \"+this._tokenData[e[0]].name+\" at line \"+t.startLine+\", col \"+t.startCol+\".\",t.startLine,t.startCol)},advance:function(e,t){for(;0!==this.LA(0)&&!this.match(e,t);)this.get();return this.LA(0)},get:function(e){var t,r,n=this._tokenData,i=0;if(this._lt.length&&this._ltIndex>=0&&this._ltIndex<this._lt.length){for(i++,this._token=this._lt[this._ltIndex++],r=n[this._token.type];\"undefined\"!==typeof r.channel&&e!==r.channel&&this._ltIndex<this._lt.length;)this._token=this._lt[this._ltIndex++],r=n[this._token.type],i++;if((\"undefined\"===typeof r.channel||e===r.channel)&&this._ltIndex<=this._lt.length)return this._ltIndexCache.push(i),this._token.type}return(t=this._getToken()).type>-1&&!n[t.type].hide&&(t.channel=n[t.type].channel,this._token=t,this._lt.push(t),this._ltIndexCache.push(this._lt.length-this._ltIndex+i),this._lt.length>5&&this._lt.shift(),this._ltIndexCache.length>5&&this._ltIndexCache.shift(),this._ltIndex=this._lt.length),(r=n[t.type])&&(r.hide||\"undefined\"!==typeof r.channel&&e!==r.channel)?this.get(e):t.type},LA:function(e){var t,r=e;if(e>0){if(e>5)throw new Error(\"Too much lookahead.\");for(;r;)t=this.get(),r--;for(;r<e;)this.unget(),r++}else if(e<0){if(!this._lt[this._ltIndex+e])throw new Error(\"Too much lookbehind.\");t=this._lt[this._ltIndex+e].type}else t=this._token.type;return t},LT:function(e){return this.LA(e),this._lt[this._ltIndex+e-1]},peek:function(){return this.LA(1)},token:function(){return this._token},tokenName:function(e){return e<0||e>this._tokenData.length?\"UNKNOWN_TOKEN\":this._tokenData[e].name},tokenType:function(e){return this._tokenData[e]||-1},unget:function(){if(!this._ltIndexCache.length)throw new Error(\"Too much lookahead.\");this._ltIndex-=this._ltIndexCache.pop(),this._token=this._lt[this._ltIndex-1]}}},{\"./StringReader\":24,\"./SyntaxError\":25}],28:[function(e,t,r){\"use strict\";t.exports={StringReader:e(\"./StringReader\"),SyntaxError:e(\"./SyntaxError\"),SyntaxUnit:e(\"./SyntaxUnit\"),EventTarget:e(\"./EventTarget\"),TokenStreamBase:e(\"./TokenStreamBase\")}},{\"./EventTarget\":23,\"./StringReader\":24,\"./SyntaxError\":25,\"./SyntaxUnit\":26,\"./TokenStreamBase\":27}],parserlib:[function(e,t,r){\"use strict\";t.exports={css:e(\"./css\"),util:e(\"./util\")}},{\"./css\":22,\"./util\":28}]},{},[]),e(\"parserlib\")}(),r=function(){\"use strict\";function e(e,t){return null!=t&&e instanceof t}var t,r,n;try{t=Map}catch(s){t=function(){}}try{r=Set}catch(s){r=function(){}}try{n=Promise}catch(s){n=function(){}}function i(o,s,l,u,c){\"object\"===typeof s&&(l=s.depth,u=s.prototype,c=s.includeNonEnumerable,s=s.circular);var h=[],d=[],p=\"undefined\"!=typeof Buffer;return\"undefined\"==typeof s&&(s=!0),\"undefined\"==typeof l&&(l=1/0),function o(l,f){if(null===l)return null;if(0===f)return l;var m,g;if(\"object\"!=typeof l)return l;if(e(l,t))m=new t;else if(e(l,r))m=new r;else if(e(l,n))m=new n((function(e,t){l.then((function(t){e(o(t,f-1))}),(function(e){t(o(e,f-1))}))}));else if(i.__isArray(l))m=[];else if(i.__isRegExp(l))m=new RegExp(l.source,a(l)),l.lastIndex&&(m.lastIndex=l.lastIndex);else if(i.__isDate(l))m=new Date(l.getTime());else{if(p&&Buffer.isBuffer(l))return m=Buffer.allocUnsafe?Buffer.allocUnsafe(l.length):new Buffer(l.length),l.copy(m),m;e(l,Error)?m=Object.create(l):\"undefined\"==typeof u?(g=Object.getPrototypeOf(l),m=Object.create(g)):(m=Object.create(u),g=u)}if(s){var b=h.indexOf(l);if(-1!=b)return d[b];h.push(l),d.push(m)}for(var w in e(l,t)&&l.forEach((function(e,t){var r=o(t,f-1),n=o(e,f-1);m.set(r,n)})),e(l,r)&&l.forEach((function(e){var t=o(e,f-1);m.add(t)})),l){var y;g&&(y=Object.getOwnPropertyDescriptor(g,w)),y&&null==y.set||(m[w]=o(l[w],f-1))}if(Object.getOwnPropertySymbols){var k=Object.getOwnPropertySymbols(l);for(w=0;w<k.length;w++){var v=k[w];(!(x=Object.getOwnPropertyDescriptor(l,v))||x.enumerable||c)&&(m[v]=o(l[v],f-1),x.enumerable||Object.defineProperty(m,v,{enumerable:!1}))}}if(c){var _=Object.getOwnPropertyNames(l);for(w=0;w<_.length;w++){var x,E=_[w];(x=Object.getOwnPropertyDescriptor(l,E))&&x.enumerable||(m[E]=o(l[E],f-1),Object.defineProperty(m,E,{enumerable:!1}))}}return m}(o,l)}function o(e){return Object.prototype.toString.call(e)}function a(e){var t=\"\";return e.global&&(t+=\"g\"),e.ignoreCase&&(t+=\"i\"),e.multiline&&(t+=\"m\"),t}return i.clonePrototype=function(e){if(null===e)return null;var t=function(){};return t.prototype=e,new t},i.__objToStr=o,i.__isDate=function(e){return\"object\"===typeof e&&\"[object Date]\"===o(e)},i.__isArray=function(e){return\"object\"===typeof e&&\"[object Array]\"===o(e)},i.__isRegExp=function(e){return\"object\"===typeof e&&\"[object RegExp]\"===o(e)},i.__getRegExpFlags=a,i}();\"object\"===typeof e&&e.exports&&(e.exports=r);var n=function(){\"use strict\";var e=[],o=[],a=/\\/\\*\\s*csslint([^\\*]*)\\*\\//,s=new t.util.EventTarget;return s.version=\"1.0.5\",s.addRule=function(t){e.push(t),e[t.id]=t},s.clearRules=function(){e=[]},s.getRules=function(){return[].concat(e).sort((function(e,t){return e.id>t.id?1:0}))},s.getRuleset=function(){for(var t={},r=0,n=e.length;r<n;)t[e[r++].id]=1;return t},s.addFormatter=function(e){o[e.id]=e},s.getFormatter=function(e){return o[e]},s.format=function(e,t,r,n){var i=s.getFormatter(r),o=null;return i&&(o=i.startFormat(),o+=i.formatResults(e,t,n||{}),o+=i.endFormat()),o},s.hasFormat=function(e){return o.hasOwnProperty(e)},s.verify=function(o,l){var u,c,h,d=0,p={},f=[],m=new t.css.Parser({starHack:!0,ieFilters:!0,underscoreHack:!0,strict:!1});c=o.replace(/\\n\\r?/g,\"$split$\").split(\"$split$\"),n.Util.forEach(c,(function(e,t){var r=e&&e.match(/\\/\\*[ \\t]*csslint[ \\t]+allow:[ \\t]*([^\\*]*)\\*\\//i),n=r&&r[1],i={};n&&(n.toLowerCase().split(\",\").forEach((function(e){i[e.trim()]=!0})),Object.keys(i).length>0&&(p[t+1]=i))}));var g=null,b=null;for(d in n.Util.forEach(c,(function(e,t){null===g&&e.match(/\\/\\*[ \\t]*csslint[ \\t]+ignore:start[ \\t]*\\*\\//i)&&(g=t),e.match(/\\/\\*[ \\t]*csslint[ \\t]+ignore:end[ \\t]*\\*\\//i)&&(b=t),null!==g&&null!==b&&(f.push([g,b]),g=b=null)})),null!==g&&f.push([g,c.length]),l||(l=s.getRuleset()),a.test(o)&&(l=function(e,t){var r,n=e&&e.match(a),i=n&&n[1];return i&&(r={true:2,\"\":1,false:0,2:2,1:1,0:0},i.toLowerCase().split(\",\").forEach((function(e){var n=e.split(\":\"),i=n[0]||\"\",o=n[1]||\"\";t[i.trim()]=r[o.trim()]}))),t}(o,l=r(l))),u=new i(c,l,p,f),l.errors=2,l)l.hasOwnProperty(d)&&l[d]&&e[d]&&e[d].init(m,u);try{m.parse(o)}catch(w){u.error(\"Fatal error, cannot continue: \"+w.message,w.line,w.col,{})}return(h={messages:u.messages,stats:u.stats,ruleset:u.ruleset,allow:u.allow,ignore:u.ignore}).messages.sort((function(e,t){return e.rollup&&!t.rollup?1:!e.rollup&&t.rollup?-1:e.line-t.line})),h},s}();function i(e,t,r,n){\"use strict\";this.messages=[],this.stats=[],this.lines=e,this.ruleset=t,this.allow=r,this.allow||(this.allow={}),this.ignore=n,this.ignore||(this.ignore=[])}return i.prototype={constructor:i,error:function(e,t,r,n){\"use strict\";this.messages.push({type:\"error\",line:t,col:r,message:e,evidence:this.lines[t-1],rule:n||{}})},warn:function(e,t,r,n){\"use strict\";this.report(e,t,r,n)},report:function(e,t,r,n){\"use strict\";this.allow.hasOwnProperty(t)&&this.allow[t].hasOwnProperty(n.id)||this.isIgnored(t)||this.messages.push({type:2===this.ruleset[n.id]?\"error\":\"warning\",line:t,col:r,message:e,evidence:this.lines[t-1],rule:n})},info:function(e,t,r,n){\"use strict\";this.messages.push({type:\"info\",line:t,col:r,message:e,evidence:this.lines[t-1],rule:n})},rollupError:function(e,t){\"use strict\";this.messages.push({type:\"error\",rollup:!0,message:e,rule:t})},rollupWarn:function(e,t){\"use strict\";this.messages.push({type:\"warning\",rollup:!0,message:e,rule:t})},stat:function(e,t){\"use strict\";this.stats[e]=t},isIgnored:function(e){\"use strict\";var t=!1;return n.Util.forEach(this.ignore,(function(r){r[0]<=e&&e<=r[1]&&(t=!0)})),t}},n._Reporter=i,n.Util={mix:function(e,t){\"use strict\";var r;for(r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);return r},indexOf:function(e,t){\"use strict\";if(e.indexOf)return e.indexOf(t);for(var r=0,n=e.length;r<n;r++)if(e[r]===t)return r;return-1},forEach:function(e,t){\"use strict\";if(e.forEach)return e.forEach(t);for(var r=0,n=e.length;r<n;r++)t(e[r],r,e)}},n.addRule({id:\"box-model\",name:\"Beware of broken box size\",desc:\"Don't use width or height when using padding or border.\",url:\"https://github.com/CSSLint/csslint/wiki/Beware-of-box-model-size\",browsers:\"All\",init:function(e,t){\"use strict\";var r,n=this,i={border:1,\"border-left\":1,\"border-right\":1,padding:1,\"padding-left\":1,\"padding-right\":1},o={border:1,\"border-bottom\":1,\"border-top\":1,padding:1,\"padding-bottom\":1,\"padding-top\":1},a=!1;function s(){r={},a=!1}function l(){var e,s;if(!a){if(r.height)for(e in o)o.hasOwnProperty(e)&&r[e]&&(s=r[e].value,\"padding\"===e&&2===s.parts.length&&0===s.parts[0].value||t.report(\"Using height with \"+e+\" can sometimes make elements larger than you expect.\",r[e].line,r[e].col,n));if(r.width)for(e in i)i.hasOwnProperty(e)&&r[e]&&(s=r[e].value,\"padding\"===e&&2===s.parts.length&&0===s.parts[1].value||t.report(\"Using width with \"+e+\" can sometimes make elements larger than you expect.\",r[e].line,r[e].col,n))}}e.addListener(\"startrule\",s),e.addListener(\"startfontface\",s),e.addListener(\"startpage\",s),e.addListener(\"startpagemargin\",s),e.addListener(\"startkeyframerule\",s),e.addListener(\"startviewport\",s),e.addListener(\"property\",(function(e){var t=e.property.text.toLowerCase();o[t]||i[t]?/^0\\S*$/.test(e.value)||\"border\"===t&&\"none\"===e.value.toString()||(r[t]={line:e.property.line,col:e.property.col,value:e.value}):/^(width|height)/i.test(t)&&/^(length|percentage)/.test(e.value.parts[0].type)?r[t]=1:\"box-sizing\"===t&&(a=!0)})),e.addListener(\"endrule\",l),e.addListener(\"endfontface\",l),e.addListener(\"endpage\",l),e.addListener(\"endpagemargin\",l),e.addListener(\"endkeyframerule\",l),e.addListener(\"endviewport\",l)}}),n.addRule({id:\"bulletproof-font-face\",name:\"Use the bulletproof @font-face syntax\",desc:\"Use the bulletproof @font-face syntax to avoid 404's in old IE (http://www.fontspring.com/blog/the-new-bulletproof-font-face-syntax).\",url:\"https://github.com/CSSLint/csslint/wiki/Bulletproof-font-face\",browsers:\"All\",init:function(e,t){\"use strict\";var r,n,i=this,o=!1,a=!0,s=!1;e.addListener(\"startfontface\",(function(){o=!0})),e.addListener(\"property\",(function(e){if(o){var t=e.property.toString().toLowerCase(),i=e.value.toString();if(r=e.line,n=e.col,\"src\"===t){var l=/^\\s?url\\(['\"].+\\.eot\\?.*['\"]\\)\\s*format\\(['\"]embedded-opentype['\"]\\).*$/i;!i.match(l)&&a?(s=!0,a=!1):i.match(l)&&!a&&(s=!1)}}})),e.addListener(\"endfontface\",(function(){o=!1,s&&t.report(\"@font-face declaration doesn't follow the fontspring bulletproof syntax.\",r,n,i)}))}}),n.addRule({id:\"compatible-vendor-prefixes\",name:\"Require compatible vendor prefixes\",desc:\"Include all compatible vendor prefixes to reach a wider range of users.\",url:\"https://github.com/CSSLint/csslint/wiki/Require-compatible-vendor-prefixes\",browsers:\"All\",init:function(e,t){\"use strict\";var r,i,o,a,s,l,u,c=this,h=!1,d=Array.prototype.push,p=[];for(o in r={animation:\"webkit\",\"animation-delay\":\"webkit\",\"animation-direction\":\"webkit\",\"animation-duration\":\"webkit\",\"animation-fill-mode\":\"webkit\",\"animation-iteration-count\":\"webkit\",\"animation-name\":\"webkit\",\"animation-play-state\":\"webkit\",\"animation-timing-function\":\"webkit\",appearance:\"webkit moz\",\"border-end\":\"webkit moz\",\"border-end-color\":\"webkit moz\",\"border-end-style\":\"webkit moz\",\"border-end-width\":\"webkit moz\",\"border-image\":\"webkit moz o\",\"border-radius\":\"webkit\",\"border-start\":\"webkit moz\",\"border-start-color\":\"webkit moz\",\"border-start-style\":\"webkit moz\",\"border-start-width\":\"webkit moz\",\"box-align\":\"webkit moz\",\"box-direction\":\"webkit moz\",\"box-flex\":\"webkit moz\",\"box-lines\":\"webkit\",\"box-ordinal-group\":\"webkit moz\",\"box-orient\":\"webkit moz\",\"box-pack\":\"webkit moz\",\"box-sizing\":\"\",\"box-shadow\":\"\",\"column-count\":\"webkit moz ms\",\"column-gap\":\"webkit moz ms\",\"column-rule\":\"webkit moz ms\",\"column-rule-color\":\"webkit moz ms\",\"column-rule-style\":\"webkit moz ms\",\"column-rule-width\":\"webkit moz ms\",\"column-width\":\"webkit moz ms\",flex:\"webkit ms\",\"flex-basis\":\"webkit\",\"flex-direction\":\"webkit ms\",\"flex-flow\":\"webkit\",\"flex-grow\":\"webkit\",\"flex-shrink\":\"webkit\",hyphens:\"epub moz\",\"line-break\":\"webkit ms\",\"margin-end\":\"webkit moz\",\"margin-start\":\"webkit moz\",\"marquee-speed\":\"webkit wap\",\"marquee-style\":\"webkit wap\",\"padding-end\":\"webkit moz\",\"padding-start\":\"webkit moz\",\"tab-size\":\"moz o\",\"text-size-adjust\":\"webkit ms\",transform:\"webkit ms\",\"transform-origin\":\"webkit ms\",transition:\"\",\"transition-delay\":\"\",\"transition-duration\":\"\",\"transition-property\":\"\",\"transition-timing-function\":\"\",\"user-modify\":\"webkit moz\",\"user-select\":\"webkit moz ms\",\"word-break\":\"epub ms\",\"writing-mode\":\"epub ms\"})if(r.hasOwnProperty(o)){for(a=[],l=0,u=(s=r[o].split(\" \")).length;l<u;l++)a.push(\"-\"+s[l]+\"-\"+o);r[o]=a,d.apply(p,a)}e.addListener(\"startrule\",(function(){i=[]})),e.addListener(\"startkeyframes\",(function(e){h=e.prefix||!0})),e.addListener(\"endkeyframes\",(function(){h=!1})),e.addListener(\"property\",(function(e){var t=e.property;n.Util.indexOf(p,t.text)>-1&&(h&&\"string\"===typeof h&&0===t.text.indexOf(\"-\"+h+\"-\")||i.push(t))})),e.addListener(\"endrule\",(function(){if(i.length){var e,o,a,s,l,u,h,d,p,f,m={};for(e=0,o=i.length;e<o;e++)for(s in a=i[e],r)r.hasOwnProperty(s)&&(l=r[s],n.Util.indexOf(l,a.text)>-1&&(m[s]||(m[s]={full:l.slice(0),actual:[],actualNodes:[]}),-1===n.Util.indexOf(m[s].actual,a.text)&&(m[s].actual.push(a.text),m[s].actualNodes.push(a))));for(s in m)if(m.hasOwnProperty(s)&&(h=(u=m[s]).full,d=u.actual,h.length>d.length))for(e=0,o=h.length;e<o;e++)p=h[e],-1===n.Util.indexOf(d,p)&&(f=1===d.length?d[0]:2===d.length?d.join(\" and \"):d.join(\", \"),t.report(\"The property \"+p+\" is compatible with \"+f+\" and should be included as well.\",u.actualNodes[0].line,u.actualNodes[0].col,c))}}))}}),n.addRule({id:\"display-property-grouping\",name:\"Require properties appropriate for display\",desc:\"Certain properties shouldn't be used with certain display property values.\",url:\"https://github.com/CSSLint/csslint/wiki/Require-properties-appropriate-for-display\",browsers:\"All\",init:function(e,t){\"use strict\";var r,n=this,i={display:1,float:\"none\",height:1,width:1,margin:1,\"margin-left\":1,\"margin-right\":1,\"margin-bottom\":1,\"margin-top\":1,padding:1,\"padding-left\":1,\"padding-right\":1,\"padding-bottom\":1,\"padding-top\":1,\"vertical-align\":1};function o(e,o,a){r[e]&&(\"string\"===typeof i[e]&&r[e].value.toLowerCase()===i[e]||t.report(a||e+\" can't be used with display: \"+o+\".\",r[e].line,r[e].col,n))}function a(){r={}}function s(){var e=r.display?r.display.value:null;if(e)switch(e){case\"inline\":o(\"height\",e),o(\"width\",e),o(\"margin\",e),o(\"margin-top\",e),o(\"margin-bottom\",e),o(\"float\",e,\"display:inline has no effect on floated elements (but may be used to fix the IE6 double-margin bug).\");break;case\"block\":o(\"vertical-align\",e);break;case\"inline-block\":o(\"float\",e);break;default:0===e.indexOf(\"table-\")&&(o(\"margin\",e),o(\"margin-left\",e),o(\"margin-right\",e),o(\"margin-top\",e),o(\"margin-bottom\",e),o(\"float\",e))}}e.addListener(\"startrule\",a),e.addListener(\"startfontface\",a),e.addListener(\"startkeyframerule\",a),e.addListener(\"startpagemargin\",a),e.addListener(\"startpage\",a),e.addListener(\"startviewport\",a),e.addListener(\"property\",(function(e){var t=e.property.text.toLowerCase();i[t]&&(r[t]={value:e.value.text,line:e.property.line,col:e.property.col})})),e.addListener(\"endrule\",s),e.addListener(\"endfontface\",s),e.addListener(\"endkeyframerule\",s),e.addListener(\"endpagemargin\",s),e.addListener(\"endpage\",s),e.addListener(\"endviewport\",s)}}),n.addRule({id:\"duplicate-background-images\",name:\"Disallow duplicate background images\",desc:\"Every background-image should be unique. Use a common class for e.g. sprites.\",url:\"https://github.com/CSSLint/csslint/wiki/Disallow-duplicate-background-images\",browsers:\"All\",init:function(e,t){\"use strict\";var r=this,n={};e.addListener(\"property\",(function(e){var i,o,a=e.property.text,s=e.value;if(a.match(/background/i))for(i=0,o=s.parts.length;i<o;i++)\"uri\"===s.parts[i].type&&(\"undefined\"===typeof n[s.parts[i].uri]?n[s.parts[i].uri]=e:t.report(\"Background image '\"+s.parts[i].uri+\"' was used multiple times, first declared at line \"+n[s.parts[i].uri].line+\", col \"+n[s.parts[i].uri].col+\".\",e.line,e.col,r))}))}}),n.addRule({id:\"duplicate-properties\",name:\"Disallow duplicate properties\",desc:\"Duplicate properties must appear one after the other.\",url:\"https://github.com/CSSLint/csslint/wiki/Disallow-duplicate-properties\",browsers:\"All\",init:function(e,t){\"use strict\";var r,n,i=this;function o(){r={}}e.addListener(\"startrule\",o),e.addListener(\"startfontface\",o),e.addListener(\"startpage\",o),e.addListener(\"startpagemargin\",o),e.addListener(\"startkeyframerule\",o),e.addListener(\"startviewport\",o),e.addListener(\"property\",(function(e){var o=e.property.text.toLowerCase();!r[o]||n===o&&r[o]!==e.value.text||t.report(\"Duplicate property '\"+e.property+\"' found.\",e.line,e.col,i),r[o]=e.value.text,n=o}))}}),n.addRule({id:\"empty-rules\",name:\"Disallow empty rules\",desc:\"Rules without any properties specified should be removed.\",url:\"https://github.com/CSSLint/csslint/wiki/Disallow-empty-rules\",browsers:\"All\",init:function(e,t){\"use strict\";var r=this,n=0;e.addListener(\"startrule\",(function(){n=0})),e.addListener(\"property\",(function(){n++})),e.addListener(\"endrule\",(function(e){var i=e.selectors;0===n&&t.report(\"Rule is empty.\",i[0].line,i[0].col,r)}))}}),n.addRule({id:\"errors\",name:\"Parsing Errors\",desc:\"This rule looks for recoverable syntax errors.\",browsers:\"All\",init:function(e,t){\"use strict\";var r=this;e.addListener(\"error\",(function(e){t.error(e.message,e.line,e.col,r)}))}}),n.addRule({id:\"floats\",name:\"Disallow too many floats\",desc:\"This rule tests if the float property is used too many times\",url:\"https://github.com/CSSLint/csslint/wiki/Disallow-too-many-floats\",browsers:\"All\",init:function(e,t){\"use strict\";var r=this,n=0;e.addListener(\"property\",(function(e){t.isIgnored(e.property.line)||\"float\"===e.property.text.toLowerCase()&&\"none\"!==e.value.text.toLowerCase()&&n++})),e.addListener(\"endstylesheet\",(function(){t.stat(\"floats\",n),n>=10&&t.rollupWarn(\"Too many floats (\"+n+\"), you're probably using them for layout. Consider using a grid system instead.\",r)}))}}),n.addRule({id:\"font-faces\",name:\"Don't use too many web fonts\",desc:\"Too many different web fonts in the same stylesheet.\",url:\"https://github.com/CSSLint/csslint/wiki/Don%27t-use-too-many-web-fonts\",browsers:\"All\",init:function(e,t){\"use strict\";var r=this,n=0;e.addListener(\"startfontface\",(function(e){t.isIgnored(e.line)||n++})),e.addListener(\"endstylesheet\",(function(){n>5&&t.rollupWarn(\"Too many @font-face declarations (\"+n+\").\",r)}))}}),n.addRule({id:\"font-sizes\",name:\"Disallow too many font sizes\",desc:\"Checks the number of font-size declarations.\",url:\"https://github.com/CSSLint/csslint/wiki/Don%27t-use-too-many-font-size-declarations\",browsers:\"All\",init:function(e,t){\"use strict\";var r=this,n=0;e.addListener(\"property\",(function(e){t.isIgnored(e.property.line)||\"font-size\"===e.property.toString()&&n++})),e.addListener(\"endstylesheet\",(function(){t.stat(\"font-sizes\",n),n>=10&&t.rollupWarn(\"Too many font-size declarations (\"+n+\"), abstraction needed.\",r)}))}}),n.addRule({id:\"gradients\",name:\"Require all gradient definitions\",desc:\"When using a vendor-prefixed gradient, make sure to use them all.\",url:\"https://github.com/CSSLint/csslint/wiki/Require-all-gradient-definitions\",browsers:\"All\",init:function(e,t){\"use strict\";var r,n=this;e.addListener(\"startrule\",(function(){r={moz:0,webkit:0,oldWebkit:0,o:0}})),e.addListener(\"property\",(function(e){/\\-(moz|o|webkit)(?:\\-(?:linear|radial))\\-gradient/i.test(e.value)?r[RegExp.$1]=1:/\\-webkit\\-gradient/i.test(e.value)&&(r.oldWebkit=1)})),e.addListener(\"endrule\",(function(e){var i=[];r.moz||i.push(\"Firefox 3.6+\"),r.webkit||i.push(\"Webkit (Safari 5+, Chrome)\"),r.oldWebkit||i.push(\"Old Webkit (Safari 4+, Chrome)\"),r.o||i.push(\"Opera 11.1+\"),i.length&&i.length<4&&t.report(\"Missing vendor-prefixed CSS gradients for \"+i.join(\", \")+\".\",e.selectors[0].line,e.selectors[0].col,n)}))}}),n.addRule({id:\"ids\",name:\"Disallow IDs in selectors\",desc:\"Selectors should not contain IDs.\",url:\"https://github.com/CSSLint/csslint/wiki/Disallow-IDs-in-selectors\",browsers:\"All\",init:function(e,t){\"use strict\";var r=this;e.addListener(\"startrule\",(function(n){var i,o,a,s,l,u,c=n.selectors;for(s=0;s<c.length;s++){for(i=c[s],a=0,l=0;l<i.parts.length;l++)if((o=i.parts[l]).type===e.SELECTOR_PART_TYPE)for(u=0;u<o.modifiers.length;u++)\"id\"===o.modifiers[u].type&&a++;1===a?t.report(\"Don't use IDs in selectors.\",i.line,i.col,r):a>1&&t.report(a+\" IDs in the selector, really?\",i.line,i.col,r)}}))}}),n.addRule({id:\"import-ie-limit\",name:\"@import limit on IE6-IE9\",desc:\"IE6-9 supports up to 31 @import per stylesheet\",browsers:\"IE6, IE7, IE8, IE9\",init:function(e,t){\"use strict\";var r=this,n=0;e.addListener(\"startpage\",(function(){n=0})),e.addListener(\"import\",(function(){n++})),e.addListener(\"endstylesheet\",(function(){n>31&&t.rollupError(\"Too many @import rules (\"+n+\"). IE6-9 supports up to 31 import per stylesheet.\",r)}))}}),n.addRule({id:\"import\",name:\"Disallow @import\",desc:\"Don't use @import, use <link> instead.\",url:\"https://github.com/CSSLint/csslint/wiki/Disallow-%40import\",browsers:\"All\",init:function(e,t){\"use strict\";var r=this;e.addListener(\"import\",(function(e){t.report(\"@import prevents parallel downloads, use <link> instead.\",e.line,e.col,r)}))}}),n.addRule({id:\"important\",name:\"Disallow !important\",desc:\"Be careful when using !important declaration\",url:\"https://github.com/CSSLint/csslint/wiki/Disallow-%21important\",browsers:\"All\",init:function(e,t){\"use strict\";var r=this,n=0;e.addListener(\"property\",(function(e){t.isIgnored(e.line)||!0===e.important&&(n++,t.report(\"Use of !important\",e.line,e.col,r))})),e.addListener(\"endstylesheet\",(function(){t.stat(\"important\",n),n>=10&&t.rollupWarn(\"Too many !important declarations (\"+n+\"), try to use less than 10 to avoid specificity issues.\",r)}))}}),n.addRule({id:\"known-properties\",name:\"Require use of known properties\",desc:\"Properties should be known (listed in CSS3 specification) or be a vendor-prefixed property.\",url:\"https://github.com/CSSLint/csslint/wiki/Require-use-of-known-properties\",browsers:\"All\",init:function(e,t){\"use strict\";var r=this;e.addListener(\"property\",(function(e){e.invalid&&t.report(e.invalid.message,e.line,e.col,r)}))}}),n.addRule({id:\"order-alphabetical\",name:\"Alphabetical order\",desc:\"Assure properties are in alphabetical order\",browsers:\"All\",init:function(e,t){\"use strict\";var r,n=this,i=function(){r=[]},o=function(e){r.join(\",\")!==r.sort().join(\",\")&&t.report(\"Rule doesn't have all its properties in alphabetical order.\",e.line,e.col,n)};e.addListener(\"startrule\",i),e.addListener(\"startfontface\",i),e.addListener(\"startpage\",i),e.addListener(\"startpagemargin\",i),e.addListener(\"startkeyframerule\",i),e.addListener(\"startviewport\",i),e.addListener(\"property\",(function(e){var t=e.property.text.toLowerCase().replace(/^-.*?-/,\"\");r.push(t)})),e.addListener(\"endrule\",o),e.addListener(\"endfontface\",o),e.addListener(\"endpage\",o),e.addListener(\"endpagemargin\",o),e.addListener(\"endkeyframerule\",o),e.addListener(\"endviewport\",o)}}),n.addRule({id:\"outline-none\",name:\"Disallow outline: none\",desc:\"Use of outline: none or outline: 0 should be limited to :focus rules.\",url:\"https://github.com/CSSLint/csslint/wiki/Disallow-outline%3Anone\",browsers:\"All\",tags:[\"Accessibility\"],init:function(e,t){\"use strict\";var r,n=this;function i(e){r=e.selectors?{line:e.line,col:e.col,selectors:e.selectors,propCount:0,outline:!1}:null}function o(){r&&r.outline&&(-1===r.selectors.toString().toLowerCase().indexOf(\":focus\")?t.report(\"Outlines should only be modified using :focus.\",r.line,r.col,n):1===r.propCount&&t.report(\"Outlines shouldn't be hidden unless other visual changes are made.\",r.line,r.col,n))}e.addListener(\"startrule\",i),e.addListener(\"startfontface\",i),e.addListener(\"startpage\",i),e.addListener(\"startpagemargin\",i),e.addListener(\"startkeyframerule\",i),e.addListener(\"startviewport\",i),e.addListener(\"property\",(function(e){var t=e.property.text.toLowerCase(),n=e.value;r&&(r.propCount++,\"outline\"!==t||\"none\"!==n.toString()&&\"0\"!==n.toString()||(r.outline=!0))})),e.addListener(\"endrule\",o),e.addListener(\"endfontface\",o),e.addListener(\"endpage\",o),e.addListener(\"endpagemargin\",o),e.addListener(\"endkeyframerule\",o),e.addListener(\"endviewport\",o)}}),n.addRule({id:\"overqualified-elements\",name:\"Disallow overqualified elements\",desc:\"Don't use classes or IDs with elements (a.foo or a#foo).\",url:\"https://github.com/CSSLint/csslint/wiki/Disallow-overqualified-elements\",browsers:\"All\",init:function(e,t){\"use strict\";var r=this,n={};e.addListener(\"startrule\",(function(i){var o,a,s,l,u,c,h=i.selectors;for(l=0;l<h.length;l++)for(o=h[l],u=0;u<o.parts.length;u++)if((a=o.parts[u]).type===e.SELECTOR_PART_TYPE)for(c=0;c<a.modifiers.length;c++)s=a.modifiers[c],a.elementName&&\"id\"===s.type?t.report(\"Element (\"+a+\") is overqualified, just use \"+s+\" without element name.\",a.line,a.col,r):\"class\"===s.type&&(n[s]||(n[s]=[]),n[s].push({modifier:s,part:a}))})),e.addListener(\"endstylesheet\",(function(){var e;for(e in n)n.hasOwnProperty(e)&&1===n[e].length&&n[e][0].part.elementName&&t.report(\"Element (\"+n[e][0].part+\") is overqualified, just use \"+n[e][0].modifier+\" without element name.\",n[e][0].part.line,n[e][0].part.col,r)}))}}),n.addRule({id:\"regex-selectors\",name:\"Disallow selectors that look like regexs\",desc:\"Selectors that look like regular expressions are slow and should be avoided.\",url:\"https://github.com/CSSLint/csslint/wiki/Disallow-selectors-that-look-like-regular-expressions\",browsers:\"All\",init:function(e,t){\"use strict\";var r=this;e.addListener(\"startrule\",(function(n){var i,o,a,s,l,u,c=n.selectors;for(s=0;s<c.length;s++)for(i=c[s],l=0;l<i.parts.length;l++)if((o=i.parts[l]).type===e.SELECTOR_PART_TYPE)for(u=0;u<o.modifiers.length;u++)\"attribute\"===(a=o.modifiers[u]).type&&/([~\\|\\^\\$\\*]=)/.test(a)&&t.report(\"Attribute selectors with \"+RegExp.$1+\" are slow!\",a.line,a.col,r)}))}}),n.addRule({id:\"rules-count\",name:\"Rules Count\",desc:\"Track how many rules there are.\",browsers:\"All\",init:function(e,t){\"use strict\";var r=0;e.addListener(\"startrule\",(function(){r++})),e.addListener(\"endstylesheet\",(function(){t.stat(\"rule-count\",r)}))}}),n.addRule({id:\"selector-max-approaching\",name:\"Warn when approaching the 4095 selector limit for IE\",desc:\"Will warn when selector count is >= 3800 selectors.\",browsers:\"IE\",init:function(e,t){\"use strict\";var r=this,n=0;e.addListener(\"startrule\",(function(e){n+=e.selectors.length})),e.addListener(\"endstylesheet\",(function(){n>=3800&&t.report(\"You have \"+n+\" selectors. Internet Explorer supports a maximum of 4095 selectors per stylesheet. Consider refactoring.\",0,0,r)}))}}),n.addRule({id:\"selector-max\",name:\"Error when past the 4095 selector limit for IE\",desc:\"Will error when selector count is > 4095.\",browsers:\"IE\",init:function(e,t){\"use strict\";var r=this,n=0;e.addListener(\"startrule\",(function(e){n+=e.selectors.length})),e.addListener(\"endstylesheet\",(function(){n>4095&&t.report(\"You have \"+n+\" selectors. Internet Explorer supports a maximum of 4095 selectors per stylesheet. Consider refactoring.\",0,0,r)}))}}),n.addRule({id:\"selector-newline\",name:\"Disallow new-line characters in selectors\",desc:\"New-line characters in selectors are usually a forgotten comma and not a descendant combinator.\",browsers:\"All\",init:function(e,t){\"use strict\";var r=this;e.addListener(\"startrule\",(function(e){var n,i,o,a,s,l,u,c,h,d,p,f=e.selectors;for(n=0,i=f.length;n<i;n++)for(a=0,l=(o=f[n]).parts.length;a<l;a++)for(s=a+1;s<l;s++)u=o.parts[a],c=o.parts[s],h=u.type,d=u.line,p=c.line,\"descendant\"===h&&p>d&&t.report(\"newline character found in selector (forgot a comma?)\",d,f[n].parts[0].col,r)}))}}),n.addRule({id:\"shorthand\",name:\"Require shorthand properties\",desc:\"Use shorthand properties where possible.\",url:\"https://github.com/CSSLint/csslint/wiki/Require-shorthand-properties\",browsers:\"All\",init:function(e,t){\"use strict\";var r,n,i,o,a=this,s={},l={margin:[\"margin-top\",\"margin-bottom\",\"margin-left\",\"margin-right\"],padding:[\"padding-top\",\"padding-bottom\",\"padding-left\",\"padding-right\"]};for(r in l)if(l.hasOwnProperty(r))for(n=0,i=l[r].length;n<i;n++)s[l[r][n]]=r;function u(){o={}}function c(e){var r,n,i,s;for(r in l)if(l.hasOwnProperty(r)){for(s=0,n=0,i=l[r].length;n<i;n++)s+=o[l[r][n]]?1:0;s===l[r].length&&t.report(\"The properties \"+l[r].join(\", \")+\" can be replaced by \"+r+\".\",e.line,e.col,a)}}e.addListener(\"startrule\",u),e.addListener(\"startfontface\",u),e.addListener(\"property\",(function(e){var t=e.property.toString().toLowerCase();s[t]&&(o[t]=1)})),e.addListener(\"endrule\",c),e.addListener(\"endfontface\",c)}}),n.addRule({id:\"star-property-hack\",name:\"Disallow properties with a star prefix\",desc:\"Checks for the star property hack (targets IE6/7)\",url:\"https://github.com/CSSLint/csslint/wiki/Disallow-star-hack\",browsers:\"All\",init:function(e,t){\"use strict\";var r=this;e.addListener(\"property\",(function(e){\"*\"===e.property.hack&&t.report(\"Property with star prefix found.\",e.property.line,e.property.col,r)}))}}),n.addRule({id:\"text-indent\",name:\"Disallow negative text-indent\",desc:\"Checks for text indent less than -99px\",url:\"https://github.com/CSSLint/csslint/wiki/Disallow-negative-text-indent\",browsers:\"All\",init:function(e,t){\"use strict\";var r,n,i=this;function o(){r=!1,n=\"inherit\"}function a(){r&&\"ltr\"!==n&&t.report(\"Negative text-indent doesn't work well with RTL. If you use text-indent for image replacement explicitly set direction for that item to ltr.\",r.line,r.col,i)}e.addListener(\"startrule\",o),e.addListener(\"startfontface\",o),e.addListener(\"property\",(function(e){var t=e.property.toString().toLowerCase(),i=e.value;\"text-indent\"===t&&i.parts[0].value<-99?r=e.property:\"direction\"===t&&\"ltr\"===i.toString()&&(n=\"ltr\")})),e.addListener(\"endrule\",a),e.addListener(\"endfontface\",a)}}),n.addRule({id:\"underscore-property-hack\",name:\"Disallow properties with an underscore prefix\",desc:\"Checks for the underscore property hack (targets IE6)\",url:\"https://github.com/CSSLint/csslint/wiki/Disallow-underscore-hack\",browsers:\"All\",init:function(e,t){\"use strict\";var r=this;e.addListener(\"property\",(function(e){\"_\"===e.property.hack&&t.report(\"Property with underscore prefix found.\",e.property.line,e.property.col,r)}))}}),n.addRule({id:\"universal-selector\",name:\"Disallow universal selector\",desc:\"The universal selector (*) is known to be slow.\",url:\"https://github.com/CSSLint/csslint/wiki/Disallow-universal-selector\",browsers:\"All\",init:function(e,t){\"use strict\";var r=this;e.addListener(\"startrule\",(function(e){var n,i,o,a=e.selectors;for(o=0;o<a.length;o++)\"*\"===(i=(n=a[o]).parts[n.parts.length-1]).elementName&&t.report(r.desc,i.line,i.col,r)}))}}),n.addRule({id:\"unqualified-attributes\",name:\"Disallow unqualified attribute selectors\",desc:\"Unqualified attribute selectors are known to be slow.\",url:\"https://github.com/CSSLint/csslint/wiki/Disallow-unqualified-attribute-selectors\",browsers:\"All\",init:function(e,t){\"use strict\";var r=this;e.addListener(\"startrule\",(function(n){var i,o,a,s,l,u=n.selectors,c=!1;for(s=0;s<u.length;s++)if((o=(i=u[s]).parts[i.parts.length-1]).type===e.SELECTOR_PART_TYPE){for(l=0;l<o.modifiers.length;l++)if(\"class\"===(a=o.modifiers[l]).type||\"id\"===a.type){c=!0;break}if(!c)for(l=0;l<o.modifiers.length;l++)\"attribute\"!==(a=o.modifiers[l]).type||o.elementName&&\"*\"!==o.elementName||t.report(r.desc,o.line,o.col,r)}}))}}),n.addRule({id:\"vendor-prefix\",name:\"Require standard property with vendor prefix\",desc:\"When using a vendor-prefixed property, make sure to include the standard one.\",url:\"https://github.com/CSSLint/csslint/wiki/Require-standard-property-with-vendor-prefix\",browsers:\"All\",init:function(e,t){\"use strict\";var r,n,i=this,o={\"-webkit-border-radius\":\"border-radius\",\"-webkit-border-top-left-radius\":\"border-top-left-radius\",\"-webkit-border-top-right-radius\":\"border-top-right-radius\",\"-webkit-border-bottom-left-radius\":\"border-bottom-left-radius\",\"-webkit-border-bottom-right-radius\":\"border-bottom-right-radius\",\"-o-border-radius\":\"border-radius\",\"-o-border-top-left-radius\":\"border-top-left-radius\",\"-o-border-top-right-radius\":\"border-top-right-radius\",\"-o-border-bottom-left-radius\":\"border-bottom-left-radius\",\"-o-border-bottom-right-radius\":\"border-bottom-right-radius\",\"-moz-border-radius\":\"border-radius\",\"-moz-border-radius-topleft\":\"border-top-left-radius\",\"-moz-border-radius-topright\":\"border-top-right-radius\",\"-moz-border-radius-bottomleft\":\"border-bottom-left-radius\",\"-moz-border-radius-bottomright\":\"border-bottom-right-radius\",\"-moz-column-count\":\"column-count\",\"-webkit-column-count\":\"column-count\",\"-moz-column-gap\":\"column-gap\",\"-webkit-column-gap\":\"column-gap\",\"-moz-column-rule\":\"column-rule\",\"-webkit-column-rule\":\"column-rule\",\"-moz-column-rule-style\":\"column-rule-style\",\"-webkit-column-rule-style\":\"column-rule-style\",\"-moz-column-rule-color\":\"column-rule-color\",\"-webkit-column-rule-color\":\"column-rule-color\",\"-moz-column-rule-width\":\"column-rule-width\",\"-webkit-column-rule-width\":\"column-rule-width\",\"-moz-column-width\":\"column-width\",\"-webkit-column-width\":\"column-width\",\"-webkit-column-span\":\"column-span\",\"-webkit-columns\":\"columns\",\"-moz-box-shadow\":\"box-shadow\",\"-webkit-box-shadow\":\"box-shadow\",\"-moz-transform\":\"transform\",\"-webkit-transform\":\"transform\",\"-o-transform\":\"transform\",\"-ms-transform\":\"transform\",\"-moz-transform-origin\":\"transform-origin\",\"-webkit-transform-origin\":\"transform-origin\",\"-o-transform-origin\":\"transform-origin\",\"-ms-transform-origin\":\"transform-origin\",\"-moz-box-sizing\":\"box-sizing\",\"-webkit-box-sizing\":\"box-sizing\"};function a(){r={},n=1}function s(){var e,n,a,s,l,u=[];for(e in r)o[e]&&u.push({actual:e,needed:o[e]});for(n=0,a=u.length;n<a;n++)s=u[n].needed,l=u[n].actual,r[s]?r[s][0].pos<r[l][0].pos&&t.report(\"Standard property '\"+s+\"' should come after vendor-prefixed property '\"+l+\"'.\",r[l][0].name.line,r[l][0].name.col,i):t.report(\"Missing standard property '\"+s+\"' to go along with '\"+l+\"'.\",r[l][0].name.line,r[l][0].name.col,i)}e.addListener(\"startrule\",a),e.addListener(\"startfontface\",a),e.addListener(\"startpage\",a),e.addListener(\"startpagemargin\",a),e.addListener(\"startkeyframerule\",a),e.addListener(\"startviewport\",a),e.addListener(\"property\",(function(e){var t=e.property.text.toLowerCase();r[t]||(r[t]=[]),r[t].push({name:e.property,value:e.value,pos:n++})})),e.addListener(\"endrule\",s),e.addListener(\"endfontface\",s),e.addListener(\"endpage\",s),e.addListener(\"endpagemargin\",s),e.addListener(\"endkeyframerule\",s),e.addListener(\"endviewport\",s)}}),n.addRule({id:\"zero-units\",name:\"Disallow units for 0 values\",desc:\"You don't need to specify units when a value is 0.\",url:\"https://github.com/CSSLint/csslint/wiki/Disallow-units-for-zero-values\",browsers:\"All\",init:function(e,t){\"use strict\";var r=this;e.addListener(\"property\",(function(e){for(var n=e.value.parts,i=0,o=n.length;i<o;)!n[i].units&&\"percentage\"!==n[i].type||0!==n[i].value||\"time\"===n[i].type||t.report(\"Values of 0 shouldn't have units specified.\",n[i].line,n[i].col,r),i++}))}}),function(){\"use strict\";var e=function(e){return e&&e.constructor===String?e.replace(/[\"&><]/g,(function(e){switch(e){case'\"':return\"&quot;\";case\"&\":return\"&amp;\";case\"<\":return\"&lt;\";case\">\":return\"&gt;\"}})):\"\"};n.addFormatter({id:\"checkstyle-xml\",name:\"Checkstyle XML format\",startFormat:function(){return'<?xml version=\"1.0\" encoding=\"utf-8\"?><checkstyle>'},endFormat:function(){return\"</checkstyle>\"},readError:function(t,r){return'<file name=\"'+e(t)+'\"><error line=\"0\" column=\"0\" severty=\"error\" message=\"'+e(r)+'\"></error></file>'},formatResults:function(t,r){var i=t.messages,o=[];return i.length>0&&(o.push('<file name=\"'+r+'\">'),n.Util.forEach(i,(function(t){var r;t.rollup||o.push('<error line=\"'+t.line+'\" column=\"'+t.col+'\" severity=\"'+t.type+'\" message=\"'+e(t.message)+'\" source=\"'+(((r=t.rule)&&\"name\"in r?\"net.csslint.\"+r.name.replace(/\\s/g,\"\"):\"\")+'\"/>'))})),o.push(\"</file>\")),o.join(\"\")}})}(),n.addFormatter({id:\"compact\",name:\"Compact, 'porcelain' format\",startFormat:function(){\"use strict\";return\"\"},endFormat:function(){\"use strict\";return\"\"},formatResults:function(e,t,r){\"use strict\";var i=e.messages,o=\"\";r=r||{};var a=function(e){return e.charAt(0).toUpperCase()+e.slice(1)};return 0===i.length?r.quiet?\"\":t+\": Lint Free!\":(n.Util.forEach(i,(function(e){e.rollup?o+=t+\": \"+a(e.type)+\" - \"+e.message+\" (\"+e.rule.id+\")\\n\":o+=t+\": line \"+e.line+\", col \"+e.col+\", \"+a(e.type)+\" - \"+e.message+\" (\"+e.rule.id+\")\\n\"})),o)}}),n.addFormatter({id:\"csslint-xml\",name:\"CSSLint XML format\",startFormat:function(){\"use strict\";return'<?xml version=\"1.0\" encoding=\"utf-8\"?><csslint>'},endFormat:function(){\"use strict\";return\"</csslint>\"},formatResults:function(e,t){\"use strict\";var r=e.messages,i=[],o=function(e){return e&&e.constructor===String?e.replace(/\"/g,\"'\").replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\"):\"\"};return r.length>0&&(i.push('<file name=\"'+t+'\">'),n.Util.forEach(r,(function(e){e.rollup?i.push('<issue severity=\"'+e.type+'\" reason=\"'+o(e.message)+'\" evidence=\"'+o(e.evidence)+'\"/>'):i.push('<issue line=\"'+e.line+'\" char=\"'+e.col+'\" severity=\"'+e.type+'\" reason=\"'+o(e.message)+'\" evidence=\"'+o(e.evidence)+'\"/>')})),i.push(\"</file>\")),i.join(\"\")}}),n.addFormatter({id:\"json\",name:\"JSON\",startFormat:function(){\"use strict\";return this.json=[],\"\"},endFormat:function(){\"use strict\";var e=\"\";return this.json.length>0&&(e=1===this.json.length?JSON.stringify(this.json[0]):JSON.stringify(this.json)),e},formatResults:function(e,t,r){\"use strict\";return(e.messages.length>0||!r.quiet)&&this.json.push({filename:t,messages:e.messages,stats:e.stats}),\"\"}}),n.addFormatter({id:\"junit-xml\",name:\"JUNIT XML format\",startFormat:function(){\"use strict\";return'<?xml version=\"1.0\" encoding=\"utf-8\"?><testsuites>'},endFormat:function(){\"use strict\";return\"</testsuites>\"},formatResults:function(e,t){\"use strict\";var r=e.messages,n=[],i={error:0,failure:0},o=function(e){return e&&e.constructor===String?e.replace(/\"/g,\"'\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\"):\"\"};return r.length>0&&(r.forEach((function(e){var t,r=\"warning\"===e.type?\"error\":e.type;e.rollup||(n.push('<testcase time=\"0\" name=\"'+(((t=e.rule)&&\"name\"in t?\"net.csslint.\"+t.name.replace(/\\s/g,\"\"):\"\")+'\">')),n.push(\"<\"+r+' message=\"'+o(e.message)+'\"><![CDATA['+e.line+\":\"+e.col+\":\"+o(e.evidence)+\"]]></\"+r+\">\"),n.push(\"</testcase>\"),i[r]+=1)})),n.unshift('<testsuite time=\"0\" tests=\"'+r.length+'\" skipped=\"0\" errors=\"'+i.error+'\" failures=\"'+i.failure+'\" package=\"net.csslint\" name=\"'+t+'\">'),n.push(\"</testsuite>\")),n.join(\"\")}}),n.addFormatter({id:\"lint-xml\",name:\"Lint XML format\",startFormat:function(){\"use strict\";return'<?xml version=\"1.0\" encoding=\"utf-8\"?><lint>'},endFormat:function(){\"use strict\";return\"</lint>\"},formatResults:function(e,t){\"use strict\";var r=e.messages,i=[],o=function(e){return e&&e.constructor===String?e.replace(/\"/g,\"'\").replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\"):\"\"};return r.length>0&&(i.push('<file name=\"'+t+'\">'),n.Util.forEach(r,(function(e){if(e.rollup)i.push('<issue severity=\"'+e.type+'\" reason=\"'+o(e.message)+'\" evidence=\"'+o(e.evidence)+'\"/>');else{var t=\"\";e.rule&&e.rule.id&&(t='rule=\"'+o(e.rule.id)+'\" '),i.push(\"<issue \"+t+'line=\"'+e.line+'\" char=\"'+e.col+'\" severity=\"'+e.type+'\" reason=\"'+o(e.message)+'\" evidence=\"'+o(e.evidence)+'\"/>')}})),i.push(\"</file>\")),i.join(\"\")}}),n.addFormatter({id:\"text\",name:\"Plain Text\",startFormat:function(){\"use strict\";return\"\"},endFormat:function(){\"use strict\";return\"\"},formatResults:function(e,t,r){\"use strict\";var i=e.messages,o=\"\";if(r=r||{},0===i.length)return r.quiet?\"\":\"\\n\\ncsslint: No errors in \"+t+\".\";o=\"\\n\\ncsslint: There \",1===i.length?o+=\"is 1 problem\":o+=\"are \"+i.length+\" problems\",o+=\" in \"+t+\".\";var a=t.lastIndexOf(\"/\"),s=t;return-1===a&&(a=t.lastIndexOf(\"\\\\\")),a>-1&&(s=t.substring(a+1)),n.Util.forEach(i,(function(e,t){o=o+\"\\n\\n\"+s,e.rollup?(o+=\"\\n\"+(t+1)+\": \"+e.type,o+=\"\\n\"+e.message):(o+=\"\\n\"+(t+1)+\": \"+e.type+\" at line \"+e.line+\", col \"+e.col,o+=\"\\n\"+e.message,o+=\"\\n\"+e.evidence)})),o}}),n}();r.exports.CSSLint=n})),ace.define(\"ace/mode/css_worker\",[],(function(e,t,r){\"use strict\";var n=e(\"../lib/oop\"),i=e(\"../lib/lang\"),o=e(\"../worker/mirror\").Mirror,a=e(\"./css/csslint\").CSSLint,s=t.Worker=function(e){o.call(this,e),this.setTimeout(400),this.ruleset=null,this.setDisabledRules(\"ids|order-alphabetical\"),this.setInfoRules(\"adjoining-classes|zero-units|gradients|box-model|import|outline-none|vendor-prefix\")};n.inherits(s,o),function(){this.setInfoRules=function(e){\"string\"==typeof e&&(e=e.split(\"|\")),this.infoRules=i.arrayToMap(e),this.doc.getValue()&&this.deferredUpdate.schedule(100)},this.setDisabledRules=function(e){if(e){\"string\"==typeof e&&(e=e.split(\"|\"));var t={};a.getRules().forEach((function(e){t[e.id]=!0})),e.forEach((function(e){delete t[e]})),this.ruleset=t}else this.ruleset=null;this.doc.getValue()&&this.deferredUpdate.schedule(100)},this.onUpdate=function(){var e=this.doc.getValue();if(!e)return this.sender.emit(\"annotate\",[]);var t=this.infoRules,r=a.verify(e,this.ruleset);this.sender.emit(\"annotate\",r.messages.map((function(e){return{row:e.line-1,column:e.col-1,text:e.message,type:t[e.rule.id]?\"info\":e.type,rule:e.rule.name}})))}}.call(s.prototype)}));","name":"b0c9e35ec4a5a7543cb1743d70501f88.js","input":"\"no use strict\";\n\n!function (window) {\n  if (typeof window.window != \"undefined\" && window.document) return;\n  if (window.require && window.define) return;\n  if (!window.console) {\n    window.console = function () {\n      var msgs = Array.prototype.slice.call(arguments, 0);\n      postMessage({\n        type: \"log\",\n        data: msgs\n      });\n    };\n    window.console.error = window.console.warn = window.console.log = window.console.trace = window.console;\n  }\n  window.window = window;\n  window.ace = window;\n  window.onerror = function (message, file, line, col, err) {\n    postMessage({\n      type: \"error\",\n      data: {\n        message: message,\n        data: err && err.data,\n        file: file,\n        line: line,\n        col: col,\n        stack: err && err.stack\n      }\n    });\n  };\n  window.normalizeModule = function (parentId, moduleName) {\n    // normalize plugin requires\n    if (moduleName.indexOf(\"!\") !== -1) {\n      var chunks = moduleName.split(\"!\");\n      return window.normalizeModule(parentId, chunks[0]) + \"!\" + window.normalizeModule(parentId, chunks[1]);\n    }\n    // normalize relative requires\n    if (moduleName.charAt(0) == \".\") {\n      var base = parentId.split(\"/\").slice(0, -1).join(\"/\");\n      moduleName = (base ? base + \"/\" : \"\") + moduleName;\n      while (moduleName.indexOf(\".\") !== -1 && previous != moduleName) {\n        var previous = moduleName;\n        moduleName = moduleName.replace(/^\\.\\//, \"\").replace(/\\/\\.\\//, \"/\").replace(/[^\\/]+\\/\\.\\.\\//, \"\");\n      }\n    }\n    return moduleName;\n  };\n  window.require = function require(parentId, id) {\n    if (!id) {\n      id = parentId;\n      parentId = null;\n    }\n    if (!id.charAt) throw new Error(\"worker.js require() accepts only (parentId, id) as arguments\");\n    id = window.normalizeModule(parentId, id);\n    var module = window.require.modules[id];\n    if (module) {\n      if (!module.initialized) {\n        module.initialized = true;\n        module.exports = module.factory().exports;\n      }\n      return module.exports;\n    }\n    if (!window.require.tlns) return console.log(\"unable to load \" + id);\n    var path = resolveModuleId(id, window.require.tlns);\n    if (path.slice(-3) != \".js\") path += \".js\";\n    window.require.id = id;\n    window.require.modules[id] = {}; // prevent infinite loop on broken modules\n    importScripts(path);\n    return window.require(parentId, id);\n  };\n  function resolveModuleId(id, paths) {\n    var testPath = id,\n      tail = \"\";\n    while (testPath) {\n      var alias = paths[testPath];\n      if (typeof alias == \"string\") {\n        return alias + tail;\n      } else if (alias) {\n        return alias.location.replace(/\\/*$/, \"/\") + (tail || alias.main || alias.name);\n      } else if (alias === false) {\n        return \"\";\n      }\n      var i = testPath.lastIndexOf(\"/\");\n      if (i === -1) break;\n      tail = testPath.substr(i) + tail;\n      testPath = testPath.slice(0, i);\n    }\n    return id;\n  }\n  window.require.modules = {};\n  window.require.tlns = {};\n  window.define = function (id, deps, factory) {\n    if (arguments.length == 2) {\n      factory = deps;\n      if (typeof id != \"string\") {\n        deps = id;\n        id = window.require.id;\n      }\n    } else if (arguments.length == 1) {\n      factory = id;\n      deps = [];\n      id = window.require.id;\n    }\n    if (typeof factory != \"function\") {\n      window.require.modules[id] = {\n        exports: factory,\n        initialized: true\n      };\n      return;\n    }\n    if (!deps.length)\n      // If there is no dependencies, we inject \"require\", \"exports\" and\n      // \"module\" as dependencies, to provide CommonJS compatibility.\n      deps = [\"require\", \"exports\", \"module\"];\n    var req = function (childId) {\n      return window.require(id, childId);\n    };\n    window.require.modules[id] = {\n      exports: {},\n      factory: function () {\n        var module = this;\n        var returnExports = factory.apply(this, deps.slice(0, factory.length).map(function (dep) {\n          switch (dep) {\n            // Because \"require\", \"exports\" and \"module\" aren't actual\n            // dependencies, we must handle them seperately.\n            case \"require\":\n              return req;\n            case \"exports\":\n              return module.exports;\n            case \"module\":\n              return module;\n            // But for all other dependencies, we can just go ahead and\n            // require them.\n            default:\n              return req(dep);\n          }\n        }));\n        if (returnExports) module.exports = returnExports;\n        return module;\n      }\n    };\n  };\n  window.define.amd = {};\n  window.require.tlns = {};\n  window.initBaseUrls = function initBaseUrls(topLevelNamespaces) {\n    for (var i in topLevelNamespaces) this.require.tlns[i] = topLevelNamespaces[i];\n  };\n  window.initSender = function initSender() {\n    var EventEmitter = window.require(\"ace/lib/event_emitter\").EventEmitter;\n    var oop = window.require(\"ace/lib/oop\");\n    var Sender = function () {};\n    (function () {\n      oop.implement(this, EventEmitter);\n      this.callback = function (data, callbackId) {\n        postMessage({\n          type: \"call\",\n          id: callbackId,\n          data: data\n        });\n      };\n      this.emit = function (name, data) {\n        postMessage({\n          type: \"event\",\n          name: name,\n          data: data\n        });\n      };\n    }).call(Sender.prototype);\n    return new Sender();\n  };\n  var main = window.main = null;\n  var sender = window.sender = null;\n  window.onmessage = function (e) {\n    var msg = e.data;\n    if (msg.event && sender) {\n      sender._signal(msg.event, msg.data);\n    } else if (msg.command) {\n      if (main[msg.command]) main[msg.command].apply(main, msg.args);else if (window[msg.command]) window[msg.command].apply(window, msg.args);else throw new Error(\"Unknown command:\" + msg.command);\n    } else if (msg.init) {\n      window.initBaseUrls(msg.tlns);\n      sender = window.sender = window.initSender();\n      var clazz = this.require(msg.module)[msg.classname];\n      main = window.main = new clazz(sender);\n    }\n  };\n}(this);\nace.define(\"ace/lib/oop\", [], function (require, exports, module) {\n  \"use strict\";\n\n  exports.inherits = function (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n  exports.mixin = function (obj, mixin) {\n    for (var key in mixin) {\n      obj[key] = mixin[key];\n    }\n    return obj;\n  };\n  exports.implement = function (proto, mixin) {\n    exports.mixin(proto, mixin);\n  };\n});\nace.define(\"ace/lib/deep_copy\", [], function (require, exports, module) {\n  exports.deepCopy = function deepCopy(obj) {\n    if (typeof obj !== \"object\" || !obj) return obj;\n    var copy;\n    if (Array.isArray(obj)) {\n      copy = [];\n      for (var key = 0; key < obj.length; key++) {\n        copy[key] = deepCopy(obj[key]);\n      }\n      return copy;\n    }\n    if (Object.prototype.toString.call(obj) !== \"[object Object]\") return obj;\n    copy = {};\n    for (var key in obj) copy[key] = deepCopy(obj[key]);\n    return copy;\n  };\n});\nace.define(\"ace/lib/lang\", [], function (require, exports, module) {\n  \"use strict\";\n\n  exports.last = function (a) {\n    return a[a.length - 1];\n  };\n  exports.stringReverse = function (string) {\n    return string.split(\"\").reverse().join(\"\");\n  };\n  exports.stringRepeat = function (string, count) {\n    var result = '';\n    while (count > 0) {\n      if (count & 1) result += string;\n      if (count >>= 1) string += string;\n    }\n    return result;\n  };\n  var trimBeginRegexp = /^\\s\\s*/;\n  var trimEndRegexp = /\\s\\s*$/;\n  exports.stringTrimLeft = function (string) {\n    return string.replace(trimBeginRegexp, '');\n  };\n  exports.stringTrimRight = function (string) {\n    return string.replace(trimEndRegexp, '');\n  };\n  exports.copyObject = function (obj) {\n    var copy = {};\n    for (var key in obj) {\n      copy[key] = obj[key];\n    }\n    return copy;\n  };\n  exports.copyArray = function (array) {\n    var copy = [];\n    for (var i = 0, l = array.length; i < l; i++) {\n      if (array[i] && typeof array[i] == \"object\") copy[i] = this.copyObject(array[i]);else copy[i] = array[i];\n    }\n    return copy;\n  };\n  exports.deepCopy = require(\"./deep_copy\").deepCopy;\n  exports.arrayToMap = function (arr) {\n    var map = {};\n    for (var i = 0; i < arr.length; i++) {\n      map[arr[i]] = 1;\n    }\n    return map;\n  };\n  exports.createMap = function (props) {\n    var map = Object.create(null);\n    for (var i in props) {\n      map[i] = props[i];\n    }\n    return map;\n  };\n  exports.arrayRemove = function (array, value) {\n    for (var i = 0; i <= array.length; i++) {\n      if (value === array[i]) {\n        array.splice(i, 1);\n      }\n    }\n  };\n  exports.escapeRegExp = function (str) {\n    return str.replace(/([.*+?^${}()|[\\]\\/\\\\])/g, '\\\\$1');\n  };\n  exports.escapeHTML = function (str) {\n    return (\"\" + str).replace(/&/g, \"&#38;\").replace(/\"/g, \"&#34;\").replace(/'/g, \"&#39;\").replace(/</g, \"&#60;\");\n  };\n  exports.getMatchOffsets = function (string, regExp) {\n    var matches = [];\n    string.replace(regExp, function (str) {\n      matches.push({\n        offset: arguments[arguments.length - 2],\n        length: str.length\n      });\n    });\n    return matches;\n  };\n  exports.deferredCall = function (fcn) {\n    var timer = null;\n    var callback = function () {\n      timer = null;\n      fcn();\n    };\n    var deferred = function (timeout) {\n      deferred.cancel();\n      timer = setTimeout(callback, timeout || 0);\n      return deferred;\n    };\n    deferred.schedule = deferred;\n    deferred.call = function () {\n      this.cancel();\n      fcn();\n      return deferred;\n    };\n    deferred.cancel = function () {\n      clearTimeout(timer);\n      timer = null;\n      return deferred;\n    };\n    deferred.isPending = function () {\n      return timer;\n    };\n    return deferred;\n  };\n  exports.delayedCall = function (fcn, defaultTimeout) {\n    var timer = null;\n    var callback = function () {\n      timer = null;\n      fcn();\n    };\n    var _self = function (timeout) {\n      if (timer == null) timer = setTimeout(callback, timeout || defaultTimeout);\n    };\n    _self.delay = function (timeout) {\n      timer && clearTimeout(timer);\n      timer = setTimeout(callback, timeout || defaultTimeout);\n    };\n    _self.schedule = _self;\n    _self.call = function () {\n      this.cancel();\n      fcn();\n    };\n    _self.cancel = function () {\n      timer && clearTimeout(timer);\n      timer = null;\n    };\n    _self.isPending = function () {\n      return timer;\n    };\n    return _self;\n  };\n  exports.supportsLookbehind = function () {\n    try {\n      new RegExp('(?<=.)');\n    } catch (e) {\n      return false;\n    }\n    return true;\n  };\n  exports.skipEmptyMatch = function (line, last, supportsUnicodeFlag) {\n    return supportsUnicodeFlag && line.codePointAt(last) > 0xffff ? 2 : 1;\n  };\n});\nace.define(\"ace/apply_delta\", [], function (require, exports, module) {\n  \"use strict\";\n\n  function throwDeltaError(delta, errorText) {\n    console.log(\"Invalid Delta:\", delta);\n    throw \"Invalid Delta: \" + errorText;\n  }\n  function positionInDocument(docLines, position) {\n    return position.row >= 0 && position.row < docLines.length && position.column >= 0 && position.column <= docLines[position.row].length;\n  }\n  function validateDelta(docLines, delta) {\n    if (delta.action != \"insert\" && delta.action != \"remove\") throwDeltaError(delta, \"delta.action must be 'insert' or 'remove'\");\n    if (!(delta.lines instanceof Array)) throwDeltaError(delta, \"delta.lines must be an Array\");\n    if (!delta.start || !delta.end) throwDeltaError(delta, \"delta.start/end must be an present\");\n    var start = delta.start;\n    if (!positionInDocument(docLines, delta.start)) throwDeltaError(delta, \"delta.start must be contained in document\");\n    var end = delta.end;\n    if (delta.action == \"remove\" && !positionInDocument(docLines, end)) throwDeltaError(delta, \"delta.end must contained in document for 'remove' actions\");\n    var numRangeRows = end.row - start.row;\n    var numRangeLastLineChars = end.column - (numRangeRows == 0 ? start.column : 0);\n    if (numRangeRows != delta.lines.length - 1 || delta.lines[numRangeRows].length != numRangeLastLineChars) throwDeltaError(delta, \"delta.range must match delta lines\");\n  }\n  exports.applyDelta = function (docLines, delta, doNotValidate) {\n    var row = delta.start.row;\n    var startColumn = delta.start.column;\n    var line = docLines[row] || \"\";\n    switch (delta.action) {\n      case \"insert\":\n        var lines = delta.lines;\n        if (lines.length === 1) {\n          docLines[row] = line.substring(0, startColumn) + delta.lines[0] + line.substring(startColumn);\n        } else {\n          var args = [row, 1].concat(delta.lines);\n          docLines.splice.apply(docLines, args);\n          docLines[row] = line.substring(0, startColumn) + docLines[row];\n          docLines[row + delta.lines.length - 1] += line.substring(startColumn);\n        }\n        break;\n      case \"remove\":\n        var endColumn = delta.end.column;\n        var endRow = delta.end.row;\n        if (row === endRow) {\n          docLines[row] = line.substring(0, startColumn) + line.substring(endColumn);\n        } else {\n          docLines.splice(row, endRow - row + 1, line.substring(0, startColumn) + docLines[endRow].substring(endColumn));\n        }\n        break;\n    }\n  };\n});\nace.define(\"ace/lib/event_emitter\", [], function (require, exports, module) {\n  \"use strict\";\n\n  var EventEmitter = {};\n  var stopPropagation = function () {\n    this.propagationStopped = true;\n  };\n  var preventDefault = function () {\n    this.defaultPrevented = true;\n  };\n  EventEmitter._emit = EventEmitter._dispatchEvent = function (eventName, e) {\n    this._eventRegistry || (this._eventRegistry = {});\n    this._defaultHandlers || (this._defaultHandlers = {});\n    var listeners = this._eventRegistry[eventName] || [];\n    var defaultHandler = this._defaultHandlers[eventName];\n    if (!listeners.length && !defaultHandler) return;\n    if (typeof e != \"object\" || !e) e = {};\n    if (!e.type) e.type = eventName;\n    if (!e.stopPropagation) e.stopPropagation = stopPropagation;\n    if (!e.preventDefault) e.preventDefault = preventDefault;\n    listeners = listeners.slice();\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i](e, this);\n      if (e.propagationStopped) break;\n    }\n    if (defaultHandler && !e.defaultPrevented) return defaultHandler(e, this);\n  };\n  EventEmitter._signal = function (eventName, e) {\n    var listeners = (this._eventRegistry || {})[eventName];\n    if (!listeners) return;\n    listeners = listeners.slice();\n    for (var i = 0; i < listeners.length; i++) listeners[i](e, this);\n  };\n  EventEmitter.once = function (eventName, callback) {\n    var _self = this;\n    this.on(eventName, function newCallback() {\n      _self.off(eventName, newCallback);\n      callback.apply(null, arguments);\n    });\n    if (!callback) {\n      return new Promise(function (resolve) {\n        callback = resolve;\n      });\n    }\n  };\n  EventEmitter.setDefaultHandler = function (eventName, callback) {\n    var handlers = this._defaultHandlers;\n    if (!handlers) handlers = this._defaultHandlers = {\n      _disabled_: {}\n    };\n    if (handlers[eventName]) {\n      var old = handlers[eventName];\n      var disabled = handlers._disabled_[eventName];\n      if (!disabled) handlers._disabled_[eventName] = disabled = [];\n      disabled.push(old);\n      var i = disabled.indexOf(callback);\n      if (i != -1) disabled.splice(i, 1);\n    }\n    handlers[eventName] = callback;\n  };\n  EventEmitter.removeDefaultHandler = function (eventName, callback) {\n    var handlers = this._defaultHandlers;\n    if (!handlers) return;\n    var disabled = handlers._disabled_[eventName];\n    if (handlers[eventName] == callback) {\n      if (disabled) this.setDefaultHandler(eventName, disabled.pop());\n    } else if (disabled) {\n      var i = disabled.indexOf(callback);\n      if (i != -1) disabled.splice(i, 1);\n    }\n  };\n  EventEmitter.on = EventEmitter.addEventListener = function (eventName, callback, capturing) {\n    this._eventRegistry = this._eventRegistry || {};\n    var listeners = this._eventRegistry[eventName];\n    if (!listeners) listeners = this._eventRegistry[eventName] = [];\n    if (listeners.indexOf(callback) == -1) listeners[capturing ? \"unshift\" : \"push\"](callback);\n    return callback;\n  };\n  EventEmitter.off = EventEmitter.removeListener = EventEmitter.removeEventListener = function (eventName, callback) {\n    this._eventRegistry = this._eventRegistry || {};\n    var listeners = this._eventRegistry[eventName];\n    if (!listeners) return;\n    var index = listeners.indexOf(callback);\n    if (index !== -1) listeners.splice(index, 1);\n  };\n  EventEmitter.removeAllListeners = function (eventName) {\n    if (!eventName) this._eventRegistry = this._defaultHandlers = undefined;\n    if (this._eventRegistry) this._eventRegistry[eventName] = undefined;\n    if (this._defaultHandlers) this._defaultHandlers[eventName] = undefined;\n  };\n  exports.EventEmitter = EventEmitter;\n});\nace.define(\"ace/range\", [], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = /** @class */function () {\n    function Range(startRow, startColumn, endRow, endColumn) {\n      this.start = {\n        row: startRow,\n        column: startColumn\n      };\n      this.end = {\n        row: endRow,\n        column: endColumn\n      };\n    }\n    Range.prototype.isEqual = function (range) {\n      return this.start.row === range.start.row && this.end.row === range.end.row && this.start.column === range.start.column && this.end.column === range.end.column;\n    };\n    Range.prototype.toString = function () {\n      return \"Range: [\" + this.start.row + \"/\" + this.start.column + \"] -> [\" + this.end.row + \"/\" + this.end.column + \"]\";\n    };\n    Range.prototype.contains = function (row, column) {\n      return this.compare(row, column) == 0;\n    };\n    Range.prototype.compareRange = function (range) {\n      var cmp,\n        end = range.end,\n        start = range.start;\n      cmp = this.compare(end.row, end.column);\n      if (cmp == 1) {\n        cmp = this.compare(start.row, start.column);\n        if (cmp == 1) {\n          return 2;\n        } else if (cmp == 0) {\n          return 1;\n        } else {\n          return 0;\n        }\n      } else if (cmp == -1) {\n        return -2;\n      } else {\n        cmp = this.compare(start.row, start.column);\n        if (cmp == -1) {\n          return -1;\n        } else if (cmp == 1) {\n          return 42;\n        } else {\n          return 0;\n        }\n      }\n    };\n    Range.prototype.comparePoint = function (p) {\n      return this.compare(p.row, p.column);\n    };\n    Range.prototype.containsRange = function (range) {\n      return this.comparePoint(range.start) == 0 && this.comparePoint(range.end) == 0;\n    };\n    Range.prototype.intersects = function (range) {\n      var cmp = this.compareRange(range);\n      return cmp == -1 || cmp == 0 || cmp == 1;\n    };\n    Range.prototype.isEnd = function (row, column) {\n      return this.end.row == row && this.end.column == column;\n    };\n    Range.prototype.isStart = function (row, column) {\n      return this.start.row == row && this.start.column == column;\n    };\n    Range.prototype.setStart = function (row, column) {\n      if (typeof row == \"object\") {\n        this.start.column = row.column;\n        this.start.row = row.row;\n      } else {\n        this.start.row = row;\n        this.start.column = column;\n      }\n    };\n    Range.prototype.setEnd = function (row, column) {\n      if (typeof row == \"object\") {\n        this.end.column = row.column;\n        this.end.row = row.row;\n      } else {\n        this.end.row = row;\n        this.end.column = column;\n      }\n    };\n    Range.prototype.inside = function (row, column) {\n      if (this.compare(row, column) == 0) {\n        if (this.isEnd(row, column) || this.isStart(row, column)) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n      return false;\n    };\n    Range.prototype.insideStart = function (row, column) {\n      if (this.compare(row, column) == 0) {\n        if (this.isEnd(row, column)) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n      return false;\n    };\n    Range.prototype.insideEnd = function (row, column) {\n      if (this.compare(row, column) == 0) {\n        if (this.isStart(row, column)) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n      return false;\n    };\n    Range.prototype.compare = function (row, column) {\n      if (!this.isMultiLine()) {\n        if (row === this.start.row) {\n          return column < this.start.column ? -1 : column > this.end.column ? 1 : 0;\n        }\n      }\n      if (row < this.start.row) return -1;\n      if (row > this.end.row) return 1;\n      if (this.start.row === row) return column >= this.start.column ? 0 : -1;\n      if (this.end.row === row) return column <= this.end.column ? 0 : 1;\n      return 0;\n    };\n    Range.prototype.compareStart = function (row, column) {\n      if (this.start.row == row && this.start.column == column) {\n        return -1;\n      } else {\n        return this.compare(row, column);\n      }\n    };\n    Range.prototype.compareEnd = function (row, column) {\n      if (this.end.row == row && this.end.column == column) {\n        return 1;\n      } else {\n        return this.compare(row, column);\n      }\n    };\n    Range.prototype.compareInside = function (row, column) {\n      if (this.end.row == row && this.end.column == column) {\n        return 1;\n      } else if (this.start.row == row && this.start.column == column) {\n        return -1;\n      } else {\n        return this.compare(row, column);\n      }\n    };\n    Range.prototype.clipRows = function (firstRow, lastRow) {\n      if (this.end.row > lastRow) var end = {\n        row: lastRow + 1,\n        column: 0\n      };else if (this.end.row < firstRow) var end = {\n        row: firstRow,\n        column: 0\n      };\n      if (this.start.row > lastRow) var start = {\n        row: lastRow + 1,\n        column: 0\n      };else if (this.start.row < firstRow) var start = {\n        row: firstRow,\n        column: 0\n      };\n      return Range.fromPoints(start || this.start, end || this.end);\n    };\n    Range.prototype.extend = function (row, column) {\n      var cmp = this.compare(row, column);\n      if (cmp == 0) return this;else if (cmp == -1) var start = {\n        row: row,\n        column: column\n      };else var end = {\n        row: row,\n        column: column\n      };\n      return Range.fromPoints(start || this.start, end || this.end);\n    };\n    Range.prototype.isEmpty = function () {\n      return this.start.row === this.end.row && this.start.column === this.end.column;\n    };\n    Range.prototype.isMultiLine = function () {\n      return this.start.row !== this.end.row;\n    };\n    Range.prototype.clone = function () {\n      return Range.fromPoints(this.start, this.end);\n    };\n    Range.prototype.collapseRows = function () {\n      if (this.end.column == 0) return new Range(this.start.row, 0, Math.max(this.start.row, this.end.row - 1), 0);else return new Range(this.start.row, 0, this.end.row, 0);\n    };\n    Range.prototype.toScreenRange = function (session) {\n      var screenPosStart = session.documentToScreenPosition(this.start);\n      var screenPosEnd = session.documentToScreenPosition(this.end);\n      return new Range(screenPosStart.row, screenPosStart.column, screenPosEnd.row, screenPosEnd.column);\n    };\n    Range.prototype.moveBy = function (row, column) {\n      this.start.row += row;\n      this.start.column += column;\n      this.end.row += row;\n      this.end.column += column;\n    };\n    return Range;\n  }();\n  Range.fromPoints = function (start, end) {\n    return new Range(start.row, start.column, end.row, end.column);\n  };\n  Range.comparePoints = function (p1, p2) {\n    return p1.row - p2.row || p1.column - p2.column;\n  };\n  exports.Range = Range;\n});\nace.define(\"ace/anchor\", [], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"./lib/oop\");\n  var EventEmitter = require(\"./lib/event_emitter\").EventEmitter;\n  var Anchor = /** @class */function () {\n    function Anchor(doc, row, column) {\n      this.$onChange = this.onChange.bind(this);\n      this.attach(doc);\n      if (typeof row != \"number\") this.setPosition(row.row, row.column);else this.setPosition(row, column);\n    }\n    Anchor.prototype.getPosition = function () {\n      return this.$clipPositionToDocument(this.row, this.column);\n    };\n    Anchor.prototype.getDocument = function () {\n      return this.document;\n    };\n    Anchor.prototype.onChange = function (delta) {\n      if (delta.start.row == delta.end.row && delta.start.row != this.row) return;\n      if (delta.start.row > this.row) return;\n      var point = $getTransformedPoint(delta, {\n        row: this.row,\n        column: this.column\n      }, this.$insertRight);\n      this.setPosition(point.row, point.column, true);\n    };\n    Anchor.prototype.setPosition = function (row, column, noClip) {\n      var pos;\n      if (noClip) {\n        pos = {\n          row: row,\n          column: column\n        };\n      } else {\n        pos = this.$clipPositionToDocument(row, column);\n      }\n      if (this.row == pos.row && this.column == pos.column) return;\n      var old = {\n        row: this.row,\n        column: this.column\n      };\n      this.row = pos.row;\n      this.column = pos.column;\n      this._signal(\"change\", {\n        old: old,\n        value: pos\n      });\n    };\n    Anchor.prototype.detach = function () {\n      this.document.off(\"change\", this.$onChange);\n    };\n    Anchor.prototype.attach = function (doc) {\n      this.document = doc || this.document;\n      this.document.on(\"change\", this.$onChange);\n    };\n    Anchor.prototype.$clipPositionToDocument = function (row, column) {\n      var pos = {};\n      if (row >= this.document.getLength()) {\n        pos.row = Math.max(0, this.document.getLength() - 1);\n        pos.column = this.document.getLine(pos.row).length;\n      } else if (row < 0) {\n        pos.row = 0;\n        pos.column = 0;\n      } else {\n        pos.row = row;\n        pos.column = Math.min(this.document.getLine(pos.row).length, Math.max(0, column));\n      }\n      if (column < 0) pos.column = 0;\n      return pos;\n    };\n    return Anchor;\n  }();\n  Anchor.prototype.$insertRight = false;\n  oop.implement(Anchor.prototype, EventEmitter);\n  function $pointsInOrder(point1, point2, equalPointsInOrder) {\n    var bColIsAfter = equalPointsInOrder ? point1.column <= point2.column : point1.column < point2.column;\n    return point1.row < point2.row || point1.row == point2.row && bColIsAfter;\n  }\n  function $getTransformedPoint(delta, point, moveIfEqual) {\n    var deltaIsInsert = delta.action == \"insert\";\n    var deltaRowShift = (deltaIsInsert ? 1 : -1) * (delta.end.row - delta.start.row);\n    var deltaColShift = (deltaIsInsert ? 1 : -1) * (delta.end.column - delta.start.column);\n    var deltaStart = delta.start;\n    var deltaEnd = deltaIsInsert ? deltaStart : delta.end; // Collapse insert range.\n    if ($pointsInOrder(point, deltaStart, moveIfEqual)) {\n      return {\n        row: point.row,\n        column: point.column\n      };\n    }\n    if ($pointsInOrder(deltaEnd, point, !moveIfEqual)) {\n      return {\n        row: point.row + deltaRowShift,\n        column: point.column + (point.row == deltaEnd.row ? deltaColShift : 0)\n      };\n    }\n    return {\n      row: deltaStart.row,\n      column: deltaStart.column\n    };\n  }\n  exports.Anchor = Anchor;\n});\nace.define(\"ace/document\", [], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"./lib/oop\");\n  var applyDelta = require(\"./apply_delta\").applyDelta;\n  var EventEmitter = require(\"./lib/event_emitter\").EventEmitter;\n  var Range = require(\"./range\").Range;\n  var Anchor = require(\"./anchor\").Anchor;\n  var Document = /** @class */function () {\n    function Document(textOrLines) {\n      this.$lines = [\"\"];\n      if (textOrLines.length === 0) {\n        this.$lines = [\"\"];\n      } else if (Array.isArray(textOrLines)) {\n        this.insertMergedLines({\n          row: 0,\n          column: 0\n        }, textOrLines);\n      } else {\n        this.insert({\n          row: 0,\n          column: 0\n        }, textOrLines);\n      }\n    }\n    Document.prototype.setValue = function (text) {\n      var len = this.getLength() - 1;\n      this.remove(new Range(0, 0, len, this.getLine(len).length));\n      this.insert({\n        row: 0,\n        column: 0\n      }, text || \"\");\n    };\n    Document.prototype.getValue = function () {\n      return this.getAllLines().join(this.getNewLineCharacter());\n    };\n    Document.prototype.createAnchor = function (row, column) {\n      return new Anchor(this, row, column);\n    };\n    Document.prototype.$detectNewLine = function (text) {\n      var match = text.match(/^.*?(\\r\\n|\\r|\\n)/m);\n      this.$autoNewLine = match ? match[1] : \"\\n\";\n      this._signal(\"changeNewLineMode\");\n    };\n    Document.prototype.getNewLineCharacter = function () {\n      switch (this.$newLineMode) {\n        case \"windows\":\n          return \"\\r\\n\";\n        case \"unix\":\n          return \"\\n\";\n        default:\n          return this.$autoNewLine || \"\\n\";\n      }\n    };\n    Document.prototype.setNewLineMode = function (newLineMode) {\n      if (this.$newLineMode === newLineMode) return;\n      this.$newLineMode = newLineMode;\n      this._signal(\"changeNewLineMode\");\n    };\n    Document.prototype.getNewLineMode = function () {\n      return this.$newLineMode;\n    };\n    Document.prototype.isNewLine = function (text) {\n      return text == \"\\r\\n\" || text == \"\\r\" || text == \"\\n\";\n    };\n    Document.prototype.getLine = function (row) {\n      return this.$lines[row] || \"\";\n    };\n    Document.prototype.getLines = function (firstRow, lastRow) {\n      return this.$lines.slice(firstRow, lastRow + 1);\n    };\n    Document.prototype.getAllLines = function () {\n      return this.getLines(0, this.getLength());\n    };\n    Document.prototype.getLength = function () {\n      return this.$lines.length;\n    };\n    Document.prototype.getTextRange = function (range) {\n      return this.getLinesForRange(range).join(this.getNewLineCharacter());\n    };\n    Document.prototype.getLinesForRange = function (range) {\n      var lines;\n      if (range.start.row === range.end.row) {\n        lines = [this.getLine(range.start.row).substring(range.start.column, range.end.column)];\n      } else {\n        lines = this.getLines(range.start.row, range.end.row);\n        lines[0] = (lines[0] || \"\").substring(range.start.column);\n        var l = lines.length - 1;\n        if (range.end.row - range.start.row == l) lines[l] = lines[l].substring(0, range.end.column);\n      }\n      return lines;\n    };\n    Document.prototype.insertLines = function (row, lines) {\n      console.warn(\"Use of document.insertLines is deprecated. Use the insertFullLines method instead.\");\n      return this.insertFullLines(row, lines);\n    };\n    Document.prototype.removeLines = function (firstRow, lastRow) {\n      console.warn(\"Use of document.removeLines is deprecated. Use the removeFullLines method instead.\");\n      return this.removeFullLines(firstRow, lastRow);\n    };\n    Document.prototype.insertNewLine = function (position) {\n      console.warn(\"Use of document.insertNewLine is deprecated. Use insertMergedLines(position, ['', '']) instead.\");\n      return this.insertMergedLines(position, [\"\", \"\"]);\n    };\n    Document.prototype.insert = function (position, text) {\n      if (this.getLength() <= 1) this.$detectNewLine(text);\n      return this.insertMergedLines(position, this.$split(text));\n    };\n    Document.prototype.insertInLine = function (position, text) {\n      var start = this.clippedPos(position.row, position.column);\n      var end = this.pos(position.row, position.column + text.length);\n      this.applyDelta({\n        start: start,\n        end: end,\n        action: \"insert\",\n        lines: [text]\n      }, true);\n      return this.clonePos(end);\n    };\n    Document.prototype.clippedPos = function (row, column) {\n      var length = this.getLength();\n      if (row === undefined) {\n        row = length;\n      } else if (row < 0) {\n        row = 0;\n      } else if (row >= length) {\n        row = length - 1;\n        column = undefined;\n      }\n      var line = this.getLine(row);\n      if (column == undefined) column = line.length;\n      column = Math.min(Math.max(column, 0), line.length);\n      return {\n        row: row,\n        column: column\n      };\n    };\n    Document.prototype.clonePos = function (pos) {\n      return {\n        row: pos.row,\n        column: pos.column\n      };\n    };\n    Document.prototype.pos = function (row, column) {\n      return {\n        row: row,\n        column: column\n      };\n    };\n    Document.prototype.$clipPosition = function (position) {\n      var length = this.getLength();\n      if (position.row >= length) {\n        position.row = Math.max(0, length - 1);\n        position.column = this.getLine(length - 1).length;\n      } else {\n        position.row = Math.max(0, position.row);\n        position.column = Math.min(Math.max(position.column, 0), this.getLine(position.row).length);\n      }\n      return position;\n    };\n    Document.prototype.insertFullLines = function (row, lines) {\n      row = Math.min(Math.max(row, 0), this.getLength());\n      var column = 0;\n      if (row < this.getLength()) {\n        lines = lines.concat([\"\"]);\n        column = 0;\n      } else {\n        lines = [\"\"].concat(lines);\n        row--;\n        column = this.$lines[row].length;\n      }\n      this.insertMergedLines({\n        row: row,\n        column: column\n      }, lines);\n    };\n    Document.prototype.insertMergedLines = function (position, lines) {\n      var start = this.clippedPos(position.row, position.column);\n      var end = {\n        row: start.row + lines.length - 1,\n        column: (lines.length == 1 ? start.column : 0) + lines[lines.length - 1].length\n      };\n      this.applyDelta({\n        start: start,\n        end: end,\n        action: \"insert\",\n        lines: lines\n      });\n      return this.clonePos(end);\n    };\n    Document.prototype.remove = function (range) {\n      var start = this.clippedPos(range.start.row, range.start.column);\n      var end = this.clippedPos(range.end.row, range.end.column);\n      this.applyDelta({\n        start: start,\n        end: end,\n        action: \"remove\",\n        lines: this.getLinesForRange({\n          start: start,\n          end: end\n        })\n      });\n      return this.clonePos(start);\n    };\n    Document.prototype.removeInLine = function (row, startColumn, endColumn) {\n      var start = this.clippedPos(row, startColumn);\n      var end = this.clippedPos(row, endColumn);\n      this.applyDelta({\n        start: start,\n        end: end,\n        action: \"remove\",\n        lines: this.getLinesForRange({\n          start: start,\n          end: end\n        })\n      }, true);\n      return this.clonePos(start);\n    };\n    Document.prototype.removeFullLines = function (firstRow, lastRow) {\n      firstRow = Math.min(Math.max(0, firstRow), this.getLength() - 1);\n      lastRow = Math.min(Math.max(0, lastRow), this.getLength() - 1);\n      var deleteFirstNewLine = lastRow == this.getLength() - 1 && firstRow > 0;\n      var deleteLastNewLine = lastRow < this.getLength() - 1;\n      var startRow = deleteFirstNewLine ? firstRow - 1 : firstRow;\n      var startCol = deleteFirstNewLine ? this.getLine(startRow).length : 0;\n      var endRow = deleteLastNewLine ? lastRow + 1 : lastRow;\n      var endCol = deleteLastNewLine ? 0 : this.getLine(endRow).length;\n      var range = new Range(startRow, startCol, endRow, endCol);\n      var deletedLines = this.$lines.slice(firstRow, lastRow + 1);\n      this.applyDelta({\n        start: range.start,\n        end: range.end,\n        action: \"remove\",\n        lines: this.getLinesForRange(range)\n      });\n      return deletedLines;\n    };\n    Document.prototype.removeNewLine = function (row) {\n      if (row < this.getLength() - 1 && row >= 0) {\n        this.applyDelta({\n          start: this.pos(row, this.getLine(row).length),\n          end: this.pos(row + 1, 0),\n          action: \"remove\",\n          lines: [\"\", \"\"]\n        });\n      }\n    };\n    Document.prototype.replace = function (range, text) {\n      if (!(range instanceof Range)) range = Range.fromPoints(range.start, range.end);\n      if (text.length === 0 && range.isEmpty()) return range.start;\n      if (text == this.getTextRange(range)) return range.end;\n      this.remove(range);\n      var end;\n      if (text) {\n        end = this.insert(range.start, text);\n      } else {\n        end = range.start;\n      }\n      return end;\n    };\n    Document.prototype.applyDeltas = function (deltas) {\n      for (var i = 0; i < deltas.length; i++) {\n        this.applyDelta(deltas[i]);\n      }\n    };\n    Document.prototype.revertDeltas = function (deltas) {\n      for (var i = deltas.length - 1; i >= 0; i--) {\n        this.revertDelta(deltas[i]);\n      }\n    };\n    Document.prototype.applyDelta = function (delta, doNotValidate) {\n      var isInsert = delta.action == \"insert\";\n      if (isInsert ? delta.lines.length <= 1 && !delta.lines[0] : !Range.comparePoints(delta.start, delta.end)) {\n        return;\n      }\n      if (isInsert && delta.lines.length > 20000) {\n        this.$splitAndapplyLargeDelta(delta, 20000);\n      } else {\n        applyDelta(this.$lines, delta, doNotValidate);\n        this._signal(\"change\", delta);\n      }\n    };\n    Document.prototype.$safeApplyDelta = function (delta) {\n      var docLength = this.$lines.length;\n      if (delta.action == \"remove\" && delta.start.row < docLength && delta.end.row < docLength || delta.action == \"insert\" && delta.start.row <= docLength) {\n        this.applyDelta(delta);\n      }\n    };\n    Document.prototype.$splitAndapplyLargeDelta = function (delta, MAX) {\n      var lines = delta.lines;\n      var l = lines.length - MAX + 1;\n      var row = delta.start.row;\n      var column = delta.start.column;\n      for (var from = 0, to = 0; from < l; from = to) {\n        to += MAX - 1;\n        var chunk = lines.slice(from, to);\n        chunk.push(\"\");\n        this.applyDelta({\n          start: this.pos(row + from, column),\n          end: this.pos(row + to, column = 0),\n          action: delta.action,\n          lines: chunk\n        }, true);\n      }\n      delta.lines = lines.slice(from);\n      delta.start.row = row + from;\n      delta.start.column = column;\n      this.applyDelta(delta, true);\n    };\n    Document.prototype.revertDelta = function (delta) {\n      this.$safeApplyDelta({\n        start: this.clonePos(delta.start),\n        end: this.clonePos(delta.end),\n        action: delta.action == \"insert\" ? \"remove\" : \"insert\",\n        lines: delta.lines.slice()\n      });\n    };\n    Document.prototype.indexToPosition = function (index, startRow) {\n      var lines = this.$lines || this.getAllLines();\n      var newlineLength = this.getNewLineCharacter().length;\n      for (var i = startRow || 0, l = lines.length; i < l; i++) {\n        index -= lines[i].length + newlineLength;\n        if (index < 0) return {\n          row: i,\n          column: index + lines[i].length + newlineLength\n        };\n      }\n      return {\n        row: l - 1,\n        column: index + lines[l - 1].length + newlineLength\n      };\n    };\n    Document.prototype.positionToIndex = function (pos, startRow) {\n      var lines = this.$lines || this.getAllLines();\n      var newlineLength = this.getNewLineCharacter().length;\n      var index = 0;\n      var row = Math.min(pos.row, lines.length);\n      for (var i = startRow || 0; i < row; ++i) index += lines[i].length + newlineLength;\n      return index + pos.column;\n    };\n    Document.prototype.$split = function (text) {\n      return text.split(/\\r\\n|\\r|\\n/);\n    };\n    return Document;\n  }();\n  Document.prototype.$autoNewLine = \"\";\n  Document.prototype.$newLineMode = \"auto\";\n  oop.implement(Document.prototype, EventEmitter);\n  exports.Document = Document;\n});\nace.define(\"ace/worker/mirror\", [], function (require, exports, module) {\n  \"use strict\";\n\n  var Document = require(\"../document\").Document;\n  var lang = require(\"../lib/lang\");\n  var Mirror = exports.Mirror = function (sender) {\n    this.sender = sender;\n    var doc = this.doc = new Document(\"\");\n    var deferredUpdate = this.deferredUpdate = lang.delayedCall(this.onUpdate.bind(this));\n    var _self = this;\n    sender.on(\"change\", function (e) {\n      var data = e.data;\n      if (data[0].start) {\n        doc.applyDeltas(data);\n      } else {\n        for (var i = 0; i < data.length; i += 2) {\n          var d, err;\n          if (Array.isArray(data[i + 1])) {\n            d = {\n              action: \"insert\",\n              start: data[i],\n              lines: data[i + 1]\n            };\n          } else {\n            d = {\n              action: \"remove\",\n              start: data[i],\n              end: data[i + 1]\n            };\n          }\n          if ((d.action == \"insert\" ? d.start : d.end).row >= doc.$lines.length) {\n            err = new Error(\"Invalid delta\");\n            err.data = {\n              path: _self.$path,\n              linesLength: doc.$lines.length,\n              start: d.start,\n              end: d.end\n            };\n            throw err;\n          }\n          doc.applyDelta(d, true);\n        }\n      }\n      if (_self.$timeout) return deferredUpdate.schedule(_self.$timeout);\n      _self.onUpdate();\n    });\n  };\n  (function () {\n    this.$timeout = 500;\n    this.setTimeout = function (timeout) {\n      this.$timeout = timeout;\n    };\n    this.setValue = function (value) {\n      this.doc.setValue(value);\n      this.deferredUpdate.schedule(this.$timeout);\n    };\n    this.getValue = function (callbackId) {\n      this.sender.callback(this.doc.getValue(), callbackId);\n    };\n    this.onUpdate = function () {};\n    this.isPending = function () {\n      return this.deferredUpdate.isPending();\n    };\n  }).call(Mirror.prototype);\n});\nace.define(\"ace/mode/css/csslint\", [], function (require, exports, module) {\n  var CSSLint = function () {\n    var module = module || {},\n      exports = exports || {};\n    var parserlib = function () {\n      var require;\n      require = function () {\n        function r(e, n, t) {\n          function o(i, f) {\n            if (!n[i]) {\n              if (!e[i]) {\n                var c = \"function\" == typeof require && require;\n                if (!f && c) return c(i, !0);\n                if (u) return u(i, !0);\n                var a = new Error(\"Cannot find module '\" + i + \"'\");\n                throw a.code = \"MODULE_NOT_FOUND\", a;\n              }\n              var p = n[i] = {\n                exports: {}\n              };\n              e[i][0].call(p.exports, function (r) {\n                var n = e[i][1][r];\n                return o(n || r);\n              }, p, p.exports, r, e, n, t);\n            }\n            return n[i].exports;\n          }\n          for (var u = \"function\" == typeof require && require, i = 0; i < t.length; i++) o(t[i]);\n          return o;\n        }\n        return r;\n      }()({\n        1: [function (require, module, exports) {\n          \"use strict\";\n\n          var Colors = module.exports = {\n            __proto__: null,\n            aliceblue: \"#f0f8ff\",\n            antiquewhite: \"#faebd7\",\n            aqua: \"#00ffff\",\n            aquamarine: \"#7fffd4\",\n            azure: \"#f0ffff\",\n            beige: \"#f5f5dc\",\n            bisque: \"#ffe4c4\",\n            black: \"#000000\",\n            blanchedalmond: \"#ffebcd\",\n            blue: \"#0000ff\",\n            blueviolet: \"#8a2be2\",\n            brown: \"#a52a2a\",\n            burlywood: \"#deb887\",\n            cadetblue: \"#5f9ea0\",\n            chartreuse: \"#7fff00\",\n            chocolate: \"#d2691e\",\n            coral: \"#ff7f50\",\n            cornflowerblue: \"#6495ed\",\n            cornsilk: \"#fff8dc\",\n            crimson: \"#dc143c\",\n            cyan: \"#00ffff\",\n            darkblue: \"#00008b\",\n            darkcyan: \"#008b8b\",\n            darkgoldenrod: \"#b8860b\",\n            darkgray: \"#a9a9a9\",\n            darkgreen: \"#006400\",\n            darkgrey: \"#a9a9a9\",\n            darkkhaki: \"#bdb76b\",\n            darkmagenta: \"#8b008b\",\n            darkolivegreen: \"#556b2f\",\n            darkorange: \"#ff8c00\",\n            darkorchid: \"#9932cc\",\n            darkred: \"#8b0000\",\n            darksalmon: \"#e9967a\",\n            darkseagreen: \"#8fbc8f\",\n            darkslateblue: \"#483d8b\",\n            darkslategray: \"#2f4f4f\",\n            darkslategrey: \"#2f4f4f\",\n            darkturquoise: \"#00ced1\",\n            darkviolet: \"#9400d3\",\n            deeppink: \"#ff1493\",\n            deepskyblue: \"#00bfff\",\n            dimgray: \"#696969\",\n            dimgrey: \"#696969\",\n            dodgerblue: \"#1e90ff\",\n            firebrick: \"#b22222\",\n            floralwhite: \"#fffaf0\",\n            forestgreen: \"#228b22\",\n            fuchsia: \"#ff00ff\",\n            gainsboro: \"#dcdcdc\",\n            ghostwhite: \"#f8f8ff\",\n            gold: \"#ffd700\",\n            goldenrod: \"#daa520\",\n            gray: \"#808080\",\n            green: \"#008000\",\n            greenyellow: \"#adff2f\",\n            grey: \"#808080\",\n            honeydew: \"#f0fff0\",\n            hotpink: \"#ff69b4\",\n            indianred: \"#cd5c5c\",\n            indigo: \"#4b0082\",\n            ivory: \"#fffff0\",\n            khaki: \"#f0e68c\",\n            lavender: \"#e6e6fa\",\n            lavenderblush: \"#fff0f5\",\n            lawngreen: \"#7cfc00\",\n            lemonchiffon: \"#fffacd\",\n            lightblue: \"#add8e6\",\n            lightcoral: \"#f08080\",\n            lightcyan: \"#e0ffff\",\n            lightgoldenrodyellow: \"#fafad2\",\n            lightgray: \"#d3d3d3\",\n            lightgreen: \"#90ee90\",\n            lightgrey: \"#d3d3d3\",\n            lightpink: \"#ffb6c1\",\n            lightsalmon: \"#ffa07a\",\n            lightseagreen: \"#20b2aa\",\n            lightskyblue: \"#87cefa\",\n            lightslategray: \"#778899\",\n            lightslategrey: \"#778899\",\n            lightsteelblue: \"#b0c4de\",\n            lightyellow: \"#ffffe0\",\n            lime: \"#00ff00\",\n            limegreen: \"#32cd32\",\n            linen: \"#faf0e6\",\n            magenta: \"#ff00ff\",\n            maroon: \"#800000\",\n            mediumaquamarine: \"#66cdaa\",\n            mediumblue: \"#0000cd\",\n            mediumorchid: \"#ba55d3\",\n            mediumpurple: \"#9370db\",\n            mediumseagreen: \"#3cb371\",\n            mediumslateblue: \"#7b68ee\",\n            mediumspringgreen: \"#00fa9a\",\n            mediumturquoise: \"#48d1cc\",\n            mediumvioletred: \"#c71585\",\n            midnightblue: \"#191970\",\n            mintcream: \"#f5fffa\",\n            mistyrose: \"#ffe4e1\",\n            moccasin: \"#ffe4b5\",\n            navajowhite: \"#ffdead\",\n            navy: \"#000080\",\n            oldlace: \"#fdf5e6\",\n            olive: \"#808000\",\n            olivedrab: \"#6b8e23\",\n            orange: \"#ffa500\",\n            orangered: \"#ff4500\",\n            orchid: \"#da70d6\",\n            palegoldenrod: \"#eee8aa\",\n            palegreen: \"#98fb98\",\n            paleturquoise: \"#afeeee\",\n            palevioletred: \"#db7093\",\n            papayawhip: \"#ffefd5\",\n            peachpuff: \"#ffdab9\",\n            peru: \"#cd853f\",\n            pink: \"#ffc0cb\",\n            plum: \"#dda0dd\",\n            powderblue: \"#b0e0e6\",\n            purple: \"#800080\",\n            rebeccapurple: \"#663399\",\n            red: \"#ff0000\",\n            rosybrown: \"#bc8f8f\",\n            royalblue: \"#4169e1\",\n            saddlebrown: \"#8b4513\",\n            salmon: \"#fa8072\",\n            sandybrown: \"#f4a460\",\n            seagreen: \"#2e8b57\",\n            seashell: \"#fff5ee\",\n            sienna: \"#a0522d\",\n            silver: \"#c0c0c0\",\n            skyblue: \"#87ceeb\",\n            slateblue: \"#6a5acd\",\n            slategray: \"#708090\",\n            slategrey: \"#708090\",\n            snow: \"#fffafa\",\n            springgreen: \"#00ff7f\",\n            steelblue: \"#4682b4\",\n            tan: \"#d2b48c\",\n            teal: \"#008080\",\n            thistle: \"#d8bfd8\",\n            tomato: \"#ff6347\",\n            turquoise: \"#40e0d0\",\n            violet: \"#ee82ee\",\n            wheat: \"#f5deb3\",\n            white: \"#ffffff\",\n            whitesmoke: \"#f5f5f5\",\n            yellow: \"#ffff00\",\n            yellowgreen: \"#9acd32\",\n            currentColor: \"The value of the 'color' property.\",\n            activeborder: \"Active window border.\",\n            activecaption: \"Active window caption.\",\n            appworkspace: \"Background color of multiple document interface.\",\n            background: \"Desktop background.\",\n            buttonface: \"The face background color for 3-D elements that appear 3-D due to one layer of surrounding border.\",\n            buttonhighlight: \"The color of the border facing the light source for 3-D elements that appear 3-D due to one layer of surrounding border.\",\n            buttonshadow: \"The color of the border away from the light source for 3-D elements that appear 3-D due to one layer of surrounding border.\",\n            buttontext: \"Text on push buttons.\",\n            captiontext: \"Text in caption, size box, and scrollbar arrow box.\",\n            graytext: \"Grayed (disabled) text. This color is set to #000 if the current display driver does not support a solid gray color.\",\n            greytext: \"Greyed (disabled) text. This color is set to #000 if the current display driver does not support a solid grey color.\",\n            highlight: \"Item(s) selected in a control.\",\n            highlighttext: \"Text of item(s) selected in a control.\",\n            inactiveborder: \"Inactive window border.\",\n            inactivecaption: \"Inactive window caption.\",\n            inactivecaptiontext: \"Color of text in an inactive caption.\",\n            infobackground: \"Background color for tooltip controls.\",\n            infotext: \"Text color for tooltip controls.\",\n            menu: \"Menu background.\",\n            menutext: \"Text in menus.\",\n            scrollbar: \"Scroll bar gray area.\",\n            threeddarkshadow: \"The color of the darker (generally outer) of the two borders away from the light source for 3-D elements that appear 3-D due to two concentric layers of surrounding border.\",\n            threedface: \"The face background color for 3-D elements that appear 3-D due to two concentric layers of surrounding border.\",\n            threedhighlight: \"The color of the lighter (generally outer) of the two borders facing the light source for 3-D elements that appear 3-D due to two concentric layers of surrounding border.\",\n            threedlightshadow: \"The color of the darker (generally inner) of the two borders facing the light source for 3-D elements that appear 3-D due to two concentric layers of surrounding border.\",\n            threedshadow: \"The color of the lighter (generally inner) of the two borders away from the light source for 3-D elements that appear 3-D due to two concentric layers of surrounding border.\",\n            window: \"Window background.\",\n            windowframe: \"Window frame.\",\n            windowtext: \"Text in windows.\"\n          };\n        }, {}],\n        2: [function (require, module, exports) {\n          \"use strict\";\n\n          module.exports = Combinator;\n          var SyntaxUnit = require(\"../util/SyntaxUnit\");\n          var Parser = require(\"./Parser\");\n          function Combinator(text, line, col) {\n            SyntaxUnit.call(this, text, line, col, Parser.COMBINATOR_TYPE);\n            this.type = \"unknown\";\n            if (/^\\s+$/.test(text)) {\n              this.type = \"descendant\";\n            } else if (text === \">\") {\n              this.type = \"child\";\n            } else if (text === \"+\") {\n              this.type = \"adjacent-sibling\";\n            } else if (text === \"~\") {\n              this.type = \"sibling\";\n            }\n          }\n          Combinator.prototype = new SyntaxUnit();\n          Combinator.prototype.constructor = Combinator;\n        }, {\n          \"../util/SyntaxUnit\": 26,\n          \"./Parser\": 6\n        }],\n        3: [function (require, module, exports) {\n          \"use strict\";\n\n          module.exports = Matcher;\n          var StringReader = require(\"../util/StringReader\");\n          var SyntaxError = require(\"../util/SyntaxError\");\n          function Matcher(matchFunc, toString) {\n            this.match = function (expression) {\n              var result;\n              expression.mark();\n              result = matchFunc(expression);\n              if (result) {\n                expression.drop();\n              } else {\n                expression.restore();\n              }\n              return result;\n            };\n            this.toString = typeof toString === \"function\" ? toString : function () {\n              return toString;\n            };\n          }\n          Matcher.prec = {\n            MOD: 5,\n            SEQ: 4,\n            ANDAND: 3,\n            OROR: 2,\n            ALT: 1\n          };\n          Matcher.parse = function (str) {\n            var reader, eat, expr, oror, andand, seq, mod, term, result;\n            reader = new StringReader(str);\n            eat = function (matcher) {\n              var result = reader.readMatch(matcher);\n              if (result === null) {\n                throw new SyntaxError(\"Expected \" + matcher, reader.getLine(), reader.getCol());\n              }\n              return result;\n            };\n            expr = function () {\n              var m = [oror()];\n              while (reader.readMatch(\" | \") !== null) {\n                m.push(oror());\n              }\n              return m.length === 1 ? m[0] : Matcher.alt.apply(Matcher, m);\n            };\n            oror = function () {\n              var m = [andand()];\n              while (reader.readMatch(\" || \") !== null) {\n                m.push(andand());\n              }\n              return m.length === 1 ? m[0] : Matcher.oror.apply(Matcher, m);\n            };\n            andand = function () {\n              var m = [seq()];\n              while (reader.readMatch(\" && \") !== null) {\n                m.push(seq());\n              }\n              return m.length === 1 ? m[0] : Matcher.andand.apply(Matcher, m);\n            };\n            seq = function () {\n              var m = [mod()];\n              while (reader.readMatch(/^ (?![&|\\]])/) !== null) {\n                m.push(mod());\n              }\n              return m.length === 1 ? m[0] : Matcher.seq.apply(Matcher, m);\n            };\n            mod = function () {\n              var m = term();\n              if (reader.readMatch(\"?\") !== null) {\n                return m.question();\n              } else if (reader.readMatch(\"*\") !== null) {\n                return m.star();\n              } else if (reader.readMatch(\"+\") !== null) {\n                return m.plus();\n              } else if (reader.readMatch(\"#\") !== null) {\n                return m.hash();\n              } else if (reader.readMatch(/^\\{\\s*/) !== null) {\n                var min = eat(/^\\d+/);\n                eat(/^\\s*,\\s*/);\n                var max = eat(/^\\d+/);\n                eat(/^\\s*\\}/);\n                return m.braces(Number(min), Number(max));\n              }\n              return m;\n            };\n            term = function () {\n              if (reader.readMatch(\"[ \") !== null) {\n                var m = expr();\n                eat(\" ]\");\n                return m;\n              }\n              return Matcher.fromType(eat(/^[^ ?*+#{]+/));\n            };\n            result = expr();\n            if (!reader.eof()) {\n              throw new SyntaxError(\"Expected end of string\", reader.getLine(), reader.getCol());\n            }\n            return result;\n          };\n          Matcher.cast = function (m) {\n            if (m instanceof Matcher) {\n              return m;\n            }\n            return Matcher.parse(m);\n          };\n          Matcher.fromType = function (type) {\n            var ValidationTypes = require(\"./ValidationTypes\");\n            return new Matcher(function (expression) {\n              return expression.hasNext() && ValidationTypes.isType(expression, type);\n            }, type);\n          };\n          Matcher.seq = function () {\n            var ms = Array.prototype.slice.call(arguments).map(Matcher.cast);\n            if (ms.length === 1) {\n              return ms[0];\n            }\n            return new Matcher(function (expression) {\n              var i,\n                result = true;\n              for (i = 0; result && i < ms.length; i++) {\n                result = ms[i].match(expression);\n              }\n              return result;\n            }, function (prec) {\n              var p = Matcher.prec.SEQ;\n              var s = ms.map(function (m) {\n                return m.toString(p);\n              }).join(\" \");\n              if (prec > p) {\n                s = \"[ \" + s + \" ]\";\n              }\n              return s;\n            });\n          };\n          Matcher.alt = function () {\n            var ms = Array.prototype.slice.call(arguments).map(Matcher.cast);\n            if (ms.length === 1) {\n              return ms[0];\n            }\n            return new Matcher(function (expression) {\n              var i,\n                result = false;\n              for (i = 0; !result && i < ms.length; i++) {\n                result = ms[i].match(expression);\n              }\n              return result;\n            }, function (prec) {\n              var p = Matcher.prec.ALT;\n              var s = ms.map(function (m) {\n                return m.toString(p);\n              }).join(\" | \");\n              if (prec > p) {\n                s = \"[ \" + s + \" ]\";\n              }\n              return s;\n            });\n          };\n          Matcher.many = function (required) {\n            var ms = Array.prototype.slice.call(arguments, 1).reduce(function (acc, v) {\n              if (v.expand) {\n                var ValidationTypes = require(\"./ValidationTypes\");\n                acc.push.apply(acc, ValidationTypes.complex[v.expand].options);\n              } else {\n                acc.push(Matcher.cast(v));\n              }\n              return acc;\n            }, []);\n            if (required === true) {\n              required = ms.map(function () {\n                return true;\n              });\n            }\n            var result = new Matcher(function (expression) {\n              var seen = [],\n                max = 0,\n                pass = 0;\n              var success = function (matchCount) {\n                if (pass === 0) {\n                  max = Math.max(matchCount, max);\n                  return matchCount === ms.length;\n                } else {\n                  return matchCount === max;\n                }\n              };\n              var tryMatch = function (matchCount) {\n                for (var i = 0; i < ms.length; i++) {\n                  if (seen[i]) {\n                    continue;\n                  }\n                  expression.mark();\n                  if (ms[i].match(expression)) {\n                    seen[i] = true;\n                    if (tryMatch(matchCount + (required === false || required[i] ? 1 : 0))) {\n                      expression.drop();\n                      return true;\n                    }\n                    expression.restore();\n                    seen[i] = false;\n                  } else {\n                    expression.drop();\n                  }\n                }\n                return success(matchCount);\n              };\n              if (!tryMatch(0)) {\n                pass++;\n                tryMatch(0);\n              }\n              if (required === false) {\n                return max > 0;\n              }\n              for (var i = 0; i < ms.length; i++) {\n                if (required[i] && !seen[i]) {\n                  return false;\n                }\n              }\n              return true;\n            }, function (prec) {\n              var p = required === false ? Matcher.prec.OROR : Matcher.prec.ANDAND;\n              var s = ms.map(function (m, i) {\n                if (required !== false && !required[i]) {\n                  return m.toString(Matcher.prec.MOD) + \"?\";\n                }\n                return m.toString(p);\n              }).join(required === false ? \" || \" : \" && \");\n              if (prec > p) {\n                s = \"[ \" + s + \" ]\";\n              }\n              return s;\n            });\n            result.options = ms;\n            return result;\n          };\n          Matcher.andand = function () {\n            var args = Array.prototype.slice.call(arguments);\n            args.unshift(true);\n            return Matcher.many.apply(Matcher, args);\n          };\n          Matcher.oror = function () {\n            var args = Array.prototype.slice.call(arguments);\n            args.unshift(false);\n            return Matcher.many.apply(Matcher, args);\n          };\n          Matcher.prototype = {\n            constructor: Matcher,\n            match: function () {\n              throw new Error(\"unimplemented\");\n            },\n            toString: function () {\n              throw new Error(\"unimplemented\");\n            },\n            func: function () {\n              return this.match.bind(this);\n            },\n            then: function (m) {\n              return Matcher.seq(this, m);\n            },\n            or: function (m) {\n              return Matcher.alt(this, m);\n            },\n            andand: function (m) {\n              return Matcher.many(true, this, m);\n            },\n            oror: function (m) {\n              return Matcher.many(false, this, m);\n            },\n            star: function () {\n              return this.braces(0, Infinity, \"*\");\n            },\n            plus: function () {\n              return this.braces(1, Infinity, \"+\");\n            },\n            question: function () {\n              return this.braces(0, 1, \"?\");\n            },\n            hash: function () {\n              return this.braces(1, Infinity, \"#\", Matcher.cast(\",\"));\n            },\n            braces: function (min, max, marker, optSep) {\n              var m1 = this,\n                m2 = optSep ? optSep.then(this) : this;\n              if (!marker) {\n                marker = \"{\" + min + \",\" + max + \"}\";\n              }\n              return new Matcher(function (expression) {\n                var result = true,\n                  i;\n                for (i = 0; i < max; i++) {\n                  if (i > 0 && optSep) {\n                    result = m2.match(expression);\n                  } else {\n                    result = m1.match(expression);\n                  }\n                  if (!result) {\n                    break;\n                  }\n                }\n                return i >= min;\n              }, function () {\n                return m1.toString(Matcher.prec.MOD) + marker;\n              });\n            }\n          };\n        }, {\n          \"../util/StringReader\": 24,\n          \"../util/SyntaxError\": 25,\n          \"./ValidationTypes\": 21\n        }],\n        4: [function (require, module, exports) {\n          \"use strict\";\n\n          module.exports = MediaFeature;\n          var SyntaxUnit = require(\"../util/SyntaxUnit\");\n          var Parser = require(\"./Parser\");\n          function MediaFeature(name, value) {\n            SyntaxUnit.call(this, \"(\" + name + (value !== null ? \":\" + value : \"\") + \")\", name.startLine, name.startCol, Parser.MEDIA_FEATURE_TYPE);\n            this.name = name;\n            this.value = value;\n          }\n          MediaFeature.prototype = new SyntaxUnit();\n          MediaFeature.prototype.constructor = MediaFeature;\n        }, {\n          \"../util/SyntaxUnit\": 26,\n          \"./Parser\": 6\n        }],\n        5: [function (require, module, exports) {\n          \"use strict\";\n\n          module.exports = MediaQuery;\n          var SyntaxUnit = require(\"../util/SyntaxUnit\");\n          var Parser = require(\"./Parser\");\n          function MediaQuery(modifier, mediaType, features, line, col) {\n            SyntaxUnit.call(this, (modifier ? modifier + \" \" : \"\") + (mediaType ? mediaType : \"\") + (mediaType && features.length > 0 ? \" and \" : \"\") + features.join(\" and \"), line, col, Parser.MEDIA_QUERY_TYPE);\n            this.modifier = modifier;\n            this.mediaType = mediaType;\n            this.features = features;\n          }\n          MediaQuery.prototype = new SyntaxUnit();\n          MediaQuery.prototype.constructor = MediaQuery;\n        }, {\n          \"../util/SyntaxUnit\": 26,\n          \"./Parser\": 6\n        }],\n        6: [function (require, module, exports) {\n          \"use strict\";\n\n          module.exports = Parser;\n          var EventTarget = require(\"../util/EventTarget\");\n          var SyntaxError = require(\"../util/SyntaxError\");\n          var SyntaxUnit = require(\"../util/SyntaxUnit\");\n          var Combinator = require(\"./Combinator\");\n          var MediaFeature = require(\"./MediaFeature\");\n          var MediaQuery = require(\"./MediaQuery\");\n          var PropertyName = require(\"./PropertyName\");\n          var PropertyValue = require(\"./PropertyValue\");\n          var PropertyValuePart = require(\"./PropertyValuePart\");\n          var Selector = require(\"./Selector\");\n          var SelectorPart = require(\"./SelectorPart\");\n          var SelectorSubPart = require(\"./SelectorSubPart\");\n          var TokenStream = require(\"./TokenStream\");\n          var Tokens = require(\"./Tokens\");\n          var Validation = require(\"./Validation\");\n          function Parser(options) {\n            EventTarget.call(this);\n            this.options = options || {};\n            this._tokenStream = null;\n          }\n          Parser.DEFAULT_TYPE = 0;\n          Parser.COMBINATOR_TYPE = 1;\n          Parser.MEDIA_FEATURE_TYPE = 2;\n          Parser.MEDIA_QUERY_TYPE = 3;\n          Parser.PROPERTY_NAME_TYPE = 4;\n          Parser.PROPERTY_VALUE_TYPE = 5;\n          Parser.PROPERTY_VALUE_PART_TYPE = 6;\n          Parser.SELECTOR_TYPE = 7;\n          Parser.SELECTOR_PART_TYPE = 8;\n          Parser.SELECTOR_SUB_PART_TYPE = 9;\n          Parser.prototype = function () {\n            var proto = new EventTarget(),\n              // new prototype\n              prop,\n              additions = {\n                __proto__: null,\n                constructor: Parser,\n                DEFAULT_TYPE: 0,\n                COMBINATOR_TYPE: 1,\n                MEDIA_FEATURE_TYPE: 2,\n                MEDIA_QUERY_TYPE: 3,\n                PROPERTY_NAME_TYPE: 4,\n                PROPERTY_VALUE_TYPE: 5,\n                PROPERTY_VALUE_PART_TYPE: 6,\n                SELECTOR_TYPE: 7,\n                SELECTOR_PART_TYPE: 8,\n                SELECTOR_SUB_PART_TYPE: 9,\n                _stylesheet: function () {\n                  var tokenStream = this._tokenStream,\n                    count,\n                    token,\n                    tt;\n                  this.fire(\"startstylesheet\");\n                  this._charset();\n                  this._skipCruft();\n                  while (tokenStream.peek() === Tokens.IMPORT_SYM) {\n                    this._import();\n                    this._skipCruft();\n                  }\n                  while (tokenStream.peek() === Tokens.NAMESPACE_SYM) {\n                    this._namespace();\n                    this._skipCruft();\n                  }\n                  tt = tokenStream.peek();\n                  while (tt > Tokens.EOF) {\n                    try {\n                      switch (tt) {\n                        case Tokens.MEDIA_SYM:\n                          this._media();\n                          this._skipCruft();\n                          break;\n                        case Tokens.PAGE_SYM:\n                          this._page();\n                          this._skipCruft();\n                          break;\n                        case Tokens.FONT_FACE_SYM:\n                          this._font_face();\n                          this._skipCruft();\n                          break;\n                        case Tokens.KEYFRAMES_SYM:\n                          this._keyframes();\n                          this._skipCruft();\n                          break;\n                        case Tokens.VIEWPORT_SYM:\n                          this._viewport();\n                          this._skipCruft();\n                          break;\n                        case Tokens.DOCUMENT_SYM:\n                          this._document();\n                          this._skipCruft();\n                          break;\n                        case Tokens.SUPPORTS_SYM:\n                          this._supports();\n                          this._skipCruft();\n                          break;\n                        case Tokens.UNKNOWN_SYM:\n                          // unknown @ rule\n                          tokenStream.get();\n                          if (!this.options.strict) {\n                            this.fire({\n                              type: \"error\",\n                              error: null,\n                              message: \"Unknown @ rule: \" + tokenStream.LT(0).value + \".\",\n                              line: tokenStream.LT(0).startLine,\n                              col: tokenStream.LT(0).startCol\n                            });\n                            count = 0;\n                            while (tokenStream.advance([Tokens.LBRACE, Tokens.RBRACE]) === Tokens.LBRACE) {\n                              count++; // keep track of nesting depth\n                            }\n                            while (count) {\n                              tokenStream.advance([Tokens.RBRACE]);\n                              count--;\n                            }\n                          } else {\n                            throw new SyntaxError(\"Unknown @ rule.\", tokenStream.LT(0).startLine, tokenStream.LT(0).startCol);\n                          }\n                          break;\n                        case Tokens.S:\n                          this._readWhitespace();\n                          break;\n                        default:\n                          if (!this._ruleset()) {\n                            switch (tt) {\n                              case Tokens.CHARSET_SYM:\n                                token = tokenStream.LT(1);\n                                this._charset(false);\n                                throw new SyntaxError(\"@charset not allowed here.\", token.startLine, token.startCol);\n                              case Tokens.IMPORT_SYM:\n                                token = tokenStream.LT(1);\n                                this._import(false);\n                                throw new SyntaxError(\"@import not allowed here.\", token.startLine, token.startCol);\n                              case Tokens.NAMESPACE_SYM:\n                                token = tokenStream.LT(1);\n                                this._namespace(false);\n                                throw new SyntaxError(\"@namespace not allowed here.\", token.startLine, token.startCol);\n                              default:\n                                tokenStream.get(); // get the last token\n                                this._unexpectedToken(tokenStream.token());\n                            }\n                          }\n                      }\n                    } catch (ex) {\n                      if (ex instanceof SyntaxError && !this.options.strict) {\n                        this.fire({\n                          type: \"error\",\n                          error: ex,\n                          message: ex.message,\n                          line: ex.line,\n                          col: ex.col\n                        });\n                      } else {\n                        throw ex;\n                      }\n                    }\n                    tt = tokenStream.peek();\n                  }\n                  if (tt !== Tokens.EOF) {\n                    this._unexpectedToken(tokenStream.token());\n                  }\n                  this.fire(\"endstylesheet\");\n                },\n                _charset: function (emit) {\n                  var tokenStream = this._tokenStream,\n                    charset,\n                    token,\n                    line,\n                    col;\n                  if (tokenStream.match(Tokens.CHARSET_SYM)) {\n                    line = tokenStream.token().startLine;\n                    col = tokenStream.token().startCol;\n                    this._readWhitespace();\n                    tokenStream.mustMatch(Tokens.STRING);\n                    token = tokenStream.token();\n                    charset = token.value;\n                    this._readWhitespace();\n                    tokenStream.mustMatch(Tokens.SEMICOLON);\n                    if (emit !== false) {\n                      this.fire({\n                        type: \"charset\",\n                        charset: charset,\n                        line: line,\n                        col: col\n                      });\n                    }\n                  }\n                },\n                _import: function (emit) {\n                  var tokenStream = this._tokenStream,\n                    uri,\n                    importToken,\n                    mediaList = [];\n                  tokenStream.mustMatch(Tokens.IMPORT_SYM);\n                  importToken = tokenStream.token();\n                  this._readWhitespace();\n                  tokenStream.mustMatch([Tokens.STRING, Tokens.URI]);\n                  uri = tokenStream.token().value.replace(/^(?:url\\()?[\"']?([^\"']+?)[\"']?\\)?$/, \"$1\");\n                  this._readWhitespace();\n                  mediaList = this._media_query_list();\n                  tokenStream.mustMatch(Tokens.SEMICOLON);\n                  this._readWhitespace();\n                  if (emit !== false) {\n                    this.fire({\n                      type: \"import\",\n                      uri: uri,\n                      media: mediaList,\n                      line: importToken.startLine,\n                      col: importToken.startCol\n                    });\n                  }\n                },\n                _namespace: function (emit) {\n                  var tokenStream = this._tokenStream,\n                    line,\n                    col,\n                    prefix,\n                    uri;\n                  tokenStream.mustMatch(Tokens.NAMESPACE_SYM);\n                  line = tokenStream.token().startLine;\n                  col = tokenStream.token().startCol;\n                  this._readWhitespace();\n                  if (tokenStream.match(Tokens.IDENT)) {\n                    prefix = tokenStream.token().value;\n                    this._readWhitespace();\n                  }\n                  tokenStream.mustMatch([Tokens.STRING, Tokens.URI]);\n                  uri = tokenStream.token().value.replace(/(?:url\\()?[\"']([^\"']+)[\"']\\)?/, \"$1\");\n                  this._readWhitespace();\n                  tokenStream.mustMatch(Tokens.SEMICOLON);\n                  this._readWhitespace();\n                  if (emit !== false) {\n                    this.fire({\n                      type: \"namespace\",\n                      prefix: prefix,\n                      uri: uri,\n                      line: line,\n                      col: col\n                    });\n                  }\n                },\n                _supports: function (emit) {\n                  var tokenStream = this._tokenStream,\n                    line,\n                    col;\n                  if (tokenStream.match(Tokens.SUPPORTS_SYM)) {\n                    line = tokenStream.token().startLine;\n                    col = tokenStream.token().startCol;\n                    this._readWhitespace();\n                    this._supports_condition();\n                    this._readWhitespace();\n                    tokenStream.mustMatch(Tokens.LBRACE);\n                    this._readWhitespace();\n                    if (emit !== false) {\n                      this.fire({\n                        type: \"startsupports\",\n                        line: line,\n                        col: col\n                      });\n                    }\n                    while (true) {\n                      if (!this._ruleset()) {\n                        break;\n                      }\n                    }\n                    tokenStream.mustMatch(Tokens.RBRACE);\n                    this._readWhitespace();\n                    this.fire({\n                      type: \"endsupports\",\n                      line: line,\n                      col: col\n                    });\n                  }\n                },\n                _supports_condition: function () {\n                  var tokenStream = this._tokenStream,\n                    ident;\n                  if (tokenStream.match(Tokens.IDENT)) {\n                    ident = tokenStream.token().value.toLowerCase();\n                    if (ident === \"not\") {\n                      tokenStream.mustMatch(Tokens.S);\n                      this._supports_condition_in_parens();\n                    } else {\n                      tokenStream.unget();\n                    }\n                  } else {\n                    this._supports_condition_in_parens();\n                    this._readWhitespace();\n                    while (tokenStream.peek() === Tokens.IDENT) {\n                      ident = tokenStream.LT(1).value.toLowerCase();\n                      if (ident === \"and\" || ident === \"or\") {\n                        tokenStream.mustMatch(Tokens.IDENT);\n                        this._readWhitespace();\n                        this._supports_condition_in_parens();\n                        this._readWhitespace();\n                      }\n                    }\n                  }\n                },\n                _supports_condition_in_parens: function () {\n                  var tokenStream = this._tokenStream,\n                    ident;\n                  if (tokenStream.match(Tokens.LPAREN)) {\n                    this._readWhitespace();\n                    if (tokenStream.match(Tokens.IDENT)) {\n                      ident = tokenStream.token().value.toLowerCase();\n                      if (ident === \"not\") {\n                        this._readWhitespace();\n                        this._supports_condition();\n                        this._readWhitespace();\n                        tokenStream.mustMatch(Tokens.RPAREN);\n                      } else {\n                        tokenStream.unget();\n                        this._supports_declaration_condition(false);\n                      }\n                    } else {\n                      this._supports_condition();\n                      this._readWhitespace();\n                      tokenStream.mustMatch(Tokens.RPAREN);\n                    }\n                  } else {\n                    this._supports_declaration_condition();\n                  }\n                },\n                _supports_declaration_condition: function (requireStartParen) {\n                  var tokenStream = this._tokenStream;\n                  if (requireStartParen !== false) {\n                    tokenStream.mustMatch(Tokens.LPAREN);\n                  }\n                  this._readWhitespace();\n                  this._declaration();\n                  tokenStream.mustMatch(Tokens.RPAREN);\n                },\n                _media: function () {\n                  var tokenStream = this._tokenStream,\n                    line,\n                    col,\n                    mediaList; // = [];\n                  tokenStream.mustMatch(Tokens.MEDIA_SYM);\n                  line = tokenStream.token().startLine;\n                  col = tokenStream.token().startCol;\n                  this._readWhitespace();\n                  mediaList = this._media_query_list();\n                  tokenStream.mustMatch(Tokens.LBRACE);\n                  this._readWhitespace();\n                  this.fire({\n                    type: \"startmedia\",\n                    media: mediaList,\n                    line: line,\n                    col: col\n                  });\n                  while (true) {\n                    if (tokenStream.peek() === Tokens.PAGE_SYM) {\n                      this._page();\n                    } else if (tokenStream.peek() === Tokens.FONT_FACE_SYM) {\n                      this._font_face();\n                    } else if (tokenStream.peek() === Tokens.VIEWPORT_SYM) {\n                      this._viewport();\n                    } else if (tokenStream.peek() === Tokens.DOCUMENT_SYM) {\n                      this._document();\n                    } else if (tokenStream.peek() === Tokens.SUPPORTS_SYM) {\n                      this._supports();\n                    } else if (tokenStream.peek() === Tokens.MEDIA_SYM) {\n                      this._media();\n                    } else if (!this._ruleset()) {\n                      break;\n                    }\n                  }\n                  tokenStream.mustMatch(Tokens.RBRACE);\n                  this._readWhitespace();\n                  this.fire({\n                    type: \"endmedia\",\n                    media: mediaList,\n                    line: line,\n                    col: col\n                  });\n                },\n                _media_query_list: function () {\n                  var tokenStream = this._tokenStream,\n                    mediaList = [];\n                  this._readWhitespace();\n                  if (tokenStream.peek() === Tokens.IDENT || tokenStream.peek() === Tokens.LPAREN) {\n                    mediaList.push(this._media_query());\n                  }\n                  while (tokenStream.match(Tokens.COMMA)) {\n                    this._readWhitespace();\n                    mediaList.push(this._media_query());\n                  }\n                  return mediaList;\n                },\n                _media_query: function () {\n                  var tokenStream = this._tokenStream,\n                    type = null,\n                    ident = null,\n                    token = null,\n                    expressions = [];\n                  if (tokenStream.match(Tokens.IDENT)) {\n                    ident = tokenStream.token().value.toLowerCase();\n                    if (ident !== \"only\" && ident !== \"not\") {\n                      tokenStream.unget();\n                      ident = null;\n                    } else {\n                      token = tokenStream.token();\n                    }\n                  }\n                  this._readWhitespace();\n                  if (tokenStream.peek() === Tokens.IDENT) {\n                    type = this._media_type();\n                    if (token === null) {\n                      token = tokenStream.token();\n                    }\n                  } else if (tokenStream.peek() === Tokens.LPAREN) {\n                    if (token === null) {\n                      token = tokenStream.LT(1);\n                    }\n                    expressions.push(this._media_expression());\n                  }\n                  if (type === null && expressions.length === 0) {\n                    return null;\n                  } else {\n                    this._readWhitespace();\n                    while (tokenStream.match(Tokens.IDENT)) {\n                      if (tokenStream.token().value.toLowerCase() !== \"and\") {\n                        this._unexpectedToken(tokenStream.token());\n                      }\n                      this._readWhitespace();\n                      expressions.push(this._media_expression());\n                    }\n                  }\n                  return new MediaQuery(ident, type, expressions, token.startLine, token.startCol);\n                },\n                _media_type: function () {\n                  return this._media_feature();\n                },\n                _media_expression: function () {\n                  var tokenStream = this._tokenStream,\n                    feature = null,\n                    token,\n                    expression = null;\n                  tokenStream.mustMatch(Tokens.LPAREN);\n                  this._readWhitespace();\n                  feature = this._media_feature();\n                  this._readWhitespace();\n                  if (tokenStream.match(Tokens.COLON)) {\n                    this._readWhitespace();\n                    token = tokenStream.LT(1);\n                    expression = this._expression();\n                  }\n                  tokenStream.mustMatch(Tokens.RPAREN);\n                  this._readWhitespace();\n                  return new MediaFeature(feature, expression ? new SyntaxUnit(expression, token.startLine, token.startCol) : null);\n                },\n                _media_feature: function () {\n                  var tokenStream = this._tokenStream;\n                  this._readWhitespace();\n                  tokenStream.mustMatch(Tokens.IDENT);\n                  return SyntaxUnit.fromToken(tokenStream.token());\n                },\n                _page: function () {\n                  var tokenStream = this._tokenStream,\n                    line,\n                    col,\n                    identifier = null,\n                    pseudoPage = null;\n                  tokenStream.mustMatch(Tokens.PAGE_SYM);\n                  line = tokenStream.token().startLine;\n                  col = tokenStream.token().startCol;\n                  this._readWhitespace();\n                  if (tokenStream.match(Tokens.IDENT)) {\n                    identifier = tokenStream.token().value;\n                    if (identifier.toLowerCase() === \"auto\") {\n                      this._unexpectedToken(tokenStream.token());\n                    }\n                  }\n                  if (tokenStream.peek() === Tokens.COLON) {\n                    pseudoPage = this._pseudo_page();\n                  }\n                  this._readWhitespace();\n                  this.fire({\n                    type: \"startpage\",\n                    id: identifier,\n                    pseudo: pseudoPage,\n                    line: line,\n                    col: col\n                  });\n                  this._readDeclarations(true, true);\n                  this.fire({\n                    type: \"endpage\",\n                    id: identifier,\n                    pseudo: pseudoPage,\n                    line: line,\n                    col: col\n                  });\n                },\n                _margin: function () {\n                  var tokenStream = this._tokenStream,\n                    line,\n                    col,\n                    marginSym = this._margin_sym();\n                  if (marginSym) {\n                    line = tokenStream.token().startLine;\n                    col = tokenStream.token().startCol;\n                    this.fire({\n                      type: \"startpagemargin\",\n                      margin: marginSym,\n                      line: line,\n                      col: col\n                    });\n                    this._readDeclarations(true);\n                    this.fire({\n                      type: \"endpagemargin\",\n                      margin: marginSym,\n                      line: line,\n                      col: col\n                    });\n                    return true;\n                  } else {\n                    return false;\n                  }\n                },\n                _margin_sym: function () {\n                  var tokenStream = this._tokenStream;\n                  if (tokenStream.match([Tokens.TOPLEFTCORNER_SYM, Tokens.TOPLEFT_SYM, Tokens.TOPCENTER_SYM, Tokens.TOPRIGHT_SYM, Tokens.TOPRIGHTCORNER_SYM, Tokens.BOTTOMLEFTCORNER_SYM, Tokens.BOTTOMLEFT_SYM, Tokens.BOTTOMCENTER_SYM, Tokens.BOTTOMRIGHT_SYM, Tokens.BOTTOMRIGHTCORNER_SYM, Tokens.LEFTTOP_SYM, Tokens.LEFTMIDDLE_SYM, Tokens.LEFTBOTTOM_SYM, Tokens.RIGHTTOP_SYM, Tokens.RIGHTMIDDLE_SYM, Tokens.RIGHTBOTTOM_SYM])) {\n                    return SyntaxUnit.fromToken(tokenStream.token());\n                  } else {\n                    return null;\n                  }\n                },\n                _pseudo_page: function () {\n                  var tokenStream = this._tokenStream;\n                  tokenStream.mustMatch(Tokens.COLON);\n                  tokenStream.mustMatch(Tokens.IDENT);\n                  return tokenStream.token().value;\n                },\n                _font_face: function () {\n                  var tokenStream = this._tokenStream,\n                    line,\n                    col;\n                  tokenStream.mustMatch(Tokens.FONT_FACE_SYM);\n                  line = tokenStream.token().startLine;\n                  col = tokenStream.token().startCol;\n                  this._readWhitespace();\n                  this.fire({\n                    type: \"startfontface\",\n                    line: line,\n                    col: col\n                  });\n                  this._readDeclarations(true);\n                  this.fire({\n                    type: \"endfontface\",\n                    line: line,\n                    col: col\n                  });\n                },\n                _viewport: function () {\n                  var tokenStream = this._tokenStream,\n                    line,\n                    col;\n                  tokenStream.mustMatch(Tokens.VIEWPORT_SYM);\n                  line = tokenStream.token().startLine;\n                  col = tokenStream.token().startCol;\n                  this._readWhitespace();\n                  this.fire({\n                    type: \"startviewport\",\n                    line: line,\n                    col: col\n                  });\n                  this._readDeclarations(true);\n                  this.fire({\n                    type: \"endviewport\",\n                    line: line,\n                    col: col\n                  });\n                },\n                _document: function () {\n                  var tokenStream = this._tokenStream,\n                    token,\n                    functions = [],\n                    prefix = \"\";\n                  tokenStream.mustMatch(Tokens.DOCUMENT_SYM);\n                  token = tokenStream.token();\n                  if (/^@-([^-]+)-/.test(token.value)) {\n                    prefix = RegExp.$1;\n                  }\n                  this._readWhitespace();\n                  functions.push(this._document_function());\n                  while (tokenStream.match(Tokens.COMMA)) {\n                    this._readWhitespace();\n                    functions.push(this._document_function());\n                  }\n                  tokenStream.mustMatch(Tokens.LBRACE);\n                  this._readWhitespace();\n                  this.fire({\n                    type: \"startdocument\",\n                    functions: functions,\n                    prefix: prefix,\n                    line: token.startLine,\n                    col: token.startCol\n                  });\n                  var ok = true;\n                  while (ok) {\n                    switch (tokenStream.peek()) {\n                      case Tokens.PAGE_SYM:\n                        this._page();\n                        break;\n                      case Tokens.FONT_FACE_SYM:\n                        this._font_face();\n                        break;\n                      case Tokens.VIEWPORT_SYM:\n                        this._viewport();\n                        break;\n                      case Tokens.MEDIA_SYM:\n                        this._media();\n                        break;\n                      case Tokens.KEYFRAMES_SYM:\n                        this._keyframes();\n                        break;\n                      case Tokens.DOCUMENT_SYM:\n                        this._document();\n                        break;\n                      default:\n                        ok = Boolean(this._ruleset());\n                    }\n                  }\n                  tokenStream.mustMatch(Tokens.RBRACE);\n                  token = tokenStream.token();\n                  this._readWhitespace();\n                  this.fire({\n                    type: \"enddocument\",\n                    functions: functions,\n                    prefix: prefix,\n                    line: token.startLine,\n                    col: token.startCol\n                  });\n                },\n                _document_function: function () {\n                  var tokenStream = this._tokenStream,\n                    value;\n                  if (tokenStream.match(Tokens.URI)) {\n                    value = tokenStream.token().value;\n                    this._readWhitespace();\n                  } else {\n                    value = this._function();\n                  }\n                  return value;\n                },\n                _operator: function (inFunction) {\n                  var tokenStream = this._tokenStream,\n                    token = null;\n                  if (tokenStream.match([Tokens.SLASH, Tokens.COMMA]) || inFunction && tokenStream.match([Tokens.PLUS, Tokens.STAR, Tokens.MINUS])) {\n                    token = tokenStream.token();\n                    this._readWhitespace();\n                  }\n                  return token ? PropertyValuePart.fromToken(token) : null;\n                },\n                _combinator: function () {\n                  var tokenStream = this._tokenStream,\n                    value = null,\n                    token;\n                  if (tokenStream.match([Tokens.PLUS, Tokens.GREATER, Tokens.TILDE])) {\n                    token = tokenStream.token();\n                    value = new Combinator(token.value, token.startLine, token.startCol);\n                    this._readWhitespace();\n                  }\n                  return value;\n                },\n                _unary_operator: function () {\n                  var tokenStream = this._tokenStream;\n                  if (tokenStream.match([Tokens.MINUS, Tokens.PLUS])) {\n                    return tokenStream.token().value;\n                  } else {\n                    return null;\n                  }\n                },\n                _property: function () {\n                  var tokenStream = this._tokenStream,\n                    value = null,\n                    hack = null,\n                    propertyName = \"\",\n                    token,\n                    line,\n                    col;\n                  if (tokenStream.peek() === Tokens.STAR && this.options.starHack) {\n                    tokenStream.get();\n                    token = tokenStream.token();\n                    hack = token.value;\n                    line = token.startLine;\n                    col = token.startCol;\n                  }\n                  if (tokenStream.peek() === Tokens.MINUS) {\n                    tokenStream.get();\n                    token = tokenStream.token();\n                    propertyName = token.value;\n                    line = token.startLine;\n                    col = token.startCol;\n                  }\n                  if (tokenStream.match(Tokens.IDENT)) {\n                    token = tokenStream.token();\n                    propertyName += token.value;\n                    if (propertyName.charAt(0) === \"_\" && this.options.underscoreHack) {\n                      hack = \"_\";\n                      propertyName = propertyName.substring(1);\n                    }\n                    value = new PropertyName(propertyName, hack, line || token.startLine, col || token.startCol);\n                    this._readWhitespace();\n                  } else {\n                    var tt = tokenStream.peek();\n                    if (tt !== Tokens.EOF && tt !== Tokens.RBRACE) {\n                      this._unexpectedToken(tokenStream.LT(1));\n                    }\n                  }\n                  return value;\n                },\n                _ruleset: function () {\n                  var tokenStream = this._tokenStream,\n                    tt,\n                    selectors;\n                  try {\n                    selectors = this._selectors_group();\n                  } catch (ex) {\n                    if (ex instanceof SyntaxError && !this.options.strict) {\n                      this.fire({\n                        type: \"error\",\n                        error: ex,\n                        message: ex.message,\n                        line: ex.line,\n                        col: ex.col\n                      });\n                      tt = tokenStream.advance([Tokens.RBRACE]);\n                      if (tt === Tokens.RBRACE) {} else {\n                        throw ex;\n                      }\n                    } else {\n                      throw ex;\n                    }\n                    return true;\n                  }\n                  if (selectors) {\n                    this.fire({\n                      type: \"startrule\",\n                      selectors: selectors,\n                      line: selectors[0].line,\n                      col: selectors[0].col\n                    });\n                    this._readDeclarations(true);\n                    this.fire({\n                      type: \"endrule\",\n                      selectors: selectors,\n                      line: selectors[0].line,\n                      col: selectors[0].col\n                    });\n                  }\n                  return selectors;\n                },\n                _selectors_group: function () {\n                  var tokenStream = this._tokenStream,\n                    selectors = [],\n                    selector;\n                  selector = this._selector();\n                  if (selector !== null) {\n                    selectors.push(selector);\n                    while (tokenStream.match(Tokens.COMMA)) {\n                      this._readWhitespace();\n                      selector = this._selector();\n                      if (selector !== null) {\n                        selectors.push(selector);\n                      } else {\n                        this._unexpectedToken(tokenStream.LT(1));\n                      }\n                    }\n                  }\n                  return selectors.length ? selectors : null;\n                },\n                _selector: function () {\n                  var tokenStream = this._tokenStream,\n                    selector = [],\n                    nextSelector = null,\n                    combinator = null,\n                    ws = null;\n                  nextSelector = this._simple_selector_sequence();\n                  if (nextSelector === null) {\n                    return null;\n                  }\n                  selector.push(nextSelector);\n                  do {\n                    combinator = this._combinator();\n                    if (combinator !== null) {\n                      selector.push(combinator);\n                      nextSelector = this._simple_selector_sequence();\n                      if (nextSelector === null) {\n                        this._unexpectedToken(tokenStream.LT(1));\n                      } else {\n                        selector.push(nextSelector);\n                      }\n                    } else {\n                      if (this._readWhitespace()) {\n                        ws = new Combinator(tokenStream.token().value, tokenStream.token().startLine, tokenStream.token().startCol);\n                        combinator = this._combinator();\n                        nextSelector = this._simple_selector_sequence();\n                        if (nextSelector === null) {\n                          if (combinator !== null) {\n                            this._unexpectedToken(tokenStream.LT(1));\n                          }\n                        } else {\n                          if (combinator !== null) {\n                            selector.push(combinator);\n                          } else {\n                            selector.push(ws);\n                          }\n                          selector.push(nextSelector);\n                        }\n                      } else {\n                        break;\n                      }\n                    }\n                  } while (true);\n                  return new Selector(selector, selector[0].line, selector[0].col);\n                },\n                _simple_selector_sequence: function () {\n                  var tokenStream = this._tokenStream,\n                    elementName = null,\n                    modifiers = [],\n                    selectorText = \"\",\n                    components = [function () {\n                      return tokenStream.match(Tokens.HASH) ? new SelectorSubPart(tokenStream.token().value, \"id\", tokenStream.token().startLine, tokenStream.token().startCol) : null;\n                    }, this._class, this._attrib, this._pseudo, this._negation],\n                    i = 0,\n                    len = components.length,\n                    component = null,\n                    line,\n                    col;\n                  line = tokenStream.LT(1).startLine;\n                  col = tokenStream.LT(1).startCol;\n                  elementName = this._type_selector();\n                  if (!elementName) {\n                    elementName = this._universal();\n                  }\n                  if (elementName !== null) {\n                    selectorText += elementName;\n                  }\n                  while (true) {\n                    if (tokenStream.peek() === Tokens.S) {\n                      break;\n                    }\n                    while (i < len && component === null) {\n                      component = components[i++].call(this);\n                    }\n                    if (component === null) {\n                      if (selectorText === \"\") {\n                        return null;\n                      } else {\n                        break;\n                      }\n                    } else {\n                      i = 0;\n                      modifiers.push(component);\n                      selectorText += component.toString();\n                      component = null;\n                    }\n                  }\n                  return selectorText !== \"\" ? new SelectorPart(elementName, modifiers, selectorText, line, col) : null;\n                },\n                _type_selector: function () {\n                  var tokenStream = this._tokenStream,\n                    ns = this._namespace_prefix(),\n                    elementName = this._element_name();\n                  if (!elementName) {\n                    if (ns) {\n                      tokenStream.unget();\n                      if (ns.length > 1) {\n                        tokenStream.unget();\n                      }\n                    }\n                    return null;\n                  } else {\n                    if (ns) {\n                      elementName.text = ns + elementName.text;\n                      elementName.col -= ns.length;\n                    }\n                    return elementName;\n                  }\n                },\n                _class: function () {\n                  var tokenStream = this._tokenStream,\n                    token;\n                  if (tokenStream.match(Tokens.DOT)) {\n                    tokenStream.mustMatch(Tokens.IDENT);\n                    token = tokenStream.token();\n                    return new SelectorSubPart(\".\" + token.value, \"class\", token.startLine, token.startCol - 1);\n                  } else {\n                    return null;\n                  }\n                },\n                _element_name: function () {\n                  var tokenStream = this._tokenStream,\n                    token;\n                  if (tokenStream.match(Tokens.IDENT)) {\n                    token = tokenStream.token();\n                    return new SelectorSubPart(token.value, \"elementName\", token.startLine, token.startCol);\n                  } else {\n                    return null;\n                  }\n                },\n                _namespace_prefix: function () {\n                  var tokenStream = this._tokenStream,\n                    value = \"\";\n                  if (tokenStream.LA(1) === Tokens.PIPE || tokenStream.LA(2) === Tokens.PIPE) {\n                    if (tokenStream.match([Tokens.IDENT, Tokens.STAR])) {\n                      value += tokenStream.token().value;\n                    }\n                    tokenStream.mustMatch(Tokens.PIPE);\n                    value += \"|\";\n                  }\n                  return value.length ? value : null;\n                },\n                _universal: function () {\n                  var tokenStream = this._tokenStream,\n                    value = \"\",\n                    ns;\n                  ns = this._namespace_prefix();\n                  if (ns) {\n                    value += ns;\n                  }\n                  if (tokenStream.match(Tokens.STAR)) {\n                    value += \"*\";\n                  }\n                  return value.length ? value : null;\n                },\n                _attrib: function () {\n                  var tokenStream = this._tokenStream,\n                    value = null,\n                    ns,\n                    token;\n                  if (tokenStream.match(Tokens.LBRACKET)) {\n                    token = tokenStream.token();\n                    value = token.value;\n                    value += this._readWhitespace();\n                    ns = this._namespace_prefix();\n                    if (ns) {\n                      value += ns;\n                    }\n                    tokenStream.mustMatch(Tokens.IDENT);\n                    value += tokenStream.token().value;\n                    value += this._readWhitespace();\n                    if (tokenStream.match([Tokens.PREFIXMATCH, Tokens.SUFFIXMATCH, Tokens.SUBSTRINGMATCH, Tokens.EQUALS, Tokens.INCLUDES, Tokens.DASHMATCH])) {\n                      value += tokenStream.token().value;\n                      value += this._readWhitespace();\n                      tokenStream.mustMatch([Tokens.IDENT, Tokens.STRING]);\n                      value += tokenStream.token().value;\n                      value += this._readWhitespace();\n                    }\n                    tokenStream.mustMatch(Tokens.RBRACKET);\n                    return new SelectorSubPart(value + \"]\", \"attribute\", token.startLine, token.startCol);\n                  } else {\n                    return null;\n                  }\n                },\n                _pseudo: function () {\n                  var tokenStream = this._tokenStream,\n                    pseudo = null,\n                    colons = \":\",\n                    line,\n                    col;\n                  if (tokenStream.match(Tokens.COLON)) {\n                    if (tokenStream.match(Tokens.COLON)) {\n                      colons += \":\";\n                    }\n                    if (tokenStream.match(Tokens.IDENT)) {\n                      pseudo = tokenStream.token().value;\n                      line = tokenStream.token().startLine;\n                      col = tokenStream.token().startCol - colons.length;\n                    } else if (tokenStream.peek() === Tokens.FUNCTION) {\n                      line = tokenStream.LT(1).startLine;\n                      col = tokenStream.LT(1).startCol - colons.length;\n                      pseudo = this._functional_pseudo();\n                    }\n                    if (pseudo) {\n                      pseudo = new SelectorSubPart(colons + pseudo, \"pseudo\", line, col);\n                    } else {\n                      var startLine = tokenStream.LT(1).startLine,\n                        startCol = tokenStream.LT(0).startCol;\n                      throw new SyntaxError(\"Expected a `FUNCTION` or `IDENT` after colon at line \" + startLine + \", col \" + startCol + \".\", startLine, startCol);\n                    }\n                  }\n                  return pseudo;\n                },\n                _functional_pseudo: function () {\n                  var tokenStream = this._tokenStream,\n                    value = null;\n                  if (tokenStream.match(Tokens.FUNCTION)) {\n                    value = tokenStream.token().value;\n                    value += this._readWhitespace();\n                    value += this._expression();\n                    tokenStream.mustMatch(Tokens.RPAREN);\n                    value += \")\";\n                  }\n                  return value;\n                },\n                _expression: function () {\n                  var tokenStream = this._tokenStream,\n                    value = \"\";\n                  while (tokenStream.match([Tokens.PLUS, Tokens.MINUS, Tokens.DIMENSION, Tokens.NUMBER, Tokens.STRING, Tokens.IDENT, Tokens.LENGTH, Tokens.FREQ, Tokens.ANGLE, Tokens.TIME, Tokens.RESOLUTION, Tokens.SLASH])) {\n                    value += tokenStream.token().value;\n                    value += this._readWhitespace();\n                  }\n                  return value.length ? value : null;\n                },\n                _negation: function () {\n                  var tokenStream = this._tokenStream,\n                    line,\n                    col,\n                    value = \"\",\n                    arg,\n                    subpart = null;\n                  if (tokenStream.match(Tokens.NOT)) {\n                    value = tokenStream.token().value;\n                    line = tokenStream.token().startLine;\n                    col = tokenStream.token().startCol;\n                    value += this._readWhitespace();\n                    arg = this._negation_arg();\n                    value += arg;\n                    value += this._readWhitespace();\n                    tokenStream.match(Tokens.RPAREN);\n                    value += tokenStream.token().value;\n                    subpart = new SelectorSubPart(value, \"not\", line, col);\n                    subpart.args.push(arg);\n                  }\n                  return subpart;\n                },\n                _negation_arg: function () {\n                  var tokenStream = this._tokenStream,\n                    args = [this._type_selector, this._universal, function () {\n                      return tokenStream.match(Tokens.HASH) ? new SelectorSubPart(tokenStream.token().value, \"id\", tokenStream.token().startLine, tokenStream.token().startCol) : null;\n                    }, this._class, this._attrib, this._pseudo],\n                    arg = null,\n                    i = 0,\n                    len = args.length,\n                    line,\n                    col,\n                    part;\n                  line = tokenStream.LT(1).startLine;\n                  col = tokenStream.LT(1).startCol;\n                  while (i < len && arg === null) {\n                    arg = args[i].call(this);\n                    i++;\n                  }\n                  if (arg === null) {\n                    this._unexpectedToken(tokenStream.LT(1));\n                  }\n                  if (arg.type === \"elementName\") {\n                    part = new SelectorPart(arg, [], arg.toString(), line, col);\n                  } else {\n                    part = new SelectorPart(null, [arg], arg.toString(), line, col);\n                  }\n                  return part;\n                },\n                _declaration: function () {\n                  var tokenStream = this._tokenStream,\n                    property = null,\n                    expr = null,\n                    prio = null,\n                    invalid = null,\n                    propertyName = \"\";\n                  property = this._property();\n                  if (property !== null) {\n                    tokenStream.mustMatch(Tokens.COLON);\n                    this._readWhitespace();\n                    expr = this._expr();\n                    if (!expr || expr.length === 0) {\n                      this._unexpectedToken(tokenStream.LT(1));\n                    }\n                    prio = this._prio();\n                    propertyName = property.toString();\n                    if (this.options.starHack && property.hack === \"*\" || this.options.underscoreHack && property.hack === \"_\") {\n                      propertyName = property.text;\n                    }\n                    try {\n                      this._validateProperty(propertyName, expr);\n                    } catch (ex) {\n                      invalid = ex;\n                    }\n                    this.fire({\n                      type: \"property\",\n                      property: property,\n                      value: expr,\n                      important: prio,\n                      line: property.line,\n                      col: property.col,\n                      invalid: invalid\n                    });\n                    return true;\n                  } else {\n                    return false;\n                  }\n                },\n                _prio: function () {\n                  var tokenStream = this._tokenStream,\n                    result = tokenStream.match(Tokens.IMPORTANT_SYM);\n                  this._readWhitespace();\n                  return result;\n                },\n                _expr: function (inFunction) {\n                  var values = [],\n                    value = null,\n                    operator = null;\n                  value = this._term(inFunction);\n                  if (value !== null) {\n                    values.push(value);\n                    do {\n                      operator = this._operator(inFunction);\n                      if (operator) {\n                        values.push(operator);\n                      } /*else {\n                          values.push(new PropertyValue(valueParts, valueParts[0].line, valueParts[0].col));\n                          valueParts = [];\n                        }*/\n\n                      value = this._term(inFunction);\n                      if (value === null) {\n                        break;\n                      } else {\n                        values.push(value);\n                      }\n                    } while (true);\n                  }\n                  return values.length > 0 ? new PropertyValue(values, values[0].line, values[0].col) : null;\n                },\n                _term: function (inFunction) {\n                  var tokenStream = this._tokenStream,\n                    unary = null,\n                    value = null,\n                    endChar = null,\n                    part = null,\n                    token,\n                    line,\n                    col;\n                  unary = this._unary_operator();\n                  if (unary !== null) {\n                    line = tokenStream.token().startLine;\n                    col = tokenStream.token().startCol;\n                  }\n                  if (tokenStream.peek() === Tokens.IE_FUNCTION && this.options.ieFilters) {\n                    value = this._ie_function();\n                    if (unary === null) {\n                      line = tokenStream.token().startLine;\n                      col = tokenStream.token().startCol;\n                    }\n                  } else if (inFunction && tokenStream.match([Tokens.LPAREN, Tokens.LBRACE, Tokens.LBRACKET])) {\n                    token = tokenStream.token();\n                    endChar = token.endChar;\n                    value = token.value + this._expr(inFunction).text;\n                    if (unary === null) {\n                      line = tokenStream.token().startLine;\n                      col = tokenStream.token().startCol;\n                    }\n                    tokenStream.mustMatch(Tokens.type(endChar));\n                    value += endChar;\n                    this._readWhitespace();\n                  } else if (tokenStream.match([Tokens.NUMBER, Tokens.PERCENTAGE, Tokens.LENGTH, Tokens.ANGLE, Tokens.TIME, Tokens.FREQ, Tokens.STRING, Tokens.IDENT, Tokens.URI, Tokens.UNICODE_RANGE])) {\n                    value = tokenStream.token().value;\n                    if (unary === null) {\n                      line = tokenStream.token().startLine;\n                      col = tokenStream.token().startCol;\n                      part = PropertyValuePart.fromToken(tokenStream.token());\n                    }\n                    this._readWhitespace();\n                  } else {\n                    token = this._hexcolor();\n                    if (token === null) {\n                      if (unary === null) {\n                        line = tokenStream.LT(1).startLine;\n                        col = tokenStream.LT(1).startCol;\n                      }\n                      if (value === null) {\n                        if (tokenStream.LA(3) === Tokens.EQUALS && this.options.ieFilters) {\n                          value = this._ie_function();\n                        } else {\n                          value = this._function();\n                        }\n                      }\n                    } else {\n                      value = token.value;\n                      if (unary === null) {\n                        line = token.startLine;\n                        col = token.startCol;\n                      }\n                    }\n                  }\n                  return part !== null ? part : value !== null ? new PropertyValuePart(unary !== null ? unary + value : value, line, col) : null;\n                },\n                _function: function () {\n                  var tokenStream = this._tokenStream,\n                    functionText = null,\n                    expr = null,\n                    lt;\n                  if (tokenStream.match(Tokens.FUNCTION)) {\n                    functionText = tokenStream.token().value;\n                    this._readWhitespace();\n                    expr = this._expr(true);\n                    functionText += expr;\n                    if (this.options.ieFilters && tokenStream.peek() === Tokens.EQUALS) {\n                      do {\n                        if (this._readWhitespace()) {\n                          functionText += tokenStream.token().value;\n                        }\n                        if (tokenStream.LA(0) === Tokens.COMMA) {\n                          functionText += tokenStream.token().value;\n                        }\n                        tokenStream.match(Tokens.IDENT);\n                        functionText += tokenStream.token().value;\n                        tokenStream.match(Tokens.EQUALS);\n                        functionText += tokenStream.token().value;\n                        lt = tokenStream.peek();\n                        while (lt !== Tokens.COMMA && lt !== Tokens.S && lt !== Tokens.RPAREN) {\n                          tokenStream.get();\n                          functionText += tokenStream.token().value;\n                          lt = tokenStream.peek();\n                        }\n                      } while (tokenStream.match([Tokens.COMMA, Tokens.S]));\n                    }\n                    tokenStream.match(Tokens.RPAREN);\n                    functionText += \")\";\n                    this._readWhitespace();\n                  }\n                  return functionText;\n                },\n                _ie_function: function () {\n                  var tokenStream = this._tokenStream,\n                    functionText = null,\n                    lt;\n                  if (tokenStream.match([Tokens.IE_FUNCTION, Tokens.FUNCTION])) {\n                    functionText = tokenStream.token().value;\n                    do {\n                      if (this._readWhitespace()) {\n                        functionText += tokenStream.token().value;\n                      }\n                      if (tokenStream.LA(0) === Tokens.COMMA) {\n                        functionText += tokenStream.token().value;\n                      }\n                      tokenStream.match(Tokens.IDENT);\n                      functionText += tokenStream.token().value;\n                      tokenStream.match(Tokens.EQUALS);\n                      functionText += tokenStream.token().value;\n                      lt = tokenStream.peek();\n                      while (lt !== Tokens.COMMA && lt !== Tokens.S && lt !== Tokens.RPAREN) {\n                        tokenStream.get();\n                        functionText += tokenStream.token().value;\n                        lt = tokenStream.peek();\n                      }\n                    } while (tokenStream.match([Tokens.COMMA, Tokens.S]));\n                    tokenStream.match(Tokens.RPAREN);\n                    functionText += \")\";\n                    this._readWhitespace();\n                  }\n                  return functionText;\n                },\n                _hexcolor: function () {\n                  var tokenStream = this._tokenStream,\n                    token = null,\n                    color;\n                  if (tokenStream.match(Tokens.HASH)) {\n                    token = tokenStream.token();\n                    color = token.value;\n                    if (!/#[a-f0-9]{3,6}/i.test(color)) {\n                      throw new SyntaxError(\"Expected a hex color but found '\" + color + \"' at line \" + token.startLine + \", col \" + token.startCol + \".\", token.startLine, token.startCol);\n                    }\n                    this._readWhitespace();\n                  }\n                  return token;\n                },\n                _keyframes: function () {\n                  var tokenStream = this._tokenStream,\n                    token,\n                    tt,\n                    name,\n                    prefix = \"\";\n                  tokenStream.mustMatch(Tokens.KEYFRAMES_SYM);\n                  token = tokenStream.token();\n                  if (/^@-([^-]+)-/.test(token.value)) {\n                    prefix = RegExp.$1;\n                  }\n                  this._readWhitespace();\n                  name = this._keyframe_name();\n                  this._readWhitespace();\n                  tokenStream.mustMatch(Tokens.LBRACE);\n                  this.fire({\n                    type: \"startkeyframes\",\n                    name: name,\n                    prefix: prefix,\n                    line: token.startLine,\n                    col: token.startCol\n                  });\n                  this._readWhitespace();\n                  tt = tokenStream.peek();\n                  while (tt === Tokens.IDENT || tt === Tokens.PERCENTAGE) {\n                    this._keyframe_rule();\n                    this._readWhitespace();\n                    tt = tokenStream.peek();\n                  }\n                  this.fire({\n                    type: \"endkeyframes\",\n                    name: name,\n                    prefix: prefix,\n                    line: token.startLine,\n                    col: token.startCol\n                  });\n                  this._readWhitespace();\n                  tokenStream.mustMatch(Tokens.RBRACE);\n                  this._readWhitespace();\n                },\n                _keyframe_name: function () {\n                  var tokenStream = this._tokenStream;\n                  tokenStream.mustMatch([Tokens.IDENT, Tokens.STRING]);\n                  return SyntaxUnit.fromToken(tokenStream.token());\n                },\n                _keyframe_rule: function () {\n                  var keyList = this._key_list();\n                  this.fire({\n                    type: \"startkeyframerule\",\n                    keys: keyList,\n                    line: keyList[0].line,\n                    col: keyList[0].col\n                  });\n                  this._readDeclarations(true);\n                  this.fire({\n                    type: \"endkeyframerule\",\n                    keys: keyList,\n                    line: keyList[0].line,\n                    col: keyList[0].col\n                  });\n                },\n                _key_list: function () {\n                  var tokenStream = this._tokenStream,\n                    keyList = [];\n                  keyList.push(this._key());\n                  this._readWhitespace();\n                  while (tokenStream.match(Tokens.COMMA)) {\n                    this._readWhitespace();\n                    keyList.push(this._key());\n                    this._readWhitespace();\n                  }\n                  return keyList;\n                },\n                _key: function () {\n                  var tokenStream = this._tokenStream,\n                    token;\n                  if (tokenStream.match(Tokens.PERCENTAGE)) {\n                    return SyntaxUnit.fromToken(tokenStream.token());\n                  } else if (tokenStream.match(Tokens.IDENT)) {\n                    token = tokenStream.token();\n                    if (/from|to/i.test(token.value)) {\n                      return SyntaxUnit.fromToken(token);\n                    }\n                    tokenStream.unget();\n                  }\n                  this._unexpectedToken(tokenStream.LT(1));\n                },\n                _skipCruft: function () {\n                  while (this._tokenStream.match([Tokens.S, Tokens.CDO, Tokens.CDC])) {}\n                },\n                _readDeclarations: function (checkStart, readMargins) {\n                  var tokenStream = this._tokenStream,\n                    tt;\n                  this._readWhitespace();\n                  if (checkStart) {\n                    tokenStream.mustMatch(Tokens.LBRACE);\n                  }\n                  this._readWhitespace();\n                  try {\n                    while (true) {\n                      if (tokenStream.match(Tokens.SEMICOLON) || readMargins && this._margin()) {} else if (this._declaration()) {\n                        if (!tokenStream.match(Tokens.SEMICOLON)) {\n                          break;\n                        }\n                      } else {\n                        break;\n                      }\n                      this._readWhitespace();\n                    }\n                    tokenStream.mustMatch(Tokens.RBRACE);\n                    this._readWhitespace();\n                  } catch (ex) {\n                    if (ex instanceof SyntaxError && !this.options.strict) {\n                      this.fire({\n                        type: \"error\",\n                        error: ex,\n                        message: ex.message,\n                        line: ex.line,\n                        col: ex.col\n                      });\n                      tt = tokenStream.advance([Tokens.SEMICOLON, Tokens.RBRACE]);\n                      if (tt === Tokens.SEMICOLON) {\n                        this._readDeclarations(false, readMargins);\n                      } else if (tt !== Tokens.EOF && tt !== Tokens.RBRACE) {\n                        throw ex;\n                      }\n                    } else {\n                      throw ex;\n                    }\n                  }\n                },\n                _readWhitespace: function () {\n                  var tokenStream = this._tokenStream,\n                    ws = \"\";\n                  while (tokenStream.match(Tokens.S)) {\n                    ws += tokenStream.token().value;\n                  }\n                  return ws;\n                },\n                _unexpectedToken: function (token) {\n                  throw new SyntaxError(\"Unexpected token '\" + token.value + \"' at line \" + token.startLine + \", col \" + token.startCol + \".\", token.startLine, token.startCol);\n                },\n                _verifyEnd: function () {\n                  if (this._tokenStream.LA(1) !== Tokens.EOF) {\n                    this._unexpectedToken(this._tokenStream.LT(1));\n                  }\n                },\n                _validateProperty: function (property, value) {\n                  Validation.validate(property, value);\n                },\n                parse: function (input) {\n                  this._tokenStream = new TokenStream(input, Tokens);\n                  this._stylesheet();\n                },\n                parseStyleSheet: function (input) {\n                  return this.parse(input);\n                },\n                parseMediaQuery: function (input) {\n                  this._tokenStream = new TokenStream(input, Tokens);\n                  var result = this._media_query();\n                  this._verifyEnd();\n                  return result;\n                },\n                parsePropertyValue: function (input) {\n                  this._tokenStream = new TokenStream(input, Tokens);\n                  this._readWhitespace();\n                  var result = this._expr();\n                  this._readWhitespace();\n                  this._verifyEnd();\n                  return result;\n                },\n                parseRule: function (input) {\n                  this._tokenStream = new TokenStream(input, Tokens);\n                  this._readWhitespace();\n                  var result = this._ruleset();\n                  this._readWhitespace();\n                  this._verifyEnd();\n                  return result;\n                },\n                parseSelector: function (input) {\n                  this._tokenStream = new TokenStream(input, Tokens);\n                  this._readWhitespace();\n                  var result = this._selector();\n                  this._readWhitespace();\n                  this._verifyEnd();\n                  return result;\n                },\n                parseStyleAttribute: function (input) {\n                  input += \"}\"; // for error recovery in _readDeclarations()\n                  this._tokenStream = new TokenStream(input, Tokens);\n                  this._readDeclarations();\n                }\n              };\n            for (prop in additions) {\n              if (Object.prototype.hasOwnProperty.call(additions, prop)) {\n                proto[prop] = additions[prop];\n              }\n            }\n            return proto;\n          }();\n        }, {\n          \"../util/EventTarget\": 23,\n          \"../util/SyntaxError\": 25,\n          \"../util/SyntaxUnit\": 26,\n          \"./Combinator\": 2,\n          \"./MediaFeature\": 4,\n          \"./MediaQuery\": 5,\n          \"./PropertyName\": 8,\n          \"./PropertyValue\": 9,\n          \"./PropertyValuePart\": 11,\n          \"./Selector\": 13,\n          \"./SelectorPart\": 14,\n          \"./SelectorSubPart\": 15,\n          \"./TokenStream\": 17,\n          \"./Tokens\": 18,\n          \"./Validation\": 19\n        }],\n        7: [function (require, module, exports) {\n          \"use strict\";\n\n          var Properties = module.exports = {\n            __proto__: null,\n            \"align-items\": \"flex-start | flex-end | center | baseline | stretch\",\n            \"align-content\": \"flex-start | flex-end | center | space-between | space-around | stretch\",\n            \"align-self\": \"auto | flex-start | flex-end | center | baseline | stretch\",\n            \"all\": \"initial | inherit | unset\",\n            \"-webkit-align-items\": \"flex-start | flex-end | center | baseline | stretch\",\n            \"-webkit-align-content\": \"flex-start | flex-end | center | space-between | space-around | stretch\",\n            \"-webkit-align-self\": \"auto | flex-start | flex-end | center | baseline | stretch\",\n            \"alignment-adjust\": \"auto | baseline | before-edge | text-before-edge | middle | central | after-edge | text-after-edge | ideographic | alphabetic | hanging | mathematical | <percentage> | <length>\",\n            \"alignment-baseline\": \"auto | baseline | use-script | before-edge | text-before-edge | after-edge | text-after-edge | central | middle | ideographic | alphabetic | hanging | mathematical\",\n            \"animation\": 1,\n            \"animation-delay\": \"<time>#\",\n            \"animation-direction\": \"<single-animation-direction>#\",\n            \"animation-duration\": \"<time>#\",\n            \"animation-fill-mode\": \"[ none | forwards | backwards | both ]#\",\n            \"animation-iteration-count\": \"[ <number> | infinite ]#\",\n            \"animation-name\": \"[ none | <single-animation-name> ]#\",\n            \"animation-play-state\": \"[ running | paused ]#\",\n            \"animation-timing-function\": 1,\n            \"-moz-animation-delay\": \"<time>#\",\n            \"-moz-animation-direction\": \"[ normal | alternate ]#\",\n            \"-moz-animation-duration\": \"<time>#\",\n            \"-moz-animation-iteration-count\": \"[ <number> | infinite ]#\",\n            \"-moz-animation-name\": \"[ none | <single-animation-name> ]#\",\n            \"-moz-animation-play-state\": \"[ running | paused ]#\",\n            \"-ms-animation-delay\": \"<time>#\",\n            \"-ms-animation-direction\": \"[ normal | alternate ]#\",\n            \"-ms-animation-duration\": \"<time>#\",\n            \"-ms-animation-iteration-count\": \"[ <number> | infinite ]#\",\n            \"-ms-animation-name\": \"[ none | <single-animation-name> ]#\",\n            \"-ms-animation-play-state\": \"[ running | paused ]#\",\n            \"-webkit-animation-delay\": \"<time>#\",\n            \"-webkit-animation-direction\": \"[ normal | alternate ]#\",\n            \"-webkit-animation-duration\": \"<time>#\",\n            \"-webkit-animation-fill-mode\": \"[ none | forwards | backwards | both ]#\",\n            \"-webkit-animation-iteration-count\": \"[ <number> | infinite ]#\",\n            \"-webkit-animation-name\": \"[ none | <single-animation-name> ]#\",\n            \"-webkit-animation-play-state\": \"[ running | paused ]#\",\n            \"-o-animation-delay\": \"<time>#\",\n            \"-o-animation-direction\": \"[ normal | alternate ]#\",\n            \"-o-animation-duration\": \"<time>#\",\n            \"-o-animation-iteration-count\": \"[ <number> | infinite ]#\",\n            \"-o-animation-name\": \"[ none | <single-animation-name> ]#\",\n            \"-o-animation-play-state\": \"[ running | paused ]#\",\n            \"appearance\": \"none | auto\",\n            \"-moz-appearance\": \"none | button | button-arrow-down | button-arrow-next | button-arrow-previous | button-arrow-up | button-bevel | button-focus | caret | checkbox | checkbox-container | checkbox-label | checkmenuitem | dualbutton | groupbox | listbox | listitem | menuarrow | menubar | menucheckbox | menuimage | menuitem | menuitemtext | menulist | menulist-button | menulist-text | menulist-textfield | menupopup | menuradio | menuseparator | meterbar | meterchunk | progressbar | progressbar-vertical | progresschunk | progresschunk-vertical | radio | radio-container | radio-label | radiomenuitem | range | range-thumb | resizer | resizerpanel | scale-horizontal | scalethumbend | scalethumb-horizontal | scalethumbstart | scalethumbtick | scalethumb-vertical | scale-vertical | scrollbarbutton-down | scrollbarbutton-left | scrollbarbutton-right | scrollbarbutton-up | scrollbarthumb-horizontal | scrollbarthumb-vertical | scrollbartrack-horizontal | scrollbartrack-vertical | searchfield | separator | sheet | spinner | spinner-downbutton | spinner-textfield | spinner-upbutton | splitter | statusbar | statusbarpanel | tab | tabpanel | tabpanels | tab-scroll-arrow-back | tab-scroll-arrow-forward | textfield | textfield-multiline | toolbar | toolbarbutton | toolbarbutton-dropdown | toolbargripper | toolbox | tooltip | treeheader | treeheadercell | treeheadersortarrow | treeitem | treeline | treetwisty | treetwistyopen | treeview | -moz-mac-unified-toolbar | -moz-win-borderless-glass | -moz-win-browsertabbar-toolbox | -moz-win-communicationstext | -moz-win-communications-toolbox | -moz-win-exclude-glass | -moz-win-glass | -moz-win-mediatext | -moz-win-media-toolbox | -moz-window-button-box | -moz-window-button-box-maximized | -moz-window-button-close | -moz-window-button-maximize | -moz-window-button-minimize | -moz-window-button-restore | -moz-window-frame-bottom | -moz-window-frame-left | -moz-window-frame-right | -moz-window-titlebar | -moz-window-titlebar-maximized\",\n            \"-ms-appearance\": \"none | icon | window | desktop | workspace | document | tooltip | dialog | button | push-button | hyperlink | radio | radio-button | checkbox | menu-item | tab | menu | menubar | pull-down-menu | pop-up-menu | list-menu | radio-group | checkbox-group | outline-tree | range | field | combo-box | signature | password | normal\",\n            \"-webkit-appearance\": \"none | button | button-bevel | caps-lock-indicator | caret | checkbox | default-button | listbox | listitem | media-fullscreen-button | media-mute-button | media-play-button | media-seek-back-button | media-seek-forward-button | media-slider | media-sliderthumb | menulist | menulist-button | menulist-text | menulist-textfield | push-button | radio | searchfield | searchfield-cancel-button | searchfield-decoration | searchfield-results-button | searchfield-results-decoration | slider-horizontal | slider-vertical | sliderthumb-horizontal | sliderthumb-vertical | square-button | textarea | textfield | scrollbarbutton-down | scrollbarbutton-left | scrollbarbutton-right | scrollbarbutton-up | scrollbargripper-horizontal | scrollbargripper-vertical | scrollbarthumb-horizontal | scrollbarthumb-vertical | scrollbartrack-horizontal | scrollbartrack-vertical\",\n            \"-o-appearance\": \"none | window | desktop | workspace | document | tooltip | dialog | button | push-button | hyperlink | radio | radio-button | checkbox | menu-item | tab | menu | menubar | pull-down-menu | pop-up-menu | list-menu | radio-group | checkbox-group | outline-tree | range | field | combo-box | signature | password | normal\",\n            \"azimuth\": \"<azimuth>\",\n            \"backface-visibility\": \"visible | hidden\",\n            \"background\": 1,\n            \"background-attachment\": \"<attachment>#\",\n            \"background-clip\": \"<box>#\",\n            \"background-color\": \"<color>\",\n            \"background-image\": \"<bg-image>#\",\n            \"background-origin\": \"<box>#\",\n            \"background-position\": \"<bg-position>\",\n            \"background-repeat\": \"<repeat-style>#\",\n            \"background-size\": \"<bg-size>#\",\n            \"baseline-shift\": \"baseline | sub | super | <percentage> | <length>\",\n            \"behavior\": 1,\n            \"binding\": 1,\n            \"bleed\": \"<length>\",\n            \"bookmark-label\": \"<content> | <attr> | <string>\",\n            \"bookmark-level\": \"none | <integer>\",\n            \"bookmark-state\": \"open | closed\",\n            \"bookmark-target\": \"none | <uri> | <attr>\",\n            \"border\": \"<border-width> || <border-style> || <color>\",\n            \"border-bottom\": \"<border-width> || <border-style> || <color>\",\n            \"border-bottom-color\": \"<color>\",\n            \"border-bottom-left-radius\": \"<x-one-radius>\",\n            \"border-bottom-right-radius\": \"<x-one-radius>\",\n            \"border-bottom-style\": \"<border-style>\",\n            \"border-bottom-width\": \"<border-width>\",\n            \"border-collapse\": \"collapse | separate\",\n            \"border-color\": \"<color>{1,4}\",\n            \"border-image\": 1,\n            \"border-image-outset\": \"[ <length> | <number> ]{1,4}\",\n            \"border-image-repeat\": \"[ stretch | repeat | round | space ]{1,2}\",\n            \"border-image-slice\": \"<border-image-slice>\",\n            \"border-image-source\": \"<image> | none\",\n            \"border-image-width\": \"[ <length> | <percentage> | <number> | auto ]{1,4}\",\n            \"border-left\": \"<border-width> || <border-style> || <color>\",\n            \"border-left-color\": \"<color>\",\n            \"border-left-style\": \"<border-style>\",\n            \"border-left-width\": \"<border-width>\",\n            \"border-radius\": \"<border-radius>\",\n            \"border-right\": \"<border-width> || <border-style> || <color>\",\n            \"border-right-color\": \"<color>\",\n            \"border-right-style\": \"<border-style>\",\n            \"border-right-width\": \"<border-width>\",\n            \"border-spacing\": \"<length>{1,2}\",\n            \"border-style\": \"<border-style>{1,4}\",\n            \"border-top\": \"<border-width> || <border-style> || <color>\",\n            \"border-top-color\": \"<color>\",\n            \"border-top-left-radius\": \"<x-one-radius>\",\n            \"border-top-right-radius\": \"<x-one-radius>\",\n            \"border-top-style\": \"<border-style>\",\n            \"border-top-width\": \"<border-width>\",\n            \"border-width\": \"<border-width>{1,4}\",\n            \"bottom\": \"<margin-width>\",\n            \"-moz-box-align\": \"start | end | center | baseline | stretch\",\n            \"-moz-box-decoration-break\": \"slice | clone\",\n            \"-moz-box-direction\": \"normal | reverse\",\n            \"-moz-box-flex\": \"<number>\",\n            \"-moz-box-flex-group\": \"<integer>\",\n            \"-moz-box-lines\": \"single | multiple\",\n            \"-moz-box-ordinal-group\": \"<integer>\",\n            \"-moz-box-orient\": \"horizontal | vertical | inline-axis | block-axis\",\n            \"-moz-box-pack\": \"start | end | center | justify\",\n            \"-o-box-decoration-break\": \"slice | clone\",\n            \"-webkit-box-align\": \"start | end | center | baseline | stretch\",\n            \"-webkit-box-decoration-break\": \"slice | clone\",\n            \"-webkit-box-direction\": \"normal | reverse\",\n            \"-webkit-box-flex\": \"<number>\",\n            \"-webkit-box-flex-group\": \"<integer>\",\n            \"-webkit-box-lines\": \"single | multiple\",\n            \"-webkit-box-ordinal-group\": \"<integer>\",\n            \"-webkit-box-orient\": \"horizontal | vertical | inline-axis | block-axis\",\n            \"-webkit-box-pack\": \"start | end | center | justify\",\n            \"box-decoration-break\": \"slice | clone\",\n            \"box-shadow\": \"<box-shadow>\",\n            \"box-sizing\": \"content-box | border-box\",\n            \"break-after\": \"auto | always | avoid | left | right | page | column | avoid-page | avoid-column\",\n            \"break-before\": \"auto | always | avoid | left | right | page | column | avoid-page | avoid-column\",\n            \"break-inside\": \"auto | avoid | avoid-page | avoid-column\",\n            \"caption-side\": \"top | bottom\",\n            \"clear\": \"none | right | left | both\",\n            \"clip\": \"<shape> | auto\",\n            \"-webkit-clip-path\": \"<clip-source> | <clip-path> | none\",\n            \"clip-path\": \"<clip-source> | <clip-path> | none\",\n            \"clip-rule\": \"nonzero | evenodd\",\n            \"color\": \"<color>\",\n            \"color-interpolation\": \"auto | sRGB | linearRGB\",\n            \"color-interpolation-filters\": \"auto | sRGB | linearRGB\",\n            \"color-profile\": 1,\n            \"color-rendering\": \"auto | optimizeSpeed | optimizeQuality\",\n            \"column-count\": \"<integer> | auto\",\n            // https    ://www.w3.org/TR/css3-multicol/\n            \"column-fill\": \"auto | balance\",\n            \"column-gap\": \"<length> | normal\",\n            \"column-rule\": \"<border-width> || <border-style> || <color>\",\n            \"column-rule-color\": \"<color>\",\n            \"column-rule-style\": \"<border-style>\",\n            \"column-rule-width\": \"<border-width>\",\n            \"column-span\": \"none | all\",\n            \"column-width\": \"<length> | auto\",\n            \"columns\": 1,\n            \"content\": 1,\n            \"counter-increment\": 1,\n            \"counter-reset\": 1,\n            \"crop\": \"<shape> | auto\",\n            \"cue\": \"cue-after | cue-before\",\n            \"cue-after\": 1,\n            \"cue-before\": 1,\n            \"cursor\": 1,\n            \"direction\": \"ltr | rtl\",\n            \"display\": \"inline | block | list-item | inline-block | table | inline-table | table-row-group | table-header-group | table-footer-group | table-row | table-column-group | table-column | table-cell | table-caption | grid | inline-grid | run-in | ruby | ruby-base | ruby-text | ruby-base-container | ruby-text-container | contents | none | -moz-box | -moz-inline-block | -moz-inline-box | -moz-inline-grid | -moz-inline-stack | -moz-inline-table | -moz-grid | -moz-grid-group | -moz-grid-line | -moz-groupbox | -moz-deck | -moz-popup | -moz-stack | -moz-marker | -webkit-box | -webkit-inline-box | -ms-flexbox | -ms-inline-flexbox | flex | -webkit-flex | inline-flex | -webkit-inline-flex\",\n            \"dominant-baseline\": \"auto | use-script | no-change | reset-size | ideographic | alphabetic | hanging | mathematical | central | middle | text-after-edge | text-before-edge\",\n            \"drop-initial-after-adjust\": \"central | middle | after-edge | text-after-edge | ideographic | alphabetic | mathematical | <percentage> | <length>\",\n            \"drop-initial-after-align\": \"baseline | use-script | before-edge | text-before-edge | after-edge | text-after-edge | central | middle | ideographic | alphabetic | hanging | mathematical\",\n            \"drop-initial-before-adjust\": \"before-edge | text-before-edge | central | middle | hanging | mathematical | <percentage> | <length>\",\n            \"drop-initial-before-align\": \"caps-height | baseline | use-script | before-edge | text-before-edge | after-edge | text-after-edge | central | middle | ideographic | alphabetic | hanging | mathematical\",\n            \"drop-initial-size\": \"auto | line | <length> | <percentage>\",\n            \"drop-initial-value\": \"<integer>\",\n            \"elevation\": \"<angle> | below | level | above | higher | lower\",\n            \"empty-cells\": \"show | hide\",\n            \"enable-background\": 1,\n            \"fill\": \"<paint>\",\n            \"fill-opacity\": \"<opacity-value>\",\n            \"fill-rule\": \"nonzero | evenodd\",\n            \"filter\": \"<filter-function-list> | none\",\n            \"fit\": \"fill | hidden | meet | slice\",\n            \"fit-position\": 1,\n            \"flex\": \"<flex>\",\n            \"flex-basis\": \"<width>\",\n            \"flex-direction\": \"row | row-reverse | column | column-reverse\",\n            \"flex-flow\": \"<flex-direction> || <flex-wrap>\",\n            \"flex-grow\": \"<number>\",\n            \"flex-shrink\": \"<number>\",\n            \"flex-wrap\": \"nowrap | wrap | wrap-reverse\",\n            \"-webkit-flex\": \"<flex>\",\n            \"-webkit-flex-basis\": \"<width>\",\n            \"-webkit-flex-direction\": \"row | row-reverse | column | column-reverse\",\n            \"-webkit-flex-flow\": \"<flex-direction> || <flex-wrap>\",\n            \"-webkit-flex-grow\": \"<number>\",\n            \"-webkit-flex-shrink\": \"<number>\",\n            \"-webkit-flex-wrap\": \"nowrap | wrap | wrap-reverse\",\n            \"-ms-flex\": \"<flex>\",\n            \"-ms-flex-align\": \"start | end | center | stretch | baseline\",\n            \"-ms-flex-direction\": \"row | row-reverse | column | column-reverse\",\n            \"-ms-flex-order\": \"<number>\",\n            \"-ms-flex-pack\": \"start | end | center | justify | distribute\",\n            \"-ms-flex-wrap\": \"nowrap | wrap | wrap-reverse\",\n            \"float\": \"left | right | none\",\n            \"float-offset\": 1,\n            \"flood-color\": 1,\n            \"flood-opacity\": \"<opacity-value>\",\n            \"font\": \"<font-shorthand> | caption | icon | menu | message-box | small-caption | status-bar\",\n            \"font-family\": \"<font-family>\",\n            \"font-feature-settings\": \"<feature-tag-value> | normal\",\n            \"font-kerning\": \"auto | normal | none\",\n            \"font-size\": \"<font-size>\",\n            \"font-size-adjust\": \"<number> | none\",\n            \"font-stretch\": \"<font-stretch>\",\n            \"font-style\": \"<font-style>\",\n            \"font-variant\": \"<font-variant> | normal | none\",\n            \"font-variant-alternates\": \"<font-variant-alternates> | normal\",\n            \"font-variant-caps\": \"<font-variant-caps> | normal\",\n            \"font-variant-east-asian\": \"<font-variant-east-asian> | normal\",\n            \"font-variant-ligatures\": \"<font-variant-ligatures> | normal | none\",\n            \"font-variant-numeric\": \"<font-variant-numeric> | normal\",\n            \"font-variant-position\": \"normal | sub | super\",\n            \"font-weight\": \"<font-weight>\",\n            \"gap\": \"[ <length> | <percentage> ]{1,2}\",\n            \"glyph-orientation-horizontal\": \"<glyph-angle>\",\n            \"glyph-orientation-vertical\": \"auto | <glyph-angle>\",\n            \"grid\": 1,\n            \"grid-area\": 1,\n            \"grid-auto-columns\": 1,\n            \"grid-auto-flow\": 1,\n            \"grid-auto-position\": 1,\n            \"grid-auto-rows\": 1,\n            \"grid-cell-stacking\": \"columns | rows | layer\",\n            \"grid-column\": 1,\n            \"grid-columns\": 1,\n            \"grid-column-align\": \"start | end | center | stretch\",\n            \"grid-column-sizing\": 1,\n            \"grid-column-start\": 1,\n            \"grid-column-end\": 1,\n            \"grid-column-span\": \"<integer>\",\n            \"grid-flow\": \"none | rows | columns\",\n            \"grid-gap\": \"[ <length> | <percentage> ]{1,2}\",\n            \"grid-layer\": \"<integer>\",\n            \"grid-row\": 1,\n            \"grid-rows\": 1,\n            \"grid-row-align\": \"start | end | center | stretch\",\n            \"grid-row-gap\": 1,\n            \"grid-row-start\": 1,\n            \"grid-row-end\": 1,\n            \"grid-row-span\": \"<integer>\",\n            \"grid-row-sizing\": 1,\n            \"grid-template\": 1,\n            \"grid-template-areas\": 1,\n            \"grid-template-columns\": 1,\n            \"grid-template-rows\": 1,\n            \"hanging-punctuation\": 1,\n            \"height\": \"<margin-width> | <content-sizing>\",\n            \"hyphenate-after\": \"<integer> | auto\",\n            \"hyphenate-before\": \"<integer> | auto\",\n            \"hyphenate-character\": \"<string> | auto\",\n            \"hyphenate-lines\": \"no-limit | <integer>\",\n            \"hyphenate-resource\": 1,\n            \"hyphens\": \"none | manual | auto\",\n            \"icon\": 1,\n            \"image-orientation\": \"angle | auto\",\n            \"image-rendering\": \"auto | optimizeSpeed | optimizeQuality\",\n            \"image-resolution\": 1,\n            \"ime-mode\": \"auto | normal | active | inactive | disabled\",\n            \"inline-box-align\": \"last | <integer>\",\n            \"justify-content\": \"flex-start | flex-end | center | space-between | space-around | space-evenly | stretch\",\n            \"-webkit-justify-content\": \"flex-start | flex-end | center | space-between | space-around | space-evenly | stretch\",\n            \"kerning\": \"auto | <length>\",\n            \"left\": \"<margin-width>\",\n            \"letter-spacing\": \"<length> | normal\",\n            \"line-height\": \"<line-height>\",\n            \"line-break\": \"auto | loose | normal | strict\",\n            \"line-stacking\": 1,\n            \"line-stacking-ruby\": \"exclude-ruby | include-ruby\",\n            \"line-stacking-shift\": \"consider-shifts | disregard-shifts\",\n            \"line-stacking-strategy\": \"inline-line-height | block-line-height | max-height | grid-height\",\n            \"list-style\": 1,\n            \"list-style-image\": \"<uri> | none\",\n            \"list-style-position\": \"inside | outside\",\n            \"list-style-type\": \"disc | circle | square | decimal | decimal-leading-zero | lower-roman | upper-roman | lower-greek | lower-latin | upper-latin | armenian | georgian | lower-alpha | upper-alpha | none\",\n            \"margin\": \"<margin-width>{1,4}\",\n            \"margin-bottom\": \"<margin-width>\",\n            \"margin-left\": \"<margin-width>\",\n            \"margin-right\": \"<margin-width>\",\n            \"margin-top\": \"<margin-width>\",\n            \"mark\": 1,\n            \"mark-after\": 1,\n            \"mark-before\": 1,\n            \"marker\": 1,\n            \"marker-end\": 1,\n            \"marker-mid\": 1,\n            \"marker-start\": 1,\n            \"marks\": 1,\n            \"marquee-direction\": 1,\n            \"marquee-play-count\": 1,\n            \"marquee-speed\": 1,\n            \"marquee-style\": 1,\n            \"mask\": 1,\n            \"max-height\": \"<length> | <percentage> | <content-sizing> | none\",\n            \"max-width\": \"<length> | <percentage> | <content-sizing> | none\",\n            \"min-height\": \"<length> | <percentage> | <content-sizing> | contain-floats | -moz-contain-floats | -webkit-contain-floats\",\n            \"min-width\": \"<length> | <percentage> | <content-sizing> | contain-floats | -moz-contain-floats | -webkit-contain-floats\",\n            \"mix-blend-mode\": \"<blend-mode>\",\n            \"move-to\": 1,\n            \"nav-down\": 1,\n            \"nav-index\": 1,\n            \"nav-left\": 1,\n            \"nav-right\": 1,\n            \"nav-up\": 1,\n            \"object-fit\": \"fill | contain | cover | none | scale-down\",\n            \"object-position\": \"<position>\",\n            \"opacity\": \"<opacity-value>\",\n            \"order\": \"<integer>\",\n            \"-webkit-order\": \"<integer>\",\n            \"orphans\": \"<integer>\",\n            \"outline\": 1,\n            \"outline-color\": \"<color> | invert\",\n            \"outline-offset\": 1,\n            \"outline-style\": \"<border-style>\",\n            \"outline-width\": \"<border-width>\",\n            \"overflow\": \"visible | hidden | scroll | auto\",\n            \"overflow-style\": 1,\n            \"overflow-wrap\": \"normal | break-word\",\n            \"overflow-x\": 1,\n            \"overflow-y\": 1,\n            \"padding\": \"<padding-width>{1,4}\",\n            \"padding-bottom\": \"<padding-width>\",\n            \"padding-left\": \"<padding-width>\",\n            \"padding-right\": \"<padding-width>\",\n            \"padding-top\": \"<padding-width>\",\n            \"page\": 1,\n            \"page-break-after\": \"auto | always | avoid | left | right\",\n            \"page-break-before\": \"auto | always | avoid | left | right\",\n            \"page-break-inside\": \"auto | avoid\",\n            \"page-policy\": 1,\n            \"pause\": 1,\n            \"pause-after\": 1,\n            \"pause-before\": 1,\n            \"perspective\": 1,\n            \"perspective-origin\": 1,\n            \"phonemes\": 1,\n            \"pitch\": 1,\n            \"pitch-range\": 1,\n            \"play-during\": 1,\n            \"pointer-events\": \"auto | none | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all\",\n            \"position\": \"static | relative | absolute | fixed | sticky | -webkit-sticky\",\n            \"presentation-level\": 1,\n            \"punctuation-trim\": 1,\n            \"quotes\": 1,\n            \"rendering-intent\": 1,\n            \"resize\": 1,\n            \"rest\": 1,\n            \"rest-after\": 1,\n            \"rest-before\": 1,\n            \"richness\": 1,\n            \"right\": \"<margin-width>\",\n            \"rotation\": 1,\n            \"rotation-point\": 1,\n            \"ruby-align\": 1,\n            \"ruby-overhang\": 1,\n            \"ruby-position\": 1,\n            \"ruby-span\": 1,\n            \"shape-rendering\": \"auto | optimizeSpeed | crispEdges | geometricPrecision\",\n            \"size\": 1,\n            \"speak\": \"normal | none | spell-out\",\n            \"speak-header\": \"once | always\",\n            \"speak-numeral\": \"digits | continuous\",\n            \"speak-punctuation\": \"code | none\",\n            \"speech-rate\": 1,\n            \"src\": 1,\n            \"stop-color\": 1,\n            \"stop-opacity\": \"<opacity-value>\",\n            \"stress\": 1,\n            \"string-set\": 1,\n            \"stroke\": \"<paint>\",\n            \"stroke-dasharray\": \"none | <dasharray>\",\n            \"stroke-dashoffset\": \"<percentage> | <length>\",\n            \"stroke-linecap\": \"butt | round | square\",\n            \"stroke-linejoin\": \"miter | round | bevel\",\n            \"stroke-miterlimit\": \"<miterlimit>\",\n            \"stroke-opacity\": \"<opacity-value>\",\n            \"stroke-width\": \"<percentage> | <length>\",\n            \"table-layout\": \"auto | fixed\",\n            \"tab-size\": \"<integer> | <length>\",\n            \"target\": 1,\n            \"target-name\": 1,\n            \"target-new\": 1,\n            \"target-position\": 1,\n            \"text-align\": \"left | right | center | justify | match-parent | start | end\",\n            \"text-align-last\": 1,\n            \"text-anchor\": \"start | middle | end\",\n            \"text-decoration\": \"<text-decoration-line> || <text-decoration-style> || <text-decoration-color>\",\n            \"text-decoration-color\": \"<text-decoration-color>\",\n            \"text-decoration-line\": \"<text-decoration-line>\",\n            \"text-decoration-style\": \"<text-decoration-style>\",\n            \"text-decoration-skip\": \"none | [ objects || spaces || ink || edges || box-decoration ]\",\n            \"-webkit-text-decoration-skip\": \"none | [ objects || spaces || ink || edges || box-decoration ]\",\n            \"text-underline-position\": \"auto | [ under || [ left | right ] ]\",\n            \"text-emphasis\": 1,\n            \"text-height\": 1,\n            \"text-indent\": \"<length> | <percentage>\",\n            \"text-justify\": \"auto | none | inter-word | inter-ideograph | inter-cluster | distribute | kashida\",\n            \"text-outline\": 1,\n            \"text-overflow\": 1,\n            \"text-rendering\": \"auto | optimizeSpeed | optimizeLegibility | geometricPrecision\",\n            \"text-shadow\": 1,\n            \"text-transform\": \"capitalize | uppercase | lowercase | none\",\n            \"text-wrap\": \"normal | none | avoid\",\n            \"top\": \"<margin-width>\",\n            \"-ms-touch-action\": \"auto | none | pan-x | pan-y | pan-left | pan-right | pan-up | pan-down | manipulation\",\n            \"touch-action\": \"auto | none | pan-x | pan-y | pan-left | pan-right | pan-up | pan-down | manipulation\",\n            \"transform\": 1,\n            \"transform-origin\": 1,\n            \"transform-style\": 1,\n            \"transition\": 1,\n            \"transition-delay\": 1,\n            \"transition-duration\": 1,\n            \"transition-property\": 1,\n            \"transition-timing-function\": 1,\n            \"unicode-bidi\": \"normal | embed | isolate | bidi-override | isolate-override | plaintext\",\n            \"user-modify\": \"read-only | read-write | write-only\",\n            \"user-select\": \"auto | text | none | contain | all\",\n            \"vertical-align\": \"auto | use-script | baseline | sub | super | top | text-top | central | middle | bottom | text-bottom | <percentage> | <length>\",\n            \"visibility\": \"visible | hidden | collapse\",\n            \"voice-balance\": 1,\n            \"voice-duration\": 1,\n            \"voice-family\": 1,\n            \"voice-pitch\": 1,\n            \"voice-pitch-range\": 1,\n            \"voice-rate\": 1,\n            \"voice-stress\": 1,\n            \"voice-volume\": 1,\n            \"volume\": 1,\n            \"white-space\": \"normal | pre | nowrap | pre-wrap | pre-line | -pre-wrap | -o-pre-wrap | -moz-pre-wrap | -hp-pre-wrap\",\n            // https    ://perishablepress.com/wrapping-content/\n            \"white-space-collapse\": 1,\n            \"widows\": \"<integer>\",\n            \"width\": \"<length> | <percentage> | <content-sizing> | auto\",\n            \"will-change\": \"<will-change>\",\n            \"word-break\": \"normal | keep-all | break-all | break-word\",\n            \"word-spacing\": \"<length> | normal\",\n            \"word-wrap\": \"normal | break-word\",\n            \"writing-mode\": \"horizontal-tb | vertical-rl | vertical-lr | lr-tb | rl-tb | tb-rl | bt-rl | tb-lr | bt-lr | lr-bt | rl-bt | lr | rl | tb\",\n            \"z-index\": \"<integer> | auto\",\n            \"zoom\": \"<number> | <percentage> | normal\"\n          };\n        }, {}],\n        8: [function (require, module, exports) {\n          \"use strict\";\n\n          module.exports = PropertyName;\n          var SyntaxUnit = require(\"../util/SyntaxUnit\");\n          var Parser = require(\"./Parser\");\n          function PropertyName(text, hack, line, col) {\n            SyntaxUnit.call(this, text, line, col, Parser.PROPERTY_NAME_TYPE);\n            this.hack = hack;\n          }\n          PropertyName.prototype = new SyntaxUnit();\n          PropertyName.prototype.constructor = PropertyName;\n          PropertyName.prototype.toString = function () {\n            return (this.hack ? this.hack : \"\") + this.text;\n          };\n        }, {\n          \"../util/SyntaxUnit\": 26,\n          \"./Parser\": 6\n        }],\n        9: [function (require, module, exports) {\n          \"use strict\";\n\n          module.exports = PropertyValue;\n          var SyntaxUnit = require(\"../util/SyntaxUnit\");\n          var Parser = require(\"./Parser\");\n          function PropertyValue(parts, line, col) {\n            SyntaxUnit.call(this, parts.join(\" \"), line, col, Parser.PROPERTY_VALUE_TYPE);\n            this.parts = parts;\n          }\n          PropertyValue.prototype = new SyntaxUnit();\n          PropertyValue.prototype.constructor = PropertyValue;\n        }, {\n          \"../util/SyntaxUnit\": 26,\n          \"./Parser\": 6\n        }],\n        10: [function (require, module, exports) {\n          \"use strict\";\n\n          module.exports = PropertyValueIterator;\n          function PropertyValueIterator(value) {\n            this._i = 0;\n            this._parts = value.parts;\n            this._marks = [];\n            this.value = value;\n          }\n          PropertyValueIterator.prototype.count = function () {\n            return this._parts.length;\n          };\n          PropertyValueIterator.prototype.isFirst = function () {\n            return this._i === 0;\n          };\n          PropertyValueIterator.prototype.hasNext = function () {\n            return this._i < this._parts.length;\n          };\n          PropertyValueIterator.prototype.mark = function () {\n            this._marks.push(this._i);\n          };\n          PropertyValueIterator.prototype.peek = function (count) {\n            return this.hasNext() ? this._parts[this._i + (count || 0)] : null;\n          };\n          PropertyValueIterator.prototype.next = function () {\n            return this.hasNext() ? this._parts[this._i++] : null;\n          };\n          PropertyValueIterator.prototype.previous = function () {\n            return this._i > 0 ? this._parts[--this._i] : null;\n          };\n          PropertyValueIterator.prototype.restore = function () {\n            if (this._marks.length) {\n              this._i = this._marks.pop();\n            }\n          };\n          PropertyValueIterator.prototype.drop = function () {\n            this._marks.pop();\n          };\n        }, {}],\n        11: [function (require, module, exports) {\n          \"use strict\";\n\n          module.exports = PropertyValuePart;\n          var SyntaxUnit = require(\"../util/SyntaxUnit\");\n          var Colors = require(\"./Colors\");\n          var Parser = require(\"./Parser\");\n          var Tokens = require(\"./Tokens\");\n          function PropertyValuePart(text, line, col, optionalHint) {\n            var hint = optionalHint || {};\n            SyntaxUnit.call(this, text, line, col, Parser.PROPERTY_VALUE_PART_TYPE);\n            this.type = \"unknown\";\n            var temp;\n            if (/^([+-]?[\\d.]+)([a-z]+)$/i.test(text)) {\n              // dimension\n              this.type = \"dimension\";\n              this.value = Number(RegExp.$1);\n              this.units = RegExp.$2;\n              switch (this.units.toLowerCase()) {\n                case \"em\":\n                case \"rem\":\n                case \"ex\":\n                case \"px\":\n                case \"cm\":\n                case \"mm\":\n                case \"in\":\n                case \"pt\":\n                case \"pc\":\n                case \"ch\":\n                case \"vh\":\n                case \"vw\":\n                case \"vmax\":\n                case \"vmin\":\n                  this.type = \"length\";\n                  break;\n                case \"fr\":\n                  this.type = \"grid\";\n                  break;\n                case \"deg\":\n                case \"rad\":\n                case \"grad\":\n                case \"turn\":\n                  this.type = \"angle\";\n                  break;\n                case \"ms\":\n                case \"s\":\n                  this.type = \"time\";\n                  break;\n                case \"hz\":\n                case \"khz\":\n                  this.type = \"frequency\";\n                  break;\n                case \"dpi\":\n                case \"dpcm\":\n                  this.type = \"resolution\";\n                  break;\n              }\n            } else if (/^([+-]?[\\d.]+)%$/i.test(text)) {\n              // percentage\n              this.type = \"percentage\";\n              this.value = Number(RegExp.$1);\n            } else if (/^([+-]?\\d+)$/i.test(text)) {\n              // integer\n              this.type = \"integer\";\n              this.value = Number(RegExp.$1);\n            } else if (/^([+-]?[\\d.]+)$/i.test(text)) {\n              // number\n              this.type = \"number\";\n              this.value = Number(RegExp.$1);\n            } else if (/^#([a-f0-9]{3,6})/i.test(text)) {\n              // hexcolor\n              this.type = \"color\";\n              temp = RegExp.$1;\n              if (temp.length === 3) {\n                this.red = parseInt(temp.charAt(0) + temp.charAt(0), 16);\n                this.green = parseInt(temp.charAt(1) + temp.charAt(1), 16);\n                this.blue = parseInt(temp.charAt(2) + temp.charAt(2), 16);\n              } else {\n                this.red = parseInt(temp.substring(0, 2), 16);\n                this.green = parseInt(temp.substring(2, 4), 16);\n                this.blue = parseInt(temp.substring(4, 6), 16);\n              }\n            } else if (/^rgb\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)/i.test(text)) {\n              // rgb() color with absolute numbers\n              this.type = \"color\";\n              this.red = Number(RegExp.$1);\n              this.green = Number(RegExp.$2);\n              this.blue = Number(RegExp.$3);\n            } else if (/^rgb\\(\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*\\)/i.test(text)) {\n              // rgb() color with percentages\n              this.type = \"color\";\n              this.red = Number(RegExp.$1) * 255 / 100;\n              this.green = Number(RegExp.$2) * 255 / 100;\n              this.blue = Number(RegExp.$3) * 255 / 100;\n            } else if (/^rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([\\d.]+)\\s*\\)/i.test(text)) {\n              // rgba() color with absolute numbers\n              this.type = \"color\";\n              this.red = Number(RegExp.$1);\n              this.green = Number(RegExp.$2);\n              this.blue = Number(RegExp.$3);\n              this.alpha = Number(RegExp.$4);\n            } else if (/^rgba\\(\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*,\\s*([\\d.]+)\\s*\\)/i.test(text)) {\n              // rgba() color with percentages\n              this.type = \"color\";\n              this.red = Number(RegExp.$1) * 255 / 100;\n              this.green = Number(RegExp.$2) * 255 / 100;\n              this.blue = Number(RegExp.$3) * 255 / 100;\n              this.alpha = Number(RegExp.$4);\n            } else if (/^hsl\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*\\)/i.test(text)) {\n              // hsl()\n              this.type = \"color\";\n              this.hue = Number(RegExp.$1);\n              this.saturation = Number(RegExp.$2) / 100;\n              this.lightness = Number(RegExp.$3) / 100;\n            } else if (/^hsla\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*,\\s*([\\d.]+)\\s*\\)/i.test(text)) {\n              // hsla() color with percentages\n              this.type = \"color\";\n              this.hue = Number(RegExp.$1);\n              this.saturation = Number(RegExp.$2) / 100;\n              this.lightness = Number(RegExp.$3) / 100;\n              this.alpha = Number(RegExp.$4);\n            } else if (/^url\\((\"([^\\\\\"]|\\.)*\")\\)/i.test(text)) {\n              // URI\n              this.type = \"uri\";\n              this.uri = PropertyValuePart.parseString(RegExp.$1);\n            } else if (/^([^(]+)\\(/i.test(text)) {\n              this.type = \"function\";\n              this.name = RegExp.$1;\n              this.value = text;\n            } else if (/^\"([^\\n\\r\\f\\\\\"]|\\\\\\r\\n|\\\\[^\\r0-9a-f]|\\\\[0-9a-f]{1,6}(\\r\\n|[ \\n\\r\\t\\f])?)*\"/i.test(text)) {\n              // double-quoted string\n              this.type = \"string\";\n              this.value = PropertyValuePart.parseString(text);\n            } else if (/^'([^\\n\\r\\f\\\\']|\\\\\\r\\n|\\\\[^\\r0-9a-f]|\\\\[0-9a-f]{1,6}(\\r\\n|[ \\n\\r\\t\\f])?)*'/i.test(text)) {\n              // single-quoted string\n              this.type = \"string\";\n              this.value = PropertyValuePart.parseString(text);\n            } else if (Colors[text.toLowerCase()]) {\n              // named color\n              this.type = \"color\";\n              temp = Colors[text.toLowerCase()].substring(1);\n              this.red = parseInt(temp.substring(0, 2), 16);\n              this.green = parseInt(temp.substring(2, 4), 16);\n              this.blue = parseInt(temp.substring(4, 6), 16);\n            } else if (/^[,/]$/.test(text)) {\n              this.type = \"operator\";\n              this.value = text;\n            } else if (/^-?[a-z_\\u00A0-\\uFFFF][a-z0-9\\-_\\u00A0-\\uFFFF]*$/i.test(text)) {\n              this.type = \"identifier\";\n              this.value = text;\n            }\n            this.wasIdent = Boolean(hint.ident);\n          }\n          PropertyValuePart.prototype = new SyntaxUnit();\n          PropertyValuePart.prototype.constructor = PropertyValuePart;\n          PropertyValuePart.parseString = function (str) {\n            str = str.slice(1, -1); // Strip surrounding single/double quotes\n            var replacer = function (match, esc) {\n              if (/^(\\n|\\r\\n|\\r|\\f)$/.test(esc)) {\n                return \"\";\n              }\n              var m = /^[0-9a-f]{1,6}/i.exec(esc);\n              if (m) {\n                var codePoint = parseInt(m[0], 16);\n                if (String.fromCodePoint) {\n                  return String.fromCodePoint(codePoint);\n                } else {\n                  return String.fromCharCode(codePoint);\n                }\n              }\n              return esc;\n            };\n            return str.replace(/\\\\(\\r\\n|[^\\r0-9a-f]|[0-9a-f]{1,6}(\\r\\n|[ \\n\\r\\t\\f])?)/ig, replacer);\n          };\n          PropertyValuePart.serializeString = function (value) {\n            var replacer = function (match, c) {\n              if (c === \"\\\"\") {\n                return \"\\\\\" + c;\n              }\n              var cp = String.codePointAt ? String.codePointAt(0) : String.charCodeAt(0);\n              return \"\\\\\" + cp.toString(16) + \" \";\n            };\n            return \"\\\"\" + value.replace(/[\"\\r\\n\\f]/g, replacer) + \"\\\"\";\n          };\n          PropertyValuePart.fromToken = function (token) {\n            var part = new PropertyValuePart(token.value, token.startLine, token.startCol, {\n              ident: token.type === Tokens.IDENT\n            });\n            return part;\n          };\n        }, {\n          \"../util/SyntaxUnit\": 26,\n          \"./Colors\": 1,\n          \"./Parser\": 6,\n          \"./Tokens\": 18\n        }],\n        12: [function (require, module, exports) {\n          \"use strict\";\n\n          var Pseudos = module.exports = {\n            __proto__: null,\n            \":first-letter\": 1,\n            \":first-line\": 1,\n            \":before\": 1,\n            \":after\": 1\n          };\n          Pseudos.ELEMENT = 1;\n          Pseudos.CLASS = 2;\n          Pseudos.isElement = function (pseudo) {\n            return pseudo.indexOf(\"::\") === 0 || Pseudos[pseudo.toLowerCase()] === Pseudos.ELEMENT;\n          };\n        }, {}],\n        13: [function (require, module, exports) {\n          \"use strict\";\n\n          module.exports = Selector;\n          var SyntaxUnit = require(\"../util/SyntaxUnit\");\n          var Parser = require(\"./Parser\");\n          var Specificity = require(\"./Specificity\");\n          function Selector(parts, line, col) {\n            SyntaxUnit.call(this, parts.join(\" \"), line, col, Parser.SELECTOR_TYPE);\n            this.parts = parts;\n            this.specificity = Specificity.calculate(this);\n          }\n          Selector.prototype = new SyntaxUnit();\n          Selector.prototype.constructor = Selector;\n        }, {\n          \"../util/SyntaxUnit\": 26,\n          \"./Parser\": 6,\n          \"./Specificity\": 16\n        }],\n        14: [function (require, module, exports) {\n          \"use strict\";\n\n          module.exports = SelectorPart;\n          var SyntaxUnit = require(\"../util/SyntaxUnit\");\n          var Parser = require(\"./Parser\");\n          function SelectorPart(elementName, modifiers, text, line, col) {\n            SyntaxUnit.call(this, text, line, col, Parser.SELECTOR_PART_TYPE);\n            this.elementName = elementName;\n            this.modifiers = modifiers;\n          }\n          SelectorPart.prototype = new SyntaxUnit();\n          SelectorPart.prototype.constructor = SelectorPart;\n        }, {\n          \"../util/SyntaxUnit\": 26,\n          \"./Parser\": 6\n        }],\n        15: [function (require, module, exports) {\n          \"use strict\";\n\n          module.exports = SelectorSubPart;\n          var SyntaxUnit = require(\"../util/SyntaxUnit\");\n          var Parser = require(\"./Parser\");\n          function SelectorSubPart(text, type, line, col) {\n            SyntaxUnit.call(this, text, line, col, Parser.SELECTOR_SUB_PART_TYPE);\n            this.type = type;\n            this.args = [];\n          }\n          SelectorSubPart.prototype = new SyntaxUnit();\n          SelectorSubPart.prototype.constructor = SelectorSubPart;\n        }, {\n          \"../util/SyntaxUnit\": 26,\n          \"./Parser\": 6\n        }],\n        16: [function (require, module, exports) {\n          \"use strict\";\n\n          module.exports = Specificity;\n          var Pseudos = require(\"./Pseudos\");\n          var SelectorPart = require(\"./SelectorPart\");\n          function Specificity(a, b, c, d) {\n            this.a = a;\n            this.b = b;\n            this.c = c;\n            this.d = d;\n          }\n          Specificity.prototype = {\n            constructor: Specificity,\n            compare: function (other) {\n              var comps = [\"a\", \"b\", \"c\", \"d\"],\n                i,\n                len;\n              for (i = 0, len = comps.length; i < len; i++) {\n                if (this[comps[i]] < other[comps[i]]) {\n                  return -1;\n                } else if (this[comps[i]] > other[comps[i]]) {\n                  return 1;\n                }\n              }\n              return 0;\n            },\n            valueOf: function () {\n              return this.a * 1000 + this.b * 100 + this.c * 10 + this.d;\n            },\n            toString: function () {\n              return this.a + \",\" + this.b + \",\" + this.c + \",\" + this.d;\n            }\n          };\n          Specificity.calculate = function (selector) {\n            var i,\n              len,\n              part,\n              b = 0,\n              c = 0,\n              d = 0;\n            function updateValues(part) {\n              var i,\n                j,\n                len,\n                num,\n                elementName = part.elementName ? part.elementName.text : \"\",\n                modifier;\n              if (elementName && elementName.charAt(elementName.length - 1) !== \"*\") {\n                d++;\n              }\n              for (i = 0, len = part.modifiers.length; i < len; i++) {\n                modifier = part.modifiers[i];\n                switch (modifier.type) {\n                  case \"class\":\n                  case \"attribute\":\n                    c++;\n                    break;\n                  case \"id\":\n                    b++;\n                    break;\n                  case \"pseudo\":\n                    if (Pseudos.isElement(modifier.text)) {\n                      d++;\n                    } else {\n                      c++;\n                    }\n                    break;\n                  case \"not\":\n                    for (j = 0, num = modifier.args.length; j < num; j++) {\n                      updateValues(modifier.args[j]);\n                    }\n                }\n              }\n            }\n            for (i = 0, len = selector.parts.length; i < len; i++) {\n              part = selector.parts[i];\n              if (part instanceof SelectorPart) {\n                updateValues(part);\n              }\n            }\n            return new Specificity(0, b, c, d);\n          };\n        }, {\n          \"./Pseudos\": 12,\n          \"./SelectorPart\": 14\n        }],\n        17: [function (require, module, exports) {\n          \"use strict\";\n\n          module.exports = TokenStream;\n          var TokenStreamBase = require(\"../util/TokenStreamBase\");\n          var PropertyValuePart = require(\"./PropertyValuePart\");\n          var Tokens = require(\"./Tokens\");\n          var h = /^[0-9a-fA-F]$/,\n            nonascii = /^[\\u00A0-\\uFFFF]$/,\n            nl = /\\n|\\r\\n|\\r|\\f/,\n            whitespace = /\\u0009|\\u000a|\\u000c|\\u000d|\\u0020/;\n          function isHexDigit(c) {\n            return c != null && h.test(c);\n          }\n          function isDigit(c) {\n            return c != null && /\\d/.test(c);\n          }\n          function isWhitespace(c) {\n            return c != null && whitespace.test(c);\n          }\n          function isNewLine(c) {\n            return c != null && nl.test(c);\n          }\n          function isNameStart(c) {\n            return c != null && /[a-z_\\u00A0-\\uFFFF\\\\]/i.test(c);\n          }\n          function isNameChar(c) {\n            return c != null && (isNameStart(c) || /[0-9\\-\\\\]/.test(c));\n          }\n          function isIdentStart(c) {\n            return c != null && (isNameStart(c) || /-\\\\/.test(c));\n          }\n          function mix(receiver, supplier) {\n            for (var prop in supplier) {\n              if (Object.prototype.hasOwnProperty.call(supplier, prop)) {\n                receiver[prop] = supplier[prop];\n              }\n            }\n            return receiver;\n          }\n          function wouldStartIdent(twoCodePoints) {\n            return typeof twoCodePoints === \"string\" && (twoCodePoints[0] === \"-\" && isNameStart(twoCodePoints[1]) || isNameStart(twoCodePoints[0]));\n          }\n          function wouldStartUnsignedNumber(twoCodePoints) {\n            return typeof twoCodePoints === \"string\" && (isDigit(twoCodePoints[0]) || twoCodePoints[0] === \".\" && isDigit(twoCodePoints[1]));\n          }\n          function TokenStream(input) {\n            TokenStreamBase.call(this, input, Tokens);\n          }\n          TokenStream.prototype = mix(new TokenStreamBase(), {\n            _getToken: function () {\n              var c,\n                reader = this._reader,\n                token = null,\n                startLine = reader.getLine(),\n                startCol = reader.getCol();\n              c = reader.read();\n              while (c) {\n                switch (c) {\n                  case \"/\":\n                    if (reader.peek() === \"*\") {\n                      token = this.commentToken(c, startLine, startCol);\n                    } else {\n                      token = this.charToken(c, startLine, startCol);\n                    }\n                    break;\n                  case \"|\":\n                  case \"~\":\n                  case \"^\":\n                  case \"$\":\n                  case \"*\":\n                    if (reader.peek() === \"=\") {\n                      token = this.comparisonToken(c, startLine, startCol);\n                    } else {\n                      token = this.charToken(c, startLine, startCol);\n                    }\n                    break;\n                  case \"\\\"\":\n                  case \"'\":\n                    token = this.stringToken(c, startLine, startCol);\n                    break;\n                  case \"#\":\n                    if (isNameChar(reader.peek())) {\n                      token = this.hashToken(c, startLine, startCol);\n                    } else {\n                      token = this.charToken(c, startLine, startCol);\n                    }\n                    break;\n                  case \".\":\n                    if (isDigit(reader.peek())) {\n                      token = this.numberToken(c, startLine, startCol);\n                    } else {\n                      token = this.charToken(c, startLine, startCol);\n                    }\n                    break;\n                  case \"-\":\n                    if (wouldStartUnsignedNumber(reader.peekCount(2))) {\n                      token = this.numberToken(c, startLine, startCol);\n                      break;\n                    } else if (reader.peekCount(2) === \"->\") {\n                      token = this.htmlCommentEndToken(c, startLine, startCol);\n                    } else {\n                      token = this._getDefaultToken(c, startLine, startCol);\n                    }\n                    break;\n                  case \"+\":\n                    if (wouldStartUnsignedNumber(reader.peekCount(2))) {\n                      token = this.numberToken(c, startLine, startCol);\n                    } else {\n                      token = this.charToken(c, startLine, startCol);\n                    }\n                    break;\n                  case \"!\":\n                    token = this.importantToken(c, startLine, startCol);\n                    break;\n                  case \"@\":\n                    token = this.atRuleToken(c, startLine, startCol);\n                    break;\n                  case \":\":\n                    token = this.notToken(c, startLine, startCol);\n                    break;\n                  case \"<\":\n                    token = this.htmlCommentStartToken(c, startLine, startCol);\n                    break;\n                  case \"\\\\\":\n                    if (/[^\\r\\n\\f]/.test(reader.peek())) {\n                      token = this.identOrFunctionToken(this.readEscape(c, true), startLine, startCol);\n                    } else {\n                      token = this.charToken(c, startLine, startCol);\n                    }\n                    break;\n                  case \"U\":\n                  case \"u\":\n                    if (reader.peek() === \"+\") {\n                      token = this.unicodeRangeToken(c, startLine, startCol);\n                    } else {\n                      token = this._getDefaultToken(c, startLine, startCol);\n                    }\n                    break;\n                  default:\n                    token = this._getDefaultToken(c, startLine, startCol);\n                }\n                break;\n              }\n              if (!token && c === null) {\n                token = this.createToken(Tokens.EOF, null, startLine, startCol);\n              }\n              return token;\n            },\n            _getDefaultToken: function (c, startLine, startCol) {\n              var reader = this._reader,\n                token = null;\n              if (isDigit(c)) {\n                token = this.numberToken(c, startLine, startCol);\n              } else if (isWhitespace(c)) {\n                token = this.whitespaceToken(c, startLine, startCol);\n              } else if (wouldStartIdent(c + reader.peekCount(1))) {\n                token = this.identOrFunctionToken(c, startLine, startCol);\n              } else {\n                token = this.charToken(c, startLine, startCol);\n              }\n              return token;\n            },\n            createToken: function (tt, value, startLine, startCol, options) {\n              var reader = this._reader;\n              options = options || {};\n              return {\n                value: value,\n                type: tt,\n                channel: options.channel,\n                endChar: options.endChar,\n                hide: options.hide || false,\n                startLine: startLine,\n                startCol: startCol,\n                endLine: reader.getLine(),\n                endCol: reader.getCol()\n              };\n            },\n            atRuleToken: function (first, startLine, startCol) {\n              var rule = first,\n                reader = this._reader,\n                tt = Tokens.CHAR,\n                ident;\n              reader.mark();\n              ident = this.readName();\n              rule = first + ident;\n              tt = Tokens.type(rule.toLowerCase());\n              if (tt === Tokens.CHAR || tt === Tokens.UNKNOWN) {\n                if (rule.length > 1) {\n                  tt = Tokens.UNKNOWN_SYM;\n                } else {\n                  tt = Tokens.CHAR;\n                  rule = first;\n                  reader.reset();\n                }\n              }\n              return this.createToken(tt, rule, startLine, startCol);\n            },\n            charToken: function (c, startLine, startCol) {\n              var tt = Tokens.type(c);\n              var opts = {};\n              if (tt === -1) {\n                tt = Tokens.CHAR;\n              } else {\n                opts.endChar = Tokens[tt].endChar;\n              }\n              return this.createToken(tt, c, startLine, startCol, opts);\n            },\n            commentToken: function (first, startLine, startCol) {\n              var comment = this.readComment(first);\n              return this.createToken(Tokens.COMMENT, comment, startLine, startCol);\n            },\n            comparisonToken: function (c, startLine, startCol) {\n              var reader = this._reader,\n                comparison = c + reader.read(),\n                tt = Tokens.type(comparison) || Tokens.CHAR;\n              return this.createToken(tt, comparison, startLine, startCol);\n            },\n            hashToken: function (first, startLine, startCol) {\n              var name = this.readName(first);\n              return this.createToken(Tokens.HASH, name, startLine, startCol);\n            },\n            htmlCommentStartToken: function (first, startLine, startCol) {\n              var reader = this._reader,\n                text = first;\n              reader.mark();\n              text += reader.readCount(3);\n              if (text === \"<!--\") {\n                return this.createToken(Tokens.CDO, text, startLine, startCol);\n              } else {\n                reader.reset();\n                return this.charToken(first, startLine, startCol);\n              }\n            },\n            htmlCommentEndToken: function (first, startLine, startCol) {\n              var reader = this._reader,\n                text = first;\n              reader.mark();\n              text += reader.readCount(2);\n              if (text === \"-->\") {\n                return this.createToken(Tokens.CDC, text, startLine, startCol);\n              } else {\n                reader.reset();\n                return this.charToken(first, startLine, startCol);\n              }\n            },\n            identOrFunctionToken: function (first, startLine, startCol) {\n              var reader = this._reader,\n                ident = this.readName(first),\n                tt = Tokens.IDENT,\n                uriFns = [\"url(\", \"url-prefix(\", \"domain(\"],\n                uri;\n              if (reader.peek() === \"(\") {\n                ident += reader.read();\n                if (uriFns.indexOf(ident.toLowerCase()) > -1) {\n                  reader.mark();\n                  uri = this.readURI(ident);\n                  if (uri === null) {\n                    reader.reset();\n                    tt = Tokens.FUNCTION;\n                  } else {\n                    tt = Tokens.URI;\n                    ident = uri;\n                  }\n                } else {\n                  tt = Tokens.FUNCTION;\n                }\n              } else if (reader.peek() === \":\") {\n                // might be an IE function\n                if (ident.toLowerCase() === \"progid\") {\n                  ident += reader.readTo(\"(\");\n                  tt = Tokens.IE_FUNCTION;\n                }\n              }\n              return this.createToken(tt, ident, startLine, startCol);\n            },\n            importantToken: function (first, startLine, startCol) {\n              var reader = this._reader,\n                important = first,\n                tt = Tokens.CHAR,\n                temp,\n                c;\n              reader.mark();\n              c = reader.read();\n              while (c) {\n                if (c === \"/\") {\n                  if (reader.peek() !== \"*\") {\n                    break;\n                  } else {\n                    temp = this.readComment(c);\n                    if (temp === \"\") {\n                      // broken!\n                      break;\n                    }\n                  }\n                } else if (isWhitespace(c)) {\n                  important += c + this.readWhitespace();\n                } else if (/i/i.test(c)) {\n                  temp = reader.readCount(8);\n                  if (/mportant/i.test(temp)) {\n                    important += c + temp;\n                    tt = Tokens.IMPORTANT_SYM;\n                  }\n                  break; // we're done\n                } else {\n                  break;\n                }\n                c = reader.read();\n              }\n              if (tt === Tokens.CHAR) {\n                reader.reset();\n                return this.charToken(first, startLine, startCol);\n              } else {\n                return this.createToken(tt, important, startLine, startCol);\n              }\n            },\n            notToken: function (first, startLine, startCol) {\n              var reader = this._reader,\n                text = first;\n              reader.mark();\n              text += reader.readCount(4);\n              if (text.toLowerCase() === \":not(\") {\n                return this.createToken(Tokens.NOT, text, startLine, startCol);\n              } else {\n                reader.reset();\n                return this.charToken(first, startLine, startCol);\n              }\n            },\n            numberToken: function (first, startLine, startCol) {\n              var reader = this._reader,\n                value = this.readNumber(first),\n                ident,\n                tt = Tokens.NUMBER,\n                c = reader.peek();\n              if (isIdentStart(c)) {\n                ident = this.readName(reader.read());\n                value += ident;\n                if (/^em$|^ex$|^px$|^gd$|^rem$|^vw$|^vh$|^fr$|^vmax$|^vmin$|^ch$|^cm$|^mm$|^in$|^pt$|^pc$/i.test(ident)) {\n                  tt = Tokens.LENGTH;\n                } else if (/^deg|^rad$|^grad$|^turn$/i.test(ident)) {\n                  tt = Tokens.ANGLE;\n                } else if (/^ms$|^s$/i.test(ident)) {\n                  tt = Tokens.TIME;\n                } else if (/^hz$|^khz$/i.test(ident)) {\n                  tt = Tokens.FREQ;\n                } else if (/^dpi$|^dpcm$/i.test(ident)) {\n                  tt = Tokens.RESOLUTION;\n                } else {\n                  tt = Tokens.DIMENSION;\n                }\n              } else if (c === \"%\") {\n                value += reader.read();\n                tt = Tokens.PERCENTAGE;\n              }\n              return this.createToken(tt, value, startLine, startCol);\n            },\n            stringToken: function (first, startLine, startCol) {\n              var delim = first,\n                string = first,\n                reader = this._reader,\n                tt = Tokens.STRING,\n                c = reader.read(),\n                i;\n              while (c) {\n                string += c;\n                if (c === \"\\\\\") {\n                  c = reader.read();\n                  if (c === null) {\n                    break; // premature EOF after backslash\n                  } else if (/[^\\r\\n\\f0-9a-f]/i.test(c)) {\n                    string += c;\n                  } else {\n                    for (i = 0; isHexDigit(c) && i < 6; i++) {\n                      string += c;\n                      c = reader.read();\n                    }\n                    if (c === \"\\r\" && reader.peek() === \"\\n\") {\n                      string += c;\n                      c = reader.read();\n                    }\n                    if (isWhitespace(c)) {\n                      string += c;\n                    } else {\n                      continue;\n                    }\n                  }\n                } else if (c === delim) {\n                  break; // delimiter found.\n                } else if (isNewLine(reader.peek())) {\n                  tt = Tokens.INVALID;\n                  break;\n                }\n                c = reader.read();\n              }\n              if (c === null) {\n                tt = Tokens.INVALID;\n              }\n              return this.createToken(tt, string, startLine, startCol);\n            },\n            unicodeRangeToken: function (first, startLine, startCol) {\n              var reader = this._reader,\n                value = first,\n                temp,\n                tt = Tokens.CHAR;\n              if (reader.peek() === \"+\") {\n                reader.mark();\n                value += reader.read();\n                value += this.readUnicodeRangePart(true);\n                if (value.length === 2) {\n                  reader.reset();\n                } else {\n                  tt = Tokens.UNICODE_RANGE;\n                  if (value.indexOf(\"?\") === -1) {\n                    if (reader.peek() === \"-\") {\n                      reader.mark();\n                      temp = reader.read();\n                      temp += this.readUnicodeRangePart(false);\n                      if (temp.length === 1) {\n                        reader.reset();\n                      } else {\n                        value += temp;\n                      }\n                    }\n                  }\n                }\n              }\n              return this.createToken(tt, value, startLine, startCol);\n            },\n            whitespaceToken: function (first, startLine, startCol) {\n              var value = first + this.readWhitespace();\n              return this.createToken(Tokens.S, value, startLine, startCol);\n            },\n            readUnicodeRangePart: function (allowQuestionMark) {\n              var reader = this._reader,\n                part = \"\",\n                c = reader.peek();\n              while (isHexDigit(c) && part.length < 6) {\n                reader.read();\n                part += c;\n                c = reader.peek();\n              }\n              if (allowQuestionMark) {\n                while (c === \"?\" && part.length < 6) {\n                  reader.read();\n                  part += c;\n                  c = reader.peek();\n                }\n              }\n              return part;\n            },\n            readWhitespace: function () {\n              var reader = this._reader,\n                whitespace = \"\",\n                c = reader.peek();\n              while (isWhitespace(c)) {\n                reader.read();\n                whitespace += c;\n                c = reader.peek();\n              }\n              return whitespace;\n            },\n            readNumber: function (first) {\n              var reader = this._reader,\n                number = first,\n                hasDot = first === \".\",\n                c = reader.peek();\n              while (c) {\n                if (isDigit(c)) {\n                  number += reader.read();\n                } else if (c === \".\") {\n                  if (hasDot) {\n                    break;\n                  } else {\n                    hasDot = true;\n                    number += reader.read();\n                  }\n                } else {\n                  break;\n                }\n                c = reader.peek();\n              }\n              return number;\n            },\n            readString: function () {\n              var token = this.stringToken(this._reader.read(), 0, 0);\n              return token.type === Tokens.INVALID ? null : token.value;\n            },\n            readURI: function (first) {\n              var reader = this._reader,\n                uri = first,\n                inner = \"\",\n                c = reader.peek();\n              while (c && isWhitespace(c)) {\n                reader.read();\n                c = reader.peek();\n              }\n              if (c === \"'\" || c === \"\\\"\") {\n                inner = this.readString();\n                if (inner !== null) {\n                  inner = PropertyValuePart.parseString(inner);\n                }\n              } else {\n                inner = this.readUnquotedURL();\n              }\n              c = reader.peek();\n              while (c && isWhitespace(c)) {\n                reader.read();\n                c = reader.peek();\n              }\n              if (inner === null || c !== \")\") {\n                uri = null;\n              } else {\n                uri += PropertyValuePart.serializeString(inner) + reader.read();\n              }\n              return uri;\n            },\n            readUnquotedURL: function (first) {\n              var reader = this._reader,\n                url = first || \"\",\n                c;\n              for (c = reader.peek(); c; c = reader.peek()) {\n                if (nonascii.test(c) || /^[-!#$%&*-[\\]-~]$/.test(c)) {\n                  url += c;\n                  reader.read();\n                } else if (c === \"\\\\\") {\n                  if (/^[^\\r\\n\\f]$/.test(reader.peek(2))) {\n                    url += this.readEscape(reader.read(), true);\n                  } else {\n                    break; // bad escape sequence.\n                  }\n                } else {\n                  break; // bad character\n                }\n              }\n              return url;\n            },\n            readName: function (first) {\n              var reader = this._reader,\n                ident = first || \"\",\n                c;\n              for (c = reader.peek(); c; c = reader.peek()) {\n                if (c === \"\\\\\") {\n                  if (/^[^\\r\\n\\f]$/.test(reader.peek(2))) {\n                    ident += this.readEscape(reader.read(), true);\n                  } else {\n                    break;\n                  }\n                } else if (isNameChar(c)) {\n                  ident += reader.read();\n                } else {\n                  break;\n                }\n              }\n              return ident;\n            },\n            readEscape: function (first, unescape) {\n              var reader = this._reader,\n                cssEscape = first || \"\",\n                i = 0,\n                c = reader.peek();\n              if (isHexDigit(c)) {\n                do {\n                  cssEscape += reader.read();\n                  c = reader.peek();\n                } while (c && isHexDigit(c) && ++i < 6);\n              }\n              if (cssEscape.length === 1) {\n                if (/^[^\\r\\n\\f0-9a-f]$/.test(c)) {\n                  reader.read();\n                  if (unescape) {\n                    return c;\n                  }\n                } else {\n                  throw new Error(\"Bad escape sequence.\");\n                }\n              } else if (c === \"\\r\") {\n                reader.read();\n                if (reader.peek() === \"\\n\") {\n                  c += reader.read();\n                }\n              } else if (/^[ \\t\\n\\f]$/.test(c)) {\n                reader.read();\n              } else {\n                c = \"\";\n              }\n              if (unescape) {\n                var cp = parseInt(cssEscape.slice(first.length), 16);\n                return String.fromCodePoint ? String.fromCodePoint(cp) : String.fromCharCode(cp);\n              }\n              return cssEscape + c;\n            },\n            readComment: function (first) {\n              var reader = this._reader,\n                comment = first || \"\",\n                c = reader.read();\n              if (c === \"*\") {\n                while (c) {\n                  comment += c;\n                  if (comment.length > 2 && c === \"*\" && reader.peek() === \"/\") {\n                    comment += reader.read();\n                    break;\n                  }\n                  c = reader.read();\n                }\n                return comment;\n              } else {\n                return \"\";\n              }\n            }\n          });\n        }, {\n          \"../util/TokenStreamBase\": 27,\n          \"./PropertyValuePart\": 11,\n          \"./Tokens\": 18\n        }],\n        18: [function (require, module, exports) {\n          \"use strict\";\n\n          var Tokens = module.exports = [{\n            name: \"CDO\"\n          }, {\n            name: \"CDC\"\n          }, {\n            name: \"S\",\n            whitespace: true /*, channel: \"ws\"*/\n          }, {\n            name: \"COMMENT\",\n            comment: true,\n            hide: true,\n            channel: \"comment\"\n          }, {\n            name: \"INCLUDES\",\n            text: \"~=\"\n          }, {\n            name: \"DASHMATCH\",\n            text: \"|=\"\n          }, {\n            name: \"PREFIXMATCH\",\n            text: \"^=\"\n          }, {\n            name: \"SUFFIXMATCH\",\n            text: \"$=\"\n          }, {\n            name: \"SUBSTRINGMATCH\",\n            text: \"*=\"\n          }, {\n            name: \"STRING\"\n          }, {\n            name: \"IDENT\"\n          }, {\n            name: \"HASH\"\n          }, {\n            name: \"IMPORT_SYM\",\n            text: \"@import\"\n          }, {\n            name: \"PAGE_SYM\",\n            text: \"@page\"\n          }, {\n            name: \"MEDIA_SYM\",\n            text: \"@media\"\n          }, {\n            name: \"FONT_FACE_SYM\",\n            text: \"@font-face\"\n          }, {\n            name: \"CHARSET_SYM\",\n            text: \"@charset\"\n          }, {\n            name: \"NAMESPACE_SYM\",\n            text: \"@namespace\"\n          }, {\n            name: \"SUPPORTS_SYM\",\n            text: \"@supports\"\n          }, {\n            name: \"VIEWPORT_SYM\",\n            text: [\"@viewport\", \"@-ms-viewport\", \"@-o-viewport\"]\n          }, {\n            name: \"DOCUMENT_SYM\",\n            text: [\"@document\", \"@-moz-document\"]\n          }, {\n            name: \"UNKNOWN_SYM\"\n          }, {\n            name: \"KEYFRAMES_SYM\",\n            text: [\"@keyframes\", \"@-webkit-keyframes\", \"@-moz-keyframes\", \"@-o-keyframes\"]\n          }, {\n            name: \"IMPORTANT_SYM\"\n          }, {\n            name: \"LENGTH\"\n          }, {\n            name: \"ANGLE\"\n          }, {\n            name: \"TIME\"\n          }, {\n            name: \"FREQ\"\n          }, {\n            name: \"DIMENSION\"\n          }, {\n            name: \"PERCENTAGE\"\n          }, {\n            name: \"NUMBER\"\n          }, {\n            name: \"URI\"\n          }, {\n            name: \"FUNCTION\"\n          }, {\n            name: \"UNICODE_RANGE\"\n          }, {\n            name: \"INVALID\"\n          }, {\n            name: \"PLUS\",\n            text: \"+\"\n          }, {\n            name: \"GREATER\",\n            text: \">\"\n          }, {\n            name: \"COMMA\",\n            text: \",\"\n          }, {\n            name: \"TILDE\",\n            text: \"~\"\n          }, {\n            name: \"NOT\"\n          }, {\n            name: \"TOPLEFTCORNER_SYM\",\n            text: \"@top-left-corner\"\n          }, {\n            name: \"TOPLEFT_SYM\",\n            text: \"@top-left\"\n          }, {\n            name: \"TOPCENTER_SYM\",\n            text: \"@top-center\"\n          }, {\n            name: \"TOPRIGHT_SYM\",\n            text: \"@top-right\"\n          }, {\n            name: \"TOPRIGHTCORNER_SYM\",\n            text: \"@top-right-corner\"\n          }, {\n            name: \"BOTTOMLEFTCORNER_SYM\",\n            text: \"@bottom-left-corner\"\n          }, {\n            name: \"BOTTOMLEFT_SYM\",\n            text: \"@bottom-left\"\n          }, {\n            name: \"BOTTOMCENTER_SYM\",\n            text: \"@bottom-center\"\n          }, {\n            name: \"BOTTOMRIGHT_SYM\",\n            text: \"@bottom-right\"\n          }, {\n            name: \"BOTTOMRIGHTCORNER_SYM\",\n            text: \"@bottom-right-corner\"\n          }, {\n            name: \"LEFTTOP_SYM\",\n            text: \"@left-top\"\n          }, {\n            name: \"LEFTMIDDLE_SYM\",\n            text: \"@left-middle\"\n          }, {\n            name: \"LEFTBOTTOM_SYM\",\n            text: \"@left-bottom\"\n          }, {\n            name: \"RIGHTTOP_SYM\",\n            text: \"@right-top\"\n          }, {\n            name: \"RIGHTMIDDLE_SYM\",\n            text: \"@right-middle\"\n          }, {\n            name: \"RIGHTBOTTOM_SYM\",\n            text: \"@right-bottom\"\n          }, {\n            name: \"RESOLUTION\",\n            state: \"media\"\n          }, {\n            name: \"IE_FUNCTION\"\n          }, {\n            name: \"CHAR\"\n          }, {\n            name: \"PIPE\",\n            text: \"|\"\n          }, {\n            name: \"SLASH\",\n            text: \"/\"\n          }, {\n            name: \"MINUS\",\n            text: \"-\"\n          }, {\n            name: \"STAR\",\n            text: \"*\"\n          }, {\n            name: \"LBRACE\",\n            endChar: \"}\",\n            text: \"{\"\n          }, {\n            name: \"RBRACE\",\n            text: \"}\"\n          }, {\n            name: \"LBRACKET\",\n            endChar: \"]\",\n            text: \"[\"\n          }, {\n            name: \"RBRACKET\",\n            text: \"]\"\n          }, {\n            name: \"EQUALS\",\n            text: \"=\"\n          }, {\n            name: \"COLON\",\n            text: \":\"\n          }, {\n            name: \"SEMICOLON\",\n            text: \";\"\n          }, {\n            name: \"LPAREN\",\n            endChar: \")\",\n            text: \"(\"\n          }, {\n            name: \"RPAREN\",\n            text: \")\"\n          }, {\n            name: \"DOT\",\n            text: \".\"\n          }];\n          (function () {\n            var nameMap = [],\n              typeMap = Object.create(null);\n            Tokens.UNKNOWN = -1;\n            Tokens.unshift({\n              name: \"EOF\"\n            });\n            for (var i = 0, len = Tokens.length; i < len; i++) {\n              nameMap.push(Tokens[i].name);\n              Tokens[Tokens[i].name] = i;\n              if (Tokens[i].text) {\n                if (Tokens[i].text instanceof Array) {\n                  for (var j = 0; j < Tokens[i].text.length; j++) {\n                    typeMap[Tokens[i].text[j]] = i;\n                  }\n                } else {\n                  typeMap[Tokens[i].text] = i;\n                }\n              }\n            }\n            Tokens.name = function (tt) {\n              return nameMap[tt];\n            };\n            Tokens.type = function (c) {\n              return typeMap[c] || -1;\n            };\n          })();\n        }, {}],\n        19: [function (require, module, exports) {\n          \"use strict\";\n\n          var Matcher = require(\"./Matcher\");\n          var Properties = require(\"./Properties\");\n          var ValidationTypes = require(\"./ValidationTypes\");\n          var ValidationError = require(\"./ValidationError\");\n          var PropertyValueIterator = require(\"./PropertyValueIterator\");\n          var Validation = module.exports = {\n            validate: function (property, value) {\n              var name = property.toString().toLowerCase(),\n                expression = new PropertyValueIterator(value),\n                spec = Properties[name],\n                part;\n              if (!spec) {\n                if (name.indexOf(\"-\") !== 0) {\n                  // vendor prefixed are ok\n                  throw new ValidationError(\"Unknown property '\" + property + \"'.\", property.line, property.col);\n                }\n              } else if (typeof spec !== \"number\") {\n                if (ValidationTypes.isAny(expression, \"inherit | initial | unset\")) {\n                  if (expression.hasNext()) {\n                    part = expression.next();\n                    throw new ValidationError(\"Expected end of value but found '\" + part + \"'.\", part.line, part.col);\n                  }\n                  return;\n                }\n                this.singleProperty(spec, expression);\n              }\n            },\n            singleProperty: function (types, expression) {\n              var result = false,\n                value = expression.value,\n                part;\n              result = Matcher.parse(types).match(expression);\n              if (!result) {\n                if (expression.hasNext() && !expression.isFirst()) {\n                  part = expression.peek();\n                  throw new ValidationError(\"Expected end of value but found '\" + part + \"'.\", part.line, part.col);\n                } else {\n                  throw new ValidationError(\"Expected (\" + ValidationTypes.describe(types) + \") but found '\" + value + \"'.\", value.line, value.col);\n                }\n              } else if (expression.hasNext()) {\n                part = expression.next();\n                throw new ValidationError(\"Expected end of value but found '\" + part + \"'.\", part.line, part.col);\n              }\n            }\n          };\n        }, {\n          \"./Matcher\": 3,\n          \"./Properties\": 7,\n          \"./PropertyValueIterator\": 10,\n          \"./ValidationError\": 20,\n          \"./ValidationTypes\": 21\n        }],\n        20: [function (require, module, exports) {\n          \"use strict\";\n\n          module.exports = ValidationError;\n          function ValidationError(message, line, col) {\n            this.col = col;\n            this.line = line;\n            this.message = message;\n          }\n          ValidationError.prototype = new Error();\n        }, {}],\n        21: [function (require, module, exports) {\n          \"use strict\";\n\n          var ValidationTypes = module.exports;\n          var Matcher = require(\"./Matcher\");\n          function copy(to, from) {\n            Object.keys(from).forEach(function (prop) {\n              to[prop] = from[prop];\n            });\n          }\n          copy(ValidationTypes, {\n            isLiteral: function (part, literals) {\n              var text = part.text.toString().toLowerCase(),\n                args = literals.split(\" | \"),\n                i,\n                len,\n                found = false;\n              for (i = 0, len = args.length; i < len && !found; i++) {\n                if (args[i].charAt(0) === \"<\") {\n                  found = this.simple[args[i]](part);\n                } else if (args[i].slice(-2) === \"()\") {\n                  found = part.type === \"function\" && part.name === args[i].slice(0, -2);\n                } else if (text === args[i].toLowerCase()) {\n                  found = true;\n                }\n              }\n              return found;\n            },\n            isSimple: function (type) {\n              return Boolean(this.simple[type]);\n            },\n            isComplex: function (type) {\n              return Boolean(this.complex[type]);\n            },\n            describe: function (type) {\n              if (this.complex[type] instanceof Matcher) {\n                return this.complex[type].toString(0);\n              }\n              return type;\n            },\n            isAny: function (expression, types) {\n              var args = types.split(\" | \"),\n                i,\n                len,\n                found = false;\n              for (i = 0, len = args.length; i < len && !found && expression.hasNext(); i++) {\n                found = this.isType(expression, args[i]);\n              }\n              return found;\n            },\n            isAnyOfGroup: function (expression, types) {\n              var args = types.split(\" || \"),\n                i,\n                len,\n                found = false;\n              for (i = 0, len = args.length; i < len && !found; i++) {\n                found = this.isType(expression, args[i]);\n              }\n              return found ? args[i - 1] : false;\n            },\n            isType: function (expression, type) {\n              var part = expression.peek(),\n                result = false;\n              if (type.charAt(0) !== \"<\") {\n                result = this.isLiteral(part, type);\n                if (result) {\n                  expression.next();\n                }\n              } else if (this.simple[type]) {\n                result = this.simple[type](part);\n                if (result) {\n                  expression.next();\n                }\n              } else if (this.complex[type] instanceof Matcher) {\n                result = this.complex[type].match(expression);\n              } else {\n                result = this.complex[type](expression);\n              }\n              return result;\n            },\n            simple: {\n              __proto__: null,\n              \"<absolute-size>\": \"xx-small | x-small | small | medium | large | x-large | xx-large\",\n              \"<animateable-feature>\": \"scroll-position | contents | <animateable-feature-name>\",\n              \"<animateable-feature-name>\": function (part) {\n                return this[\"<ident>\"](part) && !/^(unset|initial|inherit|will-change|auto|scroll-position|contents)$/i.test(part);\n              },\n              \"<angle>\": function (part) {\n                return part.type === \"angle\";\n              },\n              \"<attachment>\": \"scroll | fixed | local\",\n              \"<attr>\": \"attr()\",\n              \"<basic-shape>\": \"inset() | circle() | ellipse() | polygon()\",\n              \"<bg-image>\": \"<image> | <gradient> | none\",\n              \"<border-style>\": \"none | hidden | dotted | dashed | solid | double | groove | \" + \"ridge | inset | outset\",\n              \"<border-width>\": \"<length> | thin | medium | thick\",\n              \"<box>\": \"padding-box | border-box | content-box\",\n              \"<clip-source>\": \"<uri>\",\n              \"<color>\": function (part) {\n                return part.type === \"color\" || String(part) === \"transparent\" || String(part) === \"currentColor\";\n              },\n              \"<color-svg>\": function (part) {\n                return part.type === \"color\";\n              },\n              \"<content>\": \"content()\",\n              \"<content-sizing>\": \"fill-available | -moz-available | -webkit-fill-available | \" + \"max-content | -moz-max-content | -webkit-max-content | \" + \"min-content | -moz-min-content | -webkit-min-content | \" + \"fit-content | -moz-fit-content | -webkit-fit-content\",\n              \"<feature-tag-value>\": function (part) {\n                return part.type === \"function\" && /^[A-Z0-9]{4}$/i.test(part);\n              },\n              \"<filter-function>\": \"blur() | brightness() | contrast() | custom() | \" + \"drop-shadow() | grayscale() | hue-rotate() | invert() | \" + \"opacity() | saturate() | sepia()\",\n              \"<flex-basis>\": \"<width>\",\n              \"<flex-direction>\": \"row | row-reverse | column | column-reverse\",\n              \"<flex-grow>\": \"<number>\",\n              \"<flex-shrink>\": \"<number>\",\n              \"<flex-wrap>\": \"nowrap | wrap | wrap-reverse\",\n              \"<font-size>\": \"<absolute-size> | <relative-size> | <length> | <percentage>\",\n              \"<font-stretch>\": \"normal | ultra-condensed | extra-condensed | condensed | \" + \"semi-condensed | semi-expanded | expanded | extra-expanded | \" + \"ultra-expanded\",\n              \"<font-style>\": \"normal | italic | oblique\",\n              \"<font-variant-caps>\": \"small-caps | all-small-caps | petite-caps | all-petite-caps | \" + \"unicase | titling-caps\",\n              \"<font-variant-css21>\": \"normal | small-caps\",\n              \"<font-weight>\": \"normal | bold | bolder | lighter | \" + \"100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900\",\n              \"<generic-family>\": \"serif | sans-serif | cursive | fantasy | monospace\",\n              \"<geometry-box>\": \"<shape-box> | fill-box | stroke-box | view-box\",\n              \"<glyph-angle>\": function (part) {\n                return part.type === \"angle\" && part.units === \"deg\";\n              },\n              \"<gradient>\": function (part) {\n                return part.type === \"function\" && /^(?:-(?:ms|moz|o|webkit)-)?(?:repeating-)?(?:radial-|linear-)?gradient/i.test(part);\n              },\n              \"<icccolor>\": \"cielab() | cielch() | cielchab() | \" + \"icc-color() | icc-named-color()\",\n              \"<ident>\": function (part) {\n                return part.type === \"identifier\" || part.wasIdent;\n              },\n              \"<ident-not-generic-family>\": function (part) {\n                return this[\"<ident>\"](part) && !this[\"<generic-family>\"](part);\n              },\n              \"<image>\": \"<uri>\",\n              \"<integer>\": function (part) {\n                return part.type === \"integer\";\n              },\n              \"<length>\": function (part) {\n                if (part.type === \"function\" && /^(?:-(?:ms|moz|o|webkit)-)?calc/i.test(part)) {\n                  return true;\n                } else {\n                  return part.type === \"length\" || part.type === \"number\" || part.type === \"integer\" || String(part) === \"0\";\n                }\n              },\n              \"<line>\": function (part) {\n                return part.type === \"integer\";\n              },\n              \"<line-height>\": \"<number> | <length> | <percentage> | normal\",\n              \"<margin-width>\": \"<length> | <percentage> | auto\",\n              \"<miterlimit>\": function (part) {\n                return this[\"<number>\"](part) && part.value >= 1;\n              },\n              \"<nonnegative-length-or-percentage>\": function (part) {\n                return (this[\"<length>\"](part) || this[\"<percentage>\"](part)) && (String(part) === \"0\" || part.type === \"function\" || part.value >= 0);\n              },\n              \"<nonnegative-number-or-percentage>\": function (part) {\n                return (this[\"<number>\"](part) || this[\"<percentage>\"](part)) && (String(part) === \"0\" || part.type === \"function\" || part.value >= 0);\n              },\n              \"<number>\": function (part) {\n                return part.type === \"number\" || this[\"<integer>\"](part);\n              },\n              \"<opacity-value>\": function (part) {\n                return this[\"<number>\"](part) && part.value >= 0 && part.value <= 1;\n              },\n              \"<padding-width>\": \"<nonnegative-length-or-percentage>\",\n              \"<percentage>\": function (part) {\n                return part.type === \"percentage\" || String(part) === \"0\";\n              },\n              \"<relative-size>\": \"smaller | larger\",\n              \"<shape>\": \"rect() | inset-rect()\",\n              \"<shape-box>\": \"<box> | margin-box\",\n              \"<single-animation-direction>\": \"normal | reverse | alternate | alternate-reverse\",\n              \"<single-animation-name>\": function (part) {\n                return this[\"<ident>\"](part) && /^-?[a-z_][-a-z0-9_]+$/i.test(part) && !/^(none|unset|initial|inherit)$/i.test(part);\n              },\n              \"<string>\": function (part) {\n                return part.type === \"string\";\n              },\n              \"<time>\": function (part) {\n                return part.type === \"time\";\n              },\n              \"<uri>\": function (part) {\n                return part.type === \"uri\";\n              },\n              \"<width>\": \"<margin-width>\"\n            },\n            complex: {\n              __proto__: null,\n              \"<azimuth>\": \"<angle>\" + \" | \" + \"[ [ left-side | far-left | left | center-left | center | \" + \"center-right | right | far-right | right-side ] || behind ]\" + \" | \" + \"leftwards | rightwards\",\n              \"<bg-position>\": \"<position>#\",\n              \"<bg-size>\": \"[ <length> | <percentage> | auto ]{1,2} | cover | contain\",\n              \"<blend-mode>\": \"normal | multiply | screen | overlay | darken | lighten | color-dodge | \" + \"color-burn | hard-light | soft-light | difference | exclusion | hue | \" + \"saturation | color | luminosity\",\n              \"<border-image-slice>\": Matcher.many([true /* first element is required */], Matcher.cast(\"<nonnegative-number-or-percentage>\"), Matcher.cast(\"<nonnegative-number-or-percentage>\"), Matcher.cast(\"<nonnegative-number-or-percentage>\"), Matcher.cast(\"<nonnegative-number-or-percentage>\"), \"fill\"),\n              \"<border-radius>\": \"<nonnegative-length-or-percentage>{1,4} \" + \"[ / <nonnegative-length-or-percentage>{1,4} ]?\",\n              \"<box-shadow>\": \"none | <shadow>#\",\n              \"<clip-path>\": \"<basic-shape> || <geometry-box>\",\n              \"<dasharray>\": Matcher.cast(\"<nonnegative-length-or-percentage>\").braces(1, Infinity, \"#\", Matcher.cast(\",\").question()),\n              \"<family-name>\": \"<string> | <ident-not-generic-family> <ident>*\",\n              \"<filter-function-list>\": \"[ <filter-function> | <uri> ]+\",\n              \"<flex>\": \"none | [ <flex-grow> <flex-shrink>? || <flex-basis> ]\",\n              \"<font-family>\": \"[ <generic-family> | <family-name> ]#\",\n              \"<font-shorthand>\": \"[ <font-style> || <font-variant-css21> || \" + \"<font-weight> || <font-stretch> ]? <font-size> \" + \"[ / <line-height> ]? <font-family>\",\n              \"<font-variant-alternates>\": \"stylistic() || \" + \"historical-forms || \" + \"styleset() || \" + \"character-variant() || \" + \"swash() || \" + \"ornaments() || \" + \"annotation()\",\n              \"<font-variant-ligatures>\": \"[ common-ligatures | no-common-ligatures ] || \" + \"[ discretionary-ligatures | no-discretionary-ligatures ] || \" + \"[ historical-ligatures | no-historical-ligatures ] || \" + \"[ contextual | no-contextual ]\",\n              \"<font-variant-numeric>\": \"[ lining-nums | oldstyle-nums ] || \" + \"[ proportional-nums | tabular-nums ] || \" + \"[ diagonal-fractions | stacked-fractions ] || \" + \"ordinal || slashed-zero\",\n              \"<font-variant-east-asian>\": \"[ jis78 | jis83 | jis90 | jis04 | simplified | traditional ] || \" + \"[ full-width | proportional-width ] || \" + \"ruby\",\n              \"<paint>\": \"<paint-basic> | <uri> <paint-basic>?\",\n              \"<paint-basic>\": \"none | currentColor | <color-svg> <icccolor>?\",\n              \"<position>\": \"[ center | [ left | right ] [ <percentage> | <length> ]? ] && \" + \"[ center | [ top | bottom ] [ <percentage> | <length> ]? ]\" + \" | \" + \"[ left | center | right | <percentage> | <length> ] \" + \"[ top | center | bottom | <percentage> | <length> ]\" + \" | \" + \"[ left | center | right | top | bottom | <percentage> | <length> ]\",\n              \"<repeat-style>\": \"repeat-x | repeat-y | [ repeat | space | round | no-repeat ]{1,2}\",\n              \"<shadow>\": Matcher.many([true /* length is required */], Matcher.cast(\"<length>\").braces(2, 4), \"inset\", \"<color>\"),\n              \"<text-decoration-color>\": \"<color>\",\n              \"<text-decoration-line>\": \"none | [ underline || overline || line-through || blink ]\",\n              \"<text-decoration-style>\": \"solid | double | dotted | dashed | wavy\",\n              \"<will-change>\": \"auto | <animateable-feature>#\",\n              \"<x-one-radius>\": \"[ <length> | <percentage> ]{1,2}\"\n            }\n          });\n          Object.keys(ValidationTypes.simple).forEach(function (nt) {\n            var rule = ValidationTypes.simple[nt];\n            if (typeof rule === \"string\") {\n              ValidationTypes.simple[nt] = function (part) {\n                return ValidationTypes.isLiteral(part, rule);\n              };\n            }\n          });\n          Object.keys(ValidationTypes.complex).forEach(function (nt) {\n            var rule = ValidationTypes.complex[nt];\n            if (typeof rule === \"string\") {\n              ValidationTypes.complex[nt] = Matcher.parse(rule);\n            }\n          });\n          ValidationTypes.complex[\"<font-variant>\"] = Matcher.oror({\n            expand: \"<font-variant-ligatures>\"\n          }, {\n            expand: \"<font-variant-alternates>\"\n          }, \"<font-variant-caps>\", {\n            expand: \"<font-variant-numeric>\"\n          }, {\n            expand: \"<font-variant-east-asian>\"\n          });\n        }, {\n          \"./Matcher\": 3\n        }],\n        22: [function (require, module, exports) {\n          \"use strict\";\n\n          module.exports = {\n            Colors: require(\"./Colors\"),\n            Combinator: require(\"./Combinator\"),\n            Parser: require(\"./Parser\"),\n            PropertyName: require(\"./PropertyName\"),\n            PropertyValue: require(\"./PropertyValue\"),\n            PropertyValuePart: require(\"./PropertyValuePart\"),\n            Matcher: require(\"./Matcher\"),\n            MediaFeature: require(\"./MediaFeature\"),\n            MediaQuery: require(\"./MediaQuery\"),\n            Selector: require(\"./Selector\"),\n            SelectorPart: require(\"./SelectorPart\"),\n            SelectorSubPart: require(\"./SelectorSubPart\"),\n            Specificity: require(\"./Specificity\"),\n            TokenStream: require(\"./TokenStream\"),\n            Tokens: require(\"./Tokens\"),\n            ValidationError: require(\"./ValidationError\")\n          };\n        }, {\n          \"./Colors\": 1,\n          \"./Combinator\": 2,\n          \"./Matcher\": 3,\n          \"./MediaFeature\": 4,\n          \"./MediaQuery\": 5,\n          \"./Parser\": 6,\n          \"./PropertyName\": 8,\n          \"./PropertyValue\": 9,\n          \"./PropertyValuePart\": 11,\n          \"./Selector\": 13,\n          \"./SelectorPart\": 14,\n          \"./SelectorSubPart\": 15,\n          \"./Specificity\": 16,\n          \"./TokenStream\": 17,\n          \"./Tokens\": 18,\n          \"./ValidationError\": 20\n        }],\n        23: [function (require, module, exports) {\n          \"use strict\";\n\n          module.exports = EventTarget;\n          function EventTarget() {\n            this._listeners = Object.create(null);\n          }\n          EventTarget.prototype = {\n            constructor: EventTarget,\n            addListener: function (type, listener) {\n              if (!this._listeners[type]) {\n                this._listeners[type] = [];\n              }\n              this._listeners[type].push(listener);\n            },\n            fire: function (event) {\n              if (typeof event === \"string\") {\n                event = {\n                  type: event\n                };\n              }\n              if (typeof event.target !== \"undefined\") {\n                event.target = this;\n              }\n              if (typeof event.type === \"undefined\") {\n                throw new Error(\"Event object missing 'type' property.\");\n              }\n              if (this._listeners[event.type]) {\n                var listeners = this._listeners[event.type].concat();\n                for (var i = 0, len = listeners.length; i < len; i++) {\n                  listeners[i].call(this, event);\n                }\n              }\n            },\n            removeListener: function (type, listener) {\n              if (this._listeners[type]) {\n                var listeners = this._listeners[type];\n                for (var i = 0, len = listeners.length; i < len; i++) {\n                  if (listeners[i] === listener) {\n                    listeners.splice(i, 1);\n                    break;\n                  }\n                }\n              }\n            }\n          };\n        }, {}],\n        24: [function (require, module, exports) {\n          \"use strict\";\n\n          module.exports = StringReader;\n          function StringReader(text) {\n            this._input = text.replace(/(\\r\\n?|\\n)/g, \"\\n\");\n            this._line = 1;\n            this._col = 1;\n            this._cursor = 0;\n          }\n          StringReader.prototype = {\n            constructor: StringReader,\n            getCol: function () {\n              return this._col;\n            },\n            getLine: function () {\n              return this._line;\n            },\n            eof: function () {\n              return this._cursor === this._input.length;\n            },\n            peek: function (count) {\n              var c = null;\n              count = typeof count === \"undefined\" ? 1 : count;\n              if (this._cursor < this._input.length) {\n                c = this._input.charAt(this._cursor + count - 1);\n              }\n              return c;\n            },\n            read: function () {\n              var c = null;\n              if (this._cursor < this._input.length) {\n                if (this._input.charAt(this._cursor) === \"\\n\") {\n                  this._line++;\n                  this._col = 1;\n                } else {\n                  this._col++;\n                }\n                c = this._input.charAt(this._cursor++);\n              }\n              return c;\n            },\n            mark: function () {\n              this._bookmark = {\n                cursor: this._cursor,\n                line: this._line,\n                col: this._col\n              };\n            },\n            reset: function () {\n              if (this._bookmark) {\n                this._cursor = this._bookmark.cursor;\n                this._line = this._bookmark.line;\n                this._col = this._bookmark.col;\n                delete this._bookmark;\n              }\n            },\n            peekCount: function (count) {\n              count = typeof count === \"undefined\" ? 1 : Math.max(count, 0);\n              return this._input.substring(this._cursor, this._cursor + count);\n            },\n            readTo: function (pattern) {\n              var buffer = \"\",\n                c;\n              while (buffer.length < pattern.length || buffer.lastIndexOf(pattern) !== buffer.length - pattern.length) {\n                c = this.read();\n                if (c) {\n                  buffer += c;\n                } else {\n                  throw new Error(\"Expected \\\"\" + pattern + \"\\\" at line \" + this._line + \", col \" + this._col + \".\");\n                }\n              }\n              return buffer;\n            },\n            readWhile: function (filter) {\n              var buffer = \"\",\n                c = this.peek();\n              while (c !== null && filter(c)) {\n                buffer += this.read();\n                c = this.peek();\n              }\n              return buffer;\n            },\n            readMatch: function (matcher) {\n              var source = this._input.substring(this._cursor),\n                value = null;\n              if (typeof matcher === \"string\") {\n                if (source.slice(0, matcher.length) === matcher) {\n                  value = this.readCount(matcher.length);\n                }\n              } else if (matcher instanceof RegExp) {\n                if (matcher.test(source)) {\n                  value = this.readCount(RegExp.lastMatch.length);\n                }\n              }\n              return value;\n            },\n            readCount: function (count) {\n              var buffer = \"\";\n              while (count--) {\n                buffer += this.read();\n              }\n              return buffer;\n            }\n          };\n        }, {}],\n        25: [function (require, module, exports) {\n          \"use strict\";\n\n          module.exports = SyntaxError;\n          function SyntaxError(message, line, col) {\n            Error.call(this);\n            this.name = this.constructor.name;\n            this.col = col;\n            this.line = line;\n            this.message = message;\n          }\n          SyntaxError.prototype = Object.create(Error.prototype); // jshint ignore:line\n          SyntaxError.prototype.constructor = SyntaxError; // jshint ignore:line\n        }, {}],\n        26: [function (require, module, exports) {\n          \"use strict\";\n\n          module.exports = SyntaxUnit;\n          function SyntaxUnit(text, line, col, type) {\n            this.col = col;\n            this.line = line;\n            this.text = text;\n            this.type = type;\n          }\n          SyntaxUnit.fromToken = function (token) {\n            return new SyntaxUnit(token.value, token.startLine, token.startCol);\n          };\n          SyntaxUnit.prototype = {\n            constructor: SyntaxUnit,\n            valueOf: function () {\n              return this.toString();\n            },\n            toString: function () {\n              return this.text;\n            }\n          };\n        }, {}],\n        27: [function (require, module, exports) {\n          \"use strict\";\n\n          module.exports = TokenStreamBase;\n          var StringReader = require(\"./StringReader\");\n          var SyntaxError = require(\"./SyntaxError\");\n          function TokenStreamBase(input, tokenData) {\n            this._reader = new StringReader(input ? input.toString() : \"\");\n            this._token = null;\n            this._tokenData = tokenData;\n            this._lt = [];\n            this._ltIndex = 0;\n            this._ltIndexCache = [];\n          }\n          TokenStreamBase.createTokenData = function (tokens) {\n            var nameMap = [],\n              typeMap = Object.create(null),\n              tokenData = tokens.concat([]),\n              i = 0,\n              len = tokenData.length + 1;\n            tokenData.UNKNOWN = -1;\n            tokenData.unshift({\n              name: \"EOF\"\n            });\n            for (; i < len; i++) {\n              nameMap.push(tokenData[i].name);\n              tokenData[tokenData[i].name] = i;\n              if (tokenData[i].text) {\n                typeMap[tokenData[i].text] = i;\n              }\n            }\n            tokenData.name = function (tt) {\n              return nameMap[tt];\n            };\n            tokenData.type = function (c) {\n              return typeMap[c];\n            };\n            return tokenData;\n          };\n          TokenStreamBase.prototype = {\n            constructor: TokenStreamBase,\n            match: function (tokenTypes, channel) {\n              if (!(tokenTypes instanceof Array)) {\n                tokenTypes = [tokenTypes];\n              }\n              var tt = this.get(channel),\n                i = 0,\n                len = tokenTypes.length;\n              while (i < len) {\n                if (tt === tokenTypes[i++]) {\n                  return true;\n                }\n              }\n              this.unget();\n              return false;\n            },\n            mustMatch: function (tokenTypes) {\n              var token;\n              if (!(tokenTypes instanceof Array)) {\n                tokenTypes = [tokenTypes];\n              }\n              if (!this.match.apply(this, arguments)) {\n                token = this.LT(1);\n                throw new SyntaxError(\"Expected \" + this._tokenData[tokenTypes[0]].name + \" at line \" + token.startLine + \", col \" + token.startCol + \".\", token.startLine, token.startCol);\n              }\n            },\n            advance: function (tokenTypes, channel) {\n              while (this.LA(0) !== 0 && !this.match(tokenTypes, channel)) {\n                this.get();\n              }\n              return this.LA(0);\n            },\n            get: function (channel) {\n              var tokenInfo = this._tokenData,\n                i = 0,\n                token,\n                info;\n              if (this._lt.length && this._ltIndex >= 0 && this._ltIndex < this._lt.length) {\n                i++;\n                this._token = this._lt[this._ltIndex++];\n                info = tokenInfo[this._token.type];\n                while (typeof info.channel !== \"undefined\" && channel !== info.channel && this._ltIndex < this._lt.length) {\n                  this._token = this._lt[this._ltIndex++];\n                  info = tokenInfo[this._token.type];\n                  i++;\n                }\n                if ((typeof info.channel === \"undefined\" || channel === info.channel) && this._ltIndex <= this._lt.length) {\n                  this._ltIndexCache.push(i);\n                  return this._token.type;\n                }\n              }\n              token = this._getToken();\n              if (token.type > -1 && !tokenInfo[token.type].hide) {\n                token.channel = tokenInfo[token.type].channel;\n                this._token = token;\n                this._lt.push(token);\n                this._ltIndexCache.push(this._lt.length - this._ltIndex + i);\n                if (this._lt.length > 5) {\n                  this._lt.shift();\n                }\n                if (this._ltIndexCache.length > 5) {\n                  this._ltIndexCache.shift();\n                }\n                this._ltIndex = this._lt.length;\n              }\n              info = tokenInfo[token.type];\n              if (info && (info.hide || typeof info.channel !== \"undefined\" && channel !== info.channel)) {\n                return this.get(channel);\n              } else {\n                return token.type;\n              }\n            },\n            LA: function (index) {\n              var total = index,\n                tt;\n              if (index > 0) {\n                if (index > 5) {\n                  throw new Error(\"Too much lookahead.\");\n                }\n                while (total) {\n                  tt = this.get();\n                  total--;\n                }\n                while (total < index) {\n                  this.unget();\n                  total++;\n                }\n              } else if (index < 0) {\n                if (this._lt[this._ltIndex + index]) {\n                  tt = this._lt[this._ltIndex + index].type;\n                } else {\n                  throw new Error(\"Too much lookbehind.\");\n                }\n              } else {\n                tt = this._token.type;\n              }\n              return tt;\n            },\n            LT: function (index) {\n              this.LA(index);\n              return this._lt[this._ltIndex + index - 1];\n            },\n            peek: function () {\n              return this.LA(1);\n            },\n            token: function () {\n              return this._token;\n            },\n            tokenName: function (tokenType) {\n              if (tokenType < 0 || tokenType > this._tokenData.length) {\n                return \"UNKNOWN_TOKEN\";\n              } else {\n                return this._tokenData[tokenType].name;\n              }\n            },\n            tokenType: function (tokenName) {\n              return this._tokenData[tokenName] || -1;\n            },\n            unget: function () {\n              if (this._ltIndexCache.length) {\n                this._ltIndex -= this._ltIndexCache.pop(); //--;\n                this._token = this._lt[this._ltIndex - 1];\n              } else {\n                throw new Error(\"Too much lookahead.\");\n              }\n            }\n          };\n        }, {\n          \"./StringReader\": 24,\n          \"./SyntaxError\": 25\n        }],\n        28: [function (require, module, exports) {\n          \"use strict\";\n\n          module.exports = {\n            StringReader: require(\"./StringReader\"),\n            SyntaxError: require(\"./SyntaxError\"),\n            SyntaxUnit: require(\"./SyntaxUnit\"),\n            EventTarget: require(\"./EventTarget\"),\n            TokenStreamBase: require(\"./TokenStreamBase\")\n          };\n        }, {\n          \"./EventTarget\": 23,\n          \"./StringReader\": 24,\n          \"./SyntaxError\": 25,\n          \"./SyntaxUnit\": 26,\n          \"./TokenStreamBase\": 27\n        }],\n        \"parserlib\": [function (require, module, exports) {\n          \"use strict\";\n\n          module.exports = {\n            css: require(\"./css\"),\n            util: require(\"./util\")\n          };\n        }, {\n          \"./css\": 22,\n          \"./util\": 28\n        }]\n      }, {}, []);\n      return require('parserlib');\n    }();\n    var clone = function () {\n      'use strict';\n\n      function _instanceof(obj, type) {\n        return type != null && obj instanceof type;\n      }\n      var nativeMap;\n      try {\n        nativeMap = Map;\n      } catch (_) {\n        nativeMap = function () {};\n      }\n      var nativeSet;\n      try {\n        nativeSet = Set;\n      } catch (_) {\n        nativeSet = function () {};\n      }\n      var nativePromise;\n      try {\n        nativePromise = Promise;\n      } catch (_) {\n        nativePromise = function () {};\n      }\n      function clone(parent, circular, depth, prototype, includeNonEnumerable) {\n        if (typeof circular === 'object') {\n          depth = circular.depth;\n          prototype = circular.prototype;\n          includeNonEnumerable = circular.includeNonEnumerable;\n          circular = circular.circular;\n        }\n        var allParents = [];\n        var allChildren = [];\n        var useBuffer = typeof Buffer != 'undefined';\n        if (typeof circular == 'undefined') circular = true;\n        if (typeof depth == 'undefined') depth = Infinity;\n        function _clone(parent, depth) {\n          if (parent === null) return null;\n          if (depth === 0) return parent;\n          var child;\n          var proto;\n          if (typeof parent != 'object') {\n            return parent;\n          }\n          if (_instanceof(parent, nativeMap)) {\n            child = new nativeMap();\n          } else if (_instanceof(parent, nativeSet)) {\n            child = new nativeSet();\n          } else if (_instanceof(parent, nativePromise)) {\n            child = new nativePromise(function (resolve, reject) {\n              parent.then(function (value) {\n                resolve(_clone(value, depth - 1));\n              }, function (err) {\n                reject(_clone(err, depth - 1));\n              });\n            });\n          } else if (clone.__isArray(parent)) {\n            child = [];\n          } else if (clone.__isRegExp(parent)) {\n            child = new RegExp(parent.source, __getRegExpFlags(parent));\n            if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n          } else if (clone.__isDate(parent)) {\n            child = new Date(parent.getTime());\n          } else if (useBuffer && Buffer.isBuffer(parent)) {\n            if (Buffer.allocUnsafe) {\n              child = Buffer.allocUnsafe(parent.length);\n            } else {\n              child = new Buffer(parent.length);\n            }\n            parent.copy(child);\n            return child;\n          } else if (_instanceof(parent, Error)) {\n            child = Object.create(parent);\n          } else {\n            if (typeof prototype == 'undefined') {\n              proto = Object.getPrototypeOf(parent);\n              child = Object.create(proto);\n            } else {\n              child = Object.create(prototype);\n              proto = prototype;\n            }\n          }\n          if (circular) {\n            var index = allParents.indexOf(parent);\n            if (index != -1) {\n              return allChildren[index];\n            }\n            allParents.push(parent);\n            allChildren.push(child);\n          }\n          if (_instanceof(parent, nativeMap)) {\n            parent.forEach(function (value, key) {\n              var keyChild = _clone(key, depth - 1);\n              var valueChild = _clone(value, depth - 1);\n              child.set(keyChild, valueChild);\n            });\n          }\n          if (_instanceof(parent, nativeSet)) {\n            parent.forEach(function (value) {\n              var entryChild = _clone(value, depth - 1);\n              child.add(entryChild);\n            });\n          }\n          for (var i in parent) {\n            var attrs;\n            if (proto) {\n              attrs = Object.getOwnPropertyDescriptor(proto, i);\n            }\n            if (attrs && attrs.set == null) {\n              continue;\n            }\n            child[i] = _clone(parent[i], depth - 1);\n          }\n          if (Object.getOwnPropertySymbols) {\n            var symbols = Object.getOwnPropertySymbols(parent);\n            for (var i = 0; i < symbols.length; i++) {\n              var symbol = symbols[i];\n              var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n              if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n                continue;\n              }\n              child[symbol] = _clone(parent[symbol], depth - 1);\n              if (!descriptor.enumerable) {\n                Object.defineProperty(child, symbol, {\n                  enumerable: false\n                });\n              }\n            }\n          }\n          if (includeNonEnumerable) {\n            var allPropertyNames = Object.getOwnPropertyNames(parent);\n            for (var i = 0; i < allPropertyNames.length; i++) {\n              var propertyName = allPropertyNames[i];\n              var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n              if (descriptor && descriptor.enumerable) {\n                continue;\n              }\n              child[propertyName] = _clone(parent[propertyName], depth - 1);\n              Object.defineProperty(child, propertyName, {\n                enumerable: false\n              });\n            }\n          }\n          return child;\n        }\n        return _clone(parent, depth);\n      }\n      clone.clonePrototype = function clonePrototype(parent) {\n        if (parent === null) return null;\n        var c = function () {};\n        c.prototype = parent;\n        return new c();\n      };\n      function __objToStr(o) {\n        return Object.prototype.toString.call(o);\n      }\n      clone.__objToStr = __objToStr;\n      function __isDate(o) {\n        return typeof o === 'object' && __objToStr(o) === '[object Date]';\n      }\n      clone.__isDate = __isDate;\n      function __isArray(o) {\n        return typeof o === 'object' && __objToStr(o) === '[object Array]';\n      }\n      clone.__isArray = __isArray;\n      function __isRegExp(o) {\n        return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n      }\n      clone.__isRegExp = __isRegExp;\n      function __getRegExpFlags(re) {\n        var flags = '';\n        if (re.global) flags += 'g';\n        if (re.ignoreCase) flags += 'i';\n        if (re.multiline) flags += 'm';\n        return flags;\n      }\n      clone.__getRegExpFlags = __getRegExpFlags;\n      return clone;\n    }();\n    if (typeof module === 'object' && module.exports) {\n      module.exports = clone;\n    }\n    var CSSLint = function () {\n      \"use strict\";\n\n      var rules = [],\n        formatters = [],\n        embeddedRuleset = /\\/\\*\\s*csslint([^\\*]*)\\*\\//,\n        api = new parserlib.util.EventTarget();\n      api.version = \"1.0.5\";\n      api.addRule = function (rule) {\n        rules.push(rule);\n        rules[rule.id] = rule;\n      };\n      api.clearRules = function () {\n        rules = [];\n      };\n      api.getRules = function () {\n        return [].concat(rules).sort(function (a, b) {\n          return a.id > b.id ? 1 : 0;\n        });\n      };\n      api.getRuleset = function () {\n        var ruleset = {},\n          i = 0,\n          len = rules.length;\n        while (i < len) {\n          ruleset[rules[i++].id] = 1; // by default, everything is a warning\n        }\n        return ruleset;\n      };\n      function applyEmbeddedRuleset(text, ruleset) {\n        var valueMap,\n          embedded = text && text.match(embeddedRuleset),\n          rules = embedded && embedded[1];\n        if (rules) {\n          valueMap = {\n            \"true\": 2,\n            // true is error\n            \"\": 1,\n            // blank is warning\n            \"false\": 0,\n            // false is ignore\n\n            \"2\": 2,\n            // explicit error\n            \"1\": 1,\n            // explicit warning\n            \"0\": 0 // explicit ignore\n          };\n          rules.toLowerCase().split(\",\").forEach(function (rule) {\n            var pair = rule.split(\":\"),\n              property = pair[0] || \"\",\n              value = pair[1] || \"\";\n            ruleset[property.trim()] = valueMap[value.trim()];\n          });\n        }\n        return ruleset;\n      }\n      api.addFormatter = function (formatter) {\n        formatters[formatter.id] = formatter;\n      };\n      api.getFormatter = function (formatId) {\n        return formatters[formatId];\n      };\n      api.format = function (results, filename, formatId, options) {\n        var formatter = api.getFormatter(formatId),\n          result = null;\n        if (formatter) {\n          result = formatter.startFormat();\n          result += formatter.formatResults(results, filename, options || {});\n          result += formatter.endFormat();\n        }\n        return result;\n      };\n      api.hasFormat = function (formatId) {\n        return formatters.hasOwnProperty(formatId);\n      };\n      api.verify = function (text, ruleset) {\n        var i = 0,\n          reporter,\n          lines,\n          allow = {},\n          ignore = [],\n          report,\n          parser = new parserlib.css.Parser({\n            starHack: true,\n            ieFilters: true,\n            underscoreHack: true,\n            strict: false\n          });\n        lines = text.replace(/\\n\\r?/g, \"$split$\").split(\"$split$\");\n        CSSLint.Util.forEach(lines, function (line, lineno) {\n          var allowLine = line && line.match(/\\/\\*[ \\t]*csslint[ \\t]+allow:[ \\t]*([^\\*]*)\\*\\//i),\n            allowRules = allowLine && allowLine[1],\n            allowRuleset = {};\n          if (allowRules) {\n            allowRules.toLowerCase().split(\",\").forEach(function (allowRule) {\n              allowRuleset[allowRule.trim()] = true;\n            });\n            if (Object.keys(allowRuleset).length > 0) {\n              allow[lineno + 1] = allowRuleset;\n            }\n          }\n        });\n        var ignoreStart = null,\n          ignoreEnd = null;\n        CSSLint.Util.forEach(lines, function (line, lineno) {\n          if (ignoreStart === null && line.match(/\\/\\*[ \\t]*csslint[ \\t]+ignore:start[ \\t]*\\*\\//i)) {\n            ignoreStart = lineno;\n          }\n          if (line.match(/\\/\\*[ \\t]*csslint[ \\t]+ignore:end[ \\t]*\\*\\//i)) {\n            ignoreEnd = lineno;\n          }\n          if (ignoreStart !== null && ignoreEnd !== null) {\n            ignore.push([ignoreStart, ignoreEnd]);\n            ignoreStart = ignoreEnd = null;\n          }\n        });\n        if (ignoreStart !== null) {\n          ignore.push([ignoreStart, lines.length]);\n        }\n        if (!ruleset) {\n          ruleset = api.getRuleset();\n        }\n        if (embeddedRuleset.test(text)) {\n          ruleset = clone(ruleset);\n          ruleset = applyEmbeddedRuleset(text, ruleset);\n        }\n        reporter = new Reporter(lines, ruleset, allow, ignore);\n        ruleset.errors = 2; // always report parsing errors as errors\n        for (i in ruleset) {\n          if (ruleset.hasOwnProperty(i) && ruleset[i]) {\n            if (rules[i]) {\n              rules[i].init(parser, reporter);\n            }\n          }\n        }\n        try {\n          parser.parse(text);\n        } catch (ex) {\n          reporter.error(\"Fatal error, cannot continue: \" + ex.message, ex.line, ex.col, {});\n        }\n        report = {\n          messages: reporter.messages,\n          stats: reporter.stats,\n          ruleset: reporter.ruleset,\n          allow: reporter.allow,\n          ignore: reporter.ignore\n        };\n        report.messages.sort(function (a, b) {\n          if (a.rollup && !b.rollup) {\n            return 1;\n          } else if (!a.rollup && b.rollup) {\n            return -1;\n          } else {\n            return a.line - b.line;\n          }\n        });\n        return report;\n      };\n      return api;\n    }();\n    function Reporter(lines, ruleset, allow, ignore) {\n      \"use strict\";\n\n      this.messages = [];\n      this.stats = [];\n      this.lines = lines;\n      this.ruleset = ruleset;\n      this.allow = allow;\n      if (!this.allow) {\n        this.allow = {};\n      }\n      this.ignore = ignore;\n      if (!this.ignore) {\n        this.ignore = [];\n      }\n    }\n    Reporter.prototype = {\n      constructor: Reporter,\n      error: function (message, line, col, rule) {\n        \"use strict\";\n\n        this.messages.push({\n          type: \"error\",\n          line: line,\n          col: col,\n          message: message,\n          evidence: this.lines[line - 1],\n          rule: rule || {}\n        });\n      },\n      warn: function (message, line, col, rule) {\n        \"use strict\";\n\n        this.report(message, line, col, rule);\n      },\n      report: function (message, line, col, rule) {\n        \"use strict\";\n\n        if (this.allow.hasOwnProperty(line) && this.allow[line].hasOwnProperty(rule.id)) {\n          return;\n        }\n        if (this.isIgnored(line)) {\n          return;\n        }\n        this.messages.push({\n          type: this.ruleset[rule.id] === 2 ? \"error\" : \"warning\",\n          line: line,\n          col: col,\n          message: message,\n          evidence: this.lines[line - 1],\n          rule: rule\n        });\n      },\n      info: function (message, line, col, rule) {\n        \"use strict\";\n\n        this.messages.push({\n          type: \"info\",\n          line: line,\n          col: col,\n          message: message,\n          evidence: this.lines[line - 1],\n          rule: rule\n        });\n      },\n      rollupError: function (message, rule) {\n        \"use strict\";\n\n        this.messages.push({\n          type: \"error\",\n          rollup: true,\n          message: message,\n          rule: rule\n        });\n      },\n      rollupWarn: function (message, rule) {\n        \"use strict\";\n\n        this.messages.push({\n          type: \"warning\",\n          rollup: true,\n          message: message,\n          rule: rule\n        });\n      },\n      stat: function (name, value) {\n        \"use strict\";\n\n        this.stats[name] = value;\n      },\n      isIgnored: function (line) {\n        \"use strict\";\n\n        var ignore = false;\n        CSSLint.Util.forEach(this.ignore, function (range) {\n          if (range[0] <= line && line <= range[1]) {\n            ignore = true;\n          }\n        });\n        return ignore;\n      }\n    };\n    CSSLint._Reporter = Reporter;\n    CSSLint.Util = {\n      mix: function (receiver, supplier) {\n        \"use strict\";\n\n        var prop;\n        for (prop in supplier) {\n          if (supplier.hasOwnProperty(prop)) {\n            receiver[prop] = supplier[prop];\n          }\n        }\n        return prop;\n      },\n      indexOf: function (values, value) {\n        \"use strict\";\n\n        if (values.indexOf) {\n          return values.indexOf(value);\n        } else {\n          for (var i = 0, len = values.length; i < len; i++) {\n            if (values[i] === value) {\n              return i;\n            }\n          }\n          return -1;\n        }\n      },\n      forEach: function (values, func) {\n        \"use strict\";\n\n        if (values.forEach) {\n          return values.forEach(func);\n        } else {\n          for (var i = 0, len = values.length; i < len; i++) {\n            func(values[i], i, values);\n          }\n        }\n      }\n    };\n    CSSLint.addRule({\n      id: \"box-model\",\n      name: \"Beware of broken box size\",\n      desc: \"Don't use width or height when using padding or border.\",\n      url: \"https://github.com/CSSLint/csslint/wiki/Beware-of-box-model-size\",\n      browsers: \"All\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this,\n          widthProperties = {\n            border: 1,\n            \"border-left\": 1,\n            \"border-right\": 1,\n            padding: 1,\n            \"padding-left\": 1,\n            \"padding-right\": 1\n          },\n          heightProperties = {\n            border: 1,\n            \"border-bottom\": 1,\n            \"border-top\": 1,\n            padding: 1,\n            \"padding-bottom\": 1,\n            \"padding-top\": 1\n          },\n          properties,\n          boxSizing = false;\n        function startRule() {\n          properties = {};\n          boxSizing = false;\n        }\n        function endRule() {\n          var prop, value;\n          if (!boxSizing) {\n            if (properties.height) {\n              for (prop in heightProperties) {\n                if (heightProperties.hasOwnProperty(prop) && properties[prop]) {\n                  value = properties[prop].value;\n                  if (!(prop === \"padding\" && value.parts.length === 2 && value.parts[0].value === 0)) {\n                    reporter.report(\"Using height with \" + prop + \" can sometimes make elements larger than you expect.\", properties[prop].line, properties[prop].col, rule);\n                  }\n                }\n              }\n            }\n            if (properties.width) {\n              for (prop in widthProperties) {\n                if (widthProperties.hasOwnProperty(prop) && properties[prop]) {\n                  value = properties[prop].value;\n                  if (!(prop === \"padding\" && value.parts.length === 2 && value.parts[1].value === 0)) {\n                    reporter.report(\"Using width with \" + prop + \" can sometimes make elements larger than you expect.\", properties[prop].line, properties[prop].col, rule);\n                  }\n                }\n              }\n            }\n          }\n        }\n        parser.addListener(\"startrule\", startRule);\n        parser.addListener(\"startfontface\", startRule);\n        parser.addListener(\"startpage\", startRule);\n        parser.addListener(\"startpagemargin\", startRule);\n        parser.addListener(\"startkeyframerule\", startRule);\n        parser.addListener(\"startviewport\", startRule);\n        parser.addListener(\"property\", function (event) {\n          var name = event.property.text.toLowerCase();\n          if (heightProperties[name] || widthProperties[name]) {\n            if (!/^0\\S*$/.test(event.value) && !(name === \"border\" && event.value.toString() === \"none\")) {\n              properties[name] = {\n                line: event.property.line,\n                col: event.property.col,\n                value: event.value\n              };\n            }\n          } else {\n            if (/^(width|height)/i.test(name) && /^(length|percentage)/.test(event.value.parts[0].type)) {\n              properties[name] = 1;\n            } else if (name === \"box-sizing\") {\n              boxSizing = true;\n            }\n          }\n        });\n        parser.addListener(\"endrule\", endRule);\n        parser.addListener(\"endfontface\", endRule);\n        parser.addListener(\"endpage\", endRule);\n        parser.addListener(\"endpagemargin\", endRule);\n        parser.addListener(\"endkeyframerule\", endRule);\n        parser.addListener(\"endviewport\", endRule);\n      }\n    });\n    CSSLint.addRule({\n      id: \"bulletproof-font-face\",\n      name: \"Use the bulletproof @font-face syntax\",\n      desc: \"Use the bulletproof @font-face syntax to avoid 404's in old IE (http://www.fontspring.com/blog/the-new-bulletproof-font-face-syntax).\",\n      url: \"https://github.com/CSSLint/csslint/wiki/Bulletproof-font-face\",\n      browsers: \"All\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this,\n          fontFaceRule = false,\n          firstSrc = true,\n          ruleFailed = false,\n          line,\n          col;\n        parser.addListener(\"startfontface\", function () {\n          fontFaceRule = true;\n        });\n        parser.addListener(\"property\", function (event) {\n          if (!fontFaceRule) {\n            return;\n          }\n          var propertyName = event.property.toString().toLowerCase(),\n            value = event.value.toString();\n          line = event.line;\n          col = event.col;\n          if (propertyName === \"src\") {\n            var regex = /^\\s?url\\(['\"].+\\.eot\\?.*['\"]\\)\\s*format\\(['\"]embedded-opentype['\"]\\).*$/i;\n            if (!value.match(regex) && firstSrc) {\n              ruleFailed = true;\n              firstSrc = false;\n            } else if (value.match(regex) && !firstSrc) {\n              ruleFailed = false;\n            }\n          }\n        });\n        parser.addListener(\"endfontface\", function () {\n          fontFaceRule = false;\n          if (ruleFailed) {\n            reporter.report(\"@font-face declaration doesn't follow the fontspring bulletproof syntax.\", line, col, rule);\n          }\n        });\n      }\n    });\n    CSSLint.addRule({\n      id: \"compatible-vendor-prefixes\",\n      name: \"Require compatible vendor prefixes\",\n      desc: \"Include all compatible vendor prefixes to reach a wider range of users.\",\n      url: \"https://github.com/CSSLint/csslint/wiki/Require-compatible-vendor-prefixes\",\n      browsers: \"All\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this,\n          compatiblePrefixes,\n          properties,\n          prop,\n          variations,\n          prefixed,\n          i,\n          len,\n          inKeyFrame = false,\n          arrayPush = Array.prototype.push,\n          applyTo = [];\n        compatiblePrefixes = {\n          \"animation\": \"webkit\",\n          \"animation-delay\": \"webkit\",\n          \"animation-direction\": \"webkit\",\n          \"animation-duration\": \"webkit\",\n          \"animation-fill-mode\": \"webkit\",\n          \"animation-iteration-count\": \"webkit\",\n          \"animation-name\": \"webkit\",\n          \"animation-play-state\": \"webkit\",\n          \"animation-timing-function\": \"webkit\",\n          \"appearance\": \"webkit moz\",\n          \"border-end\": \"webkit moz\",\n          \"border-end-color\": \"webkit moz\",\n          \"border-end-style\": \"webkit moz\",\n          \"border-end-width\": \"webkit moz\",\n          \"border-image\": \"webkit moz o\",\n          \"border-radius\": \"webkit\",\n          \"border-start\": \"webkit moz\",\n          \"border-start-color\": \"webkit moz\",\n          \"border-start-style\": \"webkit moz\",\n          \"border-start-width\": \"webkit moz\",\n          \"box-align\": \"webkit moz\",\n          \"box-direction\": \"webkit moz\",\n          \"box-flex\": \"webkit moz\",\n          \"box-lines\": \"webkit\",\n          \"box-ordinal-group\": \"webkit moz\",\n          \"box-orient\": \"webkit moz\",\n          \"box-pack\": \"webkit moz\",\n          \"box-sizing\": \"\",\n          \"box-shadow\": \"\",\n          \"column-count\": \"webkit moz ms\",\n          \"column-gap\": \"webkit moz ms\",\n          \"column-rule\": \"webkit moz ms\",\n          \"column-rule-color\": \"webkit moz ms\",\n          \"column-rule-style\": \"webkit moz ms\",\n          \"column-rule-width\": \"webkit moz ms\",\n          \"column-width\": \"webkit moz ms\",\n          \"flex\": \"webkit ms\",\n          \"flex-basis\": \"webkit\",\n          \"flex-direction\": \"webkit ms\",\n          \"flex-flow\": \"webkit\",\n          \"flex-grow\": \"webkit\",\n          \"flex-shrink\": \"webkit\",\n          \"hyphens\": \"epub moz\",\n          \"line-break\": \"webkit ms\",\n          \"margin-end\": \"webkit moz\",\n          \"margin-start\": \"webkit moz\",\n          \"marquee-speed\": \"webkit wap\",\n          \"marquee-style\": \"webkit wap\",\n          \"padding-end\": \"webkit moz\",\n          \"padding-start\": \"webkit moz\",\n          \"tab-size\": \"moz o\",\n          \"text-size-adjust\": \"webkit ms\",\n          \"transform\": \"webkit ms\",\n          \"transform-origin\": \"webkit ms\",\n          \"transition\": \"\",\n          \"transition-delay\": \"\",\n          \"transition-duration\": \"\",\n          \"transition-property\": \"\",\n          \"transition-timing-function\": \"\",\n          \"user-modify\": \"webkit moz\",\n          \"user-select\": \"webkit moz ms\",\n          \"word-break\": \"epub ms\",\n          \"writing-mode\": \"epub ms\"\n        };\n        for (prop in compatiblePrefixes) {\n          if (compatiblePrefixes.hasOwnProperty(prop)) {\n            variations = [];\n            prefixed = compatiblePrefixes[prop].split(\" \");\n            for (i = 0, len = prefixed.length; i < len; i++) {\n              variations.push(\"-\" + prefixed[i] + \"-\" + prop);\n            }\n            compatiblePrefixes[prop] = variations;\n            arrayPush.apply(applyTo, variations);\n          }\n        }\n        parser.addListener(\"startrule\", function () {\n          properties = [];\n        });\n        parser.addListener(\"startkeyframes\", function (event) {\n          inKeyFrame = event.prefix || true;\n        });\n        parser.addListener(\"endkeyframes\", function () {\n          inKeyFrame = false;\n        });\n        parser.addListener(\"property\", function (event) {\n          var name = event.property;\n          if (CSSLint.Util.indexOf(applyTo, name.text) > -1) {\n            if (!inKeyFrame || typeof inKeyFrame !== \"string\" || name.text.indexOf(\"-\" + inKeyFrame + \"-\") !== 0) {\n              properties.push(name);\n            }\n          }\n        });\n        parser.addListener(\"endrule\", function () {\n          if (!properties.length) {\n            return;\n          }\n          var propertyGroups = {},\n            i,\n            len,\n            name,\n            prop,\n            variations,\n            value,\n            full,\n            actual,\n            item,\n            propertiesSpecified;\n          for (i = 0, len = properties.length; i < len; i++) {\n            name = properties[i];\n            for (prop in compatiblePrefixes) {\n              if (compatiblePrefixes.hasOwnProperty(prop)) {\n                variations = compatiblePrefixes[prop];\n                if (CSSLint.Util.indexOf(variations, name.text) > -1) {\n                  if (!propertyGroups[prop]) {\n                    propertyGroups[prop] = {\n                      full: variations.slice(0),\n                      actual: [],\n                      actualNodes: []\n                    };\n                  }\n                  if (CSSLint.Util.indexOf(propertyGroups[prop].actual, name.text) === -1) {\n                    propertyGroups[prop].actual.push(name.text);\n                    propertyGroups[prop].actualNodes.push(name);\n                  }\n                }\n              }\n            }\n          }\n          for (prop in propertyGroups) {\n            if (propertyGroups.hasOwnProperty(prop)) {\n              value = propertyGroups[prop];\n              full = value.full;\n              actual = value.actual;\n              if (full.length > actual.length) {\n                for (i = 0, len = full.length; i < len; i++) {\n                  item = full[i];\n                  if (CSSLint.Util.indexOf(actual, item) === -1) {\n                    propertiesSpecified = actual.length === 1 ? actual[0] : actual.length === 2 ? actual.join(\" and \") : actual.join(\", \");\n                    reporter.report(\"The property \" + item + \" is compatible with \" + propertiesSpecified + \" and should be included as well.\", value.actualNodes[0].line, value.actualNodes[0].col, rule);\n                  }\n                }\n              }\n            }\n          }\n        });\n      }\n    });\n    CSSLint.addRule({\n      id: \"display-property-grouping\",\n      name: \"Require properties appropriate for display\",\n      desc: \"Certain properties shouldn't be used with certain display property values.\",\n      url: \"https://github.com/CSSLint/csslint/wiki/Require-properties-appropriate-for-display\",\n      browsers: \"All\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this;\n        var propertiesToCheck = {\n            display: 1,\n            \"float\": \"none\",\n            height: 1,\n            width: 1,\n            margin: 1,\n            \"margin-left\": 1,\n            \"margin-right\": 1,\n            \"margin-bottom\": 1,\n            \"margin-top\": 1,\n            padding: 1,\n            \"padding-left\": 1,\n            \"padding-right\": 1,\n            \"padding-bottom\": 1,\n            \"padding-top\": 1,\n            \"vertical-align\": 1\n          },\n          properties;\n        function reportProperty(name, display, msg) {\n          if (properties[name]) {\n            if (typeof propertiesToCheck[name] !== \"string\" || properties[name].value.toLowerCase() !== propertiesToCheck[name]) {\n              reporter.report(msg || name + \" can't be used with display: \" + display + \".\", properties[name].line, properties[name].col, rule);\n            }\n          }\n        }\n        function startRule() {\n          properties = {};\n        }\n        function endRule() {\n          var display = properties.display ? properties.display.value : null;\n          if (display) {\n            switch (display) {\n              case \"inline\":\n                reportProperty(\"height\", display);\n                reportProperty(\"width\", display);\n                reportProperty(\"margin\", display);\n                reportProperty(\"margin-top\", display);\n                reportProperty(\"margin-bottom\", display);\n                reportProperty(\"float\", display, \"display:inline has no effect on floated elements (but may be used to fix the IE6 double-margin bug).\");\n                break;\n              case \"block\":\n                reportProperty(\"vertical-align\", display);\n                break;\n              case \"inline-block\":\n                reportProperty(\"float\", display);\n                break;\n              default:\n                if (display.indexOf(\"table-\") === 0) {\n                  reportProperty(\"margin\", display);\n                  reportProperty(\"margin-left\", display);\n                  reportProperty(\"margin-right\", display);\n                  reportProperty(\"margin-top\", display);\n                  reportProperty(\"margin-bottom\", display);\n                  reportProperty(\"float\", display);\n                }\n            }\n          }\n        }\n        parser.addListener(\"startrule\", startRule);\n        parser.addListener(\"startfontface\", startRule);\n        parser.addListener(\"startkeyframerule\", startRule);\n        parser.addListener(\"startpagemargin\", startRule);\n        parser.addListener(\"startpage\", startRule);\n        parser.addListener(\"startviewport\", startRule);\n        parser.addListener(\"property\", function (event) {\n          var name = event.property.text.toLowerCase();\n          if (propertiesToCheck[name]) {\n            properties[name] = {\n              value: event.value.text,\n              line: event.property.line,\n              col: event.property.col\n            };\n          }\n        });\n        parser.addListener(\"endrule\", endRule);\n        parser.addListener(\"endfontface\", endRule);\n        parser.addListener(\"endkeyframerule\", endRule);\n        parser.addListener(\"endpagemargin\", endRule);\n        parser.addListener(\"endpage\", endRule);\n        parser.addListener(\"endviewport\", endRule);\n      }\n    });\n    CSSLint.addRule({\n      id: \"duplicate-background-images\",\n      name: \"Disallow duplicate background images\",\n      desc: \"Every background-image should be unique. Use a common class for e.g. sprites.\",\n      url: \"https://github.com/CSSLint/csslint/wiki/Disallow-duplicate-background-images\",\n      browsers: \"All\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this,\n          stack = {};\n        parser.addListener(\"property\", function (event) {\n          var name = event.property.text,\n            value = event.value,\n            i,\n            len;\n          if (name.match(/background/i)) {\n            for (i = 0, len = value.parts.length; i < len; i++) {\n              if (value.parts[i].type === \"uri\") {\n                if (typeof stack[value.parts[i].uri] === \"undefined\") {\n                  stack[value.parts[i].uri] = event;\n                } else {\n                  reporter.report(\"Background image '\" + value.parts[i].uri + \"' was used multiple times, first declared at line \" + stack[value.parts[i].uri].line + \", col \" + stack[value.parts[i].uri].col + \".\", event.line, event.col, rule);\n                }\n              }\n            }\n          }\n        });\n      }\n    });\n    CSSLint.addRule({\n      id: \"duplicate-properties\",\n      name: \"Disallow duplicate properties\",\n      desc: \"Duplicate properties must appear one after the other.\",\n      url: \"https://github.com/CSSLint/csslint/wiki/Disallow-duplicate-properties\",\n      browsers: \"All\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this,\n          properties,\n          lastProperty;\n        function startRule() {\n          properties = {};\n        }\n        parser.addListener(\"startrule\", startRule);\n        parser.addListener(\"startfontface\", startRule);\n        parser.addListener(\"startpage\", startRule);\n        parser.addListener(\"startpagemargin\", startRule);\n        parser.addListener(\"startkeyframerule\", startRule);\n        parser.addListener(\"startviewport\", startRule);\n        parser.addListener(\"property\", function (event) {\n          var property = event.property,\n            name = property.text.toLowerCase();\n          if (properties[name] && (lastProperty !== name || properties[name] === event.value.text)) {\n            reporter.report(\"Duplicate property '\" + event.property + \"' found.\", event.line, event.col, rule);\n          }\n          properties[name] = event.value.text;\n          lastProperty = name;\n        });\n      }\n    });\n    CSSLint.addRule({\n      id: \"empty-rules\",\n      name: \"Disallow empty rules\",\n      desc: \"Rules without any properties specified should be removed.\",\n      url: \"https://github.com/CSSLint/csslint/wiki/Disallow-empty-rules\",\n      browsers: \"All\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this,\n          count = 0;\n        parser.addListener(\"startrule\", function () {\n          count = 0;\n        });\n        parser.addListener(\"property\", function () {\n          count++;\n        });\n        parser.addListener(\"endrule\", function (event) {\n          var selectors = event.selectors;\n          if (count === 0) {\n            reporter.report(\"Rule is empty.\", selectors[0].line, selectors[0].col, rule);\n          }\n        });\n      }\n    });\n    CSSLint.addRule({\n      id: \"errors\",\n      name: \"Parsing Errors\",\n      desc: \"This rule looks for recoverable syntax errors.\",\n      browsers: \"All\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this;\n        parser.addListener(\"error\", function (event) {\n          reporter.error(event.message, event.line, event.col, rule);\n        });\n      }\n    });\n    CSSLint.addRule({\n      id: \"floats\",\n      name: \"Disallow too many floats\",\n      desc: \"This rule tests if the float property is used too many times\",\n      url: \"https://github.com/CSSLint/csslint/wiki/Disallow-too-many-floats\",\n      browsers: \"All\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this;\n        var count = 0;\n        parser.addListener(\"property\", function (event) {\n          if (!reporter.isIgnored(event.property.line)) {\n            if (event.property.text.toLowerCase() === \"float\" && event.value.text.toLowerCase() !== \"none\") {\n              count++;\n            }\n          }\n        });\n        parser.addListener(\"endstylesheet\", function () {\n          reporter.stat(\"floats\", count);\n          if (count >= 10) {\n            reporter.rollupWarn(\"Too many floats (\" + count + \"), you're probably using them for layout. Consider using a grid system instead.\", rule);\n          }\n        });\n      }\n    });\n    CSSLint.addRule({\n      id: \"font-faces\",\n      name: \"Don't use too many web fonts\",\n      desc: \"Too many different web fonts in the same stylesheet.\",\n      url: \"https://github.com/CSSLint/csslint/wiki/Don%27t-use-too-many-web-fonts\",\n      browsers: \"All\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this,\n          count = 0;\n        parser.addListener(\"startfontface\", function (event) {\n          if (!reporter.isIgnored(event.line)) {\n            count++;\n          }\n        });\n        parser.addListener(\"endstylesheet\", function () {\n          if (count > 5) {\n            reporter.rollupWarn(\"Too many @font-face declarations (\" + count + \").\", rule);\n          }\n        });\n      }\n    });\n    CSSLint.addRule({\n      id: \"font-sizes\",\n      name: \"Disallow too many font sizes\",\n      desc: \"Checks the number of font-size declarations.\",\n      url: \"https://github.com/CSSLint/csslint/wiki/Don%27t-use-too-many-font-size-declarations\",\n      browsers: \"All\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this,\n          count = 0;\n        parser.addListener(\"property\", function (event) {\n          if (!reporter.isIgnored(event.property.line)) {\n            if (event.property.toString() === \"font-size\") {\n              count++;\n            }\n          }\n        });\n        parser.addListener(\"endstylesheet\", function () {\n          reporter.stat(\"font-sizes\", count);\n          if (count >= 10) {\n            reporter.rollupWarn(\"Too many font-size declarations (\" + count + \"), abstraction needed.\", rule);\n          }\n        });\n      }\n    });\n    CSSLint.addRule({\n      id: \"gradients\",\n      name: \"Require all gradient definitions\",\n      desc: \"When using a vendor-prefixed gradient, make sure to use them all.\",\n      url: \"https://github.com/CSSLint/csslint/wiki/Require-all-gradient-definitions\",\n      browsers: \"All\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this,\n          gradients;\n        parser.addListener(\"startrule\", function () {\n          gradients = {\n            moz: 0,\n            webkit: 0,\n            oldWebkit: 0,\n            o: 0\n          };\n        });\n        parser.addListener(\"property\", function (event) {\n          if (/\\-(moz|o|webkit)(?:\\-(?:linear|radial))\\-gradient/i.test(event.value)) {\n            gradients[RegExp.$1] = 1;\n          } else if (/\\-webkit\\-gradient/i.test(event.value)) {\n            gradients.oldWebkit = 1;\n          }\n        });\n        parser.addListener(\"endrule\", function (event) {\n          var missing = [];\n          if (!gradients.moz) {\n            missing.push(\"Firefox 3.6+\");\n          }\n          if (!gradients.webkit) {\n            missing.push(\"Webkit (Safari 5+, Chrome)\");\n          }\n          if (!gradients.oldWebkit) {\n            missing.push(\"Old Webkit (Safari 4+, Chrome)\");\n          }\n          if (!gradients.o) {\n            missing.push(\"Opera 11.1+\");\n          }\n          if (missing.length && missing.length < 4) {\n            reporter.report(\"Missing vendor-prefixed CSS gradients for \" + missing.join(\", \") + \".\", event.selectors[0].line, event.selectors[0].col, rule);\n          }\n        });\n      }\n    });\n    CSSLint.addRule({\n      id: \"ids\",\n      name: \"Disallow IDs in selectors\",\n      desc: \"Selectors should not contain IDs.\",\n      url: \"https://github.com/CSSLint/csslint/wiki/Disallow-IDs-in-selectors\",\n      browsers: \"All\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this;\n        parser.addListener(\"startrule\", function (event) {\n          var selectors = event.selectors,\n            selector,\n            part,\n            modifier,\n            idCount,\n            i,\n            j,\n            k;\n          for (i = 0; i < selectors.length; i++) {\n            selector = selectors[i];\n            idCount = 0;\n            for (j = 0; j < selector.parts.length; j++) {\n              part = selector.parts[j];\n              if (part.type === parser.SELECTOR_PART_TYPE) {\n                for (k = 0; k < part.modifiers.length; k++) {\n                  modifier = part.modifiers[k];\n                  if (modifier.type === \"id\") {\n                    idCount++;\n                  }\n                }\n              }\n            }\n            if (idCount === 1) {\n              reporter.report(\"Don't use IDs in selectors.\", selector.line, selector.col, rule);\n            } else if (idCount > 1) {\n              reporter.report(idCount + \" IDs in the selector, really?\", selector.line, selector.col, rule);\n            }\n          }\n        });\n      }\n    });\n    CSSLint.addRule({\n      id: \"import-ie-limit\",\n      name: \"@import limit on IE6-IE9\",\n      desc: \"IE6-9 supports up to 31 @import per stylesheet\",\n      browsers: \"IE6, IE7, IE8, IE9\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this,\n          MAX_IMPORT_COUNT = 31,\n          count = 0;\n        function startPage() {\n          count = 0;\n        }\n        parser.addListener(\"startpage\", startPage);\n        parser.addListener(\"import\", function () {\n          count++;\n        });\n        parser.addListener(\"endstylesheet\", function () {\n          if (count > MAX_IMPORT_COUNT) {\n            reporter.rollupError(\"Too many @import rules (\" + count + \"). IE6-9 supports up to 31 import per stylesheet.\", rule);\n          }\n        });\n      }\n    });\n    CSSLint.addRule({\n      id: \"import\",\n      name: \"Disallow @import\",\n      desc: \"Don't use @import, use <link> instead.\",\n      url: \"https://github.com/CSSLint/csslint/wiki/Disallow-%40import\",\n      browsers: \"All\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this;\n        parser.addListener(\"import\", function (event) {\n          reporter.report(\"@import prevents parallel downloads, use <link> instead.\", event.line, event.col, rule);\n        });\n      }\n    });\n    CSSLint.addRule({\n      id: \"important\",\n      name: \"Disallow !important\",\n      desc: \"Be careful when using !important declaration\",\n      url: \"https://github.com/CSSLint/csslint/wiki/Disallow-%21important\",\n      browsers: \"All\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this,\n          count = 0;\n        parser.addListener(\"property\", function (event) {\n          if (!reporter.isIgnored(event.line)) {\n            if (event.important === true) {\n              count++;\n              reporter.report(\"Use of !important\", event.line, event.col, rule);\n            }\n          }\n        });\n        parser.addListener(\"endstylesheet\", function () {\n          reporter.stat(\"important\", count);\n          if (count >= 10) {\n            reporter.rollupWarn(\"Too many !important declarations (\" + count + \"), try to use less than 10 to avoid specificity issues.\", rule);\n          }\n        });\n      }\n    });\n    CSSLint.addRule({\n      id: \"known-properties\",\n      name: \"Require use of known properties\",\n      desc: \"Properties should be known (listed in CSS3 specification) or be a vendor-prefixed property.\",\n      url: \"https://github.com/CSSLint/csslint/wiki/Require-use-of-known-properties\",\n      browsers: \"All\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this;\n        parser.addListener(\"property\", function (event) {\n          if (event.invalid) {\n            reporter.report(event.invalid.message, event.line, event.col, rule);\n          }\n        });\n      }\n    });\n    CSSLint.addRule({\n      id: \"order-alphabetical\",\n      name: \"Alphabetical order\",\n      desc: \"Assure properties are in alphabetical order\",\n      browsers: \"All\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this,\n          properties;\n        var startRule = function () {\n          properties = [];\n        };\n        var endRule = function (event) {\n          var currentProperties = properties.join(\",\"),\n            expectedProperties = properties.sort().join(\",\");\n          if (currentProperties !== expectedProperties) {\n            reporter.report(\"Rule doesn't have all its properties in alphabetical order.\", event.line, event.col, rule);\n          }\n        };\n        parser.addListener(\"startrule\", startRule);\n        parser.addListener(\"startfontface\", startRule);\n        parser.addListener(\"startpage\", startRule);\n        parser.addListener(\"startpagemargin\", startRule);\n        parser.addListener(\"startkeyframerule\", startRule);\n        parser.addListener(\"startviewport\", startRule);\n        parser.addListener(\"property\", function (event) {\n          var name = event.property.text,\n            lowerCasePrefixLessName = name.toLowerCase().replace(/^-.*?-/, \"\");\n          properties.push(lowerCasePrefixLessName);\n        });\n        parser.addListener(\"endrule\", endRule);\n        parser.addListener(\"endfontface\", endRule);\n        parser.addListener(\"endpage\", endRule);\n        parser.addListener(\"endpagemargin\", endRule);\n        parser.addListener(\"endkeyframerule\", endRule);\n        parser.addListener(\"endviewport\", endRule);\n      }\n    });\n    CSSLint.addRule({\n      id: \"outline-none\",\n      name: \"Disallow outline: none\",\n      desc: \"Use of outline: none or outline: 0 should be limited to :focus rules.\",\n      url: \"https://github.com/CSSLint/csslint/wiki/Disallow-outline%3Anone\",\n      browsers: \"All\",\n      tags: [\"Accessibility\"],\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this,\n          lastRule;\n        function startRule(event) {\n          if (event.selectors) {\n            lastRule = {\n              line: event.line,\n              col: event.col,\n              selectors: event.selectors,\n              propCount: 0,\n              outline: false\n            };\n          } else {\n            lastRule = null;\n          }\n        }\n        function endRule() {\n          if (lastRule) {\n            if (lastRule.outline) {\n              if (lastRule.selectors.toString().toLowerCase().indexOf(\":focus\") === -1) {\n                reporter.report(\"Outlines should only be modified using :focus.\", lastRule.line, lastRule.col, rule);\n              } else if (lastRule.propCount === 1) {\n                reporter.report(\"Outlines shouldn't be hidden unless other visual changes are made.\", lastRule.line, lastRule.col, rule);\n              }\n            }\n          }\n        }\n        parser.addListener(\"startrule\", startRule);\n        parser.addListener(\"startfontface\", startRule);\n        parser.addListener(\"startpage\", startRule);\n        parser.addListener(\"startpagemargin\", startRule);\n        parser.addListener(\"startkeyframerule\", startRule);\n        parser.addListener(\"startviewport\", startRule);\n        parser.addListener(\"property\", function (event) {\n          var name = event.property.text.toLowerCase(),\n            value = event.value;\n          if (lastRule) {\n            lastRule.propCount++;\n            if (name === \"outline\" && (value.toString() === \"none\" || value.toString() === \"0\")) {\n              lastRule.outline = true;\n            }\n          }\n        });\n        parser.addListener(\"endrule\", endRule);\n        parser.addListener(\"endfontface\", endRule);\n        parser.addListener(\"endpage\", endRule);\n        parser.addListener(\"endpagemargin\", endRule);\n        parser.addListener(\"endkeyframerule\", endRule);\n        parser.addListener(\"endviewport\", endRule);\n      }\n    });\n    CSSLint.addRule({\n      id: \"overqualified-elements\",\n      name: \"Disallow overqualified elements\",\n      desc: \"Don't use classes or IDs with elements (a.foo or a#foo).\",\n      url: \"https://github.com/CSSLint/csslint/wiki/Disallow-overqualified-elements\",\n      browsers: \"All\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this,\n          classes = {};\n        parser.addListener(\"startrule\", function (event) {\n          var selectors = event.selectors,\n            selector,\n            part,\n            modifier,\n            i,\n            j,\n            k;\n          for (i = 0; i < selectors.length; i++) {\n            selector = selectors[i];\n            for (j = 0; j < selector.parts.length; j++) {\n              part = selector.parts[j];\n              if (part.type === parser.SELECTOR_PART_TYPE) {\n                for (k = 0; k < part.modifiers.length; k++) {\n                  modifier = part.modifiers[k];\n                  if (part.elementName && modifier.type === \"id\") {\n                    reporter.report(\"Element (\" + part + \") is overqualified, just use \" + modifier + \" without element name.\", part.line, part.col, rule);\n                  } else if (modifier.type === \"class\") {\n                    if (!classes[modifier]) {\n                      classes[modifier] = [];\n                    }\n                    classes[modifier].push({\n                      modifier: modifier,\n                      part: part\n                    });\n                  }\n                }\n              }\n            }\n          }\n        });\n        parser.addListener(\"endstylesheet\", function () {\n          var prop;\n          for (prop in classes) {\n            if (classes.hasOwnProperty(prop)) {\n              if (classes[prop].length === 1 && classes[prop][0].part.elementName) {\n                reporter.report(\"Element (\" + classes[prop][0].part + \") is overqualified, just use \" + classes[prop][0].modifier + \" without element name.\", classes[prop][0].part.line, classes[prop][0].part.col, rule);\n              }\n            }\n          }\n        });\n      }\n    });\n    CSSLint.addRule({\n      id: \"regex-selectors\",\n      name: \"Disallow selectors that look like regexs\",\n      desc: \"Selectors that look like regular expressions are slow and should be avoided.\",\n      url: \"https://github.com/CSSLint/csslint/wiki/Disallow-selectors-that-look-like-regular-expressions\",\n      browsers: \"All\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this;\n        parser.addListener(\"startrule\", function (event) {\n          var selectors = event.selectors,\n            selector,\n            part,\n            modifier,\n            i,\n            j,\n            k;\n          for (i = 0; i < selectors.length; i++) {\n            selector = selectors[i];\n            for (j = 0; j < selector.parts.length; j++) {\n              part = selector.parts[j];\n              if (part.type === parser.SELECTOR_PART_TYPE) {\n                for (k = 0; k < part.modifiers.length; k++) {\n                  modifier = part.modifiers[k];\n                  if (modifier.type === \"attribute\") {\n                    if (/([~\\|\\^\\$\\*]=)/.test(modifier)) {\n                      reporter.report(\"Attribute selectors with \" + RegExp.$1 + \" are slow!\", modifier.line, modifier.col, rule);\n                    }\n                  }\n                }\n              }\n            }\n          }\n        });\n      }\n    });\n    CSSLint.addRule({\n      id: \"rules-count\",\n      name: \"Rules Count\",\n      desc: \"Track how many rules there are.\",\n      browsers: \"All\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var count = 0;\n        parser.addListener(\"startrule\", function () {\n          count++;\n        });\n        parser.addListener(\"endstylesheet\", function () {\n          reporter.stat(\"rule-count\", count);\n        });\n      }\n    });\n    CSSLint.addRule({\n      id: \"selector-max-approaching\",\n      name: \"Warn when approaching the 4095 selector limit for IE\",\n      desc: \"Will warn when selector count is >= 3800 selectors.\",\n      browsers: \"IE\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this,\n          count = 0;\n        parser.addListener(\"startrule\", function (event) {\n          count += event.selectors.length;\n        });\n        parser.addListener(\"endstylesheet\", function () {\n          if (count >= 3800) {\n            reporter.report(\"You have \" + count + \" selectors. Internet Explorer supports a maximum of 4095 selectors per stylesheet. Consider refactoring.\", 0, 0, rule);\n          }\n        });\n      }\n    });\n    CSSLint.addRule({\n      id: \"selector-max\",\n      name: \"Error when past the 4095 selector limit for IE\",\n      desc: \"Will error when selector count is > 4095.\",\n      browsers: \"IE\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this,\n          count = 0;\n        parser.addListener(\"startrule\", function (event) {\n          count += event.selectors.length;\n        });\n        parser.addListener(\"endstylesheet\", function () {\n          if (count > 4095) {\n            reporter.report(\"You have \" + count + \" selectors. Internet Explorer supports a maximum of 4095 selectors per stylesheet. Consider refactoring.\", 0, 0, rule);\n          }\n        });\n      }\n    });\n    CSSLint.addRule({\n      id: \"selector-newline\",\n      name: \"Disallow new-line characters in selectors\",\n      desc: \"New-line characters in selectors are usually a forgotten comma and not a descendant combinator.\",\n      browsers: \"All\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this;\n        function startRule(event) {\n          var i,\n            len,\n            selector,\n            p,\n            n,\n            pLen,\n            part,\n            part2,\n            type,\n            currentLine,\n            nextLine,\n            selectors = event.selectors;\n          for (i = 0, len = selectors.length; i < len; i++) {\n            selector = selectors[i];\n            for (p = 0, pLen = selector.parts.length; p < pLen; p++) {\n              for (n = p + 1; n < pLen; n++) {\n                part = selector.parts[p];\n                part2 = selector.parts[n];\n                type = part.type;\n                currentLine = part.line;\n                nextLine = part2.line;\n                if (type === \"descendant\" && nextLine > currentLine) {\n                  reporter.report(\"newline character found in selector (forgot a comma?)\", currentLine, selectors[i].parts[0].col, rule);\n                }\n              }\n            }\n          }\n        }\n        parser.addListener(\"startrule\", startRule);\n      }\n    });\n    CSSLint.addRule({\n      id: \"shorthand\",\n      name: \"Require shorthand properties\",\n      desc: \"Use shorthand properties where possible.\",\n      url: \"https://github.com/CSSLint/csslint/wiki/Require-shorthand-properties\",\n      browsers: \"All\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this,\n          prop,\n          i,\n          len,\n          propertiesToCheck = {},\n          properties,\n          mapping = {\n            \"margin\": [\"margin-top\", \"margin-bottom\", \"margin-left\", \"margin-right\"],\n            \"padding\": [\"padding-top\", \"padding-bottom\", \"padding-left\", \"padding-right\"]\n          };\n        for (prop in mapping) {\n          if (mapping.hasOwnProperty(prop)) {\n            for (i = 0, len = mapping[prop].length; i < len; i++) {\n              propertiesToCheck[mapping[prop][i]] = prop;\n            }\n          }\n        }\n        function startRule() {\n          properties = {};\n        }\n        function endRule(event) {\n          var prop, i, len, total;\n          for (prop in mapping) {\n            if (mapping.hasOwnProperty(prop)) {\n              total = 0;\n              for (i = 0, len = mapping[prop].length; i < len; i++) {\n                total += properties[mapping[prop][i]] ? 1 : 0;\n              }\n              if (total === mapping[prop].length) {\n                reporter.report(\"The properties \" + mapping[prop].join(\", \") + \" can be replaced by \" + prop + \".\", event.line, event.col, rule);\n              }\n            }\n          }\n        }\n        parser.addListener(\"startrule\", startRule);\n        parser.addListener(\"startfontface\", startRule);\n        parser.addListener(\"property\", function (event) {\n          var name = event.property.toString().toLowerCase();\n          if (propertiesToCheck[name]) {\n            properties[name] = 1;\n          }\n        });\n        parser.addListener(\"endrule\", endRule);\n        parser.addListener(\"endfontface\", endRule);\n      }\n    });\n    CSSLint.addRule({\n      id: \"star-property-hack\",\n      name: \"Disallow properties with a star prefix\",\n      desc: \"Checks for the star property hack (targets IE6/7)\",\n      url: \"https://github.com/CSSLint/csslint/wiki/Disallow-star-hack\",\n      browsers: \"All\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this;\n        parser.addListener(\"property\", function (event) {\n          var property = event.property;\n          if (property.hack === \"*\") {\n            reporter.report(\"Property with star prefix found.\", event.property.line, event.property.col, rule);\n          }\n        });\n      }\n    });\n    CSSLint.addRule({\n      id: \"text-indent\",\n      name: \"Disallow negative text-indent\",\n      desc: \"Checks for text indent less than -99px\",\n      url: \"https://github.com/CSSLint/csslint/wiki/Disallow-negative-text-indent\",\n      browsers: \"All\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this,\n          textIndent,\n          direction;\n        function startRule() {\n          textIndent = false;\n          direction = \"inherit\";\n        }\n        function endRule() {\n          if (textIndent && direction !== \"ltr\") {\n            reporter.report(\"Negative text-indent doesn't work well with RTL. If you use text-indent for image replacement explicitly set direction for that item to ltr.\", textIndent.line, textIndent.col, rule);\n          }\n        }\n        parser.addListener(\"startrule\", startRule);\n        parser.addListener(\"startfontface\", startRule);\n        parser.addListener(\"property\", function (event) {\n          var name = event.property.toString().toLowerCase(),\n            value = event.value;\n          if (name === \"text-indent\" && value.parts[0].value < -99) {\n            textIndent = event.property;\n          } else if (name === \"direction\" && value.toString() === \"ltr\") {\n            direction = \"ltr\";\n          }\n        });\n        parser.addListener(\"endrule\", endRule);\n        parser.addListener(\"endfontface\", endRule);\n      }\n    });\n    CSSLint.addRule({\n      id: \"underscore-property-hack\",\n      name: \"Disallow properties with an underscore prefix\",\n      desc: \"Checks for the underscore property hack (targets IE6)\",\n      url: \"https://github.com/CSSLint/csslint/wiki/Disallow-underscore-hack\",\n      browsers: \"All\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this;\n        parser.addListener(\"property\", function (event) {\n          var property = event.property;\n          if (property.hack === \"_\") {\n            reporter.report(\"Property with underscore prefix found.\", event.property.line, event.property.col, rule);\n          }\n        });\n      }\n    });\n    CSSLint.addRule({\n      id: \"universal-selector\",\n      name: \"Disallow universal selector\",\n      desc: \"The universal selector (*) is known to be slow.\",\n      url: \"https://github.com/CSSLint/csslint/wiki/Disallow-universal-selector\",\n      browsers: \"All\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this;\n        parser.addListener(\"startrule\", function (event) {\n          var selectors = event.selectors,\n            selector,\n            part,\n            i;\n          for (i = 0; i < selectors.length; i++) {\n            selector = selectors[i];\n            part = selector.parts[selector.parts.length - 1];\n            if (part.elementName === \"*\") {\n              reporter.report(rule.desc, part.line, part.col, rule);\n            }\n          }\n        });\n      }\n    });\n    CSSLint.addRule({\n      id: \"unqualified-attributes\",\n      name: \"Disallow unqualified attribute selectors\",\n      desc: \"Unqualified attribute selectors are known to be slow.\",\n      url: \"https://github.com/CSSLint/csslint/wiki/Disallow-unqualified-attribute-selectors\",\n      browsers: \"All\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this;\n        parser.addListener(\"startrule\", function (event) {\n          var selectors = event.selectors,\n            selectorContainsClassOrId = false,\n            selector,\n            part,\n            modifier,\n            i,\n            k;\n          for (i = 0; i < selectors.length; i++) {\n            selector = selectors[i];\n            part = selector.parts[selector.parts.length - 1];\n            if (part.type === parser.SELECTOR_PART_TYPE) {\n              for (k = 0; k < part.modifiers.length; k++) {\n                modifier = part.modifiers[k];\n                if (modifier.type === \"class\" || modifier.type === \"id\") {\n                  selectorContainsClassOrId = true;\n                  break;\n                }\n              }\n              if (!selectorContainsClassOrId) {\n                for (k = 0; k < part.modifiers.length; k++) {\n                  modifier = part.modifiers[k];\n                  if (modifier.type === \"attribute\" && (!part.elementName || part.elementName === \"*\")) {\n                    reporter.report(rule.desc, part.line, part.col, rule);\n                  }\n                }\n              }\n            }\n          }\n        });\n      }\n    });\n    CSSLint.addRule({\n      id: \"vendor-prefix\",\n      name: \"Require standard property with vendor prefix\",\n      desc: \"When using a vendor-prefixed property, make sure to include the standard one.\",\n      url: \"https://github.com/CSSLint/csslint/wiki/Require-standard-property-with-vendor-prefix\",\n      browsers: \"All\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this,\n          properties,\n          num,\n          propertiesToCheck = {\n            \"-webkit-border-radius\": \"border-radius\",\n            \"-webkit-border-top-left-radius\": \"border-top-left-radius\",\n            \"-webkit-border-top-right-radius\": \"border-top-right-radius\",\n            \"-webkit-border-bottom-left-radius\": \"border-bottom-left-radius\",\n            \"-webkit-border-bottom-right-radius\": \"border-bottom-right-radius\",\n            \"-o-border-radius\": \"border-radius\",\n            \"-o-border-top-left-radius\": \"border-top-left-radius\",\n            \"-o-border-top-right-radius\": \"border-top-right-radius\",\n            \"-o-border-bottom-left-radius\": \"border-bottom-left-radius\",\n            \"-o-border-bottom-right-radius\": \"border-bottom-right-radius\",\n            \"-moz-border-radius\": \"border-radius\",\n            \"-moz-border-radius-topleft\": \"border-top-left-radius\",\n            \"-moz-border-radius-topright\": \"border-top-right-radius\",\n            \"-moz-border-radius-bottomleft\": \"border-bottom-left-radius\",\n            \"-moz-border-radius-bottomright\": \"border-bottom-right-radius\",\n            \"-moz-column-count\": \"column-count\",\n            \"-webkit-column-count\": \"column-count\",\n            \"-moz-column-gap\": \"column-gap\",\n            \"-webkit-column-gap\": \"column-gap\",\n            \"-moz-column-rule\": \"column-rule\",\n            \"-webkit-column-rule\": \"column-rule\",\n            \"-moz-column-rule-style\": \"column-rule-style\",\n            \"-webkit-column-rule-style\": \"column-rule-style\",\n            \"-moz-column-rule-color\": \"column-rule-color\",\n            \"-webkit-column-rule-color\": \"column-rule-color\",\n            \"-moz-column-rule-width\": \"column-rule-width\",\n            \"-webkit-column-rule-width\": \"column-rule-width\",\n            \"-moz-column-width\": \"column-width\",\n            \"-webkit-column-width\": \"column-width\",\n            \"-webkit-column-span\": \"column-span\",\n            \"-webkit-columns\": \"columns\",\n            \"-moz-box-shadow\": \"box-shadow\",\n            \"-webkit-box-shadow\": \"box-shadow\",\n            \"-moz-transform\": \"transform\",\n            \"-webkit-transform\": \"transform\",\n            \"-o-transform\": \"transform\",\n            \"-ms-transform\": \"transform\",\n            \"-moz-transform-origin\": \"transform-origin\",\n            \"-webkit-transform-origin\": \"transform-origin\",\n            \"-o-transform-origin\": \"transform-origin\",\n            \"-ms-transform-origin\": \"transform-origin\",\n            \"-moz-box-sizing\": \"box-sizing\",\n            \"-webkit-box-sizing\": \"box-sizing\"\n          };\n        function startRule() {\n          properties = {};\n          num = 1;\n        }\n        function endRule() {\n          var prop,\n            i,\n            len,\n            needed,\n            actual,\n            needsStandard = [];\n          for (prop in properties) {\n            if (propertiesToCheck[prop]) {\n              needsStandard.push({\n                actual: prop,\n                needed: propertiesToCheck[prop]\n              });\n            }\n          }\n          for (i = 0, len = needsStandard.length; i < len; i++) {\n            needed = needsStandard[i].needed;\n            actual = needsStandard[i].actual;\n            if (!properties[needed]) {\n              reporter.report(\"Missing standard property '\" + needed + \"' to go along with '\" + actual + \"'.\", properties[actual][0].name.line, properties[actual][0].name.col, rule);\n            } else {\n              if (properties[needed][0].pos < properties[actual][0].pos) {\n                reporter.report(\"Standard property '\" + needed + \"' should come after vendor-prefixed property '\" + actual + \"'.\", properties[actual][0].name.line, properties[actual][0].name.col, rule);\n              }\n            }\n          }\n        }\n        parser.addListener(\"startrule\", startRule);\n        parser.addListener(\"startfontface\", startRule);\n        parser.addListener(\"startpage\", startRule);\n        parser.addListener(\"startpagemargin\", startRule);\n        parser.addListener(\"startkeyframerule\", startRule);\n        parser.addListener(\"startviewport\", startRule);\n        parser.addListener(\"property\", function (event) {\n          var name = event.property.text.toLowerCase();\n          if (!properties[name]) {\n            properties[name] = [];\n          }\n          properties[name].push({\n            name: event.property,\n            value: event.value,\n            pos: num++\n          });\n        });\n        parser.addListener(\"endrule\", endRule);\n        parser.addListener(\"endfontface\", endRule);\n        parser.addListener(\"endpage\", endRule);\n        parser.addListener(\"endpagemargin\", endRule);\n        parser.addListener(\"endkeyframerule\", endRule);\n        parser.addListener(\"endviewport\", endRule);\n      }\n    });\n    CSSLint.addRule({\n      id: \"zero-units\",\n      name: \"Disallow units for 0 values\",\n      desc: \"You don't need to specify units when a value is 0.\",\n      url: \"https://github.com/CSSLint/csslint/wiki/Disallow-units-for-zero-values\",\n      browsers: \"All\",\n      init: function (parser, reporter) {\n        \"use strict\";\n\n        var rule = this;\n        parser.addListener(\"property\", function (event) {\n          var parts = event.value.parts,\n            i = 0,\n            len = parts.length;\n          while (i < len) {\n            if ((parts[i].units || parts[i].type === \"percentage\") && parts[i].value === 0 && parts[i].type !== \"time\") {\n              reporter.report(\"Values of 0 shouldn't have units specified.\", parts[i].line, parts[i].col, rule);\n            }\n            i++;\n          }\n        });\n      }\n    });\n    (function () {\n      \"use strict\";\n\n      var xmlEscape = function (str) {\n        if (!str || str.constructor !== String) {\n          return \"\";\n        }\n        return str.replace(/[\"&><]/g, function (match) {\n          switch (match) {\n            case \"\\\"\":\n              return \"&quot;\";\n            case \"&\":\n              return \"&amp;\";\n            case \"<\":\n              return \"&lt;\";\n            case \">\":\n              return \"&gt;\";\n          }\n        });\n      };\n      CSSLint.addFormatter({\n        id: \"checkstyle-xml\",\n        name: \"Checkstyle XML format\",\n        startFormat: function () {\n          return \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><checkstyle>\";\n        },\n        endFormat: function () {\n          return \"</checkstyle>\";\n        },\n        readError: function (filename, message) {\n          return \"<file name=\\\"\" + xmlEscape(filename) + \"\\\"><error line=\\\"0\\\" column=\\\"0\\\" severty=\\\"error\\\" message=\\\"\" + xmlEscape(message) + \"\\\"></error></file>\";\n        },\n        formatResults: function (results, filename /*, options*/) {\n          var messages = results.messages,\n            output = [];\n          var generateSource = function (rule) {\n            if (!rule || !(\"name\" in rule)) {\n              return \"\";\n            }\n            return \"net.csslint.\" + rule.name.replace(/\\s/g, \"\");\n          };\n          if (messages.length > 0) {\n            output.push(\"<file name=\\\"\" + filename + \"\\\">\");\n            CSSLint.Util.forEach(messages, function (message) {\n              if (!message.rollup) {\n                output.push(\"<error line=\\\"\" + message.line + \"\\\" column=\\\"\" + message.col + \"\\\" severity=\\\"\" + message.type + \"\\\"\" + \" message=\\\"\" + xmlEscape(message.message) + \"\\\" source=\\\"\" + generateSource(message.rule) + \"\\\"/>\");\n              }\n            });\n            output.push(\"</file>\");\n          }\n          return output.join(\"\");\n        }\n      });\n    })();\n    CSSLint.addFormatter({\n      id: \"compact\",\n      name: \"Compact, 'porcelain' format\",\n      startFormat: function () {\n        \"use strict\";\n\n        return \"\";\n      },\n      endFormat: function () {\n        \"use strict\";\n\n        return \"\";\n      },\n      formatResults: function (results, filename, options) {\n        \"use strict\";\n\n        var messages = results.messages,\n          output = \"\";\n        options = options || {};\n        var capitalize = function (str) {\n          return str.charAt(0).toUpperCase() + str.slice(1);\n        };\n        if (messages.length === 0) {\n          return options.quiet ? \"\" : filename + \": Lint Free!\";\n        }\n        CSSLint.Util.forEach(messages, function (message) {\n          if (message.rollup) {\n            output += filename + \": \" + capitalize(message.type) + \" - \" + message.message + \" (\" + message.rule.id + \")\\n\";\n          } else {\n            output += filename + \": line \" + message.line + \", col \" + message.col + \", \" + capitalize(message.type) + \" - \" + message.message + \" (\" + message.rule.id + \")\\n\";\n          }\n        });\n        return output;\n      }\n    });\n    CSSLint.addFormatter({\n      id: \"csslint-xml\",\n      name: \"CSSLint XML format\",\n      startFormat: function () {\n        \"use strict\";\n\n        return \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><csslint>\";\n      },\n      endFormat: function () {\n        \"use strict\";\n\n        return \"</csslint>\";\n      },\n      formatResults: function (results, filename /*, options*/) {\n        \"use strict\";\n\n        var messages = results.messages,\n          output = [];\n        var escapeSpecialCharacters = function (str) {\n          if (!str || str.constructor !== String) {\n            return \"\";\n          }\n          return str.replace(/\"/g, \"'\").replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n        };\n        if (messages.length > 0) {\n          output.push(\"<file name=\\\"\" + filename + \"\\\">\");\n          CSSLint.Util.forEach(messages, function (message) {\n            if (message.rollup) {\n              output.push(\"<issue severity=\\\"\" + message.type + \"\\\" reason=\\\"\" + escapeSpecialCharacters(message.message) + \"\\\" evidence=\\\"\" + escapeSpecialCharacters(message.evidence) + \"\\\"/>\");\n            } else {\n              output.push(\"<issue line=\\\"\" + message.line + \"\\\" char=\\\"\" + message.col + \"\\\" severity=\\\"\" + message.type + \"\\\"\" + \" reason=\\\"\" + escapeSpecialCharacters(message.message) + \"\\\" evidence=\\\"\" + escapeSpecialCharacters(message.evidence) + \"\\\"/>\");\n            }\n          });\n          output.push(\"</file>\");\n        }\n        return output.join(\"\");\n      }\n    });\n    CSSLint.addFormatter({\n      id: \"json\",\n      name: \"JSON\",\n      startFormat: function () {\n        \"use strict\";\n\n        this.json = [];\n        return \"\";\n      },\n      endFormat: function () {\n        \"use strict\";\n\n        var ret = \"\";\n        if (this.json.length > 0) {\n          if (this.json.length === 1) {\n            ret = JSON.stringify(this.json[0]);\n          } else {\n            ret = JSON.stringify(this.json);\n          }\n        }\n        return ret;\n      },\n      formatResults: function (results, filename, options) {\n        \"use strict\";\n\n        if (results.messages.length > 0 || !options.quiet) {\n          this.json.push({\n            filename: filename,\n            messages: results.messages,\n            stats: results.stats\n          });\n        }\n        return \"\";\n      }\n    });\n    CSSLint.addFormatter({\n      id: \"junit-xml\",\n      name: \"JUNIT XML format\",\n      startFormat: function () {\n        \"use strict\";\n\n        return \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><testsuites>\";\n      },\n      endFormat: function () {\n        \"use strict\";\n\n        return \"</testsuites>\";\n      },\n      formatResults: function (results, filename /*, options*/) {\n        \"use strict\";\n\n        var messages = results.messages,\n          output = [],\n          tests = {\n            \"error\": 0,\n            \"failure\": 0\n          };\n        var generateSource = function (rule) {\n          if (!rule || !(\"name\" in rule)) {\n            return \"\";\n          }\n          return \"net.csslint.\" + rule.name.replace(/\\s/g, \"\");\n        };\n        var escapeSpecialCharacters = function (str) {\n          if (!str || str.constructor !== String) {\n            return \"\";\n          }\n          return str.replace(/\"/g, \"'\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n        };\n        if (messages.length > 0) {\n          messages.forEach(function (message) {\n            var type = message.type === \"warning\" ? \"error\" : message.type;\n            if (!message.rollup) {\n              output.push(\"<testcase time=\\\"0\\\" name=\\\"\" + generateSource(message.rule) + \"\\\">\");\n              output.push(\"<\" + type + \" message=\\\"\" + escapeSpecialCharacters(message.message) + \"\\\"><![CDATA[\" + message.line + \":\" + message.col + \":\" + escapeSpecialCharacters(message.evidence) + \"]]></\" + type + \">\");\n              output.push(\"</testcase>\");\n              tests[type] += 1;\n            }\n          });\n          output.unshift(\"<testsuite time=\\\"0\\\" tests=\\\"\" + messages.length + \"\\\" skipped=\\\"0\\\" errors=\\\"\" + tests.error + \"\\\" failures=\\\"\" + tests.failure + \"\\\" package=\\\"net.csslint\\\" name=\\\"\" + filename + \"\\\">\");\n          output.push(\"</testsuite>\");\n        }\n        return output.join(\"\");\n      }\n    });\n    CSSLint.addFormatter({\n      id: \"lint-xml\",\n      name: \"Lint XML format\",\n      startFormat: function () {\n        \"use strict\";\n\n        return \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><lint>\";\n      },\n      endFormat: function () {\n        \"use strict\";\n\n        return \"</lint>\";\n      },\n      formatResults: function (results, filename /*, options*/) {\n        \"use strict\";\n\n        var messages = results.messages,\n          output = [];\n        var escapeSpecialCharacters = function (str) {\n          if (!str || str.constructor !== String) {\n            return \"\";\n          }\n          return str.replace(/\"/g, \"'\").replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n        };\n        if (messages.length > 0) {\n          output.push(\"<file name=\\\"\" + filename + \"\\\">\");\n          CSSLint.Util.forEach(messages, function (message) {\n            if (message.rollup) {\n              output.push(\"<issue severity=\\\"\" + message.type + \"\\\" reason=\\\"\" + escapeSpecialCharacters(message.message) + \"\\\" evidence=\\\"\" + escapeSpecialCharacters(message.evidence) + \"\\\"/>\");\n            } else {\n              var rule = \"\";\n              if (message.rule && message.rule.id) {\n                rule = \"rule=\\\"\" + escapeSpecialCharacters(message.rule.id) + \"\\\" \";\n              }\n              output.push(\"<issue \" + rule + \"line=\\\"\" + message.line + \"\\\" char=\\\"\" + message.col + \"\\\" severity=\\\"\" + message.type + \"\\\"\" + \" reason=\\\"\" + escapeSpecialCharacters(message.message) + \"\\\" evidence=\\\"\" + escapeSpecialCharacters(message.evidence) + \"\\\"/>\");\n            }\n          });\n          output.push(\"</file>\");\n        }\n        return output.join(\"\");\n      }\n    });\n    CSSLint.addFormatter({\n      id: \"text\",\n      name: \"Plain Text\",\n      startFormat: function () {\n        \"use strict\";\n\n        return \"\";\n      },\n      endFormat: function () {\n        \"use strict\";\n\n        return \"\";\n      },\n      formatResults: function (results, filename, options) {\n        \"use strict\";\n\n        var messages = results.messages,\n          output = \"\";\n        options = options || {};\n        if (messages.length === 0) {\n          return options.quiet ? \"\" : \"\\n\\ncsslint: No errors in \" + filename + \".\";\n        }\n        output = \"\\n\\ncsslint: There \";\n        if (messages.length === 1) {\n          output += \"is 1 problem\";\n        } else {\n          output += \"are \" + messages.length + \" problems\";\n        }\n        output += \" in \" + filename + \".\";\n        var pos = filename.lastIndexOf(\"/\"),\n          shortFilename = filename;\n        if (pos === -1) {\n          pos = filename.lastIndexOf(\"\\\\\");\n        }\n        if (pos > -1) {\n          shortFilename = filename.substring(pos + 1);\n        }\n        CSSLint.Util.forEach(messages, function (message, i) {\n          output = output + \"\\n\\n\" + shortFilename;\n          if (message.rollup) {\n            output += \"\\n\" + (i + 1) + \": \" + message.type;\n            output += \"\\n\" + message.message;\n          } else {\n            output += \"\\n\" + (i + 1) + \": \" + message.type + \" at line \" + message.line + \", col \" + message.col;\n            output += \"\\n\" + message.message;\n            output += \"\\n\" + message.evidence;\n          }\n        });\n        return output;\n      }\n    });\n    return CSSLint;\n  }();\n  module.exports.CSSLint = CSSLint;\n});\nace.define(\"ace/mode/css_worker\", [], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var lang = require(\"../lib/lang\");\n  var Mirror = require(\"../worker/mirror\").Mirror;\n  var CSSLint = require(\"./css/csslint\").CSSLint;\n  var Worker = exports.Worker = function (sender) {\n    Mirror.call(this, sender);\n    this.setTimeout(400);\n    this.ruleset = null;\n    this.setDisabledRules(\"ids|order-alphabetical\");\n    this.setInfoRules(\"adjoining-classes|zero-units|gradients|box-model|\" + \"import|outline-none|vendor-prefix\");\n  };\n  oop.inherits(Worker, Mirror);\n  (function () {\n    this.setInfoRules = function (ruleNames) {\n      if (typeof ruleNames == \"string\") ruleNames = ruleNames.split(\"|\");\n      this.infoRules = lang.arrayToMap(ruleNames);\n      this.doc.getValue() && this.deferredUpdate.schedule(100);\n    };\n    this.setDisabledRules = function (ruleNames) {\n      if (!ruleNames) {\n        this.ruleset = null;\n      } else {\n        if (typeof ruleNames == \"string\") ruleNames = ruleNames.split(\"|\");\n        var all = {};\n        CSSLint.getRules().forEach(function (x) {\n          all[x.id] = true;\n        });\n        ruleNames.forEach(function (x) {\n          delete all[x];\n        });\n        this.ruleset = all;\n      }\n      this.doc.getValue() && this.deferredUpdate.schedule(100);\n    };\n    this.onUpdate = function () {\n      var value = this.doc.getValue();\n      if (!value) return this.sender.emit(\"annotate\", []);\n      var infoRules = this.infoRules;\n      var result = CSSLint.verify(value, this.ruleset);\n      this.sender.emit(\"annotate\", result.messages.map(function (msg) {\n        return {\n          row: msg.line - 1,\n          column: msg.col - 1,\n          text: msg.message,\n          type: infoRules[msg.rule.id] ? \"info\" : msg.type,\n          rule: msg.rule.name\n        };\n      }));\n    };\n  }).call(Worker.prototype);\n});"}