{"code":"ace.define(\"ace/mode/ada_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],(function(e,t,n){\"use strict\";var i=e(\"../lib/oop\"),r=e(\"./text_highlight_rules\").TextHighlightRules,o=function(){var e=this.createKeywordMapper({\"support.function\":\"count|min|max|avg|sum|rank|now|coalesce|main\",keyword:\"abort|else|new|return|abs|elsif|not|reverse|abstract|end|null|accept|entry|select|access|exception|of|separate|aliased|exit|or|some|all|others|subtype|and|for|out|synchronized|array|function|overriding|at|tagged|generic|package|task|begin|goto|pragma|terminate|body|private|then|if|procedure|type|case|in|protected|constant|interface|until||is|raise|use|declare|range|delay|limited|record|when|delta|loop|rem|while|digits|renames|with|do|mod|requeue|xor\",\"constant.language\":\"true|false|null\"},\"identifier\",!0);this.$rules={start:[{token:\"comment\",regex:\"--.*$\"},{token:\"string\",regex:'\".*?\"'},{token:\"string\",regex:\"'.'\"},{token:\"constant.numeric\",regex:\"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"},{token:e,regex:\"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"},{token:\"keyword.operator\",regex:\"\\\\+|\\\\-|\\\\/|\\\\/\\\\/|%|<@>|@>|<@|&|\\\\^|~|<|>|<=|=>|==|!=|<>|=\"},{token:\"paren.lparen\",regex:\"[\\\\(]\"},{token:\"paren.rparen\",regex:\"[\\\\)]\"},{token:\"text\",regex:\"\\\\s+\"}]}};i.inherits(o,r),t.AdaHighlightRules=o})),ace.define(\"ace/mode/ada\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/ada_highlight_rules\",\"ace/range\"],(function(e,t,n){\"use strict\";var i=e(\"../lib/oop\"),r=e(\"./text\").Mode,o=e(\"./ada_highlight_rules\").AdaHighlightRules,a=e(\"../range\").Range,s=function(){this.HighlightRules=o,this.$behaviour=this.$defaultBehaviour};i.inherits(s,r),function(){this.lineCommentStart=\"--\",this.getNextLineIndent=function(e,t,n){var i=this.$getIndent(t),r=this.getTokenizer().getLineTokens(t,e).tokens;if(r.length&&\"comment\"==r[r.length-1].type)return i;\"start\"==e&&(t.match(/^.*(begin|loop|then|is|do)\\s*$/)&&(i+=n));return i},this.checkOutdent=function(e,t,n){return!!(t+n).match(/^\\s*(begin|end)$/)},this.autoOutdent=function(e,t,n){var i=t.getLine(n),r=t.getLine(n-1),o=this.$getIndent(r).length;this.$getIndent(i).length<=o||t.outdentRows(new a(n,0,n+2,0))},this.$id=\"ace/mode/ada\"}.call(s.prototype),t.Mode=s})),ace.require([\"ace/mode/ada\"],(function(e){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=e)}));","name":"e40c5e716b2ea87a9c2e176196c37cc6.js","input":"ace.define(\"ace/mode/ada_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var AdaHighlightRules = function () {\n    var keywords = \"abort|else|new|return|abs|elsif|not|reverse|abstract|end|null|accept|entry|select|\" + \"access|exception|of|separate|aliased|exit|or|some|all|others|subtype|and|for|out|synchronized|\" + \"array|function|overriding|at|tagged|generic|package|task|begin|goto|pragma|terminate|\" + \"body|private|then|if|procedure|type|case|in|protected|constant|interface|until|\" + \"|is|raise|use|declare|range|delay|limited|record|when|delta|loop|rem|while|digits|renames|with|do|mod|requeue|xor\";\n    var builtinConstants = \"true|false|null\";\n    var builtinFunctions = \"count|min|max|avg|sum|rank|now|coalesce|main\";\n    var keywordMapper = this.createKeywordMapper({\n      \"support.function\": builtinFunctions,\n      \"keyword\": keywords,\n      \"constant.language\": builtinConstants\n    }, \"identifier\", true);\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"--.*$\"\n      }, {\n        token: \"string\",\n        // \" string\n        regex: '\".*?\"'\n      }, {\n        token: \"string\",\n        // character\n        regex: \"'.'\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"\\\\+|\\\\-|\\\\/|\\\\/\\\\/|%|<@>|@>|<@|&|\\\\^|~|<|>|<=|=>|==|!=|<>|=\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[\\\\(]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\)]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }]\n    };\n  };\n  oop.inherits(AdaHighlightRules, TextHighlightRules);\n  exports.AdaHighlightRules = AdaHighlightRules;\n});\nace.define(\"ace/mode/ada\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/ada_highlight_rules\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var AdaHighlightRules = require(\"./ada_highlight_rules\").AdaHighlightRules;\n  var Range = require(\"../range\").Range;\n  var Mode = function () {\n    this.HighlightRules = AdaHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"--\";\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n      if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n        return indent;\n      }\n      if (state == \"start\") {\n        var match = line.match(/^.*(begin|loop|then|is|do)\\s*$/);\n        if (match) {\n          indent += tab;\n        }\n      }\n      return indent;\n    };\n    this.checkOutdent = function (state, line, input) {\n      var complete_line = line + input;\n      if (complete_line.match(/^\\s*(begin|end)$/)) {\n        return true;\n      }\n      return false;\n    };\n    this.autoOutdent = function (state, session, row) {\n      var line = session.getLine(row);\n      var prevLine = session.getLine(row - 1);\n      var prevIndent = this.$getIndent(prevLine).length;\n      var indent = this.$getIndent(line).length;\n      if (indent <= prevIndent) {\n        return;\n      }\n      session.outdentRows(new Range(row, 0, row + 2, 0));\n    };\n    this.$id = \"ace/mode/ada\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/ada\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}