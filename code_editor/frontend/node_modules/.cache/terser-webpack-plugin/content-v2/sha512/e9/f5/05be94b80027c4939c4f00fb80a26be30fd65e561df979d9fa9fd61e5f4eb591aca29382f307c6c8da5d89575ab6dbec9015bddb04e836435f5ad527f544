{"code":"ace.define(\"ace/mode/ini_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],(function(e,i,n){\"use strict\";var t=e(\"../lib/oop\"),o=e(\"./text_highlight_rules\").TextHighlightRules,a=\"\\\\\\\\(?:[\\\\\\\\0abtrn;#=:]|x[a-fA-F\\\\d]{4})\",l=function(){this.$rules={start:[{token:\"punctuation.definition.comment.ini\",regex:\"#.*\",push_:[{token:\"comment.line.number-sign.ini\",regex:\"$|^\",next:\"pop\"},{defaultToken:\"comment.line.number-sign.ini\"}]},{token:\"punctuation.definition.comment.ini\",regex:\";.*\",push_:[{token:\"comment.line.semicolon.ini\",regex:\"$|^\",next:\"pop\"},{defaultToken:\"comment.line.semicolon.ini\"}]},{token:[\"keyword.other.definition.ini\",\"text\",\"punctuation.separator.key-value.ini\"],regex:\"\\\\b([a-zA-Z0-9_.-]+)\\\\b(\\\\s*)(=)\"},{token:[\"punctuation.definition.entity.ini\",\"constant.section.group-title.ini\",\"punctuation.definition.entity.ini\"],regex:\"^(\\\\[)(.*?)(\\\\])\"},{token:\"punctuation.definition.string.begin.ini\",regex:\"'\",push:[{token:\"punctuation.definition.string.end.ini\",regex:\"'\",next:\"pop\"},{token:\"constant.language.escape\",regex:a},{defaultToken:\"string.quoted.single.ini\"}]},{token:\"punctuation.definition.string.begin.ini\",regex:'\"',push:[{token:\"constant.language.escape\",regex:a},{token:\"punctuation.definition.string.end.ini\",regex:'\"',next:\"pop\"},{defaultToken:\"string.quoted.double.ini\"}]}]},this.normalizeRules()};l.metaData={fileTypes:[\"ini\",\"conf\"],keyEquivalent:\"^~I\",name:\"Ini\",scopeName:\"source.ini\"},t.inherits(l,o),i.IniHighlightRules=l})),ace.define(\"ace/mode/folding/ini\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"],(function(e,i,n){\"use strict\";var t=e(\"../../lib/oop\"),o=e(\"../../range\").Range,a=e(\"./fold_mode\").FoldMode,l=i.FoldMode=function(){};t.inherits(l,a),function(){this.foldingStartMarker=/^\\s*\\[([^\\])]*)]\\s*(?:$|[;#])/,this.getFoldWidgetRange=function(e,i,n){var t=this.foldingStartMarker,a=e.getLine(n),l=a.match(t);if(l){for(var r=l[1]+\".\",u=a.length,s=e.getLength(),g=n,c=n;++n<s;)if(a=e.getLine(n),!/^\\s*$/.test(a)){if((l=a.match(t))&&0!==l[1].lastIndexOf(r,0))break;c=n}if(c>g){var d=e.getLine(c).length;return new o(g,u,c,d)}}}}.call(l.prototype)})),ace.define(\"ace/mode/ini\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/ini_highlight_rules\",\"ace/mode/folding/ini\"],(function(e,i,n){\"use strict\";var t=e(\"../lib/oop\"),o=e(\"./text\").Mode,a=e(\"./ini_highlight_rules\").IniHighlightRules,l=e(\"./folding/ini\").FoldMode,r=function(){this.HighlightRules=a,this.foldingRules=new l,this.$behaviour=this.$defaultBehaviour};t.inherits(r,o),function(){this.lineCommentStart=\";\",this.blockComment=null,this.$id=\"ace/mode/ini\"}.call(r.prototype),i.Mode=r})),ace.require([\"ace/mode/ini\"],(function(e){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=e)}));","name":"f0ddb076731addaad8e8241de2b18621.js","input":"ace.define(\"ace/mode/ini_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  /* This file was autogenerated from tool\\tm bundles\\ini.tmbundle\\Syntaxes\\Ini.plist (uuid: ) */\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var escapeRe = \"\\\\\\\\(?:[\\\\\\\\0abtrn;#=:]|x[a-fA-F\\\\d]{4})\";\n  var IniHighlightRules = function () {\n    this.$rules = {\n      start: [{\n        token: 'punctuation.definition.comment.ini',\n        regex: '#.*',\n        push_: [{\n          token: 'comment.line.number-sign.ini',\n          regex: '$|^',\n          next: 'pop'\n        }, {\n          defaultToken: 'comment.line.number-sign.ini'\n        }]\n      }, {\n        token: 'punctuation.definition.comment.ini',\n        regex: ';.*',\n        push_: [{\n          token: 'comment.line.semicolon.ini',\n          regex: '$|^',\n          next: 'pop'\n        }, {\n          defaultToken: 'comment.line.semicolon.ini'\n        }]\n      }, {\n        token: ['keyword.other.definition.ini', 'text', 'punctuation.separator.key-value.ini'],\n        regex: '\\\\b([a-zA-Z0-9_.-]+)\\\\b(\\\\s*)(=)'\n      }, {\n        token: ['punctuation.definition.entity.ini', 'constant.section.group-title.ini', 'punctuation.definition.entity.ini'],\n        regex: '^(\\\\[)(.*?)(\\\\])'\n      }, {\n        token: 'punctuation.definition.string.begin.ini',\n        regex: \"'\",\n        push: [{\n          token: 'punctuation.definition.string.end.ini',\n          regex: \"'\",\n          next: 'pop'\n        }, {\n          token: \"constant.language.escape\",\n          regex: escapeRe\n        }, {\n          defaultToken: 'string.quoted.single.ini'\n        }]\n      }, {\n        token: 'punctuation.definition.string.begin.ini',\n        regex: '\"',\n        push: [{\n          token: \"constant.language.escape\",\n          regex: escapeRe\n        }, {\n          token: 'punctuation.definition.string.end.ini',\n          regex: '\"',\n          next: 'pop'\n        }, {\n          defaultToken: 'string.quoted.double.ini'\n        }]\n      }]\n    };\n    this.normalizeRules();\n  };\n  IniHighlightRules.metaData = {\n    fileTypes: ['ini', 'conf'],\n    keyEquivalent: '^~I',\n    name: 'Ini',\n    scopeName: 'source.ini'\n  };\n  oop.inherits(IniHighlightRules, TextHighlightRules);\n  exports.IniHighlightRules = IniHighlightRules;\n});\nace.define(\"ace/mode/folding/ini\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Range = require(\"../../range\").Range;\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function () {};\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /^\\s*\\[([^\\])]*)]\\s*(?:$|[;#])/;\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var re = this.foldingStartMarker;\n      var line = session.getLine(row);\n      var m = line.match(re);\n      if (!m) return;\n      var startName = m[1] + \".\";\n      var startColumn = line.length;\n      var maxRow = session.getLength();\n      var startRow = row;\n      var endRow = row;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        if (/^\\s*$/.test(line)) continue;\n        m = line.match(re);\n        if (m && m[1].lastIndexOf(startName, 0) !== 0) break;\n        endRow = row;\n      }\n      if (endRow > startRow) {\n        var endColumn = session.getLine(endRow).length;\n        return new Range(startRow, startColumn, endRow, endColumn);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/ini\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/ini_highlight_rules\", \"ace/mode/folding/ini\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var IniHighlightRules = require(\"./ini_highlight_rules\").IniHighlightRules;\n  var FoldMode = require(\"./folding/ini\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = IniHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \";\";\n    this.blockComment = null;\n    this.$id = \"ace/mode/ini\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/ini\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}